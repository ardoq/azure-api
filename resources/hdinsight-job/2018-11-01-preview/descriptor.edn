{:scheme "https", :host "azure.local", :info {:description "The HDInsight Job Client.", :title "HDInsightJobManagementClient", :version "2018-11-01-preview"}, :ops {:Job_SubmitMapReduceJob {:path "/templeton/v1/mapreduce/jar", :description "Submits a MapReduce job to an HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The content of the MapReduce job request.", :in "body", :name "content", :required true, :schema {:format "file", :type "object"}}], :verb :post}, :Job_GetAppState {:path "/ws/v1/cluster/apps/{appId}/state", :description "Gets application state from the specified HDInsight cluster.", :parameters [{:description "The id of the job.", :in "path", :name "appId", :required true, :type "string"}], :verb :get}, :Job_Get {:path "/templeton/v1/jobs/{jobId}", :description "Gets job details from the specified HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The id of the job.", :in "path", :name "jobId", :required true, :type "string"} {:description "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.", :enum ["*"], :in "query", :name "fields", :required true, :type "string"}], :verb :get}, :Job_Kill {:path "/templeton/v1/jobs/{jobId}", :description "Initiates cancel on given running job in the specified HDInsight.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The id of the job.", :in "path", :minLength 1, :name "jobId", :required true, :type "string"}], :verb :delete}, :Job_List {:path "/templeton/v1/jobs", :description "Gets the list of jobs from the specified HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "If showall is set to 'true', the request will return all jobs the user has permission to view, not only the jobs belonging to the user.", :enum ["true"], :in "query", :name "showall", :required true, :type "string"} {:description "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.", :enum ["*"], :in "query", :name "fields", :required true, :type "string"}], :verb :get}, :Job_SubmitHiveJob {:path "/templeton/v1/hive", :description "Submits a Hive job to an HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The content of the Hive job request.", :in "body", :name "content", :required true, :schema {:format "file", :type "object"}}], :verb :post}, :Job_SubmitSqoopJob {:path "/templeton/v1/sqoop", :description "Submits a Sqoop job to an HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The content of the Sqoop job request.", :in "body", :name "content", :required true, :schema {:format "file", :type "object"}}], :verb :post}, :Job_ListAfterJobId {:path "/templeton/v1/jobs?op=LISTAFTERID", :description "Gets numrecords Of Jobs after jobid from the specified HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "JobId from where to list jobs.", :in "query", :name "jobid", :required false, :type "string"} {:description "Number of jobs to fetch.", :format "int32", :in "query", :minimum 1, :name "numrecords", :required false, :type "integer"} {:description "If showall is set to 'true', the request will return all jobs the user has permission to view, not only the jobs belonging to the user.", :enum ["true"], :in "query", :name "showall", :required true, :type "string"} {:description "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.", :enum ["*"], :in "query", :name "fields", :required true, :type "string"}], :verb :get}, :Job_SubmitPigJob {:path "/templeton/v1/pig", :description "Submits a Pig job to an HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The content of the Pig job request.", :in "body", :name "content", :required true, :schema {:format "file", :type "object"}}], :verb :post}, :Job_SubmitMapReduceStreamingJob {:path "/templeton/v1/mapreduce/streaming", :description "Submits a MapReduce streaming job to an HDInsight cluster.", :parameters [#:reference{:parameters "UserNameParameter"} {:description "The content of the MapReduce job request.", :in "body", :name "content", :required true, :schema {:format "file", :type "object"}}], :verb :post}}, :parameters {:UserNameParameter {:description "The user name used for running job.", :in "query", :name "user.name", :required true, :type "string", :x-ms-parameter-location "client"}, :clusterDnsNameParameter {:description "The cluster dns name against which the job management is to be.", :in "path", :name "clusterDnsName", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}}, :definitions {:JobACLs {:description "The object containing the job ACLs."}, :JobListJsonObject {:description "The List Job operation response.", :properties {:detail #:reference{:definitions "JobDetailRootJsonObject"}, :id {:description "The Id of the job.", :type "string"}}}, :Userargs {:description "Gets or sets the object containing the user arguments.", :properties {:jar {:description "The JAR file provided by the user.", :type "string"}, :file {:description "The query file provided by the user.", :type "object"}, :execute {:description "The query defined by the user.", :type "string"}, :define {:description "The define properties defined by the user.", :items {:type "string"}, :readOnly true, :type "array"}, :enablelog {:description "Whether or not the user enabled logs.", :type "string"}, :arg {:description "The list of args defined by the user.", :items {:type "string"}, :readOnly true, :type "array"}, :files {:description "The files defined by the user.", :type "object"}, :statusdir {:description "The status directory defined by the user.", :type "object"}, :callback {:description "The callback URL, if any.", :type "object"}}}, :Profile {:description "The object containing the job profile information.", :properties {:jobFile {:description "The job configuration file.", :type "string"}, :jobID #:reference{:definitions "JobID"}, :jobId {:description "The full ID of the job.", :type "string"}, :jobName {:description "The user-specified job name.", :type "string"}, :queueName {:description "The name of the queue to which the job is submitted.", :type "string"}, :url {:description "The link to the web-ui for details of the job.", :type "string"}, :user {:description "The userid of the person who submitted the job.", :type "string"}}}, :JobSubmissionJsonResponse {:description "The job submission json response.", :properties {:id {:description "The Id of the created job.", :type "string"}}}, :JobOperationsErrorResponse {:description "Describes the format of Error response.", :properties {:error {:description "Error message indicating why the operation failed.", :type "string"}}, :type "object"}, :JobDetailRootJsonObject {:description "The object containing the job details.", :properties {:completed {:description "The string representing completed status, for example 'done'.", :type "string"}, :exitValue {:description "The job's exit value.", :format "int32", :type "integer"}, :msg {:description "The message returned.", :type "object"}, :status #:reference{:definitions "Status"}, :id {:description "The job ID.", :type "string"}, :percentComplete {:description "The job completion percentage, for example '75% complete'.", :type "string"}, :userargs #:reference{:definitions "Userargs"}, :parentId {:description "The parent job ID.", :type "string"}, :callback {:description "The callback URL, if any.", :type "object"}, :user {:description "The user name of the job creator.", :type "string"}, :profile #:reference{:definitions "Profile"}}}, :AppState {:description "The State of the application.", :properties {:state {:description "The State of the application.", :enum ["NEW" "NEW_SAVING" "SUBMITTED" "ACCEPTED" "RUNNING" "FINISHED" "FINISHING" "FAILED" "KILLED"], :type "string", :x-ms-enum {:modelAsString false, :name "ApplicationState"}}}}, :JobID {:description "The object with the Job ID.", :properties {:id {:description "The job number.", :format "int64", :type "integer"}, :jtIdentifier {:description "The jobTracker identifier.", :type "string"}}}, :Status {:description "Gets or sets the object containing the job status information.", :properties {:reduceProgress {:description "The progress made on the reduces.", :format "double", :type "number"}, :numUsedSlots {:description "The number of slots used for the job.", :format "int32", :type "integer"}, :numReservedSlots {:description "The number of slots reserved.", :format "int32", :type "integer"}, :usedMem {:description "The amount of memory used by the job.", :format "int64", :type "integer"}, :jobACLs #:reference{:definitions "JobACLs"}, :retired {:description "Whether or not the job has been retired. ", :type "boolean"}, :trackingUrl {:description "The link to the web-ui for details of the job.", :type "string"}, :jobName {:description "The user-specified job name.", :type "string"}, :startTime {:description "The time at which the job started. It is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.", :format "int64", :type "integer"}, :cleanupProgress {:description "The progress made on the cleanup.", :format "double", :type "number"}, :jobID #:reference{:definitions "JobID"}, :reservedMem {:description "The amount of memory reserved for the job.", :format "int64", :type "integer"}, :queue {:description "The job queue name.", :type "string"}, :setupProgress {:description "The progress made on the setup.", :format "double", :type "number"}, :failureInfo {:description "The information about any failures that have occurred.", :type "string"}, :username {:description "The userid of the person who submitted the job.", :type "string"}, :state {:description "The state of the job.", :type "string"}, :finishTime {:description "The time at which the job completed. It is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.", :format "int64", :type "integer"}, :neededMem {:description "The amount of memory needed for the job.", :format "int64", :type "integer"}, :runState {:description "The current state of the job.", :format "int32", :type "integer"}, :jobComplete {:description "Whether or not the job has completed.", :type "boolean"}, :priority {:description "The priority of the job.", :type "string"}, :schedulingInfo {:description "The information about the scheduling of the job.", :type "string"}, :jobPriority {:description "The priority of the job.", :type "string"}, :mapProgress {:description "The progress made on the maps.", :format "double", :type "number"}, :uber {:description "Whether job running in uber mode.", :type "boolean"}, :jobId {:description "The full ID of the job.", :type "string"}, :jobFile {:description "The job configuration file.", :type "string"}, :historyFile {:description "The history file of the job.", :type "string"}}}}}