{:scheme "https", :host "management.azure.com", :info {:description "REST API for Azure Redis Cache Service.", :title "RedisManagementClient", :version "2017-10-01"}, :ops {:Redis_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Deletes a Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Redis_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Update an existing Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Parameters supplied to the Update Redis operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Redis_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys", :description "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Redis_ListUpgradeNotifications {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listUpgradeNotifications", :description "Gets any upgrade notifications for a Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "how many minutes in past to look for upgrade notifications", :format "double", :in "query", :name "history", :required true, :type "number"}], :verb :get}, :PatchSchedules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}", :description "Create or replace the patching schedule for Redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Default string modeled as parameter for auto generation to work correctly.", :enum ["default"], :in "path", :name "default", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "defaultName"}} {:description "Parameters to set the patching schedule for Redis cache.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisPatchSchedule"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :LinkedServer_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}", :description "Gets the detailed information about a linked server of a redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "The name of the linked server.", :in "path", :name "linkedServerName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :LinkedServer_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}", :description "Adds a linked server to the Redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "The name of the linked server that is being added to the Redis cache.", :in "path", :name "linkedServerName", :required true, :type "string"} {:description "Parameters supplied to the Create Linked server operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisLinkedServerCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Redis_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability", :description "Checks that the redis cache name is valid and is not already in use.", :parameters [{:description "Parameters supplied to the CheckNameAvailability Redis operation. The only supported resource type is 'Microsoft.Cache/redis'", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Redis_ImportData {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import", :description "Import data into Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Parameters for Redis import operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ImportRDBParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Redis_ExportData {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export", :description "Export data from the redis cache to blobs in a container.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Parameters for Redis export operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ExportRDBParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :PatchSchedules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}", :description "Gets the patching schedule of a redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Default string modeled as parameter for auto generation to work correctly.", :enum ["default"], :in "path", :name "default", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "defaultName"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Gets a Redis cache (resource description).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :LinkedServer_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}", :description "Deletes the linked server from a redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "The name of the linked server that is being added to the Redis cache.", :in "path", :name "linkedServerName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :PatchSchedules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}", :description "Deletes the patching schedule of a redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Default string modeled as parameter for auto generation to work correctly.", :enum ["default"], :in "path", :name "default", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "defaultName"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Redis_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis", :description "Gets all Redis caches in the specified subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis", :description "Lists all Redis caches in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey", :description "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Specifies which key to regenerate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisRegenerateKeyParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :LinkedServer_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers", :description "Gets the list of linked servers associated with this redis cache (requires Premium SKU).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :FirewallRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}", :description "Deletes a single firewall rule in a specified redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "cacheName", :required true, :type "string"} {:description "The name of the firewall rule.", :in "path", :name "ruleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :FirewallRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}", :description "Gets a single firewall rule in a specified redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "cacheName", :required true, :type "string"} {:description "The name of the firewall rule.", :in "path", :name "ruleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_ForceReboot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot", :description "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Specifies which Redis node(s) to reboot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisRebootParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :PatchSchedules_ListByRedisResource {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/patchSchedules", :description "Gets all patch schedules in the specified redis cache (there is only one).", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "cacheName", :required true, :type "string"}], :verb :get}, :FirewallRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}", :description "Create or update a redis cache firewall rule", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "cacheName", :required true, :type "string"} {:description "The name of the firewall rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Parameters supplied to the create or update redis firewall rule operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisFirewallRuleCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Redis_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Parameters supplied to the Create Redis operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Operations_List {:path "/providers/Microsoft.Cache/operations", :description "Lists all of the available REST API operations of the Microsoft.Cache provider.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :FirewallRules_ListByRedisResource {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules", :description "Gets all firewall rules in the specified redis cache.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "cacheName", :required true, :type "string"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:RedisListResult {:description "The response of list Redis operation.", :properties {:nextLink {:description "Link for next set of locations.", :readOnly true, :type "string"}, :value {:description "List of Redis cache instances.", :items #:reference{:definitions "RedisResource"}, :type "array"}}}, :OperationListResult {:description "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of operations supported by the resource provider.", :items #:reference{:definitions "Operation"}, :type "array"}}}, :RedisLinkedServerCreateProperties {:description "Create properties for a linked server", :properties {:linkedRedisCacheId {:description "Fully qualified resourceId of the linked redis cache.", :type "string"}, :linkedRedisCacheLocation {:description "Location of the linked redis cache.", :type "string"}, :serverRole {:description "Role of the linked server.", :enum ["Primary" "Secondary"], :type "string", :x-ms-enum {:modelAsString false, :name "ReplicationRole"}}}, :required ["linkedRedisCacheId" "linkedRedisCacheLocation" "serverRole"]}, :ImportRDBParameters {:description "Parameters for Redis import operation.", :properties {:files {:description "files to import.", :items {:type "string"}, :type "array"}, :format {:description "File format.", :type "string"}}, :required ["files"]}, :RedisUpdateParameters {:description "Parameters supplied to the Update Redis operation.", :properties {:properties #:reference{:definitions "RedisUpdateProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}}, :Operation {:description "REST API operation", :properties {:display {:description "The object that describes the operation.", :properties {:description {:description "Friendly name of the operation", :type "string"}, :operation {:description "Operation type: read, write, delete, listKeys/action, etc.", :type "string"}, :provider {:description "Friendly name of the resource provider", :type "string"}, :resource {:description "Resource type on which the operation is performed.", :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :type "string"}}, :type "object"}, :RedisRebootParameters {:description "Specifies which Redis node(s) to reboot.", :properties {:rebootType {:description "Which Redis node(s) to reboot. Depending on this value data loss is possible.", :enum ["PrimaryNode" "SecondaryNode" "AllNodes"], :type "string", :x-ms-enum {:modelAsString true, :name "RebootType"}}, :shardId {:description "If clustering is enabled, the ID of the shard to be rebooted.", :format "int32", :type "integer"}}, :required ["rebootType"]}, :RedisForceRebootResponse {:description "Response to force reboot for Redis cache.", :properties {:message {:description "Status message", :readOnly true, :type "string"}}}, :RedisPatchScheduleListResult {:description "The response of list patch schedules Redis operation.", :properties {:nextLink {:description "Link for next page of results.", :readOnly true, :type "string"}, :value {:description "Results of the list patch schedules operation.", :items #:reference{:definitions "RedisPatchSchedule"}, :type "array"}}}, :RedisCreateProperties {:allOf [#:reference{:definitions "RedisCommonProperties"}], :description "Properties supplied to Create Redis operation.", :properties {:sku #:reference{:definitions "Sku"}, :staticIP {:description "Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network.", :pattern "^\\d+\\.\\d+\\.\\d+\\.\\d+$", :type "string"}, :subnetId {:description "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1", :pattern "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$", :type "string"}}, :required ["sku"], :x-ms-external true}, :RedisCreateParameters {:description "Parameters supplied to the Create Redis operation.", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :properties #:reference{:definitions "RedisCreateProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :zones {:description "A list of availability zones denoting where the resource needs to come from.", :items {:type "string"}, :type "array"}}, :required ["properties" "location"]}, :RedisPatchSchedule {:allOf [#:reference{:definitions "ProxyResource"}], :description "Response to put/get patch schedules for Redis cache.", :properties {:properties #:reference{:definitions "ScheduleEntries"}}, :required ["properties"]}, :RedisFirewallRuleProperties {:description "Specifies a range of IP addresses permitted to connect to the cache", :properties {:endIP {:description "highest IP address included in the range", :type "string"}, :startIP {:description "lowest IP address included in the range", :type "string"}}, :required ["startIP" "endIP"]}, :RedisLinkedServerWithPropertiesList {:description "List of linked servers (with properties) of a Redis cache.", :properties {:nextLink {:description "Link for next set.", :readOnly true, :type "string"}, :value {:description "List of linked servers (with properties) of a Redis cache.", :items #:reference{:definitions "RedisLinkedServerWithProperties"}, :type "array"}}}, :RedisCommonProperties {:description "Create/Update/Get common properties of the redis cache.", :properties {:enableNonSslPort {:description "Specifies whether the non-ssl Redis server port (6379) is enabled.", :type "boolean"}, :redisConfiguration {:additionalProperties {:type "string"}, :description "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.", :type "object"}, :shardCount {:description "The number of shards to be created on a Premium Cluster Cache.", :format "int32", :type "integer"}, :tenantSettings {:additionalProperties {:type "string"}, :description "A dictionary of tenant settings", :type "object"}}, :x-ms-external true}, :RedisProperties {:allOf [#:reference{:definitions "RedisCreateProperties"}], :description "Properties of the redis cache.", :properties {:accessKeys #:reference{:definitions "RedisAccessKeys"}, :hostName {:description "Redis host name.", :readOnly true, :type "string"}, :linkedServers {:description "List of the linked servers associated with the cache", :items #:reference{:definitions "RedisLinkedServer"}, :readOnly true, :type "array"}, :port {:description "Redis non-SSL port.", :format "int32", :readOnly true, :type "integer"}, :provisioningState {:description "Redis instance provisioning status.", :readOnly true, :type "string"}, :redisVersion {:description "Redis version.", :readOnly true, :type "string"}, :sslPort {:description "Redis SSL port.", :format "int32", :readOnly true, :type "integer"}}, :x-ms-external true}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}, :RedisAccessKeys {:description "Redis cache access keys.", :properties {:primaryKey {:description "The current primary key that clients can use to authenticate with Redis cache.", :readOnly true, :type "string"}, :secondaryKey {:description "The current secondary key that clients can use to authenticate with Redis cache.", :readOnly true, :type "string"}}}, :UpgradeNotification {:description "Properties of upgrade notification.", :properties {:name {:description "Name of upgrade notification.", :readOnly true, :type "string"}, :timestamp {:description "Timestamp when upgrade notification occurred.", :format "date-time", :readOnly true, :type "string"}, :upsellNotification {:additionalProperties {:type "string"}, :description "Details about this upgrade notification", :readOnly true, :type "object"}}}, :RedisLinkedServer {:description "Linked server Id", :properties {:id {:description "Linked server Id.", :readOnly true, :type "string"}}}, :ExportRDBParameters {:description "Parameters for Redis export operation.", :properties {:container {:description "Container name to export to.", :type "string"}, :format {:description "File format.", :type "string"}, :prefix {:description "Prefix to use for exported files.", :type "string"}}, :required ["container" "prefix"]}, :RedisResource {:allOf [#:reference{:definitions "TrackedResource"}], :description "A single Redis item in List or Get Operation.", :properties {:properties #:reference{:definitions "RedisProperties"}, :zones {:description "A list of availability zones denoting where the resource needs to come from.", :items {:type "string"}, :type "array"}}, :required ["properties"]}, :RedisFirewallRule {:allOf [#:reference{:definitions "ProxyResource"}], :description "A firewall rule on a redis cache has a name, and describes a contiguous range of IP addresses permitted to connect", :properties {:properties #:reference{:definitions "RedisFirewallRuleProperties"}}, :required ["properties"]}, :NotificationListResponse {:description "The response of listUpgradeNotifications.", :properties {:nextLink {:description "Link for next set of notifications.", :readOnly true, :type "string"}, :value {:description "List of all notifications.", :items #:reference{:definitions "UpgradeNotification"}, :type "array"}}}, :RedisLinkedServerWithProperties {:allOf [#:reference{:definitions "ProxyResource"}], :description "Response to put/get linked server (with properties) for Redis cache.", :properties {:properties #:reference{:definitions "RedisLinkedServerProperties"}}}, :ScheduleEntries {:description "List of patch schedules for a Redis cache.", :properties {:scheduleEntries {:description "List of patch schedules for a Redis cache.", :items #:reference{:definitions "ScheduleEntry"}, :type "array", :x-ms-client-name "ScheduleEntries"}}, :required ["scheduleEntries"]}, :ScheduleEntry {:description "Patch schedule entry for a Premium Redis Cache.", :properties {:dayOfWeek {:description "Day of the week when a cache can be patched.", :enum ["Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" "Sunday" "Everyday" "Weekend"], :type "string", :x-ms-enum {:modelAsString false, :name "DayOfWeek"}}, :maintenanceWindow {:description "ISO8601 timespan specifying how much time cache patching can take. ", :format "duration", :type "string"}, :startHourUtc {:description "Start hour after which cache patching can start.", :format "int32", :type "integer"}}, :required ["dayOfWeek" "startHourUtc"]}, :RedisRegenerateKeyParameters {:description "Specifies which Redis access keys to reset.", :properties {:keyType {:description "The Redis access key to regenerate.", :enum ["Primary" "Secondary"], :type "string", :x-ms-enum {:modelAsString false, :name "RedisKeyType"}}}, :required ["keyType"]}, :RedisLinkedServerProperties {:allOf [#:reference{:definitions "RedisLinkedServerCreateProperties"}], :description "Properties of a linked server to be returned in get/put response", :properties {:provisioningState {:description "Terminal state of the link between primary and secondary redis cache.", :readOnly true, :type "string"}}}, :Resource {:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :RedisLinkedServerCreateParameters {:description "Parameter required for creating a linked server to redis cache.", :properties {:properties #:reference{:definitions "RedisLinkedServerCreateProperties"}}, :required ["properties"]}, :Sku {:description "SKU parameters supplied to the create Redis operation.", :properties {:capacity {:description "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).", :format "int32", :type "integer"}, :family {:description "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).", :enum ["C" "P"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuFamily"}}, :name {:description "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)", :enum ["Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}}, :required ["name" "family" "capacity"]}, :CheckNameAvailabilityParameters {:description "Parameters body to pass for name availability check.", :properties {:name {:description "Resource name.", :type "string"}, :type {:description "Resource type. The only legal value of this property for checking redis cache name availability is 'Microsoft.Cache/redis'.", :type "string"}}, :required ["name" "type"]}, :RedisFirewallRuleCreateParameters {:description "Parameters required for creating a firewall rule on redis cache.", :properties {:properties #:reference{:definitions "RedisFirewallRuleProperties"}}, :required ["properties"]}, :RedisFirewallRuleListResult {:description "The response of list firewall rules Redis operation.", :properties {:nextLink {:description "Link for next set of locations.", :readOnly true, :type "string"}, :value {:description "Results of the list firewall rules operation.", :items #:reference{:definitions "RedisFirewallRule"}, :type "array"}}}, :ProxyResource {:allOf [#:reference{:definitions "Resource"}], :description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags"}, :RedisUpdateProperties {:allOf [#:reference{:definitions "RedisCommonProperties"}], :description "Patchable properties of the redis cache.", :properties {:sku #:reference{:definitions "Sku"}}, :x-ms-external true}}}