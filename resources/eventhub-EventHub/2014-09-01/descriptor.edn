{:scheme "https", :host "management.azure.com", :info {:description "Azure Event Hubs client", :title "EventHubManagementClient", :version "2014-09-01"}, :ops {:EventHubs_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules", :description "Gets the authorization rules for an Event Hub.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Creates or updates a new Event Hub as a nested resource within a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} {:description "Parameters supplied to create an Event Hub resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "EventHubCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ConsumerGroups_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups", :description "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_PostAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for a Namespace by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Namespaces_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} {:description "Parameters for creating a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "NamespaceCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Deletes an existing namespace. This operation also removes all associated resources under the namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHubs_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Creates or updates an AuthorizationRule for the specified Event Hub.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} {:description "The shared access AuthorizationRule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SharedAccessAuthorizationRuleCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Creates or updates an AuthorizationRule for a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} {:description "The shared access AuthorizationRule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SharedAccessAuthorizationRuleCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ConsumerGroups_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Gets a description for the specified consumer group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "consumerGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Deletes an Event Hub AuthorizationRule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Gets the description of the specified namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_PostAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for an Event Hub by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Namespaces_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Deletes an AuthorizationRule for a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ConsumerGroups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Deletes a consumer group from the specified Event Hub and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "consumerGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHubs_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs", :description "Gets all the Event Hubs in a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_CheckNameSpaceAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNamespaceAvailability", :description "Check the give Namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters to check availability of the given Namespace name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameter"}}], :verb :post}, :Namespaces_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability", :description "Check the give Namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters to check availability of the given Namespace name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameter"}}], :verb :post}, :Namespaces_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces", :description "Lists the available Namespaces within a resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ConsumerGroups_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "consumerGroupNameParameter"} {:description "Parameters supplied to create or update a consumer group resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ConsumerGroupCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for a Namespace by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for an Event Hub by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} {:description "Parameters for updating a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "NamespaceUpdateParameter"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Namespaces_ListPostAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules", :description "Gets a list of authorization rules for a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :EventHubs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Deletes an Event Hub from the specified Namespace and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHubs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Gets an Event Hubs description for the specified Event Hub.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "eventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules", :description "Gets a list of authorization rules for a Namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces", :description "Lists all the available Namespaces within a subscription, irrespective of the resource groups.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.EventHub/operations", :description "Lists all of the available Event Hub REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client API Version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}, :authorizationRuleNameParameter {:description "The authorization rule name.", :in "path", :maxLength 50, :minLength 1, :name "authorizationRuleName", :required true, :type "string", :x-ms-parameter-location "method"}, :consumerGroupNameParameter {:description "The consumer group name", :in "path", :maxLength 50, :minLength 1, :name "consumerGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :eventHubNameParameter {:description "The Event Hub name", :in "path", :maxLength 50, :minLength 1, :name "eventHubName", :required true, :type "string", :x-ms-parameter-location "method"}, :namespaceNameParameter {:description "The Namespace name", :in "path", :maxLength 50, :minLength 6, :name "namespaceName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "Name of the resource group within the azure subscription.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:EventHubProperties {:description "Properties supplied to the Create Or Update Event Hub operation.", :properties {:createdAt {:description "Exact time the Event Hub was created.", :format "date-time", :readOnly true, :type "string"}, :messageRetentionInDays {:description "Number of days to retain the events for this Event Hub.", :format "int64", :type "integer"}, :partitionCount {:description "Number of partitions created for the Event Hub.", :format "int64", :type "integer"}, :partitionIds {:description "Current number of shards on the Event Hub.", :items {:type "string"}, :readOnly true, :type "array"}, :status {:description "Enumerates the possible values for the status of the Event Hub.", :enum ["Active" "Disabled" "Restoring" "SendDisabled" "ReceiveDisabled" "Creating" "Deleting" "Renaming" "Unknown"], :type "string", :x-ms-enum {:modelAsString false, :name "EntityStatus"}}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}}}, :NamespaceListResult {:description "The response of the List Namespace operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of namespaces.", :type "string"}, :value {:description "Result of the List Namespace operation.", :items #:reference{:definitions "NamespaceResource"}, :type "array"}}}, :OperationListResult {:description "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of Event Hub operations supported by the Microsoft.EventHub resource provider.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :Operation {:description "A Event Hub REST API operation", :properties {:display {:description "The object that represents the operation.", :properties {:operation {:description "Operation type: Read, write, delete, etc.", :readOnly true, :type "string"}, :provider {:description "Service provider: Microsoft.EventHub", :readOnly true, :type "string"}, :resource {:description "Resource on which the operation is performed: Invoice, etc.", :readOnly true, :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :readOnly true, :type "string"}}, :type "object"}, :EventHubCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Event Hub operation.", :properties {:location {:description "Location of the resource.", :type "string"}, :name {:description "Name of the Event Hub.", :type "string"}, :properties #:reference{:definitions "EventHubProperties"}, :type {:description "ARM type of the Namespace.", :type "string"}}, :required ["location"]}, :EventHubListResult {:description "The result of the List EventHubs operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs.", :type "string"}, :value {:description "Result of the List EventHubs operation.", :items #:reference{:definitions "EventHubResource"}, :type "array"}}}, :NamespaceCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Namespace operation.", :properties {:location {:description "Namespace location.", :type "string"}, :properties #:reference{:definitions "NamespaceProperties"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Namespace tags.", :type "object"}}, :required ["location"]}, :EventHubResource {:allOf [#:reference{:definitions "Resource"}], :description "Single item in List or Get Event Hub operation", :properties {:properties #:reference{:definitions "EventHubProperties"}}}, :UnavailableReason {:description "Specifies the reason for the unavailability of the service.", :enum ["None" "InvalidName" "SubscriptionIsDisabled" "NameInUse" "NameInLockdown" "TooManyNamespaceInCurrentSubscription"], :type "string", :x-ms-enum {:modelAsString false, :name "UnavailableReason"}}, :SharedAccessAuthorizationRuleResource {:allOf [#:reference{:definitions "Resource"}], :description "Single item in a List or Get AuthorizationRule operation", :properties {:properties #:reference{:definitions "SharedAccessAuthorizationRuleProperties"}}}, :SharedAccessAuthorizationRulePostResource {:allOf [#:reference{:definitions "Resource"}], :description "Single item in a List or Get AuthorizationRule operation", :properties {:properties #:reference{:definitions "SharedAccessAuthorizationRulePostProperties"}}}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "Definition of Resource", :properties {:location {:description "Resource location", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}, :required ["location"]}, :NamespaceUpdateParameter {:description "Parameters supplied to the Patch/update Namespace operation.", :properties {:sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}, :CheckNameAvailabilityResult {:description "The Result of the CheckNameAvailability operation", :properties {:message {:description "The detailed info regarding the reason associated with the Namespace.", :readOnly true, :type "string"}, :nameAvailable {:description "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false.", :type "boolean"}, :reason #:reference{:definitions "UnavailableReason"}}}, :NamespaceProperties {:description "Properties of the Namespace supplied for create or update Namespace operation", :properties {:createdAt {:description "The time the Namespace was created.", :format "date-time", :type "string"}, :enabled {:description "Specifies whether this instance is enabled.", :type "boolean"}, :metricId {:description "Identifier for Azure Insights metrics", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the Namespace.", :type "string"}, :serviceBusEndpoint {:description "Endpoint you can use to perform Service Bus operations.", :externalDocs {:url "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"}, :type "string"}, :status {:description "State of the Namespace.", :enum ["Unknown" "Creating" "Created" "Activating" "Enabling" "Active" "Disabling" "Disabled" "SoftDeleting" "SoftDeleted" "Removing" "Removed" "Failed"], :type "string", :x-ms-enum {:modelAsString false, :name "NamespaceState"}}, :updatedAt {:description "The time the Namespace was updated.", :format "date-time", :type "string"}}}, :ConsumerGroupResource {:allOf [#:reference{:definitions "Resource"}], :description "Single item in List or Get Consumer group operation", :properties {:properties #:reference{:definitions "ConsumerGroupProperties"}}}, :CheckNameAvailabilityParameter {:description "Parameter supplied to check Namespace name availability operation ", :properties {:name {:description "Name to check the namespace name availability", :type "string"}}, :required ["name"]}, :ConsumerGroupProperties {:description "Properties supplied to the Create Or Update Consumer Group operation.", :properties {:createdAt {:description "Exact time the message was created.", :format "date-time", :readOnly true, :type "string"}, :eventHubPath {:description "The path of the Event Hub.", :readOnly true, :type "string"}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}, :userMetadata {:description "The user metadata.", :type "string"}}}, :ConsumerGroupCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Consumer Group operation.", :properties {:location {:description "Location of the resource.", :type "string"}, :name {:description "Name of the consumer group.", :type "string"}, :properties #:reference{:definitions "ConsumerGroupProperties"}, :type {:description "ARM type of the Namespace.", :type "string"}}, :required ["location"]}, :ConsumerGroupListResult {:description "The result to the List Consumer Group operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group", :type "string"}, :value {:description "Result of the List Consumer Group operation.", :items #:reference{:definitions "ConsumerGroupResource"}, :type "array"}}}, :NamespaceResource {:allOf [#:reference{:definitions "TrackedResource"}], :description "Single Namespace item in List or Get Operation", :properties {:properties #:reference{:definitions "NamespaceProperties"}, :sku #:reference{:definitions "Sku"}}}, :Resource {:description "The Resource definition", :properties {:id {:description "Resource Id", :readOnly true, :type "string"}, :location {:description "Resource location", :type "string"}, :name {:description "Resource name", :readOnly true, :type "string"}, :type {:description "Resource type", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :SharedAccessAuthorizationRuleListResult {:description "The response from the List Namespace operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules", :type "string"}, :value {:description "Result of the List Authorization Rules operation.", :items #:reference{:definitions "SharedAccessAuthorizationRuleResource"}, :type "array"}}}, :Sku {:description "SKU parameters supplied to the create Namespace operation", :properties {:capacity {:description "The Event Hubs throughput units.", :format "int32", :type "integer"}, :name {:description "Name of this SKU.", :enum ["Basic" "Standard"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}, :tier {:description "The billing tier of this particular SKU.", :enum ["Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}, :required ["tier"], :type "object"}, :SharedAccessAuthorizationRuleCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Authorization Rules operation.", :properties {:location {:description "Data center location.", :type "string"}, :name {:description "Name of the AuthorizationRule.", :type "string"}, :properties #:reference{:definitions "SharedAccessAuthorizationRuleProperties"}}}, :SharedAccessAuthorizationRuleProperties {:description "Properties supplied to create or update SharedAccessAuthorizationRule", :properties {:rights {:description "The rights associated with the rule.", :items {:enum ["Manage" "Send" "Listen"], :type "string", :x-ms-enum {:modelAsString false, :name "AccessRights"}}, :type "array"}}, :required ["rights"]}, :SharedAccessAuthorizationRulePostProperties {:description "AuthorizationRule properties.", :properties {:claimType {:description "A string that describes Claim Type for authorization rule.", :type "string"}, :claimValue {:description "A string that describes Claim Value of authorization rule.", :type "string"}, :createdTime {:description "The time the namespace was created.", :format "date-time", :readOnly true, :type "string"}, :keyName {:description "A string that describes the Key Name of authorization rule.", :type "string"}, :modifiedTime {:description "The time the namespace was updated.", :format "date-time", :readOnly true, :type "string"}, :primaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :type "string"}, :rights {:description "The rights associated with the rule.", :items {:enum ["Manage" "Send" "Listen"], :type "string", :x-ms-enum {:modelAsString false, :name "AccessRights"}}, :type "array"}, :secondaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :type "string"}}, :required ["rights"]}}}