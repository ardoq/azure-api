{:scheme "https", :host "management.azure.com", :info {:description "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.", :title "SqlManagementClient", :version "2015-05-01-preview"}, :ops {:DatabaseBlobAuditingPolicies_ListByDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings", :description "Lists auditing settings of a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseBlobAuditingPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}", :description "Gets a database's blob auditing policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "BlobAuditingPolicyNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseBlobAuditingPolicies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}", :description "Creates or updates a database's blob auditing policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "BlobAuditingPolicyNameParameter"} {:description "The database blob auditing policy.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DatabaseBlobAuditingPolicy"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :put}}, :parameters {:DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}, :ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineInstanceNameParameter {:description "The name of the SqlVirtualMachineInstance.", :in "path", :name "sqlVirtualMachineInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineContainerNameParameter {:description "The name of the SqlVirtualMachineContainer.", :in "path", :name "sqlVirtualMachineContainerName", :required true, :type "string", :x-ms-parameter-location "method"}, :ManagedInstanceNameParameter {:description "The name of the managed instance.", :in "path", :name "managedInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :VirtualClusterNameParameter {:description "The name of the virtual cluster.", :in "path", :name "virtualClusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :BlobAuditingPolicyNameParameter {:description "The name of the blob auditing policy.", :enum ["default"], :in "path", :name "blobAuditingPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:DatabaseBlobAuditingPolicy {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "A database blob auditing policy.", :properties {:kind {:description "Resource kind.", :readOnly true, :type "string"}, :properties #:reference{:definitions "DatabaseBlobAuditingPolicyProperties"}}, :type "object"}, :DatabaseBlobAuditingPolicyListResult {:description "A list of database auditing settings.", :properties {:nextLink {:description "Link to retrieve next page of results.", :readOnly true, :type "string"}, :value {:description "Array of results.", :items #:reference{:definitions "DatabaseBlobAuditingPolicy"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseBlobAuditingPolicyProperties {:description "Properties of a database blob auditing policy.", :properties {:storageEndpoint {:description "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.", :type "string"}, :queueDelayMs {:description "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.", :format "int32", :type "integer"}, :isAzureMonitorTargetEnabled {:description "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n", :type "boolean"}, :state {:description "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "BlobAuditingPolicyState"}}, :retentionDays {:description "Specifies the number of days to keep in the audit logs in the storage account.", :format "int32", :type "integer"}, :storageAccountAccessKey {:description "Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required.", :type "string", :x-ms-mutability ["create" "update"]}, :isStorageSecondaryKeyInUse {:description "Specifies whether storageAccountAccessKey value is the storage's secondary key.", :type "boolean"}, :storageAccountSubscriptionId {:description "Specifies the blob storage subscription Id.", :format "uuid", :type "string"}, :auditActionsAndGroups {:description "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)", :items {:type "string"}, :type "array"}}, :required ["state"], :type "object"}}}