{:scheme "https", :host "management.azure.com", :info {:description "The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.", :title "KeyVaultManagementClient", :version "2016-10-01"}, :ops {:Vaults_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}", :description "Create or update a key vault in the specified subscription.", :parameters [{:description "The name of the Resource Group to which the server belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the vault", :in "path", :name "vaultName", :pattern "^[a-zA-Z0-9-]{3,24}$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} {:description "Parameters to create or update the vault", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "VaultCreateOrUpdateParameters"}} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Vaults_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability", :description "Checks that the vault name is valid and is not already in use.", :parameters [{:description "The name of the vault.", :in "body", :name "vaultName", :required true, :schema #:reference{:definitions "VaultCheckNameAvailabilityParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Vaults_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults", :description "The List operation gets information about the vaults associated with the subscription.", :parameters [{:description "Maximum number of results to return.", :format "int32", :in "query", :name "$top", :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Vaults_UpdateAccessPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicies/{operationKind}", :description "Update access policies in a key vault in the specified subscription.", :parameters [{:description "The name of the Resource Group to which the vault belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the vault", :in "path", :name "vaultName", :pattern "^[a-zA-Z0-9-]{3,24}$", :required true, :type "string"} {:description "Name of the operation", :enum ["add" "replace" "remove"], :in "path", :name "operationKind", :required true, :type "string", :x-ms-enum {:modelAsString false, :name "AccessPolicyUpdateKind"}} #:reference{:parameters "ApiVersionParameter"} {:description "Access policy to merge into the vault", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "VaultAccessPolicyParameters"}} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Vaults_ListDeleted {:path "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults", :description "Gets information about the deleted vaults in a subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Vaults_List {:path "/subscriptions/{subscriptionId}/resources", :description "The List operation gets information about the vaults associated with the subscription.", :parameters [{:description "The filter to apply on the operation.", :enum ["resourceType eq 'Microsoft.KeyVault/vaults'"], :in "query", :name "$filter", :required true, :type "string"} {:description "Maximum number of results to return.", :format "int32", :in "query", :name "$top", :type "integer"} {:description "Azure Resource Manager Api Version.", :enum ["2015-11-01"], :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Vaults_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}", :description "Gets the specified Azure key vault.", :parameters [{:description "The name of the Resource Group to which the vault belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the vault.", :in "path", :name "vaultName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Vaults_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}", :description "Deletes the specified Azure key vault.", :parameters [{:description "The name of the Resource Group to which the vault belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the vault to delete", :in "path", :name "vaultName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Vaults_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}", :description "Update a key vault in the specified subscription.", :parameters [{:description "The name of the Resource Group to which the server belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the vault", :in "path", :name "vaultName", :pattern "^[a-zA-Z0-9-]{3,24}$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} {:description "Parameters to patch the vault", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "VaultPatchParameters"}} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Vaults_PurgeDeleted {:path "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge", :description "Permanently deletes the specified vault. aka Purges the deleted Azure key vault.", :parameters [{:description "The name of the soft-deleted vault.", :in "path", :name "vaultName", :required true, :type "string"} {:description "The location of the soft-deleted vault.", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Vaults_GetDeleted {:path "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}", :description "Gets the deleted Azure key vault.", :parameters [{:description "The name of the vault.", :in "path", :name "vaultName", :required true, :type "string"} {:description "The location of the deleted vault.", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Vaults_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults", :description "The List operation gets information about the vaults associated with the subscription and within the specified resource group.", :parameters [{:description "The name of the Resource Group to which the vault belongs.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Maximum number of results to return.", :format "int32", :in "query", :name "$top", :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:VaultAccessPolicyProperties {:description "Properties of the vault access policy", :properties {:accessPolicies {:description "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.", :items #:reference{:definitions "AccessPolicyEntry"}, :type "array"}}, :required ["accessPolicies"]}, :VaultCheckNameAvailabilityParameters {:description "The parameters used to check the availability of the vault name.", :properties {:name {:description "The vault name.", :type "string"}, :type {:description "The type of resource, Microsoft.KeyVault/vaults", :enum ["Microsoft.KeyVault/vaults"], :type "string", :x-ms-enum {:modelAsString false, :name "Type"}}}, :required ["name" "type"]}, :DeletedVaultProperties {:description "Properties of the deleted vault.", :properties {:deletionDate {:description "The deleted date.", :format "date-time", :readOnly true, :type "string"}, :location {:description "The location of the original vault.", :readOnly true, :type "string"}, :scheduledPurgeDate {:description "The scheduled purged date.", :format "date-time", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Tags of the original vault.", :readOnly true, :type "object"}, :vaultId {:description "The resource id of the original vault.", :readOnly true, :type "string"}}}, :CheckNameAvailabilityResult {:description "The CheckNameAvailability operation response.", :properties {:message {:description "An error message explaining the Reason value in more detail.", :readOnly true, :type "string"}, :nameAvailable {:description "A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.", :readOnly true, :type "boolean"}, :reason {:description "The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.", :enum ["AccountNameInvalid" "AlreadyExists"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "Reason"}}}}, :Permissions {:description "Permissions the identity has for keys, secrets, certificates and storage.", :properties {:certificates {:description "Permissions to certificates", :items {:enum ["get" "list" "delete" "create" "import" "update" "managecontacts" "getissuers" "listissuers" "setissuers" "deleteissuers" "manageissuers" "recover" "purge"], :type "string", :x-ms-enum {:modelAsString true, :name "CertificatePermissions"}}, :type "array"}, :keys {:description "Permissions to keys", :items {:enum ["encrypt" "decrypt" "wrapKey" "unwrapKey" "sign" "verify" "get" "list" "create" "update" "import" "delete" "backup" "restore" "recover" "purge"], :type "string", :x-ms-enum {:modelAsString true, :name "KeyPermissions"}}, :type "array"}, :secrets {:description "Permissions to secrets", :items {:enum ["get" "list" "set" "delete" "backup" "restore" "recover" "purge"], :type "string", :x-ms-enum {:modelAsString true, :name "SecretPermissions"}}, :type "array"}, :storage {:description "Permissions to storage accounts", :items {:enum ["get" "list" "delete" "set" "update" "regeneratekey" "recover" "purge" "backup" "restore" "setsas" "listsas" "getsas" "deletesas"], :type "string", :x-ms-enum {:modelAsString true, :name "StoragePermissions"}}, :type "array"}}}, :VaultPatchProperties {:description "Properties of the vault", :properties {:tenantId {:description "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.", :format "uuid", :type "string"}, :enabledForDiskEncryption {:description "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.", :type "boolean"}, :enabledForTemplateDeployment {:description "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.", :type "boolean"}, :enableSoftDelete {:description "Property specifying whether recoverable deletion ('soft' delete) is enabled for this key vault. The property may not be set to false.", :type "boolean"}, :accessPolicies {:description "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.", :items #:reference{:definitions "AccessPolicyEntry"}, :type "array"}, :enabledForDeployment {:description "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.", :type "boolean"}, :sku #:reference{:definitions "Sku"}, :enablePurgeProtection {:description "Property specifying whether protection against purge is enabled for this vault; it is only effective if soft delete is also enabled. Once activated, the property may no longer be reset to false.", :type "boolean"}, :createMode {:description "The vault's create mode to indicate whether the vault need to be recovered or not.", :enum ["recover" "default"], :type "string", :x-ms-enum {:modelAsString false, :name "CreateMode"}}}}, :VaultListResult {:description "List of vaults", :properties {:nextLink {:description "The URL to get the next set of vaults.", :type "string"}, :value {:description "The list of vaults.", :items #:reference{:definitions "Vault"}, :type "array"}}}, :DeletedVault {:description "Deleted vault information with extended details.", :properties {:id {:description "The resource ID for the deleted key vault.", :readOnly true, :type "string"}, :name {:description "The name of the key vault.", :readOnly true, :type "string"}, :properties #:reference{:definitions "DeletedVaultProperties"}, :type {:description "The resource type of the key vault.", :readOnly true, :type "string"}}}, :ResourceListResult {:description "List of vault resources.", :properties {:nextLink {:description "The URL to get the next set of vault resources.", :type "string"}, :value {:description "The list of vault resources.", :items #:reference{:definitions "Resource"}, :type "array"}}}, :Vault {:allOf [#:reference{:definitions "Resource"}], :description "Resource information with extended details.", :properties {:properties #:reference{:definitions "VaultProperties"}}, :required ["properties"]}, :VaultAccessPolicyParameters {:description "Parameters for updating the access policy in a vault", :properties {:id {:description "The resource id of the access policy.", :readOnly true, :type "string"}, :location {:description "The resource type of the access policy.", :readOnly true, :type "string"}, :name {:description "The resource name of the access policy.", :readOnly true, :type "string"}, :properties #:reference{:definitions "VaultAccessPolicyProperties"}, :type {:description "The resource name of the access policy.", :readOnly true, :type "string"}}, :required ["properties"], :x-ms-azure-resource true}, :VaultProperties {:description "Properties of the vault", :properties {:tenantId {:description "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.", :format "uuid", :type "string"}, :enabledForDiskEncryption {:description "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.", :type "boolean"}, :vaultUri {:description "The URI of the vault for performing operations on keys and secrets.", :type "string"}, :enabledForTemplateDeployment {:description "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.", :type "boolean"}, :enableSoftDelete {:description "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.", :type "boolean"}, :accessPolicies {:description "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.", :items #:reference{:definitions "AccessPolicyEntry"}, :type "array"}, :enabledForDeployment {:description "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.", :type "boolean"}, :sku #:reference{:definitions "Sku"}, :enablePurgeProtection {:description "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.", :type "boolean"}, :createMode {:description "The vault's create mode to indicate whether the vault need to be recovered or not.", :enum ["recover" "default"], :type "string", :x-ms-enum {:modelAsString false, :name "CreateMode"}}}, :required ["tenantId" "sku"]}, :DeletedVaultListResult {:description "List of vaults", :properties {:nextLink {:description "The URL to get the next set of deleted vaults.", :type "string"}, :value {:description "The list of deleted vaults.", :items #:reference{:definitions "DeletedVault"}, :type "array"}}}, :Resource {:description "Key Vault resource", :properties {:id {:description "The Azure Resource Manager resource ID for the key vault.", :readOnly true, :type "string"}, :location {:description "The supported Azure location where the key vault should be created.", :type "string"}, :name {:description "The name of the key vault.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The tags that will be assigned to the key vault. ", :type "object"}, :type {:description "The resource type of the key vault.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :Sku {:description "SKU details", :properties {:family {:description "SKU family name", :enum ["A"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuFamily"}}, :name {:description "SKU name to specify whether the key vault is a standard vault or a premium vault.", :enum ["standard" "premium"], :type "string", :x-ms-enum {:modelAsString false, :name "SkuName"}}}, :required ["name" "family"]}, :VaultCreateOrUpdateParameters {:description "Parameters for creating or updating a vault", :properties {:location {:description "The supported Azure location where the key vault should be created.", :type "string"}, :properties #:reference{:definitions "VaultProperties"}, :tags {:additionalProperties {:type "string"}, :description "The tags that will be assigned to the key vault.", :type "object"}}, :required ["location" "properties"], :x-ms-azure-resource true}, :VaultPatchParameters {:description "Parameters for creating or updating a vault", :properties {:properties #:reference{:definitions "VaultPatchProperties"}, :tags {:additionalProperties {:type "string"}, :description "The tags that will be assigned to the key vault. ", :type "object"}}, :x-ms-azure-resource true}, :AccessPolicyEntry {:description "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.", :properties {:applicationId {:description " Application ID of the client making request on behalf of a principal", :format "uuid", :type "string"}, :objectId {:description "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.", :type "string"}, :permissions #:reference{:definitions "Permissions"}, :tenantId {:description "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.", :format "uuid", :type "string"}}, :required ["tenantId" "objectId" "permissions"]}}}