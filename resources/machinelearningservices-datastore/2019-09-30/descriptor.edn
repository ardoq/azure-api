{:scheme "https", :host "azure.local", :info {:title "Azure Machine Learning Datastore Management Client", :version "2019-09-30"}, :ops {:DataStores_DeleteAll {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores", :description "Delete all Datastores in the workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"}], :verb :delete}, :DataStores_List {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores", :description "Get the list of Datastores attached to the workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:collectionFormat "multi", :description "List of Datastore names.", :in "query", :items {:type "string"}, :name "dataStoreNames", :required false, :type "array", :uniqueItems false} {:description "The Continuation Token.", :in "query", :name "continuationToken", :required false, :type "string"} {:default 30, :description "Count of Datastores to be returned.", :format "int32", :in "query", :name "count", :required false, :type "integer"} {:default true, :description "Whether to include the datastore secret in the response.", :in "query", :name "includeSecret", :required false, :type "boolean"}], :verb :get}, :DataStores_Create {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores", :description "Create or update a Datastore in the given workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:description "The Datastore details.", :in "body", :name "dto", :required false, :schema #:reference{:definitions "DataStore"}} {:default false, :description "If set to true, the call will create an Datastore if it doesn't exist.", :in "query", :name "createIfNotExists", :required false, :type "boolean"} {:default false, :description "If set to true, the call will skip Datastore validation.", :in "query", :name "skipValidation", :required false, :type "boolean"}], :verb :post}, :DataStores_Delete {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}", :description "Delete a Datastore with a specific name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:description "The Datastore name.", :in "path", :name "name", :required true, :type "string"}], :verb :delete}, :DataStores_Get {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}", :description "Get details of a Datastore with a specific name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:description "The Datastore name.", :in "path", :name "name", :required true, :type "string"}], :verb :get}, :DataStores_Update {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}", :description "Update or create a Datastore in the given workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:description "The Datastore name.", :in "path", :name "name", :required true, :type "string"} {:description "The Datastore details.", :in "body", :name "dto", :required false, :schema #:reference{:definitions "DataStore"}} {:default false, :description "If set to true, the call will create an Datastore if it doesn't exist.", :in "query", :name "createIfNotExists", :required false, :type "boolean"} {:default false, :description "If set to true, the call will skip Datastore validation.", :in "query", :name "skipValidation", :required false, :type "boolean"}], :verb :put}, :DataStores_GetDefault {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default", :description "Get the default Datastore in the workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"}], :verb :get}, :DataStores_SetDefault {:path "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default/{name}", :description "Set a default Datastore in the workspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "workspaceNameParameter"} {:description "The Datastore name.", :in "path", :name "name", :required true, :type "string"}], :verb :put}}, :parameters {:resourceGroupNameParameter {:description "The Name of the resource group in which the workspace is located.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionIdParameter {:description "The Azure Subscription ID.", :format "uuid", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "method"}, :workspaceNameParameter {:description "The name of the workspace.", :in "path", :name "workspaceName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:AzureDataLake {:properties {:tenantId {:description "The ID of the tenant the service principal/app belongs to", :format "uuid", :type "string"}, :clientId {:description "The Client ID/Application ID", :format "uuid", :type "string"}, :authorityUrl {:description "The authority URL used for authentication", :type "string"}, :resourceUri {:description "The resource the service principal/app has access to", :type "string"}, :thumbprint {:description "The thumbprint of the certificate above", :type "string"}, :certificate {:description "The content of the certificate used for authentication", :type "string"}, :resourceGroup {:description "Resource Group Name", :type "string"}, :isCertAuth {:description "Is it using certificate to authenticate. If false then use client secret", :type "boolean"}, :storeName {:description "The Azure Data Lake store name", :type "string"}, :clientSecret {:description "The client secret", :type "string"}, :subscriptionId {:description "Subscription Id", :format "uuid", :type "string"}}, :type "object"}, :AzureStorage {:properties {:accountKey {:description "Storage Account Key (Deprecated)", :type "string"}, :protocol {:description "The protocol to use. Defaults to https", :type "string"}, :credentialType {:description "The credential type", :enum ["None" "Sas" "AccountKey" "ClientCredentials"], :type "string", :x-ms-enum {:modelAsString false, :name "AzureStorageCredentialTypes"}}, :areWorkspaceManagedIdentitiesAllowed {:description "Indicate if we are using Workspace ManagedIdentities/MSI token", :type "boolean"}, :credential {:description "The credential", :type "string"}, :clientCredentials #:reference{:definitions "ClientCredentials"}, :accountName {:description "Storage Account Name", :type "string"}, :sasToken {:description "SAS Token for the container (Deprecated)", :type "string"}, :resourceGroup {:description "Resource Group Name", :type "string"}, :isSas {:description "Indicate if we are using SAS token or Account Key (Deprecated)", :type "boolean"}, :endpoint {:description "The host of the container", :type "string"}, :blobCacheTimeout {:description "If this is an Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob, the length of time (in seconds) to cache files locally after they are accessed (downloaded).", :format "int32", :type "integer"}, :containerName {:description "The storage container name", :type "string"}, :subscriptionId {:description "Subscription Id", :format "uuid", :type "string"}}, :type "object"}, :DataStore {:properties {:tags {:additionalProperties {:type "string"}, :description "Tags to datastore", :type "object"}, :dataStoreType {:description "The Azure storage service this datastore points to.", :enum ["AzureBlob" "AzureFile" "AzureDataLake" "AzureSqlDatabase" "AzurePostgreSql" "DBFS" "AzureDataLakeGen2" "GlusterFs"], :type "string", :x-ms-enum {:modelAsString false, :name "DataStoreType"}}, :glusterFsSection #:reference{:definitions "GlusterFs"}, :name {:description "Name of the datastore", :type "string"}, :azurePostgreSqlSection #:reference{:definitions "AzurePostgreSql"}, :azureStorageSection #:reference{:definitions "AzureStorage"}, :azureDataLakeSection #:reference{:definitions "AzureDataLake"}, :azureSqlDatabaseSection #:reference{:definitions "AzureSqlDatabase"}, :hasBeenValidated {:description "A read only property that denotes whether the service datastore has been validated with credentials.", :type "boolean"}}, :type "object"}, :PaginatedDataStoreList {:description "A paginated list of DataStores.", :properties {:continuationToken {:description "The token used in retrieving the next page.  If null, there are no additional pages.", :type "string"}, :nextLink {:description "The link to the next page constructed using the continuationToken.  If null, there are no additional pages.", :type "string"}, :value {:description "An array of objects of type DataStore.", :items #:reference{:definitions "DataStore"}, :type "array", :uniqueItems false}}, :type "object"}, :InnerErrorResponse {:description "A nested structure of errors.", :properties {:code {:description "The error code.", :type "string"}, :innerError #:reference{:definitions "InnerErrorResponse"}}, :type "object"}, :ErrorDetails {:description "The error details.", :properties {:code {:description "The error code.", :type "string"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the error (e.g., the name of the property in error).", :type "string"}}, :type "object"}, :AzurePostgreSql {:properties {:databaseName {:description "The Azure PostgreSQL database name", :type "string"}, :endpoint {:description "The Azure PostgreSQL server host endpoint", :type "string"}, :portNumber {:description "The Azure PostgreSQL port number", :type "string"}, :resourceGroup {:description "Resource Group Name", :type "string"}, :serverName {:description "The Azure PostgreSQL server name", :type "string"}, :subscriptionId {:description "Subscription Id", :format "uuid", :type "string"}, :userId {:description "The Azure PostgreSQL user id", :type "string"}, :userPassword {:description "The Azure PostgreSQL user password", :type "string"}}, :type "object"}, :GlusterFs {:properties {:serverAddress {:description "The server address of one of the servers that hosts the GlusterFS. Can be either the IP address\r\nor server name.", :type "string"}, :volumeName {:description "The name of the created GlusterFS volume.", :type "string"}}, :type "object"}, :AzureSqlDatabase {:properties {:tenantId {:description "The ID of the tenant the service principal/app belongs to", :format "uuid", :type "string"}, :clientId {:description "The Client ID/Application ID", :format "uuid", :type "string"}, :authorityUrl {:description "The authority URL used for authentication", :type "string"}, :resourceUri {:description "The resource the service principal/app has access to", :type "string"}, :thumbprint {:description "The thumbprint of the certificate above", :type "string"}, :serverName {:description "The Azure SQL server name", :type "string"}, :certificate {:description "The content of the certificate used for authentication", :type "string"}, :resourceGroup {:description "Resource Group Name", :type "string"}, :databaseName {:description "The Azure SQL database name", :type "string"}, :isCertAuth {:description "Is it using certificate to authenticate. If false then use client secret", :type "boolean"}, :endpoint {:description "The server host endpoint", :type "string"}, :clientSecret {:description "The client secret", :type "string"}, :subscriptionId {:description "Subscription Id", :format "uuid", :type "string"}}, :type "object"}, :ClientCredentials {:properties {:tenantId {:description "The ID of the tenant the service principal/app belongs to", :format "uuid", :type "string"}, :clientId {:description "The Client ID/Application ID", :format "uuid", :type "string"}, :authorityUrl {:description "The authority URL used for authentication", :type "string"}, :resourceUri {:description "The resource the service principal/app has access to", :type "string"}, :thumbprint {:description "The thumbprint of the certificate above", :type "string"}, :certificate {:description "The content of the certificate used for authentication", :type "string"}, :resourceGroup {:description "Resource Group Name", :type "string"}, :isCertAuth {:description "Is it using certificate to authenticate. If false then use client secret", :type "boolean"}, :clientSecret {:description "The client secret", :type "string"}, :subscriptionId {:description "Subscription Id", :format "uuid", :type "string"}}, :type "object"}, :RootError {:description "The root error.", :properties {:code {:description "The service-defined error code. Supported error codes: ServiceError, UserError, ValidationError, AzureStorageError, TransientError, RequestThrottled.", :type "string"}, :details {:description "The related errors that occurred during the request.", :items #:reference{:definitions "ErrorDetails"}, :type "array", :uniqueItems false}, :innerError #:reference{:definitions "InnerErrorResponse"}, :message {:description "A human-readable representation of the error.", :type "string"}, :target {:description "The target of the error (e.g., the name of the property in error).", :type "string"}}, :type "object"}, :ErrorResponse {:description "The error response.", :properties {:correlation {:additionalProperties {:type "string"}, :description "Dictionary containing correlation details for the error.", :type "object"}, :environment {:description "The hosting environment.", :type "string"}, :error #:reference{:definitions "RootError"}, :location {:description "The Azure region.", :type "string"}, :time {:description "The time in UTC.", :format "date-time", :type "string"}}, :type "object"}}}