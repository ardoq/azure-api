{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.", :title "ApiManagementClient", :version "2016-10-10"}, :ops {:Users_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Gets the details of the user specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :UserSubscriptions_ListByUsers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions", :description "Lists the collection of subscriptions of the specified user.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Users_GenerateSsoUrl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl", :description "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :post}, :Users_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Deletes specific user.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Whether to delete user's subscription or not.", :in "query", :name "deleteSubscriptions", :required false, :type "boolean"} {:description "The entity state (Etag) version of the user to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :Users_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Creates or Updates a user.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UserCreateParameters"}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :Users_GetSharedAccessToken {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/token", :description "Gets the Shared Access Authorization Token for the User.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Create Authorization Token parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UserTokenParameters"}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :post}, :Users_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Updates the details of the user specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UserUpdateParameters"}} {:description "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :Users_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users", :description "Lists a collection of registered users in the specified service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :UserGroups_ListByUsers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups", :description "Lists all user groups.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :UserIdentities_ListByUsers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities", :description "Lists all user identities.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "UserIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}}, :parameters {:UserIdParameter {:description "User identifier. Must be unique in the current API Management service instance.", :name "uid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}}, :definitions {:UserTokenResult {:description "Get User Token response details.", :properties {:value {:description "Shared Access Authorization token for the User.", :type "string"}}}, :UserCreateParameters {:description "Parameters supplied to the Create User operation.", :properties {:email {:description "Email address. Must not be empty and must be unique within the service instance.", :maxLength 254, :minLength 1, :type "string"}, :firstName {:description "First name.", :maxLength 100, :minLength 1, :type "string"}, :lastName {:description "Last name.", :maxLength 100, :minLength 1, :type "string"}, :note {:description "Optional note about a user set by the administrator.", :type "string"}, :password {:description "User Password.", :type "string"}, :state {:default "Active", :description "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}, :required ["email" "password" "firstName" "lastName"]}, :UserUpdateParameters {:description "Parameters supplied to the Update User operation.", :properties {:email {:description "Email address.", :type "string"}, :firstName {:description "First name.", :maxLength 100, :minLength 1, :type "string"}, :lastName {:description "Last name.", :maxLength 100, :minLength 1, :type "string"}, :note {:description "Note about user.", :type "string"}, :password {:description "Password.", :type "string"}, :state {:description "Account state.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}}, :GenerateSsoUrlResult {:description "Generate SSO Url operations response details.", :properties {:value {:description "Redirect Url containing the SSO URL value.", :type "string"}}}, :UserIdentityContract {:description "User identity details.", :properties {:id {:description "Identifier value within provider.", :type "string"}, :provider {:description "Identity provider name.", :type "string"}}}, :UserIdentityCollection {:description "List of Users Identity list representation.", :properties {:value {:description "User Identity values.", :items #:reference{:definitions "UserIdentityContract"}, :type "array"}}}, :UserTokenParameters {:description "Parameters supplied to the Get User Token operation.", :properties {:expiry {:description "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :keyType {:default "primary", :description "The Key to be used to generate token for user.", :enum ["primary" "secondary"], :type "string", :x-ms-enum {:modelAsString false, :name "KeyTypeContract"}}}, :required ["keyType" "expiry"]}, :UserCollection {:description "Paged Users list representation.", :properties {:count {:description "Total record count number across all pages.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "UserContract"}, :type "array"}}}, :UserContract {:description "User profile.", :properties {:email {:description "Email address.", :type "string"}, :firstName {:description "First name.", :type "string"}, :id {:description "User identifier path.", :type "string"}, :identities {:description "Collection of user identities.", :items #:reference{:definitions "UserIdentityContract"}, :readOnly true, :type "array"}, :lastName {:description "Last name.", :type "string"}, :note {:description "Administrator's note about given user.", :type "string"}, :registrationDate {:description "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :state {:description "User state.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}}}}