{:scheme "https", :host "adminmanagement.local.azurestack.external", :info {:description "The Admin Storage Management Client.", :title "StorageManagementClient", :version "2019-08-08-preview"}, :ops {:StorageAccounts_ReclaimStorageCapacity {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/reclaimStorageCapacity", :description "Start reclaim storage capacity on deleted storage objects.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource location.", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :StorageAccounts_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts", :description "Returns a list of storage accounts.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource location.", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "FilterParameter"} #:reference{:parameters "SummaryParameter"}], :verb :get}, :StorageAccounts_Get {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts/{accountId}", :description "Returns the requested storage account.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource location.", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "AccountIdParameter"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :StorageAccounts_Undelete {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts/{accountId}/undelete", :description "Undelete a deleted storage account with new account name if the a new name is provided.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource location.", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "AccountIdParameter"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "NewAccountNameParameter"}], :verb :post}}, :parameters {:AccountIdParameter {:description "Internal storage account ID, which is not visible to tenant.", :in "path", :name "accountId", :required true, :type "string", :x-ms-parameter-location "method"}, :FilterParameter {:description "Filter string", :in "query", :name "$filter", :type "string", :x-ms-parameter-location "method"}, :NewAccountNameParameter {:description "New storage account name when doing undelete storage account operation.", :in "query", :name "newAccountName", :required false, :type "string", :x-ms-parameter-location "method"}, :SummaryParameter {:description "Switch for whether summary or detailed information is returned.", :in "query", :name "summary", :required false, :type "boolean", :x-ms-parameter-location "method"}}, :definitions {:StorageAccount {:allOf [{:description "Base resource object.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :location {:description "Resource Location.", :readOnly true, :type "string"}, :name {:description "Resource Name.", :readOnly true, :type "string"}, :type {:description "Resource Type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "Properties of the storage account.", :properties {:kind #:reference{:definitions "StorageAccountKind"}, :properties #:reference{:definitions "StorageAccountProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :readOnly true, :type "object"}}, :type "object"}, :StorageEncryptionServices {:description "Services for which encryption setting is mentioned.", :properties {:blob #:reference{:definitions "StorageEncryptionSetting"}, :queue #:reference{:definitions "StorageEncryptionSetting"}, :table #:reference{:definitions "StorageEncryptionSetting"}}, :type "object"}, :LocationStatus {:description "Gets the status indicating whether the primary location of the storage account is available or unavailable.", :enum ["Available" "Unavailable"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "LocationStatus"}}, :StorageAccountList {:description "Pageable list of storage accounts.", :properties {"@odata.nextLink" {:description "URI to the next page.", :readOnly true, :type "string"}, :value {:description "List of storage accounts.", :items #:reference{:definitions "StorageAccount"}, :readOnly true, :type "array"}}, :type "object"}, :StorageEncryption {:description "Storage encryption setting", :properties {:keySource #:reference{:definitions "EncryptionKeySource"}, :services #:reference{:definitions "StorageEncryptionServices"}}, :type "object"}, :StorageAccountKind {:description "The kind of storage account", :enum ["Storage" "StorageV2" "BlobStorage"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountKind"}}, :StorageAccountType {:description "Storage account type.", :enum ["Standard_LRS" "Standard_GRS" "Standard_ZRS" "Standard_RAGRS" "Premium_LRS"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountType"}}, :StorageAccountAccessTier {:description "Access tier for storage account", :enum ["Hot" "Cool"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountAccessTier"}}, :StorageAccountHealthState {:description "Health state for storage account", :enum ["Healthy" "Suspended" "OverQuota" "SuspendedAndOverQuota"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountHealthState"}}, :EncryptionKeySource {:description "Encryption Key Source", :enum ["Microsoft.Storage"], :type "string", :x-ms-enum {:modelAsString true, :name "EncryptionKeySource"}}, :StorageAccountStatus {:description "The state of storage account in WAC.", :enum ["Active" "Deleted"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountStatus"}}, :StorageAccountProperties {:description "Properties of a storage account.", :properties {:creationTime {:description "The creation date and time of storage account in UTC.", :readOnly true, :type "string"}, :statusOfPrimary #:reference{:definitions "LocationStatus"}, :deletedTime {:description "The date-time when the storage account was deleted.", :format "date-time", :readOnly true, :type "string"}, :provisioningState #:reference{:definitions "StorageAccountState"}, :tenantResourceGroupName {:description "The name of resource group under which the storage account locates.", :readOnly true, :type "string"}, :faultDomain {:description "The fault domain for the storage account.", :readOnly true, :type "string"}, :encryption #:reference{:definitions "StorageEncryption"}, :supportsHttpsTrafficOnly {:description "Storage account supports https traffic only or not", :readOnly true, :type "boolean"}, :accountStatus #:reference{:definitions "StorageAccountStatus"}, :accountType #:reference{:definitions "StorageAccountType"}, :tenantStorageAccountName {:description "Storage account name from tenant view.", :readOnly true, :type "string"}, :accessTier #:reference{:definitions "StorageAccountAccessTier"}, :tenantViewId {:description "Resource URI of storage account from tenant view.", :readOnly true, :type "string"}, :healthState #:reference{:definitions "StorageAccountHealthState"}, :accountId {:description "Internal storage account ID, which is not visible to tenant.", :readOnly true, :type "string"}, :primaryLocation {:description "The primary location for the storage account.", :readOnly true, :type "string"}, :primaryEndpoints {:additionalProperties {:type "string"}, :description "The URLs that are used to perform a retrieval of a public BLOB, queue, or table object.", :readOnly true}, :tenantSubscriptionId {:description "Subscription ID of the subscription under which the storage account locates.", :readOnly true, :type "string"}}, :type "object"}, :UndeleteStorageAccount {:description "Undelete storage account information.", :properties {:accountId {:description "The internal wac id for storage account.", :readOnly true, :type "string"}, :newAccountName {:description "The new account name for the restored account if defined.", :readOnly true, :type "string"}}, :type "object"}, :StorageAccountState {:description "Storage account state.", :enum ["Creating" "Succeeded"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountState"}}, :StorageEncryptionSetting {:description "Storage Encryption setting", :properties {:enabled {:description "Bool to indicate whether enabled or not.", :readOnly true, :type "boolean"}, :lastEnabledTime {:description "A rough estimate of the date/time when the encryption was last enabled by the user.", :readOnly true, :type "string"}}, :type "object"}}}