{:scheme "https", :host "azure.local", :info {:description "The Text Analytics API is a suite of text analytics web services built with best-in-class Microsoft machine learning algorithms. The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. No training data is needed to use this API; just bring your text data. This API uses advanced natural language processing techniques to deliver best in class predictions. Further documentation can be found in https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview", :title "Text Analytics Client", :version "v3.0-preview.1"}, :ops {:EntitiesLinking {:path "/entities/linking", :description "The API returns a list of recognized entities with links to a well-known knowledge base. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :type "boolean"} {:description "Collection of documents to analyze.", :in "body", :name "input", :required true, :schema #:reference{:definitions "MultiLanguageBatchInput"}}], :verb :post}, :EntitiesRecognitionGeneral {:path "/entities/recognition/general", :description "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :required false, :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :required false, :type "boolean"} {:description "Collection of documents to analyze.", :in "body", :name "input", :required true, :schema #:reference{:definitions "MultiLanguageBatchInput"}}], :verb :post}, :EntitiesRecognitionPii {:path "/entities/recognition/pii", :description "The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the document. For the list of supported entity types, check <a href=\"https://aka.ms/tanerpii\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.\n", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :type "boolean"} {:description "Collection of documents to analyze.", :in "body", :name "input", :required true, :schema #:reference{:definitions "MultiLanguageBatchInput"}}], :verb :post}, :KeyPhrases {:path "/keyPhrases", :description "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :type "boolean"} {:description "Collection of documents to analyze. Documents can now contain a language field to indicate the text language", :in "body", :name "input", :required true, :schema #:reference{:definitions "MultiLanguageBatchInput"}}], :verb :post}, :Languages {:path "/languages", :description "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :type "boolean"} {:description "Collection of documents to analyze.", :in "body", :name "input", :required true, :schema #:reference{:definitions "LanguageBatchInput"}}], :verb :post}, :Sentiment {:path "/sentiment", :description "The API returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.", :parameters [{:description "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ", :in "query", :name "model-version", :type "string"} {:description "(Optional) if set to true, response will contain input and document level statistics.", :in "query", :name "showStats", :type "boolean"} {:description "Collection of documents to analyze.", :in "body", :name "input", :required true, :schema #:reference{:definitions "MultiLanguageBatchInput"}}], :verb :post}}, :parameters {:Endpoint {:description "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).", :in "path", :name "Endpoint", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}}, :definitions {:SentimentResponse {:properties {:documents {:description "Sentiment analysis per document.", :items #:reference{:definitions "DocumentSentiment"}, :type "array"}, :errors {:description "Errors by document id.", :items #:reference{:definitions "DocumentError"}, :type "array"}, :modelVersion {:description "This field indicates which model is used for scoring.", :type "string"}, :statistics #:reference{:definitions "RequestStatistics"}}, :required ["documents" "errors" "modelVersion"], :type "object"}, :MultiLanguageInput {:description "Contains an input document to be analyzed by the service.", :properties {:id {:description "A unique, non-empty document identifier.", :type "string"}, :language {:description "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default.", :type "string"}, :text {:description "The input text to process.", :type "string"}}, :required ["id" "text"], :type "object"}, :RequestStatistics {:description "if showStats=true was specified in the request this field will contain information about the request payload.", :properties {:documentsCount {:description "Number of documents submitted in the request.", :format "int32", :type "integer"}, :erroneousDocumentsCount {:description "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents.", :format "int32", :type "integer"}, :transactionsCount {:description "Number of transactions for the request.", :format "int64", :type "integer"}, :validDocumentsCount {:description "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents.", :format "int32", :type "integer"}}, :required ["documentsCount" "validDocumentsCount" "erroneousDocumentsCount" "transactionsCount"], :type "object"}, :DocumentSentiment {:properties {:documentScores #:reference{:definitions "SentimentConfidenceScorePerLabel"}, :id {:description "Unique, non-empty document identifier.", :type "string"}, :sentences {:description "Sentence level sentiment analysis.", :items #:reference{:definitions "SentenceSentiment"}, :type "array"}, :sentiment {:description "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).", :enum ["positive" "neutral" "negative" "mixed"], :type "string", :x-ms-enum {:modelAsString false, :name "DocumentSentimentValue"}}, :statistics #:reference{:definitions "DocumentStatistics"}}, :required ["id" "sentiment" "documentScores" "sentences"], :type "object"}, :KeyPhraseResult {:properties {:documents {:description "Response by document", :items #:reference{:definitions "DocumentKeyPhrases"}, :type "array"}, :errors {:description "Errors by document id.", :items #:reference{:definitions "DocumentError"}, :type "array"}, :modelVersion {:description "This field indicates which model is used for scoring.", :type "string"}, :statistics #:reference{:definitions "RequestStatistics"}}, :required ["documents" "errors" "modelVersion"], :type "object"}, :DocumentEntities {:properties {:entities {:description "Recognized entities in the document.", :items #:reference{:definitions "Entity"}, :type "array"}, :id {:description "Unique, non-empty document identifier.", :type "string"}, :statistics #:reference{:definitions "DocumentStatistics"}}, :required ["id" "entities"], :type "object"}, :DocumentLinkedEntities {:properties {:entities {:description "Recognized well-known entities in the document.", :items #:reference{:definitions "LinkedEntity"}, :type "array"}, :id {:description "Unique, non-empty document identifier.", :type "string"}, :statistics #:reference{:definitions "DocumentStatistics"}}, :required ["id" "entities"], :type "object"}, :DocumentKeyPhrases {:properties {:id {:description "Unique, non-empty document identifier.", :type "string"}, :keyPhrases {:description "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.", :items {:type "string"}, :type "array"}, :statistics #:reference{:definitions "DocumentStatistics"}}, :required ["id" "keyPhrases"], :type "object"}, :SentimentConfidenceScorePerLabel {:description "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative.", :properties {:negative {:format "double", :type "number"}, :neutral {:format "double", :type "number"}, :positive {:format "double", :type "number"}}, :required ["positive" "neutral" "negative"], :type "object"}, :LanguageInput {:properties {:countryHint {:type "string"}, :id {:description "Unique, non-empty document identifier.", :type "string"}, :text {:type "string"}}, :required ["id" "text"], :type "object"}, :LanguageResult {:properties {:documents {:description "Response by document", :items #:reference{:definitions "DocumentLanguage"}, :type "array"}, :errors {:description "Errors by document id.", :items #:reference{:definitions "DocumentError"}, :type "array"}, :modelVersion {:description "This field indicates which model is used for scoring.", :type "string"}, :statistics #:reference{:definitions "RequestStatistics"}}, :required ["documents" "errors" "modelVersion"], :type "object"}, :LinkedEntity {:properties {:dataSource {:description "Data source used to extract entity linking, such as Wiki/Bing etc.", :type "string"}, :id {:description "Unique identifier of the recognized entity from the data source.", :type "string"}, :language {:description "Language used in the data source.", :type "string"}, :matches {:description "List of instances this entity appears in the text.", :items #:reference{:definitions "Match"}, :type "array"}, :name {:description "Entity Linking formal name.", :type "string"}, :url {:description "URL for the entity's page from the data source.", :type "string"}}, :required ["name" "matches" "language" "url" "dataSource"], :type "object"}, :EntityLinkingResult {:properties {:documents {:description "Response by document", :items #:reference{:definitions "DocumentLinkedEntities"}, :type "array"}, :errors {:description "Errors by document id.", :items #:reference{:definitions "DocumentError"}, :type "array"}, :modelVersion {:description "This field indicates which model is used for scoring.", :type "string"}, :statistics #:reference{:definitions "RequestStatistics"}}, :required ["documents" "errors" "modelVersion"], :type "object"}, :EntitiesResult {:properties {:documents {:description "Response by document", :items #:reference{:definitions "DocumentEntities"}, :type "array"}, :errors {:description "Errors by document id.", :items #:reference{:definitions "DocumentError"}, :type "array"}, :modelVersion {:description "This field indicates which model is used for scoring.", :type "string"}, :statistics #:reference{:definitions "RequestStatistics"}}, :required ["documents" "errors" "modelVersion"], :type "object"}, :DocumentLanguage {:properties {:detectedLanguages {:description "A list of extracted languages.", :items #:reference{:definitions "DetectedLanguage"}, :type "array"}, :id {:description "Unique, non-empty document identifier.", :type "string"}, :statistics #:reference{:definitions "DocumentStatistics"}}, :required ["id" "detectedLanguages"], :type "object"}, :TextAnalyticsError {:properties {:code {:description "Error code.", :enum ["invalidRequest" "invalidArgument" "internalServerError" "serviceUnavailable"], :type "string", :x-ms-enum {:modelAsString false, :name "ErrorCodeValue"}}, :details {:description "Details about specific errors that led to this reported error.", :items #:reference{:definitions "TextAnalyticsError"}, :type "array"}, :innerError #:reference{:definitions "InnerError"}, :message {:description "Error message.", :type "string"}, :target {:description "Error target.", :type "string"}}, :required ["code" "message"], :type "object"}, :InnerError {:properties {:code {:description "Error code.", :enum ["invalidParameterValue" "invalidRequestBodyFormat" "emptyRequest" "missingInputRecords" "invalidDocument" "modelVersionIncorrect" "invalidDocumentBatch" "unsupportedLanguageCode" "invalidCountryHint"], :type "string", :x-ms-enum {:modelAsString false, :name "InnerErrorCodeValue"}}, :details {:additionalProperties {:type "string"}, :description "Error details.", :type "object"}, :innerError #:reference{:definitions "InnerError"}, :message {:description "Error message.", :type "string"}, :target {:description "Error target.", :type "string"}}, :required ["code" "message"], :type "object"}, :DetectedLanguage {:properties {:iso6391Name {:description "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr).", :type "string"}, :name {:description "Long name of a detected language (e.g. English, French).", :type "string"}, :score {:description "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true.", :format "double", :type "number"}}, :required ["name" "iso6391Name" "score"], :type "object"}, :SentenceSentiment {:properties {:length {:description "The length of the sentence by Unicode standard.", :format "int32", :type "integer"}, :offset {:description "The sentence offset from the start of the document.", :format "int32", :type "integer"}, :sentenceScores #:reference{:definitions "SentimentConfidenceScorePerLabel"}, :sentiment {:description "The predicted Sentiment for the sentence.", :enum ["positive" "neutral" "negative"], :type "string", :x-ms-enum {:modelAsString false, :name "SentenceSentimentValue"}}, :warnings {:description "The warnings generated for the sentence.", :items {:type "string"}, :type "array"}}, :required ["sentiment" "sentenceScores" "offset" "length"], :type "object"}, :DocumentError {:properties {:error #:reference{:definitions "TextAnalyticsError"}, :id {:description "Document Id.", :type "string"}}, :required ["id" "error"], :type "object"}, :DocumentStatistics {:description "if showStats=true was specified in the request this field will contain information about the document payload.", :properties {:charactersCount {:description "Number of text elements recognized in the document.", :format "int32", :type "integer"}, :transactionsCount {:description "Number of transactions for the document.", :format "int32", :type "integer"}}, :required ["charactersCount" "transactionsCount"], :type "object"}, :MultiLanguageBatchInput {:description "Contains a set of input documents to be analyzed by the service.", :properties {:documents {:description "The set of documents to process as part of this batch.", :items #:reference{:definitions "MultiLanguageInput"}, :type "array"}}, :required ["documents"], :type "object"}, :Match {:properties {:length {:description "Length (in Unicode characters) for the entity match text.", :format "int32", :type "integer"}, :offset {:description "Start position (in Unicode characters) for the entity match text.", :format "int32", :type "integer"}, :score {:description "If a well-known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned.", :format "double", :type "number"}, :text {:description "Entity text as appears in the request.", :type "string"}}, :required ["score" "text" "offset" "length"], :type "object"}, :LanguageBatchInput {:properties {:documents {:items #:reference{:definitions "LanguageInput"}, :type "array"}}, :required ["documents"], :type "object"}, :Entity {:properties {:length {:description "Length (in Unicode characters) for the entity text.", :format "int32", :type "integer"}, :offset {:description "Start position (in Unicode characters) for the entity text.", :format "int32", :type "integer"}, :score {:description "Confidence score between 0 and 1 of the extracted entity.", :format "double", :type "number"}, :subtype {:description "Entity sub type, such as Age/Year/TimeRange etc", :type "string"}, :text {:description "Entity text as appears in the request.", :type "string"}, :type {:description "Entity type, such as Person/Location/Org/SSN etc", :type "string"}}, :required ["text" "type" "offset" "length" "score"], :type "object"}}}