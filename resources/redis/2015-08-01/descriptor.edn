{:scheme "https", :host "management.azure.com", :info {:description "REST API for Azure Redis Cache Service.", :title "RedisManagementClient", :version "2015-08-01"}, :ops {:Redis_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis/", :description "Gets all Redis caches in the specified subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/", :description "Gets all Redis caches in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Deletes a Redis cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Redis_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Gets a Redis cache (resource description).", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Redis_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}", :description "Create a Redis cache, or replace (overwrite/recreate, with potential downtime) an existing cache.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Parameters supplied to the CreateOrUpdate Redis operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Redis_ForceReboot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot", :description "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Specifies which Redis node(s) to reboot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisRebootParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Redis_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys", :description "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Redis_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey", :description "Regenerate the access keys for a Redis cache. This operation requires write permission to the cache resource.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the Redis cache.", :in "path", :name "name", :required true, :type "string"} {:description "Specifies which key to reset.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RedisRegenerateKeyParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}}, :parameters {:ApiVersionParameter {:description "Client API Version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:RedisResourceWithAccessKey {:allOf [#:reference{:definitions "Resource"}], :description "A Redis item in CreateOrUpdate Operation response.", :properties {:properties #:reference{:definitions "RedisReadablePropertiesWithAccessKey"}}}, :RedisReadableProperties {:allOf [#:reference{:definitions "RedisProperties"}], :description "Parameters describing a Redis instance", :properties {:hostName {:description "Redis host name.", :type "string"}, :port {:description "Redis non-SSL port.", :format "int32", :type "integer"}, :provisioningState {:description "Redis instance provisioning status.", :type "string"}, :sslPort {:description "Redis SSL port.", :format "int32", :type "integer"}}}, :RedisListResult {:description "The response of list Redis operation.", :properties {:nextLink {:description "Link for next set of locations.", :type "string"}, :value {:description "Results of the list operation.", :items #:reference{:definitions "RedisResource"}, :type "array"}}}, :RedisRebootParameters {:description "Specifies which Redis node(s) to reboot.", :properties {:rebootType {:description "Which Redis node(s) to reboot. Depending on this value data loss is possible.", :enum ["PrimaryNode" "SecondaryNode" "AllNodes"], :type "string", :x-ms-enum {:modelAsString false, :name "RebootType"}}, :shardId {:description "If clustering is enabled, the ID of the shared be rebooted.", :format "int32", :type "integer"}}, :required ["rebootType"]}, :RedisProperties {:description "Parameters supplied to CreateOrUpdate Redis operation.", :properties {:virtualNetwork {:description "The exact ARM resource ID of the virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.ClassicNetwork/VirtualNetworks/vnet1", :type "string"}, :tenantSettings {:additionalProperties {:type "string"}, :description "tenantSettings", :type "object"}, :redisVersion {:description "RedisVersion parameter has been deprecated. As such, it is no longer necessary to provide this parameter and any value specified is ignored.", :type "string"}, :redisConfiguration {:additionalProperties {:type "string"}, :description "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.", :type "object"}, :shardCount {:description "The number of shards to be created on a Premium Cluster Cache.", :format "int32", :type "integer"}, :sku #:reference{:definitions "Sku"}, :staticIP {:description "Required when deploying a Redis cache inside an existing Azure Virtual Network.", :type "string"}, :enableNonSslPort {:description "If the value is true, then the non-SLL Redis server port (6379) will be enabled.", :type "boolean"}, :subnet {:description "Required when deploying a Redis cache inside an existing Azure Virtual Network.", :type "string"}}, :required ["sku"]}, :RedisAccessKeys {:description "Redis cache access keys.", :properties {:primaryKey {:description "The current primary key that clients can use to authenticate with Redis cache.", :type "string"}, :secondaryKey {:description "The current secondary key that clients can use to authenticate with Redis cache.", :type "string"}}}, :RedisCreateOrUpdateParameters {:allOf [#:reference{:definitions "Resource"}], :description "Parameters supplied to the CreateOrUpdate Redis operation.", :properties {:properties #:reference{:definitions "RedisProperties"}}, :required ["properties"]}, :RedisResource {:allOf [#:reference{:definitions "Resource"}], :description "A single Redis item in List or Get Operation.", :properties {:properties #:reference{:definitions "RedisReadableProperties"}}}, :RedisRegenerateKeyParameters {:description "Specifies which Redis access keys to reset.", :properties {:keyType {:description "Which Redis access key to reset.", :enum ["Primary" "Secondary"], :type "string", :x-ms-enum {:modelAsString false, :name "RedisKeyType"}}}, :required ["keyType"]}, :RedisReadablePropertiesWithAccessKey {:allOf [#:reference{:definitions "RedisReadableProperties"}], :description "Properties generated only in response to CreateOrUpdate Redis operation.", :properties {:accessKeys #:reference{:definitions "RedisAccessKeys"}}}, :Resource {:properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :Sku {:description "SKU parameters supplied to the create Redis operation.", :properties {:capacity {:description "What size of Redis cache to deploy. Valid values: for C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2, 3, 4).", :format "int32", :type "integer"}, :family {:description "Which family to use. Valid values: (C, P).", :enum ["C" "P"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuFamily"}}, :name {:description "What type of Redis cache to deploy. Valid values: (Basic, Standard, Premium).", :enum ["Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}}, :required ["name" "family" "capacity"]}, :RedisListKeysResult {:description "The response of Redis list keys operation.", :properties {:primaryKey {:description "The current primary key that clients can use to authenticate with Redis cache.", :type "string"}, :secondaryKey {:description "The current secondary key that clients can use to authenticate with Redis cache.", :type "string"}}}}}