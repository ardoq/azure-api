{:scheme "https", :host "management.azure.com", :info {:title "ContainerRegistryManagementClient", :version "2018-02-01-preview"}, :ops {:Builds_GetLogLink {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/getLogLink", :description "Gets a link to download the build logs.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The build ID.", :in "path", :name "buildId", :required true, :type "string"}], :verb :post}, :Builds_Cancel {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/cancel", :description "Cancel an existing build.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The build ID.", :in "path", :name "buildId", :required true, :type "string"}], :verb :post}, :BuildSteps_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}", :description "Deletes a build step from the build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} #:reference{:parameters "StepNameParameter"}], :verb :delete}, :BuildSteps_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}", :description "Updates a build step in a build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} #:reference{:parameters "StepNameParameter"} {:description "The parameters for updating a build step.", :in "body", :name "buildStepUpdateParameters", :required true, :schema #:reference{:definitions "BuildStepUpdateParameters"}}], :verb :patch}, :Builds_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}", :description "Gets the detailed information for a given build.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The build ID.", :in "path", :name "buildId", :required true, :type "string"}], :verb :get}, :BuildSteps_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}", :description "Creates a build step for a build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} #:reference{:parameters "StepNameParameter"} {:description "The parameters for creating a build step.", :in "body", :name "buildStepCreateParameters", :required true, :schema #:reference{:definitions "BuildStep"}}], :verb :put}, :BuildTasks_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks", :description "Lists all the build tasks for a specified container registry.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The build task filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "$skipToken is supported on get list of build tasks, which provides the next page in the list of tasks.", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :BuildTasks_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}", :description "Creates a build task for a container registry with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} {:description "The parameters for creating a build task.", :in "body", :name "buildTaskCreateParameters", :required true, :schema #:reference{:definitions "BuildTask"}}], :verb :put}, :Builds_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}", :description "Patch the build properties.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The build ID.", :in "path", :name "buildId", :required true, :type "string"} {:description "The build update properties.", :in "body", :name "buildUpdateParameters", :required true, :schema #:reference{:definitions "BuildUpdateParameters"}}], :verb :patch}, :BuildTasks_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}", :description "Get the properties of a specified build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"}], :verb :get}, :Registries_QueueBuild {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/queueBuild", :description "Creates a new build based on the request parameters and add it to the build queue.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The parameters of a build that needs to queued.", :in "body", :name "buildRequest", :required true, :schema #:reference{:definitions "QueueBuildRequest"}}], :verb :post}, :BuildTasks_ListSourceRepositoryProperties {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/listSourceRepositoryProperties", :description "Get the source control properties for a build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"}], :verb :post}, :BuildSteps_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps", :description "List all the build steps for a given build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"}], :verb :get}, :BuildTasks_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}", :description "Updates a build task with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} {:description "The parameters for updating a build task.", :in "body", :name "buildTaskUpdateParameters", :required true, :schema #:reference{:definitions "BuildTaskUpdateParameters"}}], :verb :patch}, :Registries_GetBuildSourceUploadUrl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getBuildSourceUploadUrl", :description "Get the upload location for the user to be able to upload the source.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :BuildTasks_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}", :description "Deletes a specified build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"}], :verb :delete}, :BuildSteps_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}", :description "Gets the build step for a build task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} #:reference{:parameters "StepNameParameter"}], :verb :get}, :BuildSteps_ListBuildArguments {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}/listBuildArguments", :description "List the build arguments for a step including the secret arguments.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "BuildTaskNameParameter"} #:reference{:parameters "StepNameParameter"}], :verb :post}, :Builds_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds", :description "Gets all the builds for a registry.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The builds filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "$top is supported for get list of builds, which limits the maximum number of builds to return.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "$skipToken is supported on get list of builds, which provides the next page in the list of builds.", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The client API version.", :in "query", :name "api-version", :required true, :type "string"}, :BuildTaskNameParameter {:description "The name of the container registry build task.", :name "buildTaskName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :RegistryNameParameter {:description "The name of the container registry.", :name "registryName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :ResourceGroupNameParameter {:description "The name of the resource group to which the container registry belongs.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :StepNameParameter {:description "The name of a build step for a container registry build task.", :name "stepName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :SubscriptionIdParameter {:description "The Microsoft Azure subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:BuildUpdateParameters {:description "The set of build properties that can be updated.", :properties {:isArchiveEnabled {:description "The value that indicates whether archiving is enabled or not.", :type "boolean"}}, :type "object"}, :BuildGetLogResult {:description "The result of get log link operation.", :properties {:logLink {:description "The link to logs for a azure container registry build.", :type "string"}}, :type "object"}, :ImageDescriptor {:description "Properties for a registry image.", :properties {:digest {:description "The sha256-based digest of the image manifest.", :type "string"}, :registry {:description "The registry login server.", :type "string"}, :repository {:description "The repository name.", :type "string"}, :tag {:description "The tag name.", :type "string"}}, :type "object"}, :BuildTask {:allOf [#:reference{:definitions "Resource"}], :description "The build task that has the resource properties and all build items. The build task will have all information to schedule a build against it.", :properties {:properties #:reference{:definitions "BuildTaskProperties"}}, :type "object"}, :BuildStepPropertiesUpdateParameters {:description "The properties for updating a build step.", :discriminator "type", :properties {:type {:description "The type of the step.", :enum ["Docker"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "BuildStepType"}}}, :type "object"}, :BuildTaskFilter {:description "The filter that can be used for listing build tasks.", :properties {:alias {:description "The alternative name for build task.", :type "string"}}, :type "object"}, :SourceRepositoryProperties {:description "The properties of the source code repository.", :properties {:isCommitTriggerEnabled {:default false, :description "The value of this property indicates whether the source control commit trigger is enabled or not.", :type "boolean"}, :repositoryUrl {:description "The full URL to the source code repository", :type "string"}, :sourceControlAuthProperties #:reference{:definitions "SourceControlAuthInfo"}, :sourceControlType {:description "The type of source control service.", :enum ["Github" "VisualStudioTeamService"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceControlType"}}}, :required ["sourceControlType" "repositoryUrl"], :type "object"}, :DockerBuildStep {:allOf [#:reference{:definitions "BuildStepProperties"}], :description "The Docker build step.", :properties {:noCache {:default false, :description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}, :baseImageTrigger {:description "The type of the auto trigger for base image dependency updates.", :enum ["All" "Runtime" "None"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageTriggerType"}}, :dockerFilePath {:description "The Docker file path relative to the source control root.", :type "string"}, :baseImageDependencies {:description "List of base image dependencies for a step.", :items #:reference{:definitions "BaseImageDependency"}, :readOnly true, :type "array"}, :isPushEnabled {:default true, :description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :branch {:description "The repository branch name.", :type "string"}, :buildArguments {:description "The custom arguments for building this build step.", :items #:reference{:definitions "BuildArgument"}, :type "array"}, :contextPath {:description "The relative context path for a docker build in the source.", :type "string"}}, :type "object", :x-ms-discriminator-value "Docker"}, :BuildTaskUpdateParameters {:description "The parameters for updating a build task.", :properties {:properties #:reference{:definitions "BuildTaskPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The ARM resource tags.", :type "object"}}, :type "object"}, :BuildFilter {:description "Properties that are enabled for Odata querying.", :properties {:buildId {:description "The unique identifier for the build.", :type "string"}, :buildTaskName {:description "The name of the build task that the build corresponds to.", :type "string"}, :buildType {:description "The type of build.", :enum ["AutoBuild" "QuickBuild"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildType"}}, :createTime {:description "The create time for a build.", :format "date-time", :type "string"}, :finishTime {:description "The time the build finished.", :format "date-time", :type "string"}, :isArchiveEnabled {:description "The value that indicates whether archiving is enabled or not.", :type "boolean"}, :outputImageManifests {:description "The list of comma-separated image manifests that were generated from the build.", :type "string"}, :status {:description "The current status of the build.", :enum ["Queued" "Started" "Running" "Succeeded" "Failed" "Canceled" "Error" "Timeout"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildStatus"}}}, :type "object"}, :SourceControlAuthInfo {:description "The authorization properties for accessing the source code repository.", :properties {:expiresIn {:description "Time in seconds that the token remains valid", :format "int32", :type "integer"}, :refreshToken {:description "The refresh token used to refresh the access token.", :type "string"}, :scope {:description "The scope of the access token.", :type "string"}, :token {:description "The access token used to access the source control provider.", :type "string"}, :tokenType {:description "The type of Auth token.", :enum ["PAT" "OAuth"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenType"}}}, :required ["token"], :type "object"}, :BuildTaskProperties {:description "The properties of a build task.", :properties {:alias {:description "The alternative updatable name for a build task.", :type "string"}, :creationDate {:description "The creation date of build task.", :format "date-time", :readOnly true, :type "string"}, :platform #:reference{:definitions "PlatformProperties"}, :provisioningState {:description "The provisioning state of the build task.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :sourceRepository #:reference{:definitions "SourceRepositoryProperties"}, :status {:description "The current status of build task.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildTaskStatus"}}, :timeout {:default 3600, :description "Build timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}}, :required ["alias" "sourceRepository" "platform"], :type "object"}, :BuildTaskBuildRequest {:allOf [#:reference{:definitions "QueueBuildRequest"}], :description "The queue build parameters based on a build task.", :properties {:buildTaskName {:description "The name of build task against which build has to be queued.", :type "string"}}, :required ["type" "buildTaskName"], :type "object", :x-ms-discriminator-value "BuildTask"}, :BaseImageDependency {:description "Properties that describe a base image dependency.", :properties {:digest {:description "The sha256-based digest of the image manifest.", :type "string"}, :registry {:description "The registry login server.", :type "string"}, :repository {:description "The repository name.", :type "string"}, :tag {:description "The tag name.", :type "string"}, :type {:description "The type of the base image dependency.", :enum ["BuildTime" "RunTime"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageDependencyType"}}}, :type "object"}, :BuildArgument {:description "Properties of a build argument.", :properties {:isSecret {:default false, :description "Flag to indicate whether the argument represents a secret and want to be removed from build logs.", :type "boolean"}, :name {:description "The name of the argument.", :type "string"}, :type {:description "The type of the argument.", :enum ["DockerBuildArgument"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildArgumentType"}}, :value {:description "The value of the argument.", :type "string"}}, :required ["type" "name" "value"], :type "object"}, :BuildListResult {:description "Collection of builds.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "Build"}, :type "array"}}, :type "object"}, :PlatformProperties {:description "The platform properties against which the build has to happen.", :properties {:cpu {:description "The CPU configuration in terms of number of cores required for the build.", :format "int32", :type "integer"}, :osType {:description "The operating system type required for the build.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString true, :name "OsType"}}}, :required ["osType"], :type "object"}, :GitCommitTrigger {:description "The git commit trigger that caused a build.", :properties {:branchName {:description "The branch name in the repository.", :type "string"}, :commitId {:description "The unique ID that identifies a commit.", :type "string"}, :id {:description "The unique ID of the trigger.", :type "string"}, :providerType {:description "The source control provider type.", :type "string"}, :repositoryUrl {:description "The repository URL.", :type "string"}}, :type "object"}, :DockerBuildStepUpdateParameters {:allOf [#:reference{:definitions "BuildStepPropertiesUpdateParameters"}], :description "The properties for updating a docker build step.", :properties {:baseImageTrigger {:description "The type of the auto trigger for base image dependency updates.", :enum ["All" "Runtime" "None"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageTriggerType"}}, :branch {:description "The repository branch name.", :type "string"}, :buildArguments {:description "The custom arguments for building this build step.", :items #:reference{:definitions "BuildArgument"}, :type "array"}, :contextPath {:description "The relative context path for a docker build in the source.", :type "string"}, :dockerFilePath {:description "The Docker file path relative to the source control root.", :type "string"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :isPushEnabled {:description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :noCache {:description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}}, :required ["type"], :type "object", :x-ms-discriminator-value "Docker"}, :SourceRepositoryUpdateParameters {:description "The properties for updating the source code repository configuration.", :properties {:isCommitTriggerEnabled {:description "The value of this property indicates whether the source control commit trigger is enabled or not.", :type "boolean"}, :sourceControlAuthProperties #:reference{:definitions "SourceControlAuthInfo"}}, :type "object"}, :BuildStep {:allOf [#:reference{:definitions "ProxyResource"}], :description "Build step resource properties", :properties {:properties #:reference{:definitions "BuildStepProperties"}}, :type "object"}, :BuildStepUpdateParameters {:description "The parameters for updating a build step.", :properties {:properties #:reference{:definitions "BuildStepPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The ARM resource tags.", :type "object"}}, :type "object"}, :BuildTaskPropertiesUpdateParameters {:description "The properties for updating a build task.", :properties {:alias {:description "The alternative updatable name for a build task.", :type "string"}, :platform #:reference{:definitions "PlatformProperties"}, :sourceRepository #:reference{:definitions "SourceRepositoryUpdateParameters"}, :status {:description "The current status of build task.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildTaskStatus"}}, :timeout {:description "Build timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}}, :type "object"}, :QueueBuildRequest {:description "The queue build request parameters.", :discriminator "type", :properties {:type {:description "The type of the build request.", :readOnly true, :type "string"}}, :type "object"}, :SourceUploadDefinition {:description "The properties of a response to source upload request.", :properties {:relativePath {:description "The relative path to the source. This is used to submit the subsequent queue build request.", :type "string"}, :uploadUrl {:description "The URL where the client can upload the source.", :type "string"}}, :type "object"}, :BuildStepProperties {:description "Base properties for any build step.", :discriminator "type", :properties {:provisioningState {:description "The provisioning state of the build step.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :type {:description "The type of the step.", :enum ["Docker"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "BuildStepType"}}}, :type "object"}, :BuildStepList {:description "The collection of build items.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "BuildStep"}, :type "array"}}, :type "object"}, :BuildArgumentList {:description "The list of build arguments for a build step.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "BuildArgument"}, :type "array"}}, :type "object"}, :Resource {:description "An Azure resource.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :location {:description "The location of the resource. This cannot be changed after the resource is created.", :type "string", :x-ms-mutability ["read" "create"]}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The tags of the resource.", :type "object", :x-ms-mutability ["read" "create" "update"]}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :QuickBuildRequest {:allOf [#:reference{:definitions "QueueBuildRequest"}], :description "The queue build request parameters for a quick build.", :properties {:buildArguments {:description "The collection of build arguments to be used.", :items #:reference{:definitions "BuildArgument"}, :type "array"}, :dockerFilePath {:description "The Docker file path relative to the source location.", :type "string"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :isPushEnabled {:default true, :description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :noCache {:default false, :description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}, :platform #:reference{:definitions "PlatformProperties"}, :sourceLocation {:description "The URL(absolute or relative) of the source that needs to be built. For Docker build, it can be an URL to a tar or github repository as supported by Docker.\r\nIf it is relative URL, the relative path should be obtained from calling getSourceUploadUrl API.", :type "string"}, :timeout {:default 3600, :description "Build timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}}, :required ["type" "sourceLocation" "platform" "dockerFilePath"], :type "object", :x-ms-discriminator-value "QuickBuild"}, :ImageUpdateTrigger {:description "The image update trigger that caused a build.", :properties {:id {:description "The unique ID of the trigger.", :type "string"}, :images {:description "The list of image updates that caused the build.", :items #:reference{:definitions "ImageDescriptor"}, :type "array"}, :timestamp {:description "The timestamp when the image update happened.", :format "date-time", :type "string"}}, :type "object"}, :BuildTaskListResult {:description "The collection of build tasks.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "BuildTask"}, :type "array"}}, :type "object"}, :ProxyResource {:description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :Build {:allOf [#:reference{:definitions "ProxyResource"}], :description "Build resource properties", :properties {:properties #:reference{:definitions "BuildProperties"}}, :type "object"}, :BuildProperties {:description "The properties for a build.", :properties {:buildType {:description "The type of build.", :enum ["AutoBuild" "QuickBuild"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildType"}}, :gitCommitTrigger #:reference{:definitions "GitCommitTrigger"}, :provisioningState {:description "The provisioning state of a build.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :startTime {:description "The time the build started.", :format "date-time", :type "string"}, :lastUpdatedTime {:description "The last updated time for the build.", :format "date-time", :type "string"}, :createTime {:description "The time the build was created.", :format "date-time", :type "string"}, :buildTask {:description "The build task with which the build was started.", :type "string"}, :imageUpdateTrigger #:reference{:definitions "ImageUpdateTrigger"}, :finishTime {:description "The time the build finished.", :format "date-time", :type "string"}, :outputImages {:description "The list of all images that were generated from the build.", :items #:reference{:definitions "ImageDescriptor"}, :type "array"}, :status {:description "The current status of the build.", :enum ["Queued" "Started" "Running" "Succeeded" "Failed" "Canceled" "Error" "Timeout"], :type "string", :x-ms-enum {:modelAsString true, :name "BuildStatus"}}, :buildId {:description "The unique identifier for the build.", :type "string"}, :platform #:reference{:definitions "PlatformProperties"}, :isArchiveEnabled {:default false, :description "The value that indicates whether archiving is enabled or not.", :type "boolean"}}, :type "object"}}}