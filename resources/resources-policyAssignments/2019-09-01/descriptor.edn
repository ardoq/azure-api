{:scheme "https", :host "management.azure.com", :info {:description "To manage and control access to your resources, you can define customized policies and assign them at a scope.", :title "PolicyClient", :version "2019-09-01"}, :ops {:PolicyAssignments_Create {:path "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", :description " This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.", :parameters [{:description "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment.", :in "path", :name "policyAssignmentName", :required true, :type "string"} {:description "Parameters for the policy assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PolicyAssignment"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :PolicyAssignments_Get {:path "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", :description "This operation retrieves a single policy assignment, given its name and the scope it was created at.", :parameters [{:description "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment to get.", :in "path", :name "policyAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PolicyAssignments_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments", :description "This operation retrieves the list of all policy assignments associated with the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except those applied to objects contained within the subscription. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value}.", :parameters [{:description "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyAssignments_ListForManagementGroup {:path "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyAssignments", :description "This operation retrieves the list of all policy assignments applicable to the management group that match the given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter=atScope() is provided, the returned list includes all policy assignments that are assigned to the management group or the management group's ancestors. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the management group.", :parameters [#:reference{:parameters "ManagementGroupIdParameter"} {:description "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. A filter is required when listing policy assignments at management group scope.", :in "query", :name "$filter", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PolicyAssignments_GetById {:path "/{policyAssignmentId}", :description "The operation retrieves the policy assignment with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.", :parameters [{:description "The ID of the policy assignment to get. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PolicyAssignments_ListForResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments", :description "This operation retrieves the list of all policy assignments associated with the given resource group in the given subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource group, including those that apply directly or apply from containing scopes, as well as any applied to resources contained within the resource group. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource group, which is everything in the unfiltered list except those applied to resources contained within the resource group. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the resource group.", :parameters [{:description "The name of the resource group that contains policy assignments.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed.", :in "query", :name "$filter", :required false, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyAssignments_CreateById {:path "/{policyAssignmentId}", :description "This operation creates or updates the policy assignment with the given ID. Policy assignments made on a scope apply to all resources contained in that scope. For example, when you assign a policy to a resource group that policy applies to all resources in the group. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.", :parameters [{:description "The ID of the policy assignment to create. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Parameters for policy assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PolicyAssignment"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :PolicyAssignments_Delete {:path "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", :description "This operation deletes a policy assignment, given its name and the scope it was created in. The scope of a policy assignment is the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.", :parameters [{:description "The scope of the policy assignment. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment to delete.", :in "path", :name "policyAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :PolicyAssignments_DeleteById {:path "/{policyAssignmentId}", :description "This operation deletes the policy with the given ID. Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. Valid formats for {scope} are: '/providers/Microsoft.Management/managementGroups/{managementGroup}' (management group), '/subscriptions/{subscriptionId}' (subscription), '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' (resource group), or '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}' (resource).", :parameters [{:description "The ID of the policy assignment to delete. Use the format '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :PolicyAssignments_ListForResource {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyAssignments", :description "This operation retrieves the list of all policy assignments associated with the specified resource in the given resource group and subscription that match the optional given $filter. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource, including those that apply directly or from all containing scopes, as well as any applied to resources contained within the resource. If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource, which is everything in the unfiltered list except those applied to resources contained within the resource. If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes all policy assignments of the policy definition whose id is {value} that apply to the resource. Three parameters plus the resource name are used to identify a specific resource. If the resource is not part of a parent resource (the more common case), the parent resource path should not be provided (or provided as ''). For example a web app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the resource is part of a parent resource, then all parameters should be provided. For example a virtual machine DNS name could be specified as ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames', {resourceName} == 'MyComputerName'). A convenient alternative to providing the namespace and type name separately is to provide both in the {resourceType} parameter, format: ({resourceProviderNamespace} == '', {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').", :parameters [{:description "The name of the resource group containing the resource.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider. For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource path. Use empty string if there is none.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites).", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The filter to apply on the operation. Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not provided, no filtering is performed.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"}, :ManagementGroupIdParameter {:description "The ID of the management group.", :in "path", :name "managementGroupId", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The ID of the target subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:Identity {:description "Identity for the resource.", :properties {:principalId {:description "The principal ID of the resource identity.", :readOnly true, :type "string"}, :tenantId {:description "The tenant ID of the resource identity.", :readOnly true, :type "string"}, :type {:description "The identity type. This is the only required field when adding a system assigned identity to a resource.", :enum ["SystemAssigned" "None"], :type "string", :x-ms-enum {:modelAsString false, :name "ResourceIdentityType", :values [{:description "Indicates that a system assigned identity is associated with the resource.", :value "SystemAssigned"} {:description "Indicates that no identity is associated with the resource or that the existing identity should be removed.", :value "None"}]}}}}, :PolicyAssignmentListResult {:description "List of policy assignments.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "An array of policy assignments.", :items #:reference{:definitions "PolicyAssignment"}, :type "array"}}}, :ParameterValues {:additionalProperties #:reference{:definitions "ParameterValuesValue"}, :description "The parameter values for the policy rule. The keys are the parameter names.", :type "object"}, :ParameterValuesValue {:description "The value of a parameter.", :properties {:value {:description "The value of the parameter.", :type "object"}}}, :CloudError {:description "An error response from a policy operation.", :properties {:error {:description "The resource management error response.", :properties {:additionalInfo {:description "The error additional info.", :items {:description "The resource management error additional info.", :properties {:info {:description "The additional info.", :readOnly true, :type "object"}, :type {:description "The additional info type.", :readOnly true, :type "string"}}}, :readOnly true, :type "array"}, :code {:description "The error code.", :readOnly true, :type "string"}, :details {:description "The error details.", :items #:reference{:definitions "ErrorResponse"}, :readOnly true, :type "array"}, :message {:description "The error message.", :readOnly true, :type "string"}, :target {:description "The error target.", :readOnly true, :type "string"}}}}, :x-ms-external true}, :PolicyAssignment {:description "The policy assignment.", :properties {:id {:description "The ID of the policy assignment.", :readOnly true, :type "string"}, :identity #:reference{:definitions "Identity"}, :location {:description "The location of the policy assignment. Only required when utilizing managed identity.", :type "string"}, :name {:description "The name of the policy assignment.", :readOnly true, :type "string"}, :properties #:reference{:definitions "PolicyAssignmentProperties"}, :sku #:reference{:definitions "PolicySku"}, :type {:description "The type of the policy assignment.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :PolicySku {:description "The policy sku. This property is optional, obsolete, and will be ignored.", :properties {:name {:description "The name of the policy sku. Possible values are A0 and A1.", :type "string"}, :tier {:description "The policy sku tier. Possible values are Free and Standard.", :type "string"}}, :required ["name"]}, :PolicyAssignmentProperties {:description "The policy assignment properties.", :properties {:description {:description "This message will be part of response in case of policy violation.", :type "string"}, :displayName {:description "The display name of the policy assignment.", :type "string"}, :enforcementMode {:description "The policy assignment enforcement mode. Possible values are Default and DoNotEnforce.", :enum ["Default" "DoNotEnforce"], :type "string", :x-ms-enum {:modelAsString true, :name "enforcementMode", :values [{:description "The policy effect is enforced during resource creation or update.", :value "Default"} {:description "The policy effect is not enforced during resource creation or update.", :value "DoNotEnforce"}]}}, :metadata {:description "The policy assignment metadata. Metadata is an open ended object and is typically a collection of key value pairs.", :type "object"}, :notScopes {:description "The policy's excluded scopes.", :items {:type "string"}, :type "array"}, :parameters #:reference{:definitions "ParameterValues"}, :policyDefinitionId {:description "The ID of the policy definition or policy set definition being assigned.", :type "string"}, :scope {:description "The scope for the policy assignment.", :type "string"}}}, :ErrorResponse {}}}