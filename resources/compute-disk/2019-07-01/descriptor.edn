{:scheme "https", :host "management.azure.com", :info {:description "The Disk Resource Provider Client.", :title "DiskResourceProviderClient", :version "2019-07-01"}, :ops {:DiskEncryptionSets_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets", :description "Lists all the disk encryption sets under a resource group.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Snapshots_GrantAccess {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess", :description "Grants access to a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Access data object supplied in the body of the get snapshot access operation.", :in "body", :name "grantAccessData", :required true, :schema #:reference{:definitions "GrantAccessData"}}], :verb :post}, :DiskEncryptionSets_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}", :description "Gets information about a disk encryption set.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskEncryptionSetNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DiskEncryptionSets_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets", :description "Lists all the disk encryption sets under a subscription.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Disks_GrantAccess {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess", :description "Grants access to a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Access data object supplied in the body of the get disk access operation.", :in "body", :name "grantAccessData", :required true, :schema #:reference{:definitions "GrantAccessData"}}], :verb :post}, :Snapshots_RevokeAccess {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess", :description "Revokes access to a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Disks_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks", :description "Lists all the disks under a resource group.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Snapshots_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", :description "Creates or updates a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Snapshot object supplied in the body of the Put disk operation.", :in "body", :name "snapshot", :required true, :schema #:reference{:definitions "Snapshot"}}], :verb :put}, :DiskEncryptionSets_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}", :description "Deletes a disk encryption set.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskEncryptionSetNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :DiskEncryptionSets_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}", :description "Creates or updates a disk encryption set", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskEncryptionSetNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "disk encryption set object supplied in the body of the Put disk encryption set operation.", :in "body", :name "diskEncryptionSet", :required true, :schema #:reference{:definitions "DiskEncryptionSet"}}], :verb :put}, :Disks_RevokeAccess {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess", :description "Revokes access to a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Disks_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks", :description "Lists all the disks under a subscription.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Disks_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", :description "Updates (patches) a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Disk object supplied in the body of the Patch disk operation.", :in "body", :name "disk", :required true, :schema #:reference{:definitions "DiskUpdate"}}], :verb :patch}, :Disks_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", :description "Deletes a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Snapshots_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", :description "Updates (patches) a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Snapshot object supplied in the body of the Patch snapshot operation.", :in "body", :name "snapshot", :required true, :schema #:reference{:definitions "SnapshotUpdate"}}], :verb :patch}, :Snapshots_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots", :description "Lists snapshots under a subscription.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Snapshots_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots", :description "Lists snapshots under a resource group.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Snapshots_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", :description "Gets information about a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Disks_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", :description "Creates or updates a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "Disk object supplied in the body of the Put disk operation.", :in "body", :name "disk", :required true, :schema #:reference{:definitions "Disk"}}], :verb :put}, :Snapshots_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", :description "Deletes a snapshot.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "SnapshotNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Disks_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", :description "Gets information about a disk.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DiskEncryptionSets_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}", :description "Updates (patches) a disk encryption set.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "DiskEncryptionSetNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "disk encryption set object supplied in the body of the Patch disk encryption set operation.", :in "body", :name "diskEncryptionSet", :required true, :schema #:reference{:definitions "DiskEncryptionSetUpdate"}}], :verb :patch}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :DiskEncryptionSetNameParameter {:description "The name of the disk encryption set that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.", :in "path", :name "diskEncryptionSetName", :required true, :type "string", :x-ms-parameter-location "method"}, :DiskNameParameter {:description "The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters.", :in "path", :name "diskName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupNameParameter {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SnapshotNameParameter {:description "The name of the snapshot that is being created. The name can't be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.", :in "path", :name "snapshotName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ApiError {:description "Api error.", :properties {:code {:description "The error code.", :type "string"}, :details {:description "The Api error details", :items #:reference{:definitions "ApiErrorBase"}, :type "array"}, :innererror #:reference{:definitions "InnerError"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the particular error.", :type "string"}}}, :EncryptionSettingsElement {:description "Encryption settings for one disk volume.", :properties {:diskEncryptionKey #:reference{:definitions "KeyVaultAndSecretReference"}, :keyEncryptionKey #:reference{:definitions "KeyVaultAndKeyReference"}}}, :Encryption {:description "Encryption at rest settings for disk or snapshot", :properties {:diskEncryptionSetId {:description "ResourceId of the disk encryption set to use for enabling encryption at rest.", :type "string"}, :type {:description "The type of key used to encrypt the data of the disk.", :enum ["EncryptionAtRestWithPlatformKey" "EncryptionAtRestWithCustomerKey"], :type "string", :x-ms-enum {:modelAsString true, :name "EncryptionType", :values [{:description "Disk is encrypted with XStore managed key at rest. It is the default encryption type.", :value "EncryptionAtRestWithPlatformKey"} {:description "Disk is encrypted with Customer managed key at rest.", :value "EncryptionAtRestWithCustomerKey"}]}}}, :required ["type"]}, :EncryptionSettingsCollection {:description "Encryption settings for disk or snapshot", :properties {:enabled {:description "Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.", :type "boolean"}, :encryptionSettings {:description "A collection of encryption settings, one for each disk volume.", :items #:reference{:definitions "EncryptionSettingsElement"}, :type "array"}, :encryptionSettingsVersion {:description "Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.", :type "string"}}, :required ["enabled"]}, :SnapshotSku {:description "The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.", :properties {:name {:description "The sku name.", :enum ["Standard_LRS" "Premium_LRS" "Standard_ZRS"], :type "string", :x-ms-enum {:modelAsString true, :name "SnapshotStorageAccountTypes", :values [{:description "Standard HDD locally redundant storage", :value "Standard_LRS"} {:description "Premium SSD locally redundant storage", :value "Premium_LRS"} {:description "Standard zone redundant storage", :value "Standard_ZRS"}]}}, :tier {:description "The sku tier.", :readOnly true, :type "string"}}}, :ImageDiskReference {:description "The source image used for creating the disk.", :properties {:id {:description "A relative uri containing either a Platform Image Repository or user image reference.", :type "string"}, :lun {:description "If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.", :format "int32", :type "integer"}}, :required ["id"]}, :DiskSku {:description "The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or UltraSSD_LRS.", :properties {:name {:description "The sku name.", :enum ["Standard_LRS" "Premium_LRS" "StandardSSD_LRS" "UltraSSD_LRS"], :type "string", :x-ms-enum {:modelAsString true, :name "DiskStorageAccountTypes", :values [{:description "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.", :value "Standard_LRS"} {:description "Premium SSD locally redundant storage. Best for production and performance sensitive workloads.", :value "Premium_LRS"} {:description "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.", :value "StandardSSD_LRS"} {:description "Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads.", :value "UltraSSD_LRS"}]}}, :tier {:description "The sku tier.", :readOnly true, :type "string"}}}, :SnapshotList {:description "The List Snapshots operation response.", :properties {:nextLink {:description "The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots.", :type "string"}, :value {:description "A list of snapshots.", :items #:reference{:definitions "Snapshot"}, :type "array"}}, :required ["value"]}, :GrantAccessData {:description "Data used for requesting a SAS.", :properties {:access {:enum ["None" "Read" "Write"], :type "string", :x-ms-enum {:modelAsString true, :name "AccessLevel"}}, :durationInSeconds {:description "Time duration in seconds until the SAS access expires.", :format "int32", :type "integer"}}, :required ["access" "durationInSeconds"]}, :SourceVault {:description "The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}", :properties {:id {:description "Resource Id", :type "string"}}}, :DiskEncryptionSetUpdate {:description "disk encryption set update resource.", :properties {:properties #:reference{:definitions "DiskEncryptionSetUpdateProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}, :ApiErrorBase {:description "Api error base.", :properties {:code {:description "The error code.", :type "string"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the particular error.", :type "string"}}}, :SnapshotProperties {:description "Snapshot resource properties.", :properties {:encryptionSettingsCollection #:reference{:definitions "EncryptionSettingsCollection"}, :incremental {:description "Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.", :type "boolean"}, :diskSizeBytes {:description "The size of the disk in bytes. This field is read only.", :format "int64", :readOnly true, :type "integer"}, :provisioningState {:description "The disk provisioning state.", :readOnly true, :type "string"}, :timeCreated {:description "The time when the disk was created.", :format "date-time", :readOnly true, :type "string"}, :hyperVGeneration {:description "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.", :enum ["V1" "V2"], :type "string", :x-ms-enum {:modelAsString true, :name "HyperVGeneration"}}, :creationData #:reference{:definitions "CreationData"}, :encryption #:reference{:definitions "Encryption"}, :diskSizeGB {:description "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.", :format "int32", :type "integer"}, :uniqueId {:description "Unique Guid identifying the resource.", :readOnly true, :type "string"}, :osType {:description "The Operating System type.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString false, :name "OperatingSystemTypes"}}}, :required ["creationData"]}, :Snapshot {:allOf [#:reference{:definitions "Resource"}], :description "Snapshot resource.", :properties {:managedBy {:description "Unused. Always Null.", :readOnly true, :type "string"}, :properties #:reference{:definitions "SnapshotProperties"}, :sku #:reference{:definitions "SnapshotSku"}}}, :KeyVaultAndKeyReference {:description "Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey", :properties {:keyUrl {:description "Url pointing to a key or secret in KeyVault", :type "string"}, :sourceVault #:reference{:definitions "SourceVault"}}, :required ["keyUrl" "sourceVault"]}, :CloudError {:description "An error response from the Compute service.", :properties {:error #:reference{:definitions "ApiError"}}, :x-ms-external true}, :DiskEncryptionSetList {:description "The List disk encryption set operation response.", :properties {:nextLink {:description "The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the next page of disk encryption sets.", :type "string"}, :value {:description "A list of disk encryption sets.", :items #:reference{:definitions "DiskEncryptionSet"}, :type "array"}}, :required ["value"]}, :CreationData {:description "Data used when creating a disk.", :properties {:createOption {:description "This enumerates the possible sources of a disk's creation.", :enum ["Empty" "Attach" "FromImage" "Import" "Copy" "Restore" "Upload"], :type "string", :x-ms-enum {:modelAsString true, :name "DiskCreateOption", :values [{:description "Create an empty data disk of a size given by diskSizeGB.", :value "Empty"} {:description "Disk will be attached to a VM.", :value "Attach"} {:description "Create a new disk from a platform image specified by the given imageReference.", :value "FromImage"} {:description "Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId.", :value "Import"} {:description "Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId.", :value "Copy"} {:description "Create a new disk by copying from a backup recovery point.", :value "Restore"} {:description "Create a new disk by obtaining a write token and using it to directly upload the contents of the disk.", :value "Upload"}]}}, :imageReference #:reference{:definitions "ImageDiskReference"}, :sourceResourceId {:description "If createOption is Copy, this is the ARM id of the source snapshot or disk.", :type "string"}, :sourceUniqueId {:description "If this field is set, this is the unique id identifying the source of this resource.", :readOnly true, :type "string"}, :sourceUri {:description "If createOption is Import, this is the URI of a blob to be imported into a managed disk.", :type "string"}, :storageAccountId {:description "Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.", :type "string"}, :uploadSizeBytes {:description "If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).", :format "int64", :type "integer"}}, :required ["createOption"]}, :DiskEncryptionSet {:allOf [#:reference{:definitions "Resource"}], :description "disk encryption set resource.", :properties {:identity #:reference{:definitions "EncryptionSetIdentity"}, :properties #:reference{:definitions "EncryptionSetProperties"}}}, :AccessUri {:description "A disk access SAS uri.", :properties {:accessSAS {:description "A SAS uri for accessing a disk.", :readOnly true, :type "string"}}}, :EncryptionSetIdentity {:description "The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.", :properties {:principalId {:description "The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity", :readOnly true, :type "string"}, :tenantId {:description "The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity", :readOnly true, :type "string"}, :type {:description "The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported.", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString true, :name "DiskEncryptionSetIdentityType"}}}}, :InnerError {:description "Inner error details.", :properties {:errordetail {:description "The internal error message or exception dump.", :type "string"}, :exceptiontype {:description "The exception type.", :type "string"}}}, :DiskList {:description "The List Disks operation response.", :properties {:nextLink {:description "The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks.", :type "string"}, :value {:description "A list of disks.", :items #:reference{:definitions "Disk"}, :type "array"}}, :required ["value"]}, :Disk {:allOf [#:reference{:definitions "Resource"}], :description "Disk resource.", :properties {:managedBy {:description "A relative URI containing the ID of the VM that has the disk attached.", :readOnly true, :type "string"}, :properties #:reference{:definitions "DiskProperties"}, :sku #:reference{:definitions "DiskSku"}, :zones {:description "The Logical zone list for Disk.", :items {:type "string"}, :type "array"}}}, :EncryptionSetProperties {:properties {:activeKey #:reference{:definitions "KeyVaultAndKeyReference"}, :previousKeys {:description "A readonly collection of key vault keys previously used by this disk encryption set while a key rotation is in progress. It will be empty if there is no ongoing key rotation.", :items #:reference{:definitions "KeyVaultAndKeyReference"}, :readOnly true, :type "array"}, :provisioningState {:description "The disk encryption set provisioning state.", :readOnly true, :type "string"}}}, :DiskUpdateProperties {:description "Disk resource update properties.", :properties {:diskIOPSReadWrite {:description "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.", :format "int64", :type "integer"}, :diskMBpsReadWrite {:description "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.", :format "int32", :type "integer"}, :diskSizeGB {:description "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.", :format "int32", :type "integer"}, :encryption #:reference{:definitions "Encryption"}, :encryptionSettingsCollection #:reference{:definitions "EncryptionSettingsCollection"}, :osType {:description "the Operating System type.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString false, :name "OperatingSystemTypes"}}}}, :DiskEncryptionSetUpdateProperties {:description "disk encryption set resource update properties.", :properties {:activeKey #:reference{:definitions "KeyVaultAndKeyReference"}}}, :Resource {:description "The Resource model definition.", :properties {:id {:description "Resource Id", :readOnly true, :type "string"}, :location {:description "Resource location", :type "string"}, :name {:description "Resource name", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}, :type {:description "Resource type", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :SnapshotUpdateProperties {:description "Snapshot resource update properties.", :properties {:diskSizeGB {:description "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.", :format "int32", :type "integer"}, :encryption #:reference{:definitions "Encryption"}, :encryptionSettingsCollection #:reference{:definitions "EncryptionSettingsCollection"}, :osType {:description "the Operating System type.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString false, :name "OperatingSystemTypes"}}}}, :DiskProperties {:description "Disk resource properties.", :properties {:encryptionSettingsCollection #:reference{:definitions "EncryptionSettingsCollection"}, :diskSizeBytes {:description "The size of the disk in bytes. This field is read only.", :format "int64", :readOnly true, :type "integer"}, :provisioningState {:description "The disk provisioning state.", :readOnly true, :type "string"}, :timeCreated {:description "The time when the disk was created.", :format "date-time", :readOnly true, :type "string"}, :hyperVGeneration {:description "The hypervisor generation of the Virtual Machine. Applicable to OS disks only.", :enum ["V1" "V2"], :type "string", :x-ms-enum {:modelAsString true, :name "HyperVGeneration"}}, :diskMBpsReadWrite {:description "The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.", :format "int32", :type "integer"}, :creationData #:reference{:definitions "CreationData"}, :encryption #:reference{:definitions "Encryption"}, :diskSizeGB {:description "If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.", :format "int32", :type "integer"}, :uniqueId {:description "Unique Guid identifying the resource.", :readOnly true, :type "string"}, :diskIOPSReadWrite {:description "The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.", :format "int64", :type "integer"}, :diskState {:description "The state of the disk.", :enum ["Unattached" "Attached" "Reserved" "ActiveSAS" "ReadyToUpload" "ActiveUpload"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DiskState", :values [{:description "The disk is not being used and can be attached to a VM.", :value "Unattached"} {:description "The disk is currently mounted to a running VM.", :value "Attached"} {:description "The disk is mounted to a stopped-deallocated VM", :value "Reserved"} {:description "The disk currently has an Active SAS Uri associated with it.", :value "ActiveSAS"} {:description "A disk is ready to be created by upload by requesting a write token.", :value "ReadyToUpload"} {:description "A disk is created for upload and a write token has been issued for uploading to it.", :value "ActiveUpload"}]}}, :osType {:description "The Operating System type.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString false, :name "OperatingSystemTypes"}}}, :required ["creationData"]}, :DiskUpdate {:description "Disk update resource.", :properties {:properties #:reference{:definitions "DiskUpdateProperties"}, :sku #:reference{:definitions "DiskSku"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}, :KeyVaultAndSecretReference {:description "Key Vault Secret Url and vault id of the encryption key ", :properties {:secretUrl {:description "Url pointing to a key or secret in KeyVault", :type "string"}, :sourceVault #:reference{:definitions "SourceVault"}}, :required ["secretUrl" "sourceVault"]}, :SnapshotUpdate {:description "Snapshot update resource.", :properties {:properties #:reference{:definitions "SnapshotUpdateProperties"}, :sku #:reference{:definitions "SnapshotSku"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}}}