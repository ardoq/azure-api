{:scheme "https", :host "management.azure.com", :info {:description "Provides create, read and update functionality for database Threat Detection policies.", :title "Database Threat Detection Policy APIs", :version "2014-04-01"}, :ops {:DatabaseThreatDetectionPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}", :description "Gets a database's threat detection policy.", :parameters [{:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"} {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database for which database Threat Detection policy is defined.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the security alert policy.", :enum ["default"], :in "path", :name "securityAlertPolicyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "SecurityAlertPolicyName"}} {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}], :verb :get}, :DatabaseThreatDetectionPolicies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}", :description "Creates or updates a database's threat detection policy.", :parameters [{:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"} {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database for which database Threat Detection policy is defined.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the security alert policy.", :enum ["default"], :in "path", :name "securityAlertPolicyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "SecurityAlertPolicyName"}} {:description "The database Threat Detection policy.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DatabaseSecurityAlertPolicy"}} {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}], :verb :put}}, :parameters {:ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:DatabaseSecurityAlertPolicy {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "Contains information about a database Threat Detection policy.", :properties {:kind {:description "Resource kind.", :readOnly true, :type "string"}, :location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :properties #:reference{:definitions "DatabaseSecurityAlertPolicyProperties"}}, :type "object"}, :DatabaseSecurityAlertPolicyProperties {:description "Properties for a database Threat Detection policy.", :properties {:disabledAlerts {:description "Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Data_Exfiltration; Unsafe_Action.", :type "string"}, :emailAccountAdmins {:description "Specifies that the alert is sent to the account administrators.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:name "SecurityAlertPolicyEmailAccountAdmins"}}, :emailAddresses {:description "Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.", :type "string"}, :retentionDays {:description "Specifies the number of days to keep in the Threat Detection audit logs.", :format "int32", :type "integer"}, :state {:description "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.", :enum ["New" "Enabled" "Disabled"], :type "string", :x-ms-enum {:name "SecurityAlertPolicyState"}}, :storageAccountAccessKey {:description "Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.", :type "string", :x-ms-mutability ["create" "update"]}, :storageEndpoint {:description "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.", :type "string"}, :useServerDefault {:description "Specifies whether to use the default server policy.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:name "SecurityAlertPolicyUseServerDefault"}}}, :required ["state"], :type "object"}}}