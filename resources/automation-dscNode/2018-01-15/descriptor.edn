{:scheme "https", :host "management.azure.com", :info {:title "AutomationManagement", :version "2018-01-15"}, :ops {:NodeReports_ListByNode {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports", :description "Retrieve the Dsc node report list by node id.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The parameters supplied to the list operation.", :in "path", :name "nodeId", :required true, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :NodeReports_GetContent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}/content", :description "Retrieve the Dsc node reports by node id and report id.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The Dsc node id.", :in "path", :name "nodeId", :required true, :type "string"} {:description "The report id.", :in "path", :name "reportId", :required true, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :AgentRegistrationInformation_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey", :description "Regenerate a primary or secondary agent registration key", :parameters [{:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the agent registration key to be regenerated", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AgentRegistrationRegenerateKeyParameter"}} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :NodeReports_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}", :description "Retrieve the Dsc node report data by node id and report id.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The Dsc node id.", :in "path", :name "nodeId", :required true, :type "string"} {:description "The report id.", :in "path", :name "reportId", :required true, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :AgentRegistrationInformation_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation", :description "Retrieve the automation agent registration information.", :parameters [{:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :DscNode_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}", :description "Delete the dsc node identified by node id.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The node id.", :in "path", :name "nodeId", :required true, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :DscNode_ListByAutomationAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes", :description "Retrieve a list of dsc nodes.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of rows to skip.", :in "query", :name "$skip", :required false, :type "integer"} {:description "The number of rows to take.", :in "query", :name "$top", :required false, :type "integer"} {:description "Return total rows.", :in "query", :name "$inlinecount", :required false, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :DscNode_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}", :description "Update the dsc node.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Parameters supplied to the update dsc node.", :in "path", :name "nodeId", :required true, :type "string"} {:description "Parameters supplied to the update dsc node.", :in "body", :name "dscNodeUpdateParameters", :required true, :schema #:reference{:definitions "DscNodeUpdateParameters"}} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :patch}, :DscNode_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}", :description "Retrieve the dsc node identified by node id.", :parameters [{:description "Name of an Azure Resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._]+$"} {:description "The name of the automation account.", :in "path", :name "automationAccountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The node id.", :in "path", :name "nodeId", :required true, :type "string"} {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}}, :parameters {}, :definitions {:DscNodeListResult {:description "The response model for the list dsc nodes operation.", :properties {:nextLink {:description "Gets or sets the next link.", :type "string"}, :totalCount {:description "Gets the total number of nodes matching filter criteria.", :type "integer"}, :value {:description "Gets or sets a list of dsc nodes.", :items #:reference{:definitions "DscNode"}, :type "array"}}}, :AgentRegistrationRegenerateKeyParameter {:description "The parameters supplied to the regenerate keys operation.", :properties {:keyName {:description "Gets or sets the agent registration key name - primary or secondary.", :enum ["primary" "secondary"], :type "string", :x-ms-enum {:modelAsString true, :name "AgentRegistrationKeyName"}}}, :required ["keyName"]}, :AgentRegistration {:description "Definition of the agent registration information type.", :properties {:dscMetaConfiguration {:description "Gets or sets the dsc meta configuration.", :type "string"}, :endpoint {:description "Gets or sets the dsc server endpoint.", :type "string"}, :id {:description "Gets or sets the id.", :type "string"}, :keys #:reference{:definitions "AgentRegistrationKeys"}}}, :DscNodeReport {:description "Definition of the dsc node report type.", :properties {:errors {:description "Gets or sets the errors for the node report.", :items #:reference{:definitions "DscReportError"}, :type "array"}, :iPV6Addresses {:description "Gets or sets the IPv6 address of the node that sent the report.", :items {:type "string"}, :type "array"}, :startTime {:description "Gets or sets the start time of the node report.", :format "date-time", :type "string", :x-nullable true}, :reportFormatVersion {:description "Gets or sets the reportFormatVersion of the node report.", :type "string"}, :rawErrors {:description "Gets or sets the unparsed errors for the node report.", :type "string"}, :endTime {:description "Gets or sets the end time of the node report.", :format "date-time", :type "string", :x-nullable true}, :iPV4Addresses {:description "Gets or sets the IPv4 address of the node that sent the report.", :items {:type "string"}, :type "array"}, :hostName {:description "Gets or sets the hostname of the node that sent the report.", :type "string"}, :numberOfResources {:description "Gets or sets the number of resource in the node report.", :format "int32", :type "integer"}, :type {:description "Gets or sets the type of the node report.", :type "string"}, :metaConfiguration #:reference{:definitions "DscMetaConfiguration"}, :lastModifiedTime {:description "Gets or sets the lastModifiedTime of the node report.", :format "date-time", :type "string", :x-nullable false}, :status {:description "Gets or sets the status of the node report.", :type "string"}, :refreshMode {:description "Gets or sets the refreshMode of the node report.", :type "string"}, :id {:description "Gets or sets the id.", :type "string"}, :reportId {:description "Gets or sets the id of the node report.", :type "string"}, :configurationVersion {:description "Gets or sets the configurationVersion of the node report.", :type "string"}, :resources {:description "Gets or sets the resource for the node report.", :items #:reference{:definitions "DscReportResource"}, :type "array"}, :rebootRequested {:description "Gets or sets the rebootRequested of the node report.", :type "string"}}}, :DscReportResource {:description "Definition of the DSC Report Resource.", :properties {:dependsOn {:description "Gets or sets the Resource Navigation values for resources the resource depends on.", :items #:reference{:definitions "DscReportResourceNavigation"}, :type "array"}, :startDate {:description "Gets or sets the start date of the resource.", :format "date-time", :type "string", :x-nullable false}, :moduleVersion {:description "Gets or sets the module version of the resource.", :type "string"}, :moduleName {:description "Gets or sets the module name of the resource.", :type "string"}, :resourceId {:description "Gets or sets the ID of the resource.", :type "string"}, :resourceName {:description "Gets or sets the name of the resource.", :type "string"}, :sourceInfo {:description "Gets or sets the source info of the resource.", :type "string"}, :status {:description "Gets or sets the status of the resource.", :type "string"}, :error {:description "Gets or sets the error of the resource.", :type "string"}, :durationInSeconds {:description "Gets or sets the duration in seconds for the resource.", :format "double", :type "number"}}}, :DscNode {:allOf [{:allOf [{:description "The core properties of ARM resources", :properties {:id {:description "Fully qualified resource Id for the resource", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "Definition of a DscNode", :properties {:properties #:reference{:definitions "DscNodeProperties"}}}, :DscNodeUpdateParameters {:description "The parameters supplied to the update dsc node operation.", :properties {:nodeId {:description "Gets or sets the id of the dsc node.", :type "string"}, :properties {:properties {:nodeConfiguration #:reference{:definitions "DscNodeConfigurationAssociationProperty"}}}}}, :DscMetaConfiguration {:description "Definition of the DSC Meta Configuration.", :properties {:actionAfterReboot {:description "Gets or sets the ActionAfterReboot value of the meta configuration.", :type "string"}, :allowModuleOverwrite {:description "Gets or sets the AllowModuleOverwrite value of the meta configuration.", :type "boolean"}, :certificateId {:description "Gets or sets the CertificateId value of the meta configuration.", :type "string"}, :configurationMode {:description "Gets or sets the ConfigurationMode value of the meta configuration.", :type "string"}, :configurationModeFrequencyMins {:description "Gets or sets the ConfigurationModeFrequencyMins value of the meta configuration.", :format "int32", :type "integer"}, :rebootNodeIfNeeded {:description "Gets or sets the RebootNodeIfNeeded value of the meta configuration.", :type "boolean"}, :refreshFrequencyMins {:description "Gets or sets the RefreshFrequencyMins value of the meta configuration.", :format "int32", :type "integer"}}}, :AgentRegistrationKeys {:description "Definition of the agent registration keys.", :properties {:primary {:description "Gets or sets the primary key.", :type "string"}, :secondary {:description "Gets or sets the secondary key.", :type "string"}}}, :DscNodeReportListResult {:description "The response model for the list dsc nodes operation.", :properties {:nextLink {:description "Gets or sets the next link.", :type "string"}, :value {:description "Gets or sets a list of dsc node reports.", :items #:reference{:definitions "DscNodeReport"}, :type "array"}}}, :DscReportResourceNavigation {:description "Navigation for DSC Report Resource.", :properties {:resourceId {:description "Gets or sets the ID of the resource to navigate to.", :type "string"}}}, :DscReportError {:description "Definition of the dsc node report error type.", :properties {:errorCode {:description "Gets or sets the error code.", :type "string"}, :errorDetails {:description "Gets or sets the error details.", :type "string"}, :errorMessage {:description "Gets or sets the error message.", :type "string"}, :errorSource {:description "Gets or sets the source of the error.", :type "string"}, :locale {:description "Gets or sets the locale of the error.", :type "string"}, :resourceId {:description "Gets or sets the resource ID which generated the error.", :type "string"}}}, :DscNodeConfigurationAssociationProperty {:description "The dsc node configuration property associated with the entity.", :properties {:name {:description "Gets or sets the name of the dsc node configuration.", :type "string"}}}, :DscNodeExtensionHandlerAssociationProperty {:description "The dsc extensionHandler property associated with the node", :properties {:name {:description "Gets or sets the name of the extension handler.", :type "string"}, :version {:description "Gets or sets the version of the extension handler.", :type "string"}}}, :DscNodeProperties {:description "The properties of a DscNode", :properties {:nodeConfiguration #:reference{:definitions "DscNodeConfigurationAssociationProperty"}, :lastSeen {:description "Gets or sets the last seen time of the node.", :format "date-time", :type "string", :x-nullable false}, :ip {:description "Gets or sets the ip of the node.", :type "string"}, :registrationTime {:description "Gets or sets the registration time of the node.", :format "date-time", :type "string", :x-nullable false}, :nodeId {:description "Gets or sets the node id.", :type "string"}, :etag {:description "Gets or sets the etag of the resource.", :type "string"}, :status {:description "Gets or sets the status of the node.", :type "string"}, :totalCount {:description "Gets the total number of records matching filter criteria.", :type "integer"}, :extensionHandler {:description "Gets or sets the list of extensionHandler properties for a Node.", :items #:reference{:definitions "DscNodeExtensionHandlerAssociationProperty"}, :type "array"}, :accountId {:description "Gets or sets the account id of the node.", :type "string"}}}}}