{:scheme "https", :host "management.azure.com", :info {:description "The Azure Storage Management API.", :title "StorageManagementClient", :version "2018-07-01"}, :ops {:BlobContainers_ExtendImmutabilityPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend", :description "Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The ImmutabilityPolicy Properties that will be extended for a blob container.", :in "body", :name "parameters", :schema #:reference{:definitions "ImmutabilityPolicy"}} {:description "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.", :in "header", :name "If-Match", :required true, :type "string"}], :verb :post}, :BlobServices_GetServiceProperties {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}", :description "Gets the properties of a storage accountâ€™s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "BlobServicesName"}], :verb :get}, :BlobContainers_Lease {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease", :description "The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "Lease Container request body.", :in "body", :name "parameters", :schema #:reference{:definitions "LeaseContainerRequest"}}], :verb :post}, :BlobContainers_GetImmutabilityPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}", :description "Gets the existing immutability policy along with the corresponding ETag in response headers and body.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} #:reference{:parameters "ImmutabilityPolicyName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.", :in "header", :name "If-Match", :required false, :type "string"}], :verb :get}, :BlobContainers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}", :description "Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn't already exist. ", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "Properties to update for the blob container.", :in "body", :name "blobContainer", :required true, :schema #:reference{:definitions "BlobContainer"}} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :BlobContainers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}", :description "Gets properties of a specified container. ", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :BlobContainers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}", :description "Deletes specified container under its account.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :BlobServices_SetServiceProperties {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}", :description "Sets the properties of a storage accountâ€™s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. ", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "BlobServicesName"} {:description "The properties of a storage accountâ€™s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BlobServiceProperties"}}], :verb :put}, :BlobContainers_DeleteImmutabilityPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}", :description "Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} #:reference{:parameters "ImmutabilityPolicyName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.", :in "header", :name "If-Match", :required true, :type "string"}], :verb :delete}, :BlobContainers_CreateOrUpdateImmutabilityPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}", :description "Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} #:reference{:parameters "ImmutabilityPolicyName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The ImmutabilityPolicy Properties that will be created or updated to a blob container.", :in "body", :name "parameters", :schema #:reference{:definitions "ImmutabilityPolicy"}} {:description "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.", :in "header", :name "If-Match", :required false, :type "string"}], :verb :put}, :BlobContainers_SetLegalHold {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold", :description "Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The LegalHold property that will be set to a blob container.", :in "body", :name "LegalHold", :required true, :schema #:reference{:definitions "LegalHold"}}], :verb :post}, :BlobContainers_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers", :description "Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :BlobContainers_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}", :description "Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. ", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "Properties of the blob container to create.", :in "body", :name "blobContainer", :required true, :schema #:reference{:definitions "BlobContainer"}} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :put}, :BlobContainers_ClearLegalHold {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold", :description "Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The LegalHold property that will be clear from a blob container.", :in "body", :name "LegalHold", :required true, :schema #:reference{:definitions "LegalHold"}}], :verb :post}, :BlobContainers_LockImmutabilityPolicy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock", :description "Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.", :parameters [{:description "The name of the resource group within the user's subscription. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.", :in "path", :maxLength 24, :minLength 3, :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "ContainerName"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"} {:description "The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.", :in "header", :name "If-Match", :required true, :type "string"}], :verb :post}}, :parameters {:BlobServicesName {:description "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'", :enum ["default"], :in "path", :name "BlobServicesName", :required true, :type "string", :x-ms-parameter-location "method"}, :ContainerName {:description "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.", :in "path", :maxLength 63, :minLength 3, :name "containerName", :required true, :type "string", :x-ms-parameter-location "method"}, :ImmutabilityPolicyName {:description "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'", :enum ["default"], :in "path", :name "immutabilityPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:ListContainerItems {:description "The list of blob containers.", :properties {:value {:description "The list of blob containers.", :items #:reference{:definitions "ListContainerItem"}, :type "array"}}}, :ContainerProperties {:description "The properties of a container.", :properties {:leaseState {:description "Lease state of the container.", :enum ["Available" "Leased" "Expired" "Breaking" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "LeaseState"}}, :publicAccess {:description "Specifies whether data in the container may be accessed publicly and the level of access.", :enum ["Container" "Blob" "None"], :type "string", :x-ms-enum {:modelAsString false, :name "PublicAccess"}}, :leaseDuration {:description "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.", :enum ["Infinite" "Fixed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "LeaseDuration"}}, :leaseStatus {:description "The lease status of the container.", :enum ["Locked" "Unlocked"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "LeaseStatus"}}, :lastModifiedTime {:description "Returns the date and time the container was last modified.", :format "date-time", :readOnly true, :type "string"}, :hasImmutabilityPolicy {:description "The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.", :readOnly true, :type "boolean"}, :immutabilityPolicy #:reference{:definitions "ImmutabilityPolicyProperties"}, :hasLegalHold {:description "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.", :readOnly true, :type "boolean"}, :metadata {:additionalProperties {:type "string"}, :description "A name-value pair to associate with the container as metadata.", :type "object"}, :legalHold #:reference{:definitions "LegalHoldProperties"}}}, :LegalHold {:description "The LegalHold property of a blob container.", :properties {:hasLegalHold {:description "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.", :readOnly true, :type "boolean"}, :tags {:description "Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.", :items {:maxLength 23, :minLength 3, :type "string"}, :type "array"}}, :required ["tags"]}, :LeaseContainerRequest {:description "Lease Container request schema.", :properties {:action {:description "Specifies the lease action. Can be one of the available actions.", :enum ["Acquire" "Renew" "Change" "Release" "Break"], :type "string"}, :breakPeriod {:description "Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.", :type "integer"}, :leaseDuration {:description "Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.", :type "integer"}, :leaseId {:description "Identifies the lease. Can be specified in any valid GUID string format.", :type "string"}, :proposedLeaseId {:description "Optional for acquire, required for change. Proposed lease ID, in a GUID string format.", :type "string"}}, :required ["action"]}, :CorsRule {:description "Specifies a CORS rule for the Blob service.", :properties {:allowedHeaders {:description "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.", :items {:type "string"}, :type "array"}, :allowedMethods {:description "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.", :items {:enum ["DELETE" "GET" "HEAD" "MERGE" "POST" "OPTIONS" "PUT"], :type "string"}, :type "array"}, :allowedOrigins {:description "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains", :items {:type "string"}, :type "array"}, :exposedHeaders {:description "Required if CorsRule element is present. A list of response headers to expose to CORS clients.", :items {:type "string"}, :type "array"}, :maxAgeInSeconds {:description "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.", :type "integer"}}, :required ["allowedOrigins" "allowedMethods" "maxAgeInSeconds" "exposedHeaders" "allowedHeaders"]}, :BlobServiceProperties {:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The properties of a storage accountâ€™s Blob service.", :properties {:properties {:description "The properties of a storage accountâ€™s Blob service.", :properties {:cors #:reference{:definitions "CorsRules"}, :defaultServiceVersion {:description "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions.", :type "string"}, :deleteRetentionPolicy #:reference{:definitions "DeleteRetentionPolicy"}}, :x-ms-client-flatten true, :x-ms-client-name "BlobServiceProperties"}}}, :TagProperty {:description "A tag of the LegalHold of a blob container.", :properties {:objectIdentifier {:description "Returns the Object ID of the user who added the tag.", :readOnly true, :type "string"}, :tag {:description "The tag value.", :readOnly true, :type "string"}, :tenantId {:description "Returns the Tenant ID that issued the token for the user who added the tag.", :readOnly true, :type "string"}, :timestamp {:description "Returns the date and time the tag was added.", :format "date-time", :readOnly true, :type "string"}, :upn {:description "Returns the User Principal Name of the user who added the tag.", :readOnly true, :type "string"}}}, :BlobContainer {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a Azure Resource Manager resource with an etag.", :properties {:etag {:description "Resource Etag.", :readOnly true, :type "string"}}, :x-ms-client-name "AzureEntityResource"}], :description "Properties of the blob container, including Id, resource name, resource type, Etag.", :properties {:properties #:reference{:definitions "ContainerProperties"}}}, :LeaseContainerResponse {:description "Lease Container response schema.", :properties {:leaseId {:description "Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.", :type "string"}, :leaseTimeSeconds {:description "Approximate time remaining in the lease period, in seconds.", :type "string"}}}, :ImmutabilityPolicyProperty {:description "The properties of an ImmutabilityPolicy of a blob container.", :properties {:immutabilityPeriodSinceCreationInDays {:description "The immutability period for the blobs in the container since the policy creation, in days.", :type "integer"}, :state {:description "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.", :enum ["Locked" "Unlocked"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ImmutabilityPolicyState"}}}, :required ["immutabilityPeriodSinceCreationInDays"]}, :ImmutabilityPolicy {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a Azure Resource Manager resource with an etag.", :properties {:etag {:description "Resource Etag.", :readOnly true, :type "string"}}, :x-ms-client-name "AzureEntityResource"}], :description "The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.", :properties {:properties #:reference{:definitions "ImmutabilityPolicyProperty"}}, :required ["properties"]}, :UpdateHistoryProperty {:description "An update history of the ImmutabilityPolicy of a blob container.", :properties {:immutabilityPeriodSinceCreationInDays {:description "The immutability period for the blobs in the container since the policy creation, in days.", :readOnly true, :type "integer"}, :objectIdentifier {:description "Returns the Object ID of the user who updated the ImmutabilityPolicy.", :readOnly true, :type "string"}, :tenantId {:description "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.", :readOnly true, :type "string"}, :timestamp {:description "Returns the date and time the ImmutabilityPolicy was updated.", :format "date-time", :readOnly true, :type "string"}, :update {:description "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.", :enum ["put" "lock" "extend"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ImmutabilityPolicyUpdateType"}}, :upn {:description "Returns the User Principal Name of the user who updated the ImmutabilityPolicy.", :readOnly true, :type "string"}}}, :ImmutabilityPolicyProperties {:description "The properties of an ImmutabilityPolicy of a blob container.", :properties {:etag {:description "ImmutabilityPolicy Etag.", :readOnly true, :type "string"}, :properties #:reference{:definitions "ImmutabilityPolicyProperty"}, :updateHistory {:description "The ImmutabilityPolicy update history of the blob container.", :items #:reference{:definitions "UpdateHistoryProperty"}, :readOnly true, :type "array"}}}, :DeleteRetentionPolicy {:description "The blob service properties for soft delete.", :properties {:days {:description "Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.", :maximum 365, :minimum 1, :type "integer"}, :enabled {:description "Indicates whether DeleteRetentionPolicy is enabled for the Blob service.", :type "boolean"}}}, :LegalHoldProperties {:description "The LegalHold property of a blob container.", :properties {:hasLegalHold {:description "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.", :readOnly true, :type "boolean"}, :tags {:description "The list of LegalHold tags of a blob container.", :items #:reference{:definitions "TagProperty"}, :type "array"}}}, :CorsRules {:description "Sets the CORS rules. You can include up to five CorsRule elements in the request. ", :properties {:corsRules {:description "The List of CORS rules. You can include up to five CorsRule elements in the request. ", :items #:reference{:definitions "CorsRule"}, :type "array"}}}, :ListContainerItem {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a Azure Resource Manager resource with an etag.", :properties {:etag {:description "Resource Etag.", :readOnly true, :type "string"}}, :x-ms-client-name "AzureEntityResource"}], :description "The blob container properties be listed out.", :properties {:properties #:reference{:definitions "ContainerProperties"}}}}}