{:scheme "https", :host "management.azure.com", :info {:description "Creates an Azure Data Lake Store account management client.", :title "DataLakeStoreAccountManagementClient", :version "2016-11-01"}, :ops {:TrustedIdProviders_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", :description "Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the trusted identity provider. This is used for differentiation of providers in the account.", :in "path", :name "trustedIdProviderName", :required true, :type "string"} {:description "Parameters supplied to create or replace the trusted identity provider.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CreateOrUpdateTrustedIdProviderParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :VirtualNetworkRules_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Updates the specified virtual network rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the virtual network rule to update.", :in "path", :name "virtualNetworkRuleName", :required true, :type "string"} {:description "Parameters supplied to update the virtual network rule.", :in "body", :name "parameters", :required false, :schema #:reference{:definitions "UpdateVirtualNetworkRuleParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :Accounts_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts", :description "Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :minimum 1, :name "$skip", :required false, :type "integer"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "A Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Accounts_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}", :description "Gets the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Locations_GetUsage {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages", :description "Gets the current usage count and the limit for the resources of the location under the subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The resource location without whitespace.", :in "path", :name "location", :required true, :type "string"}], :verb :get}, :Accounts_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}", :description "Creates the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "Parameters supplied to create the Data Lake Store account.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CreateDataLakeStoreAccountParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Locations_GetCapability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability", :description "Gets subscription-level properties and limits for Data Lake Store specified by resource location.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The resource location without whitespace.", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :FirewallRules_ListByAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules", :description "Lists the Data Lake Store firewall rules within the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Accounts_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}", :description "Updates the specified Data Lake Store account information.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "Parameters supplied to update the Data Lake Store account.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UpdateDataLakeStoreAccountParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :Accounts_EnableKeyVault {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault", :description "Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Accounts_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability", :description "Checks whether the specified account name is available or taken.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The resource location without whitespace.", :in "path", :name "location", :required true, :type "string"} {:description "Parameters supplied to check the Data Lake Store account name availability.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Accounts_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}", :description "Deletes the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :VirtualNetworkRules_ListByAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules", :description "Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :FirewallRules_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}", :description "Updates the specified firewall rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the firewall rule to update.", :in "path", :name "firewallRuleName", :required true, :type "string"} {:description "Parameters supplied to update the firewall rule.", :in "body", :name "parameters", :required false, :schema #:reference{:definitions "UpdateFirewallRuleParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :FirewallRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}", :description "Deletes the specified firewall rule from the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the firewall rule to delete.", :in "path", :name "firewallRuleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :TrustedIdProviders_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", :description "Updates the specified trusted identity provider.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the trusted identity provider. This is used for differentiation of providers in the account.", :in "path", :name "trustedIdProviderName", :required true, :type "string"} {:description "Parameters supplied to update the trusted identity provider.", :in "body", :name "parameters", :required false, :schema #:reference{:definitions "UpdateTrustedIdProviderParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :FirewallRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}", :description "Gets the specified Data Lake Store firewall rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the firewall rule to retrieve.", :in "path", :name "firewallRuleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :VirtualNetworkRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Deletes the specified virtual network rule from the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the virtual network rule to delete.", :in "path", :name "virtualNetworkRuleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :VirtualNetworkRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Gets the specified Data Lake Store virtual network rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the virtual network rule to retrieve.", :in "path", :name "virtualNetworkRuleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TrustedIdProviders_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", :description "Deletes the specified trusted identity provider from the specified Data Lake Store account", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the trusted identity provider to delete.", :in "path", :name "trustedIdProviderName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :VirtualNetworkRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the virtual network rule to create or update.", :in "path", :name "virtualNetworkRuleName", :required true, :type "string"} {:description "Parameters supplied to create or update the virtual network rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CreateOrUpdateVirtualNetworkRuleParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :FirewallRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}", :description "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the firewall rule to create or update.", :in "path", :name "firewallRuleName", :required true, :type "string"} {:description "Parameters supplied to create or update the firewall rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CreateOrUpdateFirewallRuleParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Accounts_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts", :description "Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :minimum 1, :name "$skip", :required false, :type "integer"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TrustedIdProviders_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", :description "Gets the specified Data Lake Store trusted identity provider.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} {:description "The name of the trusted identity provider to retrieve.", :in "path", :name "trustedIdProviderName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.DataLakeStore/operations", :description "Lists all of the available Data Lake Store REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TrustedIdProviders_ListByAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders", :description "Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "AccountNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:AccountNameParameter {:description "The name of the Data Lake Store account.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :ResourceGroupNameParameter {:description "The name of the Azure resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:CreateOrUpdateTrustedIdProviderProperties {:description "The trusted identity provider properties to use when creating a new trusted identity provider.", :properties {:idProvider {:description "The URL of this trusted identity provider.", :type "string"}}, :required ["idProvider"]}, :UpdateEncryptionConfig {:description "The encryption configuration used to update a user managed Key Vault key.", :properties {:keyVaultMetaInfo #:reference{:definitions "UpdateKeyVaultMetaInfo"}}}, :FirewallRule {:allOf [#:reference{:definitions "SubResource"}], :description "Data Lake Store firewall rule information.", :properties {:properties #:reference{:definitions "FirewallRuleProperties"}}}, :OperationListResult {:description "The list of available operations for Data Lake Store.", :properties {:nextLink {:description "The link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "The results of the list operation.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :UpdateVirtualNetworkRuleParameters {:description "The parameters used to update a virtual network rule.", :properties {:properties #:reference{:definitions "UpdateVirtualNetworkRuleProperties"}}}, :TrustedIdProvider {:allOf [#:reference{:definitions "SubResource"}], :description "Data Lake Store trusted identity provider information.", :properties {:properties #:reference{:definitions "TrustedIdProviderProperties"}}}, :TrustedIdProviderListResult {:description "Data Lake Store trusted identity provider list information.", :properties {:nextLink {:description "The link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "The results of the list operation.", :items #:reference{:definitions "TrustedIdProvider"}, :readOnly true, :type "array"}}}, :DataLakeStoreAccountProperties {:allOf [#:reference{:definitions "DataLakeStoreAccountPropertiesBasic"}], :description "Data Lake Store account properties information.", :properties {:trustedIdProviderState {:description "The current state of the trusted identity provider feature for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "TrustedIdProviderState"}}, :defaultGroup {:description "The default owner group for all new folders and files created in the Data Lake Store account.", :readOnly true, :type "string"}, :currentTier {:description "The commitment tier in use for the current month.", :enum ["Consumption" "Commitment_1TB" "Commitment_10TB" "Commitment_100TB" "Commitment_500TB" "Commitment_1PB" "Commitment_5PB"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "TierType"}}, :encryptionProvisioningState {:description "The current state of encryption provisioning for this Data Lake Store account.", :enum ["Creating" "Succeeded"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionProvisioningState"}}, :newTier {:description "The commitment tier to use for next month.", :enum ["Consumption" "Commitment_1TB" "Commitment_10TB" "Commitment_100TB" "Commitment_500TB" "Commitment_1PB" "Commitment_5PB"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "TierType"}}, :firewallAllowAzureIps {:description "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.", :enum ["Enabled" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "FirewallAllowAzureIpsState"}}, :firewallState {:description "The current state of the IP address firewall for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "FirewallState"}}, :encryptionState {:description "The current state of encryption for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionState"}}, :firewallRules {:description "The list of firewall rules associated with this Data Lake Store account.", :items #:reference{:definitions "FirewallRule"}, :readOnly true, :type "array"}, :virtualNetworkRules {:description "The list of virtual network rules associated with this Data Lake Store account.", :items #:reference{:definitions "VirtualNetworkRule"}, :readOnly true, :type "array"}, :trustedIdProviders {:description "The list of trusted identity providers associated with this Data Lake Store account.", :items #:reference{:definitions "TrustedIdProvider"}, :readOnly true, :type "array"}, :encryptionConfig #:reference{:definitions "EncryptionConfig"}}}, :Operation {:description "An available operation for Data Lake Store.", :properties {:display #:reference{:definitions "OperationDisplay"}, :name {:description "The name of the operation.", :readOnly true, :type "string"}, :origin {:description "The intended executor of the operation.", :enum ["user" "system" "user,system"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "OperationOrigin"}}}}, :TrustedIdProviderProperties {:description "The trusted identity provider properties.", :properties {:idProvider {:description "The URL of this trusted identity provider.", :readOnly true, :type "string"}}}, :UpdateDataLakeStoreAccountParameters {:description "Data Lake Store account information to update.", :properties {:properties #:reference{:definitions "UpdateDataLakeStoreAccountProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}, :CreateOrUpdateFirewallRuleParameters {:description "The parameters used to create a new firewall rule.", :properties {:properties #:reference{:definitions "CreateOrUpdateFirewallRuleProperties"}}, :required ["properties"]}, :EncryptionConfig {:description "The encryption configuration for the account.", :properties {:keyVaultMetaInfo #:reference{:definitions "KeyVaultMetaInfo"}, :type {:description "The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.", :enum ["UserManaged" "ServiceManaged"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionConfigType"}}}, :required ["type"]}, :DataLakeStoreAccountPropertiesBasic {:description "The basic account specific properties that are associated with an underlying Data Lake Store account.", :properties {:accountId {:description "The unique identifier associated with this Data Lake Store account.", :format "uuid", :readOnly true, :type "string"}, :creationTime {:description "The account creation time.", :format "date-time", :readOnly true, :type "string"}, :endpoint {:description "The full CName endpoint for this account.", :readOnly true, :type "string"}, :lastModifiedTime {:description "The account last modified time.", :format "date-time", :readOnly true, :type "string"}, :provisioningState {:description "The provisioning status of the Data Lake Store account.", :enum ["Failed" "Creating" "Running" "Succeeded" "Patching" "Suspending" "Resuming" "Deleting" "Deleted" "Undeleting" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "DataLakeStoreAccountStatus"}}, :state {:description "The state of the Data Lake Store account.", :enum ["Active" "Suspended"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "DataLakeStoreAccountState"}}}}, :FirewallRuleListResult {:description "Data Lake Store firewall rule list information.", :properties {:nextLink {:description "The link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "The results of the list operation.", :items #:reference{:definitions "FirewallRule"}, :readOnly true, :type "array"}}}, :CreateDataLakeStoreAccountProperties {:properties {:trustedIdProviderState {:description "The current state of the trusted identity provider feature for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "TrustedIdProviderState"}}, :defaultGroup {:description "The default owner group for all new folders and files created in the Data Lake Store account.", :type "string"}, :newTier {:description "The commitment tier to use for next month.", :enum ["Consumption" "Commitment_1TB" "Commitment_10TB" "Commitment_100TB" "Commitment_500TB" "Commitment_1PB" "Commitment_5PB"], :type "string", :x-ms-enum {:modelAsString false, :name "TierType"}}, :firewallAllowAzureIps {:description "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "FirewallAllowAzureIpsState"}}, :firewallState {:description "The current state of the IP address firewall for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "FirewallState"}}, :encryptionState {:description "The current state of encryption for this Data Lake Store account.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionState"}}, :firewallRules {:description "The list of firewall rules associated with this Data Lake Store account.", :items #:reference{:definitions "CreateFirewallRuleWithAccountParameters"}, :type "array"}, :virtualNetworkRules {:description "The list of virtual network rules associated with this Data Lake Store account.", :items #:reference{:definitions "CreateVirtualNetworkRuleWithAccountParameters"}, :type "array"}, :trustedIdProviders {:description "The list of trusted identity providers associated with this Data Lake Store account.", :items #:reference{:definitions "CreateTrustedIdProviderWithAccountParameters"}, :type "array"}, :encryptionConfig #:reference{:definitions "EncryptionConfig"}}}, :UpdateTrustedIdProviderParameters {:description "The parameters used to update a trusted identity provider.", :properties {:properties #:reference{:definitions "UpdateTrustedIdProviderProperties"}}}, :VirtualNetworkRule {:allOf [#:reference{:definitions "SubResource"}], :description "Data Lake Store virtual network rule information.", :properties {:properties #:reference{:definitions "VirtualNetworkRuleProperties"}}}, :CreateTrustedIdProviderWithAccountParameters {:description "The parameters used to create a new trusted identity provider while creating a new Data Lake Store account.", :properties {:name {:description "The unique name of the trusted identity provider to create.", :type "string"}, :properties #:reference{:definitions "CreateOrUpdateTrustedIdProviderProperties"}}, :required ["name" "properties"]}, :UsageName {:description "The usage names that can be used.", :properties {:localizedValue {:description "Gets a localized string describing the resource name.", :readOnly true, :type "string"}, :value {:description "Gets a string describing the resource name.", :readOnly true, :type "string"}}}, :CreateDataLakeStoreAccountParameters {:properties {:identity #:reference{:definitions "EncryptionIdentity"}, :location {:description "The resource location.", :type "string"}, :properties #:reference{:definitions "CreateDataLakeStoreAccountProperties"}, :tags {:additionalProperties {:type "string"}, :description "The resource tags.", :type "object"}}, :required ["location"]}, :CreateOrUpdateTrustedIdProviderParameters {:description "The parameters used to create a new trusted identity provider.", :properties {:properties #:reference{:definitions "CreateOrUpdateTrustedIdProviderProperties"}}, :required ["properties"]}, :SubResource {:description "The resource model definition for a nested resource.", :properties {:id {:description "The resource identifier.", :readOnly true, :type "string"}, :name {:description "The resource name.", :readOnly true, :type "string"}, :type {:description "The resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :DataLakeStoreAccountListResult {:description "Data Lake Store account list information response.", :properties {:nextLink {:description "The link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "The results of the list operation.", :items #:reference{:definitions "DataLakeStoreAccountBasic"}, :readOnly true, :type "array"}}}, :EncryptionIdentity {:description "The encryption identity properties.", :properties {:principalId {:description "The principal identifier associated with the encryption.", :format "uuid", :readOnly true, :type "string"}, :tenantId {:description "The tenant identifier associated with the encryption.", :format "uuid", :readOnly true, :type "string"}, :type {:description "The type of encryption being used. Currently the only supported type is 'SystemAssigned'.", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionIdentityType"}}}, :required ["type"]}, :CreateOrUpdateFirewallRuleProperties {:description "The firewall rule properties to use when creating a new firewall rule.", :properties {:endIpAddress {:description "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :type "string"}, :startIpAddress {:description "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :type "string"}}, :required ["startIpAddress" "endIpAddress"]}, :CapabilityInformation {:description "Subscription-level properties and limits for Data Lake Store.", :properties {:accountCount {:description "The current number of accounts under this subscription.", :format "int32", :readOnly true, :type "integer"}, :maxAccountCount {:description "The maximum supported number of accounts under this subscription.", :format "int32", :readOnly true, :type "integer"}, :migrationState {:description "The Boolean value of true or false to indicate the maintenance state.", :readOnly true, :type "boolean"}, :state {:description "The subscription state.", :enum ["Registered" "Suspended" "Deleted" "Unregistered" "Warned"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "SubscriptionState"}}, :subscriptionId {:description "The subscription credentials that uniquely identifies the subscription.", :format "uuid", :readOnly true, :type "string"}}}, :FirewallRuleProperties {:description "The firewall rule properties.", :properties {:endIpAddress {:description "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :readOnly true, :type "string"}, :startIpAddress {:description "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :readOnly true, :type "string"}}}, :DataLakeStoreAccount {:allOf [#:reference{:definitions "Resource"}], :description "Data Lake Store account information.", :properties {:identity #:reference{:definitions "EncryptionIdentity"}, :properties #:reference{:definitions "DataLakeStoreAccountProperties"}}}, :UpdateVirtualNetworkRuleWithAccountParameters {:description "The parameters used to update a virtual network rule while updating a Data Lake Store account.", :properties {:name {:description "The unique name of the virtual network rule to update.", :type "string"}, :properties #:reference{:definitions "UpdateVirtualNetworkRuleProperties"}}, :required ["name"]}, :UpdateTrustedIdProviderWithAccountParameters {:description "The parameters used to update a trusted identity provider while updating a Data Lake Store account.", :properties {:name {:description "The unique name of the trusted identity provider to update.", :type "string"}, :properties #:reference{:definitions "UpdateTrustedIdProviderProperties"}}, :required ["name"]}, :Usage {:description "Describes the Resource Usage.", :properties {:currentValue {:description "Gets the current count of the allocated resources in the subscription.", :format "int32", :readOnly true, :type "integer"}, :id {:description "Resource identifier.", :readOnly true, :type "string"}, :limit {:description "Gets the maximum count of the resources that can be allocated in the subscription.", :format "int32", :readOnly true, :type "integer"}, :name #:reference{:definitions "UsageName"}, :unit {:description "Gets the unit of measurement.", :enum ["Count" "Bytes" "Seconds" "Percent" "CountsPerSecond" "BytesPerSecond"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "UsageUnit"}}}}, :UpdateKeyVaultMetaInfo {:description "The Key Vault update information used for user managed key rotation.", :properties {:encryptionKeyVersion {:description "The version of the user managed encryption key to update through a key rotation.", :type "string"}}}, :CreateOrUpdateVirtualNetworkRuleProperties {:description "The virtual network rule properties to use when creating a new virtual network rule.", :properties {:subnetId {:description "The resource identifier for the subnet.", :type "string"}}, :required ["subnetId"]}, :DataLakeStoreAccountBasic {:allOf [#:reference{:definitions "Resource"}], :description "Basic Data Lake Store account information, returned on list calls.", :properties {:properties #:reference{:definitions "DataLakeStoreAccountPropertiesBasic"}}}, :UpdateVirtualNetworkRuleProperties {:description "The virtual network rule properties to use when updating a virtual network rule.", :properties {:subnetId {:description "The resource identifier for the subnet.", :type "string"}}}, :UpdateTrustedIdProviderProperties {:description "The trusted identity provider properties to use when updating a trusted identity provider.", :properties {:idProvider {:description "The URL of this trusted identity provider.", :type "string"}}}, :NameAvailabilityInformation {:description "Data Lake Store account name availability result information.", :properties {:message {:description "The message describing why the Data Lake Store account name is not available, if nameAvailable is false.", :readOnly true, :type "string"}, :nameAvailable {:description "The Boolean value of true or false to indicate whether the Data Lake Store account name is available or not.", :readOnly true, :type "boolean"}, :reason {:description "The reason why the Data Lake Store account name is not available, if nameAvailable is false.", :readOnly true, :type "string"}}}, :UsageListResult {:description "The response from the List Usages operation.", :properties {:value {:description "Gets or sets the list of Storage Resource Usages.", :items #:reference{:definitions "Usage"}, :type "array"}}}, :CreateVirtualNetworkRuleWithAccountParameters {:description "The parameters used to create a new virtual network rule while creating a new Data Lake Store account.", :properties {:name {:description "The unique name of the virtual network rule to create.", :type "string"}, :properties #:reference{:definitions "CreateOrUpdateVirtualNetworkRuleProperties"}}, :required ["name" "properties"]}, :UpdateDataLakeStoreAccountProperties {:description "Data Lake Store account properties information to be updated.", :properties {:trustedIdProviderState {:description "The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "TrustedIdProviderState"}}, :defaultGroup {:description "The default owner group for all new folders and files created in the Data Lake Store account.", :type "string"}, :newTier {:description "The commitment tier to use for next month.", :enum ["Consumption" "Commitment_1TB" "Commitment_10TB" "Commitment_100TB" "Commitment_500TB" "Commitment_1PB" "Commitment_5PB"], :type "string", :x-ms-enum {:modelAsString false, :name "TierType"}}, :firewallAllowAzureIps {:description "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "FirewallAllowAzureIpsState"}}, :firewallState {:description "The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "FirewallState"}}, :firewallRules {:description "The list of firewall rules associated with this Data Lake Store account.", :items #:reference{:definitions "UpdateFirewallRuleWithAccountParameters"}, :type "array"}, :virtualNetworkRules {:description "The list of virtual network rules associated with this Data Lake Store account.", :items #:reference{:definitions "UpdateVirtualNetworkRuleWithAccountParameters"}, :type "array"}, :trustedIdProviders {:description "The list of trusted identity providers associated with this Data Lake Store account.", :items #:reference{:definitions "UpdateTrustedIdProviderWithAccountParameters"}, :type "array"}, :encryptionConfig #:reference{:definitions "UpdateEncryptionConfig"}}}, :VirtualNetworkRuleProperties {:description "The virtual network rule properties.", :properties {:subnetId {:description "The resource identifier for the subnet.", :readOnly true, :type "string"}}}, :CreateFirewallRuleWithAccountParameters {:description "The parameters used to create a new firewall rule while creating a new Data Lake Store account.", :properties {:name {:description "The unique name of the firewall rule to create.", :type "string"}, :properties #:reference{:definitions "CreateOrUpdateFirewallRuleProperties"}}, :required ["name" "properties"]}, :UpdateFirewallRuleParameters {:description "The parameters used to update a firewall rule.", :properties {:properties #:reference{:definitions "UpdateFirewallRuleProperties"}}}, :UpdateFirewallRuleWithAccountParameters {:description "The parameters used to update a firewall rule while updating a Data Lake Store account.", :properties {:name {:description "The unique name of the firewall rule to update.", :type "string"}, :properties #:reference{:definitions "UpdateFirewallRuleProperties"}}, :required ["name"]}, :Resource {:description "The resource model definition.", :properties {:id {:description "The resource identifier.", :readOnly true, :type "string"}, :location {:description "The resource location.", :readOnly true, :type "string"}, :name {:description "The resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The resource tags.", :readOnly true, :type "object"}, :type {:description "The resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :OperationDisplay {:description "The display information for a particular operation.", :properties {:description {:description "A friendly description of the operation.", :readOnly true, :type "string"}, :operation {:description "A friendly name of the operation.", :readOnly true, :type "string"}, :provider {:description "The resource provider of the operation.", :readOnly true, :type "string"}, :resource {:description "The resource type of the operation.", :readOnly true, :type "string"}}}, :KeyVaultMetaInfo {:description "Metadata information used by account encryption.", :properties {:encryptionKeyName {:description "The name of the user managed encryption key.", :type "string"}, :encryptionKeyVersion {:description "The version of the user managed encryption key.", :type "string"}, :keyVaultResourceId {:description "The resource identifier for the user managed Key Vault being used to encrypt.", :type "string"}}, :required ["keyVaultResourceId" "encryptionKeyName" "encryptionKeyVersion"]}, :VirtualNetworkRuleListResult {:description "Data Lake Store virtual network rule list information.", :properties {:nextLink {:description "The link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "The results of the list operation.", :items #:reference{:definitions "VirtualNetworkRule"}, :readOnly true, :type "array"}}}, :CheckNameAvailabilityParameters {:description "Data Lake Store account name availability check parameters.", :properties {:name {:description "The Data Lake Store name to check availability for.", :type "string"}, :type {:description "The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeStore/accounts", :enum ["Microsoft.DataLakeStore/accounts"], :type "string"}}, :required ["name" "type"]}, :UpdateFirewallRuleProperties {:description "The firewall rule properties to use when updating a firewall rule.", :properties {:endIpAddress {:description "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :type "string"}, :startIpAddress {:description "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.", :type "string"}}}, :CreateOrUpdateVirtualNetworkRuleParameters {:description "The parameters used to create a new virtual network rule.", :properties {:properties #:reference{:definitions "CreateOrUpdateVirtualNetworkRuleProperties"}}, :required ["properties"]}}}