{:scheme "https", :host "management.azure.com", :info {:description "Azure Cosmos DB Database Service Resource Provider REST API", :title "Cosmos DB", :version "2019-08-01"}, :ops {:DatabaseAccounts_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts", :description "Lists all the Azure Cosmos DB database accounts available under the given resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :MongoDBResources_UpdateMongoDBCollectionThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default", :description "Update the RUs per second of an Azure Cosmos DB MongoDB collection", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "collectionNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current MongoDB collection.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :TableResources_CreateUpdateTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}", :description "Create or update an Azure Cosmos DB Table", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current Table.", :in "body", :name "createUpdateTableParameters", :required true, :schema #:reference{:definitions "TableCreateUpdateParameters"}}], :verb :put}, :CassandraResources_DeleteCassandraTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}", :description "Deletes an existing Azure Cosmos DB Cassandra table.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :PartitionKeyRangeIdRegion_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics", :description "Retrieves the metrics determined by the given filter for the given partition key range id and region.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "regionParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "partitionKeyRangeIdParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :DatabaseAccounts_ListReadOnlyKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys", :description "Lists the read-only access keys for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :MongoDBResources_GetMongoDBDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}", :description "Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_ListCassandraTables {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables", :description "Lists the Cassandra table under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DatabaseAccounts_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}", :description "Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates on an account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current database account.", :in "body", :name "createUpdateParameters", :required true, :schema #:reference{:definitions "DatabaseAccountCreateUpdateParameters"}}], :verb :put}, :DatabaseAccounts_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}", :description "Updates the properties of an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current database account.", :in "body", :name "updateParameters", :required true, :schema #:reference{:definitions "DatabaseAccountUpdateParameters"}}], :verb :patch}, :Database_ListUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/usages", :description "Retrieves the usages (most recent data) for the given database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "usageFilterParameter"}], :verb :get}, :DatabaseAccountRegion_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/metrics", :description "Retrieves the metrics determined by the given filter for the given database account and region.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "regionParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :MongoDBResources_GetMongoDBCollection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}", :description "Gets the MongoDB collection under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "collectionNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GremlinResources_GetGremlinGraph {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}", :description "Gets the Gremlin graph under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "graphNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_ListSqlDatabases {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases", :description "Lists the SQL databases under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_ListSqlUserDefinedFunctions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions", :description "Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_GetCassandraKeyspace {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}", :description "Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_GetSqlContainerThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default", :description "Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GremlinResources_UpdateGremlinDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB Gremlin database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current Gremlin database.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :DatabaseAccounts_GetReadOnlyKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys", :description "Lists the read-only access keys for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_GetSqlDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}", :description "Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_GetCassandraTableThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default", :description "Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_DeleteSqlTrigger {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}", :description "Deletes an existing Azure Cosmos DB SQL trigger.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "triggerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DatabaseAccounts_ListUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/usages", :description "Retrieves the usages (most recent data) for the given database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "usageFilterParameter"}], :verb :get}, :SqlResources_ListSqlContainers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers", :description "Lists the SQL container under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :TableResources_DeleteTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}", :description "Deletes an existing Azure Cosmos DB Table.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Database_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metrics", :description "Retrieves the metrics determined by the given filter for the given database account and database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :CassandraResources_GetCassandraTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}", :description "Gets the Cassandra table under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Collection_ListMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metricDefinitions", :description "Retrieves metric definitions for the given collection.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_CreateUpdateSqlTrigger {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}", :description "Create or update an Azure Cosmos DB SQL trigger", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "triggerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current SQL trigger.", :in "body", :name "createUpdateSqlTriggerParameters", :required true, :schema #:reference{:definitions "SqlTriggerCreateUpdateParameters"}}], :verb :put}, :Collection_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metrics", :description "Retrieves the metrics determined by the given filter for the given database account and collection.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :DatabaseAccounts_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}", :description "Retrieves the properties of an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_UpdateSqlDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB SQL database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the RUs per second of the current SQL database.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :MongoDBResources_DeleteMongoDBCollection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}", :description "Deletes an existing Azure Cosmos DB MongoDB Collection.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "collectionNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :SqlResources_CreateUpdateSqlUserDefinedFunction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}", :description "Create or update an Azure Cosmos DB SQL userDefinedFunction", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "userDefinedFunctionNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current SQL userDefinedFunction.", :in "body", :name "createUpdateSqlUserDefinedFunctionParameters", :required true, :schema #:reference{:definitions "SqlUserDefinedFunctionCreateUpdateParameters"}}], :verb :put}, :SqlResources_DeleteSqlContainer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}", :description "Deletes an existing Azure Cosmos DB SQL container.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DatabaseAccounts_FailoverPriorityChange {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange", :description "Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The new failover policies for the database account.", :in "body", :name "failoverParameters", :required true, :schema #:reference{:definitions "FailoverPolicies"}}], :verb :post}, :DatabaseAccounts_OnlineRegion {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/onlineRegion", :description "Online the specified region for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Cosmos DB region to online for the database account.", :in "body", :name "regionParameterForOnline", :required true, :schema #:reference{:definitions "RegionForOnlineOffline"}}], :verb :post}, :DatabaseAccounts_ListConnectionStrings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings", :description "Lists the connection strings for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :DatabaseAccounts_OfflineRegion {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/offlineRegion", :description "Offline the specified region for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Cosmos DB region to offline for the database account.", :in "body", :name "regionParameterForOffline", :required true, :schema #:reference{:definitions "RegionForOnlineOffline"}}], :verb :post}, :PartitionKeyRangeId_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics", :description "Retrieves the metrics determined by the given filter for the given partition key range id.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "partitionKeyRangeIdParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :SqlResources_GetSqlStoredProcedure {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}", :description "Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "storedProcedureNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_CreateUpdateSqlDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}", :description "Create or update an Azure Cosmos DB SQL database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current SQL database.", :in "body", :name "createUpdateSqlDatabaseParameters", :required true, :schema #:reference{:definitions "SqlDatabaseCreateUpdateParameters"}}], :verb :put}, :GremlinResources_GetGremlinGraphThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default", :description "Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "graphNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_DeleteSqlDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}", :description "Deletes an existing Azure Cosmos DB SQL database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Database_ListMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metricDefinitions", :description "Retrieves metric definitions for the given database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_UpdateCassandraKeyspaceThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB Cassandra Keyspace", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current Cassandra Keyspace.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :TableResources_ListTables {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables", :description "Lists the Tables under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_UpdateSqlContainerThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB SQL container", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the RUs per second of the current SQL container.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :MongoDBResources_CreateUpdateMongoDBDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}", :description "Create or updates Azure Cosmos DB MongoDB database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current MongoDB database.", :in "body", :name "createUpdateMongoDBDatabaseParameters", :required true, :schema #:reference{:definitions "MongoDBDatabaseCreateUpdateParameters"}}], :verb :put}, :DatabaseAccounts_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metrics", :description "Retrieves the metrics determined by the given filter for the given database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :CassandraResources_UpdateCassandraTableThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB Cassandra table", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current Cassandra table.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :PercentileTarget_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/targetRegion/{targetRegion}/percentile/metrics", :description "Retrieves the metrics determined by the given filter for the given account target region. This url is only for PBS and Replication Latency data", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "targetRegionParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :CassandraResources_CreateUpdateCassandraTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}", :description "Create or update an Azure Cosmos DB Cassandra Table", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current Cassandra Table.", :in "body", :name "createUpdateCassandraTableParameters", :required true, :schema #:reference{:definitions "CassandraTableCreateUpdateParameters"}}], :verb :put}, :GremlinResources_UpdateGremlinGraphThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB Gremlin graph", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "graphNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current Gremlin graph.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :SqlResources_CreateUpdateSqlStoredProcedure {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}", :description "Create or update an Azure Cosmos DB SQL storedProcedure", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "storedProcedureNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current SQL storedProcedure.", :in "body", :name "createUpdateSqlStoredProcedureParameters", :required true, :schema #:reference{:definitions "SqlStoredProcedureCreateUpdateParameters"}}], :verb :put}, :SqlResources_GetSqlUserDefinedFunction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}", :description "Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "userDefinedFunctionNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :TableResources_GetTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}", :description "Gets the Tables under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :MongoDBResources_GetMongoDBCollectionThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default", :description "Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "collectionNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_DeleteSqlUserDefinedFunction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}", :description "Deletes an existing Azure Cosmos DB SQL userDefinedFunction.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "userDefinedFunctionNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Percentile_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/percentile/metrics", :description "Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and Replication Latency data", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :CassandraResources_CreateUpdateCassandraKeyspace {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}", :description "Create or update an Azure Cosmos DB Cassandra keyspace", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current Cassandra keyspace.", :in "body", :name "createUpdateCassandraKeyspaceParameters", :required true, :schema #:reference{:definitions "CassandraKeyspaceCreateUpdateParameters"}}], :verb :put}, :MongoDBResources_UpdateMongoDBDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default", :description "Update RUs per second of the an Azure Cosmos DB MongoDB database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The RUs per second of the parameters to provide for the current MongoDB database.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :GremlinResources_ListGremlinGraphs {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs", :description "Lists the Gremlin graph under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CollectionPartition_ListUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/usages", :description "Retrieves the usages (most recent storage data) for the given collection, split by partition.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "usageFilterParameter"}], :verb :get}, :GremlinResources_CreateUpdateGremlinDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}", :description "Create or update an Azure Cosmos DB Gremlin database", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current Gremlin database.", :in "body", :name "createUpdateGremlinDatabaseParameters", :required true, :schema #:reference{:definitions "GremlinDatabaseCreateUpdateParameters"}}], :verb :put}, :Collection_ListUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/usages", :description "Retrieves the usages (most recent storage data) for the given collection.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "usageFilterParameter"}], :verb :get}, :GremlinResources_GetGremlinDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default", :description "Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :MongoDBResources_ListMongoDBDatabases {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases", :description "Lists the MongoDB databases under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_ListCassandraKeyspaces {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces", :description "Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_DeleteCassandraKeyspace {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}", :description "Deletes an existing Azure Cosmos DB Cassandra keyspace.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :GremlinResources_CreateUpdateGremlinGraph {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}", :description "Create or update an Azure Cosmos DB Gremlin graph", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "graphNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current Gremlin graph.", :in "body", :name "createUpdateGremlinGraphParameters", :required true, :schema #:reference{:definitions "GremlinGraphCreateUpdateParameters"}}], :verb :put}, :DatabaseAccounts_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts", :description "Lists all the Azure Cosmos DB database accounts available under the subscription.", :parameters [#:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :DatabaseAccounts_ListMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metricDefinitions", :description "Retrieves metric definitions for the given database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GremlinResources_GetGremlinDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}", :description "Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CassandraResources_GetCassandraKeyspaceThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default", :description "Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "keyspaceNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GremlinResources_DeleteGremlinDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}", :description "Deletes an existing Azure Cosmos DB Gremlin database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :MongoDBResources_GetMongoDBDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default", :description "Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DatabaseAccounts_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}", :description "Deletes an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :GremlinResources_DeleteGremlinGraph {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}", :description "Deletes an existing Azure Cosmos DB Gremlin graph.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "graphNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :CollectionPartition_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics", :description "Retrieves the metrics determined by the given filter for the given collection, split by partition.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :TableResources_UpdateTableThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default", :description "Update RUs per second of an Azure Cosmos DB Table", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the RUs per second of the current Table.", :in "body", :name "updateThroughputParameters", :required true, :schema #:reference{:definitions "ThroughputSettingsUpdateParameters"}}], :verb :put}, :SqlResources_CreateUpdateSqlContainer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}", :description "Create or update an Azure Cosmos DB SQL container", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current SQL container.", :in "body", :name "createUpdateSqlContainerParameters", :required true, :schema #:reference{:definitions "SqlContainerCreateUpdateParameters"}}], :verb :put}, :SqlResources_ListSqlTriggers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers", :description "Lists the SQL trigger under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DatabaseAccounts_CheckNameExists {:path "/providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}", :description "Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 50 characters.", :parameters [#:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :head}, :SqlResources_GetSqlContainer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}", :description "Gets the SQL container under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_DeleteSqlStoredProcedure {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}", :description "Deletes an existing Azure Cosmos DB SQL storedProcedure.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "storedProcedureNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :CollectionPartitionRegion_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics", :description "Retrieves the metrics determined by the given filter for the given collection and region, split by partition.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "regionParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :GremlinResources_ListGremlinDatabases {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases", :description "Lists the Gremlin databases under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CollectionRegion_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/metrics", :description "Retrieves the metrics determined by the given filter for the given database account, collection and region.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "regionParameter"} #:reference{:parameters "databaseRidParameter"} #:reference{:parameters "collectionRidParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :TableResources_GetTableThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default", :description "Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "tableNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_ListSqlStoredProcedures {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures", :description "Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :SqlResources_GetSqlDatabaseThroughput {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default", :description "Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.DocumentDB/operations", :description "Lists all of the available Cosmos DB Resource Provider operations.", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :MongoDBResources_CreateUpdateMongoDBCollection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}", :description "Create or update an Azure Cosmos DB MongoDB Collection", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "collectionNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The parameters to provide for the current MongoDB Collection.", :in "body", :name "createUpdateMongoDBCollectionParameters", :required true, :schema #:reference{:definitions "MongoDBCollectionCreateUpdateParameters"}}], :verb :put}, :SqlResources_GetSqlTrigger {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}", :description "Gets the SQL trigger under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "containerNameParameter"} #:reference{:parameters "triggerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :MongoDBResources_DeleteMongoDBDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}", :description "Deletes an existing Azure Cosmos DB MongoDB database.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DatabaseAccounts_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey", :description "Regenerates an access key for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "The name of the key to regenerate.", :in "body", :name "keyToRegenerate", :required true, :schema #:reference{:definitions "DatabaseAccountRegenerateKeyParameters"}}], :verb :post}, :PercentileSourceTarget_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sourceRegion/{sourceRegion}/targetRegion/{targetRegion}/percentile/metrics", :description "Retrieves the metrics determined by the given filter for the given account, source and target region. This url is only for PBS and Replication Latency data", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "sourceRegionParameter"} #:reference{:parameters "targetRegionParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "filterParameter"}], :verb :get}, :DatabaseAccounts_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys", :description "Lists the access keys for the specified Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :MongoDBResources_ListMongoDBCollections {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections", :description "Lists the MongoDB collection under an existing Azure Cosmos DB database account.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "accountNameParameter"} #:reference{:parameters "databaseNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}}, :parameters {:userDefinedFunctionNameParameter {:description "Cosmos DB userDefinedFunction name.", :in "path", :name "userDefinedFunctionName", :required true, :type "string", :x-ms-parameter-location "method"}, :tableNameParameter {:description "Cosmos DB table name.", :in "path", :name "tableName", :required true, :type "string", :x-ms-parameter-location "method"}, :accountNameParameter {:description "Cosmos DB database account name.", :name "accountName", :type "string", :minLength 3, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-z0-9]+(-[a-z0-9]+)*"}, :targetRegionParameter {:description "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized.", :in "path", :name "targetRegion", :required true, :type "string", :x-ms-parameter-location "method"}, :sourceRegionParameter {:description "Source region from which data is written. Cosmos DB region, with spaces between words and each word capitalized.", :in "path", :name "sourceRegion", :required true, :type "string", :x-ms-parameter-location "method"}, :storedProcedureNameParameter {:description "Cosmos DB storedProcedure name.", :in "path", :name "storedProcedureName", :required true, :type "string", :x-ms-parameter-location "method"}, :regionParameter {:description "Cosmos DB region, with spaces between words and each word capitalized.", :in "path", :name "region", :required true, :type "string", :x-ms-parameter-location "method"}, :collectionRidParameter {:description "Cosmos DB collection rid.", :in "path", :name "collectionRid", :required true, :type "string", :x-ms-parameter-location "method"}, :partitionKeyRangeIdParameter {:description "Partition Key Range Id for which to get data.", :in "path", :name "partitionKeyRangeId", :required true, :type "string", :x-ms-parameter-location "method"}, :containerNameParameter {:description "Cosmos DB container name.", :in "path", :name "containerName", :required true, :type "string", :x-ms-parameter-location "method"}, :keyspaceNameParameter {:description "Cosmos DB keyspace name.", :in "path", :name "keyspaceName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "Name of an Azure resource group.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"}, :graphNameParameter {:description "Cosmos DB graph name.", :in "path", :name "graphName", :required true, :type "string", :x-ms-parameter-location "method"}, :triggerNameParameter {:description "Cosmos DB trigger name.", :in "path", :name "triggerName", :required true, :type "string", :x-ms-parameter-location "method"}, :apiVersionParameter {:description "Version of the API to be used with the client request. The current version is 2019-08-01.", :in "query", :name "api-version", :required true, :type "string"}, :subscriptionIdParameter {:description "Azure subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}, :collectionNameParameter {:description "Cosmos DB collection name.", :in "path", :name "collectionName", :required true, :type "string", :x-ms-parameter-location "method"}, :filterParameter {:description "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.", :in "query", :name "$filter", :required true, :type "string", :x-ms-parameter-location "method"}, :usageFilterParameter {:description "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).", :in "query", :name "$filter", :required false, :type "string", :x-ms-parameter-location "method"}, :databaseNameParameter {:description "Cosmos DB database name.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :databaseRidParameter {:description "Cosmos DB database rid.", :in "path", :name "databaseRid", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:GremlinGraphGetProperties {:description "The properties of an Azure Cosmos DB Gremlin graph", :properties {:resource {:allOf [#:reference{:definitions "GremlinGraphResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :MetricDefinition {:description "The definition of a metric.", :properties {:metricAvailabilities {:description "The list of metric availabilities for the account.", :items #:reference{:definitions "MetricAvailability"}, :readOnly true, :type "array"}, :name #:reference{:definitions "MetricName"}, :primaryAggregationType {:description "The primary aggregation type of the metric.", :enum ["None" "Average" "Total" "Minimum" "Maximum" "Last"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "PrimaryAggregationType"}}, :resourceUri {:description "The resource uri of the database.", :readOnly true, :type "string"}, :unit #:reference{:definitions "UnitType"}}}, :GremlinGraphListResult {:description "The List operation response, that contains the graphs and their properties.", :properties {:value {:description "List of graphs and their properties.", :items #:reference{:definitions "GremlinGraphGetResults"}, :readOnly true, :type "array"}}}, :CassandraKeyspaceListResult {:description "The List operation response, that contains the Cassandra keyspaces and their properties.", :properties {:value {:description "List of Cassandra keyspaces and their properties.", :items #:reference{:definitions "CassandraKeyspaceGetResults"}, :readOnly true, :type "array"}}}, :SqlContainerCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB container.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "SqlContainerResource"}}, :required ["resource" "options"], :type "object"}, :CompositePath {:properties {:order {:description "Sort order for composite paths.", :enum ["Ascending" "Descending"], :type "string", :x-ms-enum {:modelAsString true, :name "CompositePathSortOrder"}}, :path {:description "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)", :type "string"}}, :type "object"}, :PartitionUsagesResult {:description "The response to a list partition level usage request.", :properties {:value {:description "The list of partition-level usages for the database. A usage is a point in time metric", :items #:reference{:definitions "PartitionUsage"}, :readOnly true, :type "array"}}}, :TableResource {:description "Cosmos DB table resource object", :properties {:id {:description "Name of the Cosmos DB table", :type "string"}}, :required ["id"], :type "object"}, :PartitionMetricListResult {:description "The response to a list partition metrics request.", :properties {:value {:description "The list of partition-level metrics for the account.", :items #:reference{:definitions "PartitionMetric"}, :readOnly true, :type "array"}}}, :SqlUserDefinedFunctionCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB userDefinedFunction.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "SqlUserDefinedFunctionResource"}}, :required ["resource" "options"], :type "object"}, :SqlDatabaseGetProperties {:description "The properties of an Azure Cosmos DB SQL database", :properties {:resource {:allOf [#:reference{:definitions "SqlDatabaseResource"} #:reference{:definitions "ExtendedResourceProperties"}], :properties {"_colls" {:description "A system generated property that specified the addressable path of the collections resource.", :type "string"}, "_users" {:description "A system generated property that specifies the addressable path of the users resource.", :type "string"}}}}, :type "object"}, :GremlinDatabaseResource {:description "Cosmos DB Gremlin database resource object", :properties {:id {:description "Name of the Cosmos DB Gremlin database", :type "string"}}, :required ["id"], :type "object"}, :SqlContainerListResult {:description "The List operation response, that contains the containers and their properties.", :properties {:value {:description "List of containers and their properties.", :items #:reference{:definitions "SqlContainerGetResults"}, :readOnly true, :type "array"}}}, :SqlDatabaseCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB SQL database.", :properties {:properties #:reference{:definitions "SqlDatabaseCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :OperationListResult {:description "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :type "string"}, :value {:description "List of operations supported by the Resource Provider.", :items #:reference{:definitions "Operation"}, :type "array"}}}, :Indexes {:description "The indexes for the path.", :properties {:dataType {:default "String", :description "The datatype for which the indexing behavior is applied to.", :enum ["String" "Number" "Point" "Polygon" "LineString" "MultiPolygon"], :type "string", :x-ms-enum {:modelAsString true, :name "DataType"}}, :kind {:default "Hash", :description "Indicates the type of index.", :enum ["Hash" "Range" "Spatial"], :type "string", :x-ms-enum {:modelAsString true, :name "IndexKind"}}, :precision {:description "The precision of the index. -1 is maximum precision.", :type "integer"}}, :type "object"}, :GremlinGraphCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB Gremlin graph.", :properties {:properties #:reference{:definitions "GremlinGraphCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :Path {:description "A path. These typically start with root (/path)", :type "string"}, :SqlStoredProcedureGetProperties {:description "The properties of an Azure Cosmos DB StoredProcedure", :properties {:resource {:allOf [#:reference{:definitions "SqlStoredProcedureResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :SqlContainerGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB container.", :properties {:properties #:reference{:definitions "SqlContainerGetProperties"}}, :type "object"}, :SqlStoredProcedureCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB storedProcedure.", :properties {:properties #:reference{:definitions "SqlStoredProcedureCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :ARMResourceProperties {:description "The core properties of ARM resources.", :properties {:id {:description "The unique resource identifier of the ARM resource.", :readOnly true, :type "string"}, :location {:description "The location of the resource group to which the resource belongs.", :type "string"}, :name {:description "The name of the ARM resource.", :readOnly true, :type "string"}, :tags #:reference{:definitions "Tags"}, :type {:description "The type of Azure resource.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :SqlStoredProcedureCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB storedProcedure.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "SqlStoredProcedureResource"}}, :required ["resource" "options"], :type "object"}, :UsagesResult {:description "The response to a list usage request.", :properties {:value {:description "The list of usages for the database. A usage is a point in time metric", :items #:reference{:definitions "Usage"}, :readOnly true, :type "array"}}}, :SqlTriggerGetProperties {:description "The properties of an Azure Cosmos DB trigger", :properties {:resource {:allOf [#:reference{:definitions "SqlTriggerResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :CassandraKeyspaceGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB Cassandra keyspace.", :properties {:properties #:reference{:definitions "CassandraKeyspaceGetProperties"}}, :type "object"}, :SqlContainerGetProperties {:description "The properties of an Azure Cosmos DB container", :properties {:resource {:allOf [#:reference{:definitions "SqlContainerResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :Operation {:description "REST API operation", :properties {:display {:description "The object that represents the operation.", :properties {:Description {:description "Description of operation", :type "string"}, :Operation {:description "Operation type: Read, write, delete, etc.", :type "string"}, :Provider {:description "Service provider: Microsoft.ResourceProvider", :type "string"}, :Resource {:description "Resource on which the operation is performed: Profile, endpoint, etc.", :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :type "string"}}, :type "object"}, :ProvisioningState {:description "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation.", :readOnly true, :type "string"}, :MongoDBCollectionListResult {:description "The List operation response, that contains the MongoDB collections and their properties.", :properties {:value {:description "List of MongoDB collections and their properties.", :items #:reference{:definitions "MongoDBCollectionGetResults"}, :readOnly true, :type "array"}}}, :SqlUserDefinedFunctionListResult {:description "The List operation response, that contains the userDefinedFunctions and their properties.", :properties {:value {:description "List of userDefinedFunctions and their properties.", :items #:reference{:definitions "SqlUserDefinedFunctionGetResults"}, :readOnly true, :type "array"}}}, :SqlUserDefinedFunctionGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB userDefinedFunction.", :properties {:properties #:reference{:definitions "SqlUserDefinedFunctionGetProperties"}}, :type "object"}, :CassandraKeyspaceCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB Cassandra keyspace.", :properties {:properties #:reference{:definitions "CassandraKeyspaceCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :MetricAvailability {:description "The availability of the metric.", :properties {:retention {:description "The retention for the metric values.", :readOnly true, :type "string"}, :timeGrain {:description "The time grain to be used to summarize the metric values.", :readOnly true, :type "string"}}}, :MetricListResult {:description "The response to a list metrics request.", :properties {:value {:description "The list of metrics for the account.", :items #:reference{:definitions "Metric"}, :readOnly true, :type "array"}}}, :SqlDatabaseGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB SQL database.", :properties {:properties #:reference{:definitions "SqlDatabaseGetProperties"}}, :type "object"}, :CassandraTableCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB Cassandra table.", :properties {:properties #:reference{:definitions "CassandraTableCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :UnitType {:description "The unit of the metric.", :enum ["Count" "Bytes" "Seconds" "Percent" "CountPerSecond" "BytesPerSecond" "Milliseconds"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "UnitType"}}, :SqlDatabaseCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB SQL database.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "SqlDatabaseResource"}}, :required ["resource" "options"], :type "object"}, :Key {:description "A Key.", :type "string"}, :CassandraTableGetProperties {:description "The properties of an Azure Cosmos DB Cassandra table", :properties {:resource {:allOf [#:reference{:definitions "CassandraTableResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :PercentileMetric {:description "Percentile Metric data", :properties {:endTime {:description "The end time for the metric (ISO-8601 format).", :format "date-time", :readOnly true, :type "string"}, :metricValues {:description "The percentile metric values for the specified time window and timestep.", :items #:reference{:definitions "PercentileMetricValue"}, :readOnly true, :type "array"}, :name #:reference{:definitions "MetricName"}, :startTime {:description "The start time for the metric (ISO-8601 format).", :format "date-time", :readOnly true, :type "string"}, :timeGrain {:description "The time grain to be used to summarize the metric values.", :readOnly true, :type "string"}, :unit #:reference{:definitions "UnitType"}}}, :VirtualNetworkRule {:description "Virtual Network ACL Rule object", :properties {:id {:description "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.", :type "string"}, :ignoreMissingVNetServiceEndpoint {:description "Create firewall rule before the virtual network has vnet service endpoint enabled.", :type "boolean"}}, :type "object"}, :Tags {:additionalProperties {:type "string"}, :description "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".", :type "object"}, :ExcludedPath {:properties {:path {:description "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)", :type "string"}}, :type "object"}, :ConflictResolutionPolicy {:description "The conflict resolution policy for the container.", :properties {:conflictResolutionPath {:description "The conflict resolution path in the case of LastWriterWins mode.", :type "string"}, :conflictResolutionProcedure {:description "The procedure to resolve conflicts in the case of custom mode.", :type "string"}, :mode {:default "LastWriterWins", :description "Indicates the conflict resolution mode.", :enum ["LastWriterWins" "Custom"], :type "string", :x-ms-enum {:modelAsString true, :name "ConflictResolutionMode"}}}, :type "object"}, :DatabaseAccountUpdateParameters {:description "Parameters for patching Azure Cosmos DB database account properties.", :properties {:location {:description "The location of the resource group to which the resource belongs.", :type "string"}, :properties #:reference{:definitions "DatabaseAccountUpdateProperties"}, :tags #:reference{:definitions "Tags"}}, :type "object"}, :SqlStoredProcedureListResult {:description "The List operation response, that contains the storedProcedures and their properties.", :properties {:value {:description "List of storedProcedures and their properties.", :items #:reference{:definitions "SqlStoredProcedureGetResults"}, :readOnly true, :type "array"}}}, :DatabaseAccountOfferType {:description "The offer type for the Cosmos DB database account.", :enum ["Standard"], :type "string", :x-ms-enum {:modelAsString false, :name "DatabaseAccountOfferType"}}, :ThroughputSettingsGetProperties {:description "The properties of an Azure Cosmos DB resource throughput", :properties {:resource {:allOf [#:reference{:definitions "ThroughputSettingsResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :PercentileMetricListResult {:description "The response to a list percentile metrics request.", :properties {:value {:description "The list of percentile metrics for the account.", :items #:reference{:definitions "PercentileMetric"}, :readOnly true, :type "array"}}}, :CassandraKeyspaceResource {:description "Cosmos DB Cassandra keyspace resource object", :properties {:id {:description "Name of the Cosmos DB Cassandra keyspace", :type "string"}}, :required ["id"], :type "object"}, :DatabaseAccountGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB database account.", :properties {:kind {:default "GlobalDocumentDB", :description "Indicates the type of database account. This can only be set at database account creation.", :enum ["GlobalDocumentDB" "MongoDB" "Parse"], :type "string", :x-ms-enum {:modelAsString true, :name "DatabaseAccountKind"}}, :properties #:reference{:definitions "DatabaseAccountGetProperties"}}, :type "object"}, :SqlUserDefinedFunctionCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB userDefinedFunction.", :properties {:properties #:reference{:definitions "SqlUserDefinedFunctionCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :SqlStoredProcedureGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB storedProcedure.", :properties {:properties #:reference{:definitions "SqlStoredProcedureGetProperties"}}, :type "object"}, :MetricValue {:description "Represents metrics values.", :properties {"_count" {:description "The number of values for the metric.", :format "int32", :readOnly true, :type "number"}, :average {:description "The average value of the metric.", :format "double", :readOnly true, :type "number"}, :maximum {:description "The max value of the metric.", :format "double", :readOnly true, :type "number"}, :minimum {:description "The min value of the metric.", :format "double", :readOnly true, :type "number"}, :timestamp {:description "The metric timestamp (ISO-8601 format).", :format "date-time", :readOnly true, :type "string"}, :total {:description "The total value of the metric.", :format "double", :readOnly true, :type "number"}}}, :ThroughputSettingsUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to update Cosmos DB resource throughput.", :properties {:properties #:reference{:definitions "ThroughputSettingsUpdateProperties"}}, :required ["properties"], :type "object"}, :MongoIndexKeys {:description "Cosmos DB MongoDB collection resource object", :properties {:keys {:description "List of keys for each MongoDB collection in the Azure Cosmos DB service", :items #:reference{:definitions "Key"}, :type "array"}}, :type "object"}, :MongoDBDatabaseGetProperties {:description "The properties of an Azure Cosmos DB MongoDB database", :properties {:resource {:allOf [#:reference{:definitions "MongoDBDatabaseResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :DatabaseAccountsListResult {:description "The List operation response, that contains the database accounts and their properties.", :properties {:value {:description "List of database account and their properties.", :items #:reference{:definitions "DatabaseAccountGetResults"}, :readOnly true, :type "array"}}}, :MongoDBDatabaseListResult {:description "The List operation response, that contains the MongoDB databases and their properties.", :properties {:value {:description "List of MongoDB databases and their properties.", :items #:reference{:definitions "MongoDBDatabaseGetResults"}, :readOnly true, :type "array"}}}, :MongoIndexOptions {:description "Cosmos DB MongoDB collection index options", :properties {:expireAfterSeconds {:description "Expire after seconds", :type "integer"}, :unique {:description "Is unique or not", :type "boolean"}}, :type "object"}, :DatabaseAccountCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB database accounts.", :properties {:isVirtualNetworkFilterEnabled {:description "Flag to indicate whether to enable/disable Virtual Network ACL rules.", :type "boolean"}, :connectorOffer #:reference{:definitions "ConnectorOffer"}, :capabilities {:description "List of Cosmos DB capabilities for the account", :items #:reference{:definitions "Capability"}, :type "array"}, :enableAutomaticFailover {:description "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.", :type "boolean"}, :databaseAccountOfferType #:reference{:definitions "DatabaseAccountOfferType"}, :consistencyPolicy #:reference{:definitions "ConsistencyPolicy"}, :locations {:description "An array that contains the georeplication locations enabled for the Cosmos DB account.", :items #:reference{:definitions "Location"}, :type "array"}, :ipRangeFilter #:reference{:definitions "IPRangeFilter"}, :disableKeyBasedMetadataWriteAccess {:description "Disable write operations on metadata resources (databases, containers, throughput) via account keys", :type "boolean"}, :enableCassandraConnector {:description "Enables the cassandra connector on the Cosmos DB C* account", :type "boolean"}, :virtualNetworkRules {:description "List of Virtual Network ACL rules configured for the Cosmos DB account.", :items #:reference{:definitions "VirtualNetworkRule"}, :type "array"}, :enableMultipleWriteLocations {:description "Enables the account to write in multiple locations", :type "boolean"}}, :required ["locations" "databaseAccountOfferType"], :type "object"}, :SqlContainerResource {:description "Cosmos DB SQL container resource object", :properties {:conflictResolutionPolicy #:reference{:definitions "ConflictResolutionPolicy"}, :defaultTtl {:description "Default time to live", :type "integer"}, :id {:description "Name of the Cosmos DB SQL container", :type "string"}, :indexingPolicy #:reference{:definitions "IndexingPolicy"}, :partitionKey #:reference{:definitions "ContainerPartitionKey"}, :uniqueKeyPolicy #:reference{:definitions "UniqueKeyPolicy"}}, :required ["id"], :type "object"}, :MongoDBDatabaseGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB MongoDB database.", :properties {:properties #:reference{:definitions "MongoDBDatabaseGetProperties"}}, :type "object"}, :SqlUserDefinedFunctionGetProperties {:description "The properties of an Azure Cosmos DB userDefinedFunction", :properties {:resource {:allOf [#:reference{:definitions "SqlUserDefinedFunctionResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :DatabaseAccountCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB database accounts.", :properties {:kind {:default "GlobalDocumentDB", :description "Indicates the type of database account. This can only be set at database account creation.", :enum ["GlobalDocumentDB" "MongoDB" "Parse"], :type "string", :x-ms-enum {:modelAsString true, :name "DatabaseAccountKind"}}, :properties #:reference{:definitions "DatabaseAccountCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :GremlinDatabaseCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB Gremlin database.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "GremlinDatabaseResource"}}, :required ["resource" "options"], :type "object"}, :GremlinDatabaseCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB Gremlin database.", :properties {:properties #:reference{:definitions "GremlinDatabaseCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :ContainerPartitionKey {:description "The configuration of the partition key to be used for partitioning data into multiple partitions", :properties {:kind {:default "Hash", :description "Indicates the kind of algorithm used for partitioning", :enum ["Hash" "Range"], :type "string", :x-ms-enum {:modelAsString true, :name "PartitionKind"}}, :paths {:description "List of paths using which data within the container can be partitioned", :items #:reference{:definitions "Path"}, :type "array"}, :version {:description "Indicates the version of the partition key definition", :format "int32", :maximum 2, :minimum 1, :type "integer"}}, :type "object"}, :ThroughputSettingsGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB resource throughput.", :properties {:properties #:reference{:definitions "ThroughputSettingsGetProperties"}}, :type "object"}, :ShardKeys {:additionalProperties {:type "string"}, :description "The shard key and partition kind pair, only support \"Hash\" partition kind", :type "object"}, :IPRangeFilter {:description "Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.", :type "string"}, :PartitionUsage {:allOf [#:reference{:definitions "Usage"}], :description "The partition level usage data for a usage request.", :properties {:partitionId {:description "The partition id (GUID identifier) of the usages.", :readOnly true, :type "string"}, :partitionKeyRangeId {:description "The partition key range id (integer identifier) of the usages.", :readOnly true, :type "string"}}}, :CassandraTableGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB Cassandra table.", :properties {:properties #:reference{:definitions "CassandraTableGetProperties"}}, :type "object"}, :GremlinDatabaseGetProperties {:description "The properties of an Azure Cosmos DB SQL database", :properties {:resource {:allOf [#:reference{:definitions "GremlinDatabaseResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :IndexingPolicy {:description "Cosmos DB indexing policy", :properties {:automatic {:description "Indicates if the indexing policy is automatic", :type "boolean"}, :compositeIndexes {:description "List of composite path list", :items #:reference{:definitions "CompositePathList"}, :type "array"}, :excludedPaths {:description "List of paths to exclude from indexing", :items #:reference{:definitions "ExcludedPath"}, :type "array"}, :includedPaths {:description "List of paths to include in the indexing", :items #:reference{:definitions "IncludedPath"}, :type "array"}, :indexingMode {:default "Consistent", :description "Indicates the indexing mode.", :enum ["Consistent" "Lazy" "None"], :type "string", :x-ms-enum {:modelAsString true, :name "IndexingMode"}}, :spatialIndexes {:description "List of spatial specifics", :items #:reference{:definitions "SpatialSpec"}, :type "array"}}, :type "object"}, :TableGetProperties {:description "The properties of an Azure Cosmos Table", :properties {:resource {:allOf [#:reference{:definitions "TableResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :ConnectorOffer {:description "The cassandra connector offer type for the Cosmos DB C* database account.", :enum ["Small"], :type "string", :x-ms-enum {:modelAsString true, :name "ConnectorOffer"}}, :UniqueKey {:description "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.", :properties {:paths {:description "List of paths must be unique for each document in the Azure Cosmos DB service", :items #:reference{:definitions "Path"}, :type "array"}}, :type "object"}, :Usage {:description "The usage data for a usage request.", :properties {:currentValue {:description "Current value for this metric", :format "int64", :readOnly true, :type "integer"}, :limit {:description "Maximum value for this metric", :format "int64", :readOnly true, :type "integer"}, :name #:reference{:definitions "MetricName"}, :quotaPeriod {:description "The quota period used to summarize the usage values.", :readOnly true, :type "string"}, :unit #:reference{:definitions "UnitType"}}}, :Capability {:description "Cosmos DB capability object", :properties {:name {:description "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\".", :type "string"}}, :type "object"}, :ARMProxyResource {:description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags", :properties {:id {:description "The unique resource identifier of the database account.", :readOnly true, :type "string"}, :name {:description "The name of the database account.", :readOnly true, :type "string"}, :type {:description "The type of Azure resource.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :DatabaseAccountGetProperties {:description "Properties for the database account.", :properties {:isVirtualNetworkFilterEnabled {:description "Flag to indicate whether to enable/disable Virtual Network ACL rules.", :type "boolean"}, :connectorOffer #:reference{:definitions "ConnectorOffer"}, :capabilities {:description "List of Cosmos DB capabilities for the account", :items #:reference{:definitions "Capability"}, :type "array"}, :enableAutomaticFailover {:description "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.", :type "boolean"}, :failoverPolicies {:description "An array that contains the regions ordered by their failover priorities.", :items #:reference{:definitions "FailoverPolicy"}, :readOnly true, :type "array"}, :provisioningState #:reference{:definitions "ProvisioningState"}, :databaseAccountOfferType #:reference{:definitions "DatabaseAccountOfferType"}, :readLocations {:description "An array that contains of the read locations enabled for the Cosmos DB account.", :items #:reference{:definitions "Location"}, :readOnly true, :type "array"}, :writeLocations {:description "An array that contains the write location for the Cosmos DB account.", :items #:reference{:definitions "Location"}, :readOnly true, :type "array"}, :consistencyPolicy #:reference{:definitions "ConsistencyPolicy"}, :locations {:description "An array that contains all of the locations enabled for the Cosmos DB account.", :items #:reference{:definitions "Location"}, :readOnly true, :type "array"}, :documentEndpoint {:description "The connection endpoint for the Cosmos DB database account.", :readOnly true, :type "string"}, :ipRangeFilter #:reference{:definitions "IPRangeFilter"}, :disableKeyBasedMetadataWriteAccess {:description "Disable write operations on metadata resources (databases, containers, throughput) via account keys", :type "boolean"}, :enableCassandraConnector {:description "Enables the cassandra connector on the Cosmos DB C* account", :type "boolean"}, :virtualNetworkRules {:description "List of Virtual Network ACL rules configured for the Cosmos DB account.", :items #:reference{:definitions "VirtualNetworkRule"}, :type "array"}, :enableMultipleWriteLocations {:description "Enables the account to write in multiple locations", :type "boolean"}}, :type "object"}, :MongoDBCollectionGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB MongoDB collection.", :properties {:properties #:reference{:definitions "MongoDBCollectionGetProperties"}}, :type "object"}, :CassandraKeyspaceGetProperties {:description "The properties of an Azure Cosmos DB Cassandra keyspace", :properties {:resource {:allOf [#:reference{:definitions "CassandraKeyspaceResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :TableCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB Table.", :properties {:properties #:reference{:definitions "TableCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :MongoDBDatabaseCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB MongoDB database.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "MongoDBDatabaseResource"}}, :required ["resource" "options"], :type "object"}, :MongoIndex {:description "Cosmos DB MongoDB collection index key", :properties {:key #:reference{:definitions "MongoIndexKeys"}, :options #:reference{:definitions "MongoIndexOptions"}}, :type "object"}, :MongoDBCollectionGetProperties {:description "The properties of an Azure Cosmos DB MongoDB collection", :properties {:resource {:allOf [#:reference{:definitions "MongoDBCollectionResource"} #:reference{:definitions "ExtendedResourceProperties"}]}}, :type "object"}, :MongoDBCollectionCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB MongoDB collection.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "MongoDBCollectionResource"}}, :required ["resource" "options"], :type "object"}, :TableGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB Table.", :properties {:properties #:reference{:definitions "TableGetProperties"}}, :type "object"}, :DatabaseAccountListKeysResult {:allOf [#:reference{:definitions "DatabaseAccountListReadOnlyKeysResult"}], :description "The access keys for the given database account.", :properties {:primaryMasterKey {:description "Base 64 encoded value of the primary read-write key.", :readOnly true, :type "string"}, :secondaryMasterKey {:description "Base 64 encoded value of the secondary read-write key.", :readOnly true, :type "string"}}}, :SpatialType {:description "Indicates the spatial type of index.", :enum ["Point" "LineString" "Polygon" "MultiPolygon"], :type "string", :x-ms-enum {:modelAsString true, :name "SpatialType"}}, :CassandraTableResource {:description "Cosmos DB Cassandra table resource object", :properties {:defaultTtl {:description "Time to live of the Cosmos DB Cassandra table", :type "integer"}, :id {:description "Name of the Cosmos DB Cassandra table", :type "string"}, :schema #:reference{:definitions "CassandraSchema"}}, :required ["id"], :type "object"}, :DatabaseAccountRegenerateKeyParameters {:description "Parameters to regenerate the keys within the database account.", :properties {:keyKind {:description "The access key to regenerate.", :enum ["primary" "secondary" "primaryReadonly" "secondaryReadonly"], :type "string", :x-ms-enum {:modelAsString true, :name "KeyKind"}}}, :required ["keyKind"], :type "object"}, :SqlTriggerResource {:description "Cosmos DB SQL trigger resource object", :properties {:body {:description "Body of the Trigger", :type "string"}, :id {:description "Name of the Cosmos DB SQL trigger", :type "string"}, :triggerOperation {:description "The operation the trigger is associated with", :enum ["All" "Create" "Update" "Delete" "Replace"], :type "string", :x-ms-enum {:modelAsString true, :name "triggerOperation"}}, :triggerType {:description "Type of the Trigger", :enum ["Pre" "Post"], :type "string", :x-ms-enum {:modelAsString true, :name "triggerType"}}}, :required ["id"], :type "object"}, :ThroughputSettingsUpdateProperties {:description "Properties to update Azure Cosmos DB resource throughput.", :properties {:resource #:reference{:definitions "ThroughputSettingsResource"}}, :required ["resource"], :type "object"}, :SqlTriggerListResult {:description "The List operation response, that contains the triggers and their properties.", :properties {:value {:description "List of triggers and their properties.", :items #:reference{:definitions "SqlTriggerGetResults"}, :readOnly true, :type "array"}}}, :ClusterKey {:description "Cosmos DB Cassandra table cluster key", :properties {:name {:description "Name of the Cosmos DB Cassandra table cluster key", :type "string"}, :orderBy {:description "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\"", :type "string"}}, :type "object"}, :GremlinGraphCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB Gremlin graph.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "GremlinGraphResource"}}, :required ["resource" "options"], :type "object"}, :RegionForOnlineOffline {:description "Cosmos DB region to online or offline.", :properties {:region {:description "Cosmos DB region, with spaces between words and each word capitalized.", :type "string"}}, :required ["region"]}, :CassandraTableCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB Cassandra table.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "CassandraTableResource"}}, :required ["resource" "options"], :type "object"}, :MongoDBDatabaseCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB MongoDB database.", :properties {:properties #:reference{:definitions "MongoDBDatabaseCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :TableListResult {:description "The List operation response, that contains the Table and their properties.", :properties {:value {:description "List of Table and their properties.", :items #:reference{:definitions "TableGetResults"}, :readOnly true, :type "array"}}}, :GremlinGraphResource {:description "Cosmos DB Gremlin graph resource object", :properties {:conflictResolutionPolicy #:reference{:definitions "ConflictResolutionPolicy"}, :defaultTtl {:description "Default time to live", :type "integer"}, :id {:description "Name of the Cosmos DB Gremlin graph", :type "string"}, :indexingPolicy #:reference{:definitions "IndexingPolicy"}, :partitionKey #:reference{:definitions "ContainerPartitionKey"}, :uniqueKeyPolicy #:reference{:definitions "UniqueKeyPolicy"}}, :required ["id"], :type "object"}, :Column {:description "Cosmos DB Cassandra table column", :properties {:name {:description "Name of the Cosmos DB Cassandra table column", :type "string"}, :type {:description "Type of the Cosmos DB Cassandra table column", :type "string"}}, :type "object"}, :DatabaseAccountUpdateProperties {:description "Properties to update Azure Cosmos DB database accounts.", :properties {:isVirtualNetworkFilterEnabled {:description "Flag to indicate whether to enable/disable Virtual Network ACL rules.", :type "boolean"}, :connectorOffer #:reference{:definitions "ConnectorOffer"}, :capabilities {:description "List of Cosmos DB capabilities for the account", :items #:reference{:definitions "Capability"}, :type "array"}, :enableAutomaticFailover {:description "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.", :type "boolean"}, :consistencyPolicy #:reference{:definitions "ConsistencyPolicy"}, :locations {:description "An array that contains the georeplication locations enabled for the Cosmos DB account.", :items #:reference{:definitions "Location"}, :type "array"}, :ipRangeFilter #:reference{:definitions "IPRangeFilter"}, :disableKeyBasedMetadataWriteAccess {:description "Disable write operations on metadata resources (databases, containers, throughput) via account keys", :type "boolean"}, :enableCassandraConnector {:description "Enables the cassandra connector on the Cosmos DB C* account", :type "boolean"}, :virtualNetworkRules {:description "List of Virtual Network ACL rules configured for the Cosmos DB account.", :items #:reference{:definitions "VirtualNetworkRule"}, :type "array"}, :enableMultipleWriteLocations {:description "Enables the account to write in multiple locations", :type "boolean"}}, :type "object"}, :SqlDatabaseListResult {:description "The List operation response, that contains the SQL databases and their properties.", :properties {:value {:description "List of SQL databases and their properties.", :items #:reference{:definitions "SqlDatabaseGetResults"}, :readOnly true, :type "array"}}}, :MongoDBCollectionCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB MongoDB collection.", :properties {:properties #:reference{:definitions "MongoDBCollectionCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :MongoDBDatabaseResource {:description "Cosmos DB MongoDB database resource object", :properties {:id {:description "Name of the Cosmos DB MongoDB database", :type "string"}}, :required ["id"], :type "object"}, :SqlContainerCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB container.", :properties {:properties #:reference{:definitions "SqlContainerCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :ConsistencyPolicy {:description "The consistency policy for the Cosmos DB database account.", :properties {:defaultConsistencyLevel {:description "The default consistency level and configuration settings of the Cosmos DB account.", :enum ["Eventual" "Session" "BoundedStaleness" "Strong" "ConsistentPrefix"], :type "string", :x-ms-enum {:modelAsString false, :name "DefaultConsistencyLevel"}}, :maxIntervalInSeconds {:description "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.", :format "int32", :maximum 86400, :minimum 5, :type "integer"}, :maxStalenessPrefix {:description "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.", :format "int64", :maximum 2147483647, :minimum 1, :type "integer"}}, :required ["defaultConsistencyLevel"], :type "object"}, :PartitionMetric {:allOf [#:reference{:definitions "Metric"}], :description "The metric values for a single partition.", :properties {:partitionId {:description "The partition id (GUID identifier) of the metric values.", :readOnly true, :type "string"}, :partitionKeyRangeId {:description "The partition key range id (integer identifier) of the metric values.", :readOnly true, :type "string"}}}, :CassandraKeyspaceCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB Cassandra keyspace.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "CassandraKeyspaceResource"}}, :required ["resource" "options"], :type "object"}, :CompositePathList {:description "List of composite path", :items #:reference{:definitions "CompositePath"}, :type "array"}, :GremlinDatabaseListResult {:description "The List operation response, that contains the Gremlin databases and their properties.", :properties {:value {:description "List of Gremlin databases and their properties.", :items #:reference{:definitions "GremlinDatabaseGetResults"}, :readOnly true, :type "array"}}}, :SqlStoredProcedureResource {:description "Cosmos DB SQL storedProcedure resource object", :properties {:body {:description "Body of the Stored Procedure", :type "string"}, :id {:description "Name of the Cosmos DB SQL storedProcedure", :type "string"}}, :required ["id"], :type "object"}, :CreateUpdateOptions {:additionalProperties {:type "string"}, :description "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"", :type "object"}, :GremlinDatabaseGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB Gremlin database.", :properties {:properties #:reference{:definitions "GremlinDatabaseGetProperties"}}, :type "object"}, :TableCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB Table.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "TableResource"}}, :required ["resource" "options"], :type "object"}, :SqlDatabaseResource {:description "Cosmos DB SQL database resource object", :properties {:id {:description "Name of the Cosmos DB SQL database", :type "string"}}, :required ["id"], :type "object"}, :ErrorResponse {:description "Error Response.", :properties {:code {:description "Error code.", :type "string"}, :message {:description "Error message indicating why the operation failed.", :type "string"}}}, :CassandraTableListResult {:description "The List operation response, that contains the Cassandra tables and their properties.", :properties {:value {:description "List of Cassandra tables and their properties.", :items #:reference{:definitions "CassandraTableGetResults"}, :readOnly true, :type "array"}}}, :PercentileMetricValue {:allOf [#:reference{:definitions "MetricValue"}], :description "Represents percentile metrics values.", :properties {:P10 {:description "The 10th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P25 {:description "The 25th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P50 {:description "The 50th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P75 {:description "The 75th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P90 {:description "The 90th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P95 {:description "The 95th percentile value for the metric.", :format "double", :readOnly true, :type "number"}, :P99 {:description "The 99th percentile value for the metric.", :format "double", :readOnly true, :type "number"}}}, :IncludedPath {:description "The paths that are included in indexing", :properties {:indexes {:description "List of indexes for this path", :items #:reference{:definitions "Indexes"}, :type "array"}, :path {:description "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)", :type "string"}}, :type "object"}, :ExtendedResourceProperties {:description "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.", :properties {"_etag" {:description "A system generated property representing the resource etag required for optimistic concurrency control.", :readOnly true, :type "string"}, "_rid" {:description "A system generated property. A unique identifier.", :readOnly true, :type "string"}, "_ts" {:description "A system generated property that denotes the last updated timestamp of the resource.", :readOnly true}}, :type "object"}, :SqlTriggerGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB trigger.", :properties {:properties #:reference{:definitions "SqlTriggerGetProperties"}}, :type "object"}, :Location {:description "A region in which the Azure Cosmos DB database account is deployed.", :properties {:documentEndpoint {:description "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/", :readOnly true, :type "string"}, :failoverPriority {:description "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.", :format "int32", :minimum 0, :type "integer"}, :id {:description "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.", :readOnly true, :type "string"}, :isZoneRedundant {:description "Flag to indicate whether or not this region is an AvailabilityZone region", :type "boolean"}, :locationName {:description "The name of the region.", :type "string"}, :provisioningState #:reference{:definitions "ProvisioningState"}}, :type "object"}, :SqlUserDefinedFunctionResource {:description "Cosmos DB SQL userDefinedFunction resource object", :properties {:body {:description "Body of the User Defined Function", :type "string"}, :id {:description "Name of the Cosmos DB SQL userDefinedFunction", :type "string"}}, :required ["id"], :type "object"}, :CassandraSchema {:description "Cosmos DB Cassandra table schema", :properties {:clusterKeys {:description "List of cluster key.", :items #:reference{:definitions "ClusterKey"}, :type "array"}, :columns {:description "List of Cassandra table columns.", :items #:reference{:definitions "Column"}, :type "array"}, :partitionKeys {:description "List of partition key.", :items #:reference{:definitions "CassandraPartitionKey"}, :type "array"}}, :type "object"}, :MetricName {:description "A metric name.", :properties {:localizedValue {:description "The friendly name of the metric.", :readOnly true, :type "string"}, :value {:description "The name of the metric.", :readOnly true, :type "string"}}}, :Metric {:description "Metric data", :properties {:endTime {:description "The end time for the metric (ISO-8601 format).", :format "date-time", :readOnly true, :type "string"}, :metricValues {:description "The metric values for the specified time window and timestep.", :items #:reference{:definitions "MetricValue"}, :readOnly true, :type "array"}, :name #:reference{:definitions "MetricName"}, :startTime {:description "The start time for the metric (ISO-8601 format).", :format "date-time", :readOnly true, :type "string"}, :timeGrain {:description "The time grain to be used to summarize the metric values.", :readOnly true, :type "string"}, :unit #:reference{:definitions "UnitType"}}}, :SqlTriggerCreateUpdateParameters {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "Parameters to create and update Cosmos DB trigger.", :properties {:properties #:reference{:definitions "SqlTriggerCreateUpdateProperties"}}, :required ["properties"], :type "object"}, :SpatialSpec {:properties {:path {:description "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)", :type "string"}, :types {:description "List of path's spatial type", :items #:reference{:definitions "SpatialType"}, :type "array"}}, :type "object"}, :MongoDBCollectionResource {:description "Cosmos DB MongoDB collection resource object", :properties {:id {:description "Name of the Cosmos DB MongoDB collection", :type "string"}, :indexes {:description "List of index keys", :items #:reference{:definitions "MongoIndex"}, :type "array"}, :shardKey #:reference{:definitions "ShardKeys"}}, :required ["id"], :type "object"}, :ThroughputSettingsResource {:description "Cosmos DB resource throughput object", :properties {:minimumThroughput {:description "The minimum throughput of the resource", :readOnly true, :type "string"}, :offerReplacePending {:description "The throughput replace is pending", :readOnly true, :type "string"}, :throughput {:description "Value of the Cosmos DB resource throughput", :type "integer"}}, :required ["throughput"], :type "object"}, :CassandraPartitionKey {:description "Cosmos DB Cassandra table partition key", :properties {:name {:description "Name of the Cosmos DB Cassandra table partition key", :type "string"}}, :type "object"}, :DatabaseAccountConnectionString {:description "Connection string for the Cosmos DB account", :properties {:connectionString {:description "Value of the connection string", :readOnly true, :type "string"}, :description {:description "Description of the connection string", :readOnly true, :type "string"}}}, :DatabaseAccountListConnectionStringsResult {:description "The connection strings for the given database account.", :properties {:connectionStrings {:description "An array that contains the connection strings for the Cosmos DB account.", :items #:reference{:definitions "DatabaseAccountConnectionString"}, :type "array"}}}, :DatabaseAccountListReadOnlyKeysResult {:description "The read-only access keys for the given database account.", :properties {:primaryReadonlyMasterKey {:description "Base 64 encoded value of the primary read-only key.", :readOnly true, :type "string"}, :secondaryReadonlyMasterKey {:description "Base 64 encoded value of the secondary read-only key.", :readOnly true, :type "string"}}}, :UniqueKeyPolicy {:description "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.", :properties {:uniqueKeys {:description "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.", :items #:reference{:definitions "UniqueKey"}, :type "array"}}, :type "object"}, :MetricDefinitionsListResult {:description "The response to a list metric definitions request.", :properties {:value {:description "The list of metric definitions for the account.", :items #:reference{:definitions "MetricDefinition"}, :readOnly true, :type "array"}}}, :FailoverPolicy {:description "The failover policy for a given region of a database account.", :properties {:failoverPriority {:description "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.", :format "int32", :minimum 0, :type "integer"}, :id {:description "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.", :readOnly true, :type "string"}, :locationName {:description "The name of the region in which the database account exists.", :type "string"}}, :type "object"}, :SqlTriggerCreateUpdateProperties {:description "Properties to create and update Azure Cosmos DB trigger.", :properties {:options #:reference{:definitions "CreateUpdateOptions"}, :resource #:reference{:definitions "SqlTriggerResource"}}, :required ["resource" "options"], :type "object"}, :GremlinGraphGetResults {:allOf [#:reference{:definitions "ARMResourceProperties"}], :description "An Azure Cosmos DB Gremlin graph.", :properties {:properties #:reference{:definitions "GremlinGraphGetProperties"}}, :type "object"}, :FailoverPolicies {:description "The list of new failover policies for the failover priority change.", :properties {:failoverPolicies {:description "List of failover policies.", :items #:reference{:definitions "FailoverPolicy"}, :type "array"}}, :required ["failoverPolicies"]}}}