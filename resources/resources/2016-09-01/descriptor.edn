{:scheme "https", :host "management.azure.com", :info {:description "Provides operations for working with resources and resource groups.", :title "ResourceManagementClient", :version "2016-09-01"}, :ops {:Resources_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}", :description "Creates a resource.", :parameters [{:description "The name of the resource group for the resource. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource to create.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to create.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} {:description "Parameters for creating or updating the resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GenericResource"}} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Deployments_CalculateTemplateHash {:path "/providers/Microsoft.Resources/calculateTemplateHash", :description "Calculate the hash of the given template.", :parameters [#:reference{:parameters "ApiVersionParameter"} {:description "The template provided to calculate hash.", :in "body", :name "template", :required true, :schema {:type "object"}}], :verb :post}, :Deployments_List {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/", :description "Get all the deployments for a resource group.", :parameters [{:description "The name of the resource group with the deployments to get. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of results to get. If null is passed, returns all deployments.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Tags_List {:path "/subscriptions/{subscriptionId}/tagNames", :description "Gets the names and values of all resource tags that are defined in a subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Resources_MoveResources {:path "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources", :description "The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. ", :parameters [{:description "The name of the resource group containing the resources to move.", :in "path", :maxLength 90, :minLength 1, :name "sourceResourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Parameters for moving resources.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ResourcesMoveInfo"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Providers_Register {:path "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register", :description "Registers a subscription with a resource provider.", :parameters [{:description "The namespace of the resource provider to register.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ResourceGroups_List {:path "/subscriptions/{subscriptionId}/resourcegroups", :description "Gets all the resource groups for a subscription.", :parameters [{:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of results to return. If null is passed, returns all resource groups.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DeploymentOperations_Get {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}", :description "Gets a deployments operation.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The ID of the operation to get.", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Deployments_Validate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate", :description "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..", :parameters [{:description "The name of the resource group the template will be deployed to. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Parameters to validate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ResourceGroups_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}", :description "Creates a resource group.", :parameters [{:description "The name of the resource group to create or update.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Parameters supplied to the create or update a resource group.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ResourceGroup"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Resources_CheckExistenceById {:path "/{resourceId}", :description "Checks by ID whether a resource exists.", :parameters [{:description "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}", :in "path", :name "resourceId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"}], :verb :head}, :Tags_DeleteValue {:path "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}", :description "Deletes a tag value.", :parameters [{:description "The name of the tag.", :in "path", :name "tagName", :required true, :type "string"} {:description "The value of the tag to delete.", :in "path", :name "tagValue", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Deployments_Cancel {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel", :description "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment to cancel.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :DeploymentOperations_List {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations", :description "Gets all deployments operations for a deployment.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment with the operation to get.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The number of results to return.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Deployments_Delete {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}", :description "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.", :parameters [{:description "The name of the resource group with the deployment to delete. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment to delete.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Tags_CreateOrUpdateValue {:path "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}", :description "Creates a tag value. The name of the tag must already exist.", :parameters [{:description "The name of the tag.", :in "path", :name "tagName", :required true, :type "string"} {:description "The value of the tag to create.", :in "path", :name "tagValue", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Resources_UpdateById {:path "/{resourceId}", :description "Updates a resource by ID.", :parameters [{:description "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}", :in "path", :name "resourceId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} {:description "Update resource parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GenericResource"}}], :verb :patch}, :ResourceGroups_ListResources {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources", :description "Get all the resources for a resource group.", :parameters [{:description "The resource group with the resources to get.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The $expand query parameter", :in "query", :name "$expand", :required false, :type "string"} {:description "The number of results to return. If null is passed, returns all resources.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Resources_GetById {:path "/{resourceId}", :description "Gets a resource by ID.", :parameters [{:description "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}", :in "path", :name "resourceId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :Resources_CreateOrUpdateById {:path "/{resourceId}", :description "Create a resource by ID.", :parameters [{:description "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}", :in "path", :name "resourceId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} {:description "Create or update resource parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GenericResource"}}], :verb :put}, :Deployments_CheckExistence {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}", :description "Checks whether the deployment exists.", :parameters [{:description "The name of the resource group with the deployment to check. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment to check.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :head}, :Providers_Get {:path "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}", :description "Gets the specified resource provider.", :parameters [{:description "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.", :in "query", :name "$expand", :required false, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Resources_Update {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}", :description "Updates a resource.", :parameters [{:description "The name of the resource group for the resource. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource to update.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to update.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} {:description "Parameters for updating the resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GenericResource"}} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Providers_List {:path "/subscriptions/{subscriptionId}/providers", :description "Gets all resource providers for a subscription.", :parameters [{:description "The number of results to return. If null is passed returns all deployments.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.", :in "query", :name "$expand", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ResourceGroups_ExportTemplate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate", :description "Captures the specified resource group as a template.", :parameters [{:description "The name of the resource group to export as a template.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Parameters for exporting the template.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ExportTemplateRequest"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Resources_Delete {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}", :description "Deletes a resource.", :parameters [{:description "The name of the resource group that contains the resource to delete. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to delete.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ResourceGroups_Patch {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}", :description "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.", :parameters [{:description "The name of the resource group to update. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Parameters supplied to update a resource group.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ResourceGroup"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Deployments_ExportTemplate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate", :description "Exports the template used for specified deployment.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment from which to get the template.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Deployments_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}", :description "You can provide the template and parameters directly in the request or link to JSON files.", :parameters [{:description "The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "Additional parameters supplied to the operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Resources_List {:path "/subscriptions/{subscriptionId}/resources", :description "Get all the resources in a subscription.", :parameters [{:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The $expand query parameter.", :in "query", :name "$expand", :required false, :type "string"} {:description "The number of results to return. If null is passed, returns all resource groups.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Resources_DeleteById {:path "/{resourceId}", :description "Deletes a resource by ID.", :parameters [{:description "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}", :in "path", :name "resourceId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :Resources_Get {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}", :description "Gets a resource.", :parameters [{:description "The name of the resource group containing the resource to get. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to get.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Tags_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/tagNames/{tagName}", :description "The tag name can have a maximum of 512 characters and is case insensitive. Tag names created by Azure have prefixes of microsoft, azure, or windows. You cannot create tags with one of these prefixes.", :parameters [{:description "The name of the tag to create.", :in "path", :name "tagName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Deployments_Get {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}", :description "Gets a deployment.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The name of the deployment to get.", :in "path", :maxLength 64, :minLength 1, :name "deploymentName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ResourceGroups_Delete {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}", :description "When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.", :parameters [{:description "The name of the resource group to delete. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ResourceGroups_Get {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}", :description "Gets a resource group.", :parameters [{:description "The name of the resource group to get. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Resources_CheckExistence {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}", :description "Checks whether a resource exists.", :parameters [{:description "The name of the resource group containing the resource to check. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The resource provider of the resource to check.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to check whether it exists.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :head}, :ResourceGroups_CheckExistence {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}", :description "Checks whether a resource group exists.", :parameters [{:description "The name of the resource group to check. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :head}, :Providers_Unregister {:path "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister", :description "Unregisters a subscription from a resource provider.", :parameters [{:description "The namespace of the resource provider to unregister.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Tags_Delete {:path "/subscriptions/{subscriptionId}/tagNames/{tagName}", :description "You must remove all values from a resource tag before you can delete it.", :parameters [{:description "The name of the tag.", :in "path", :name "tagName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}}, :parameters {:ApiVersionParameter {:description "The API version to use for this operation.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "The ID of the target subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ResourceGroup {:description "Resource group information.", :properties {:id {:description "The ID of the resource group.", :readOnly true, :type "string"}, :location {:description "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations.", :type "string"}, :managedBy {:description "The ID of the resource that manages this resource group.", :type "string"}, :name {:description "The name of the resource group.", :type "string"}, :properties #:reference{:definitions "ResourceGroupProperties"}, :tags {:additionalProperties {:description "The additional properties. ", :type "string"}, :description "The tags attached to the resource group.", :type "object"}}, :required ["location"], :x-ms-azure-resource true}, :HttpMessage {:properties {:content {:description "HTTP message content.", :type "object"}}}, :ExportTemplateRequest {:description "Export resource group template request parameters.", :properties {:options {:description "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'", :type "string"}, :resources {:description "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'.", :items {:type "string"}, :type "array"}}}, :TemplateHashResult {:description "Result of the request to calculate template hash. It contains a string of minified template and its hash.", :properties {:minifiedTemplate {:description "The minified template string.", :type "string"}, :templateHash {:description "The template hash.", :type "string"}}}, :Identity {:description "Identity for the resource.", :properties {:principalId {:description "The principal ID of resource identity.", :readOnly true, :type "string"}, :tenantId {:description "The tenant ID of resource.", :readOnly true, :type "string"}, :type {:description "The identity type.", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString false, :name "ResourceIdentityType"}}}}, :DebugSetting {:properties {:detailLevel {:description "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.", :type "string"}}}, :DeploymentExtendedFilter {:description "Deployment filter.", :properties {:provisioningState {:description "The provisioning state.", :type "string"}}}, :DeploymentProperties {:description "Deployment properties.", :properties {:debugSetting #:reference{:definitions "DebugSetting"}, :mode {:description "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.", :enum ["Incremental" "Complete"], :type "string", :x-ms-enum {:modelAsString false, :name "DeploymentMode"}}, :parameters {:description "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.", :type "object"}, :parametersLink #:reference{:definitions "ParametersLink"}, :template {:description "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.", :type "object"}, :templateLink #:reference{:definitions "TemplateLink"}}, :required ["mode"]}, :ResourceManagementErrorWithDetails {:properties {:code {:description "The error code returned when exporting the template.", :readOnly true, :type "string"}, :details {:description "Validation error.", :items #:reference{:definitions "ResourceManagementErrorWithDetails"}, :readOnly true, :type "array"}, :message {:description "The error message describing the export error.", :readOnly true, :type "string"}, :target {:description "The target of the error.", :readOnly true, :type "string"}}}, :DeploymentValidateResult {:description "Information from validate template deployment response.", :properties {:error #:reference{:definitions "ResourceManagementErrorWithDetails"}, :properties #:reference{:definitions "DeploymentPropertiesExtended"}}}, :DeploymentExtended {:description "Deployment information.", :properties {:id {:description "The ID of the deployment.", :readOnly true, :type "string"}, :name {:description "The name of the deployment.", :type "string"}, :properties #:reference{:definitions "DeploymentPropertiesExtended"}}, :required ["name"], :x-ms-azure-resource true}, :SubResource {:properties {:id {:description "Resource ID", :type "string"}}, :x-ms-azure-resource true}, :TagDetails {:description "Tag details.", :properties {:count #:reference{:definitions "TagCount"}, :id {:description "The tag ID.", :readOnly true, :type "string"}, :tagName {:description "The tag name.", :type "string"}, :values {:description "The list of tag values.", :items #:reference{:definitions "TagValue"}, :type "array"}}}, :DeploymentPropertiesExtended {:description "Deployment properties with additional details.", :properties {:providers {:description "The list of resource providers needed for the deployment.", :items #:reference{:definitions "Provider"}, :type "array"}, :templateLink #:reference{:definitions "TemplateLink"}, :provisioningState {:description "The state of the provisioning.", :readOnly true, :type "string"}, :correlationId {:description "The correlation ID of the deployment.", :readOnly true, :type "string"}, :mode {:description "The deployment mode. Possible values are Incremental and Complete.", :enum ["Incremental" "Complete"], :type "string", :x-ms-enum {:modelAsString false, :name "DeploymentMode"}}, :template {:description "The template content. Use only one of Template or TemplateLink.", :type "object"}, :parametersLink #:reference{:definitions "ParametersLink"}, :debugSetting #:reference{:definitions "DebugSetting"}, :outputs {:description "Key/value pairs that represent deployment output.", :type "object"}, :timestamp {:description "The timestamp of the template deployment.", :format "date-time", :readOnly true, :type "string"}, :parameters {:description "Deployment parameters. Use only one of Parameters or ParametersLink.", :type "object"}, :dependencies {:description "The list of deployment dependencies.", :items #:reference{:definitions "Dependency"}, :type "array"}}}, :DeploymentOperationsListResult {:description "List of deployment operations.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of deployment operations.", :items #:reference{:definitions "DeploymentOperation"}, :type "array"}}}, :AliasType {:description "The alias type. ", :properties {:name {:description "The alias name.", :type "string"}, :paths {:description "The paths for an alias.", :items #:reference{:definitions "AliasPathType"}, :type "array"}}}, :Plan {:description "Plan for the resource.", :properties {:name {:description "The plan ID.", :type "string"}, :product {:description "The offer ID.", :type "string"}, :promotionCode {:description "The promotion code.", :type "string"}, :publisher {:description "The publisher ID.", :type "string"}}}, :GenericResourceFilter {:description "Resource filter.", :properties {:resourceType {:description "The resource type.", :type "string"}, :tagname {:description "The tag name.", :type "string"}, :tagvalue {:description "The tag value.", :type "string"}}}, :CloudError {:description "An error response for a resource management request.", :properties {:error {:description "The resource management error response.", :properties {:additionalInfo {:description "The error additional info.", :items {:description "The resource management error additional info.", :properties {:info {:description "The additional info.", :readOnly true, :type "object"}, :type {:description "The additional info type.", :readOnly true, :type "string"}}}, :readOnly true, :type "array"}, :code {:description "The error code.", :readOnly true, :type "string"}, :details {:description "The error details.", :items #:reference{:definitions "ErrorResponse"}, :readOnly true, :type "array"}, :message {:description "The error message.", :readOnly true, :type "string"}, :target {:description "The error target.", :readOnly true, :type "string"}}}}, :x-ms-external true}, :ResourceGroupProperties {:description "The resource group properties.", :properties {:provisioningState {:description "The provisioning state. ", :readOnly true, :type "string"}}}, :ResourceGroupFilter {:description "Resource group filter.", :properties {:tagName {:description "The tag name.", :type "string"}, :tagValue {:description "The tag value.", :type "string"}}}, :TagValue {:description "Tag information.", :properties {:count #:reference{:definitions "TagCount"}, :id {:description "The tag ID.", :readOnly true, :type "string"}, :tagValue {:description "The tag value.", :type "string"}}, :x-ms-azure-resource true}, :BasicDependency {:description "Deployment dependency information.", :properties {:id {:description "The ID of the dependency.", :type "string"}, :resourceName {:description "The dependency resource name.", :type "string"}, :resourceType {:description "The dependency resource type.", :type "string"}}}, :Dependency {:description "Deployment dependency information.", :properties {:dependsOn {:description "The list of dependencies.", :items #:reference{:definitions "BasicDependency"}, :type "array"}, :id {:description "The ID of the dependency.", :type "string"}, :resourceName {:description "The dependency resource name.", :type "string"}, :resourceType {:description "The dependency resource type.", :type "string"}}}, :ResourceGroupListResult {:description "List of resource groups.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of resource groups.", :items #:reference{:definitions "ResourceGroup"}, :type "array"}}}, :ResourceGroupExportResult {:properties {:error #:reference{:definitions "ResourceManagementErrorWithDetails"}, :template {:description "The template content.", :type "object"}}}, :DeploymentOperationProperties {:description "Deployment operation properties.", :properties {:provisioningState {:description "The state of the provisioning.", :readOnly true, :type "string"}, :request #:reference{:definitions "HttpMessage"}, :response #:reference{:definitions "HttpMessage"}, :serviceRequestId {:description "Deployment operation service request id.", :readOnly true, :type "string"}, :statusCode {:description "Operation status code.", :readOnly true, :type "string"}, :statusMessage {:description "Operation status message.", :readOnly true}, :targetResource #:reference{:definitions "TargetResource"}, :timestamp {:description "The date and time of the operation.", :format "date-time", :readOnly true, :type "string"}}}, :AliasPathType {:description "The type of the paths for alias. ", :properties {:apiVersions {:description "The API versions.", :items {:type "string"}, :type "array"}, :path {:description "The path of an alias.", :type "string"}}}, :ParametersLink {:description "Entity representing the reference to the deployment parameters.", :properties {:contentVersion {:description "If included, must match the ContentVersion in the template.", :type "string"}, :uri {:description "The URI of the parameters file.", :type "string"}}, :required ["uri"]}, :ProviderListResult {:description "List of resource providers.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of resource providers.", :items #:reference{:definitions "Provider"}, :type "array"}}}, :ResourceListResult {:description "List of resource groups.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of resources.", :items #:reference{:definitions "GenericResource"}, :type "array"}}}, :ResourceProviderOperationDisplayProperties {:description "Resource provider operation's display properties.", :properties {:description {:description "Operation description.", :type "string"}, :operation {:description "Operation.", :type "string"}, :provider {:description "Operation provider.", :type "string"}, :publisher {:description "Operation description.", :type "string"}, :resource {:description "Operation resource.", :type "string"}}}, :TargetResource {:description "Target resource.", :properties {:id {:description "The ID of the resource.", :type "string"}, :resourceName {:description "The name of the resource.", :type "string"}, :resourceType {:description "The type of the resource.", :type "string"}}}, :DeploymentExportResult {:description "The deployment export result. ", :properties {:template {:description "The template content.", :type "object"}}}, :ResourcesMoveInfo {:description "Parameters of move resources.", :properties {:resources {:description "The IDs of the resources.", :items {:type "string"}, :type "array"}, :targetResourceGroup {:description "The target resource group.", :type "string"}}}, :ProviderResourceType {:description "Resource type managed by the resource provider.", :properties {:aliases {:description "The aliases that are supported by this resource type.", :items #:reference{:definitions "AliasType"}, :type "array"}, :apiVersions {:description "The API version.", :items {:type "string"}, :type "array"}, :locations {:description "The collection of locations where this resource type can be created.", :items {:type "string"}, :type "array"}, :properties {:additionalProperties {:description "The additional properties. ", :type "string"}, :description "The properties.", :type "object"}, :resourceType {:description "The resource type.", :type "string"}}}, :Resource {:properties {:id {:description "Resource ID", :readOnly true, :type "string"}, :location {:description "Resource location", :type "string"}, :name {:description "Resource name", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}, :type {:description "Resource type", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :DeploymentListResult {:description "List of deployments.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of deployments.", :items #:reference{:definitions "DeploymentExtended"}, :type "array"}}}, :Deployment {:description "Deployment operation parameters.", :properties {:properties #:reference{:definitions "DeploymentProperties"}}, :required ["properties"]}, :ErrorResponse {}, :Sku {:description "SKU for the resource.", :properties {:capacity {:description "The SKU capacity.", :format "int32", :type "integer"}, :family {:description "The SKU family.", :type "string"}, :model {:description "The SKU model.", :type "string"}, :name {:description "The SKU name.", :type "string"}, :size {:description "The SKU size.", :type "string"}, :tier {:description "The SKU tier.", :type "string"}}}, :Provider {:description "Resource provider information.", :properties {:id {:description "The provider ID.", :readOnly true, :type "string"}, :namespace {:description "The namespace of the resource provider.", :type "string"}, :registrationState {:description "The registration state of the provider.", :readOnly true, :type "string"}, :resourceTypes {:description "The collection of provider resource types.", :items #:reference{:definitions "ProviderResourceType"}, :readOnly true, :type "array"}}}, :TagsListResult {:description "List of subscription tags.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :readOnly true, :type "string"}, :value {:description "An array of tags.", :items #:reference{:definitions "TagDetails"}, :type "array"}}}, :TemplateLink {:description "Entity representing the reference to the template.", :properties {:contentVersion {:description "If included, must match the ContentVersion in the template.", :type "string"}, :uri {:description "The URI of the template to deploy.", :type "string"}}, :required ["uri"]}, :GenericResource {:allOf [#:reference{:definitions "Resource"}], :description "Resource information.", :properties {:identity #:reference{:definitions "Identity"}, :kind {:description "The kind of the resource.", :pattern "^[-\\w\\._,\\(\\)]+$", :type "string"}, :managedBy {:description "ID of the resource that manages this resource.", :type "string"}, :plan #:reference{:definitions "Plan"}, :properties {:description "The resource properties.", :type "object"}, :sku #:reference{:definitions "Sku"}}}, :TagCount {:description "Tag count.", :properties {:type {:description "Type of count.", :type "string"}, :value {:description "Value of count.", :type "integer"}}}, :DeploymentOperation {:description "Deployment operation information.", :properties {:id {:description "Full deployment operation ID.", :readOnly true, :type "string"}, :operationId {:description "Deployment operation ID.", :readOnly true, :type "string"}, :properties #:reference{:definitions "DeploymentOperationProperties"}}}}}