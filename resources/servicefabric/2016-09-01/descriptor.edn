{:scheme "https", :host "management.azure.com", :info {:title "ServiceFabricManagementClient", :version "2016-09-01"}, :ops {:Clusters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Get cluster resource", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Delete cluster resource", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :delete}, :ClusterVersions_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions", :description "List cluster code versions by location", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Update cluster configuration", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} {:description "The parameters which contains the property value and property name which used to update the cluster configuration", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ClusterUpdateParameters"}} #:reference{:parameters "subscriptionId"}], :verb :patch}, :Clusters_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters", :description "List cluster resource", :parameters [#:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :ClusterVersions_Get {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}", :description "Get cluster code versions by environment and version", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "environment"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} #:reference{:parameters "clusterVersion"}], :verb :get}, :ClusterVersions_ListByEnvironment {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions", :description "List cluster code versions by environment", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "environment"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters", :description "List cluster resource by resource group", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Create cluster resource", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} {:description "Put Request", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Cluster"}} #:reference{:parameters "subscriptionId"}], :verb :put}, :ClusterVersions_ListByVersion {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}", :description "List cluster code versions by version", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} #:reference{:parameters "clusterVersion"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.ServiceFabric/operations", :description "Lists all of the available ServiceFabric REST API operations.", :parameters [#:reference{:parameters "api-version"}], :verb :get}}, :parameters {:api-version {:description "The version of the ServiceFabric resource provider api", :in "query", :name "api-version", :required true, :type "string"}, :clusterNameParameter {:description "The name of the cluster resource", :in "path", :name "clusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :clusterVersion {:description "The cluster code version", :in "path", :name "clusterVersion", :required true, :type "string", :x-ms-parameter-location "method"}, :environment {:description "Cluster operating system, the default means all", :enum ["Windows" "Linux"], :in "path", :name "environment", :required true, :type "string", :x-ms-parameter-location "method"}, :locationForClusterCodeVersions {:description "The location for the cluster code versions, this is different from cluster location", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "The name of the resource group to which the resource belongs or get created", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionId {:description "The customer subscription identifier", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:DiagnosticsStorageAccountConfig {:description "Diagnostics storage account config", :properties {:blobEndpoint {:description "Diagnostics storage account blob endpoint", :type "string"}, :protectedAccountKeyName {:description "Protected Diagnostics storage key name", :type "string"}, :queueEndpoint {:description "Diagnostics storage account queue endpoint", :type "string"}, :storageAccountName {:description "Diagnostics storage account name", :type "string"}, :tableEndpoint {:description "Diagnostics storage account table endpoint", :type "string"}}, :required ["storageAccountName" "protectedAccountKeyName" "blobEndpoint" "queueEndpoint" "tableEndpoint"]}, :AzureActiveDirectory {:description "The settings to enable AAD authentication on the cluster", :properties {:clientApplication {:description "Azure active directory client application id", :type "string"}, :clusterApplication {:description "Azure active directory cluster application id", :type "string"}, :tenantId {:description "Azure active directory tenant id", :type "string"}}}, :OperationListResult {:description "Result of the request to list ServiceFabric operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of ServiceFabric operations supported by the Microsoft.ServiceFabric resource provider.", :items #:reference{:definitions "OperationResult"}, :readOnly true, :type "array"}}}, :ClientCertificateThumbprint {:description "Client certificate details using thumbprint", :properties {:certificateThumbprint {:description "Certificate thumbprint", :type "string"}, :isAdmin {:description "Is this certificate used for admin access from the client, if false, it is used or query only access", :type "boolean"}}, :required ["isAdmin" "certificateThumbprint"]}, :ClusterUpdateParameters {:description "Cluster update request", :properties {:properties #:reference{:definitions "ClusterPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "Cluster update parameters", :type "object"}}}, :ClusterCodeVersionsListResult {:description "The list results of the ServiceFabric runtime versions", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:items #:reference{:definitions "ClusterCodeVersionsResult"}, :type "array"}}}, :SettingsParameterDescription {:description "ServiceFabric settings under sections", :properties {:name {:description "The name of settings property", :type "string"}, :value {:description "The value of the property", :type "string"}}, :required ["name" "value"]}, :ClusterUpgradeDeltaHealthPolicy {:description "Delta health policy for the cluster", :properties {:maxPercentDeltaUnhealthyApplications {:description "Additional unhealthy applications percentage", :maximum 100, :minimum 0, :type "integer"}, :maxPercentDeltaUnhealthyNodes {:description "Additional unhealthy nodes percentage", :maximum 100, :minimum 0, :type "integer"}, :maxPercentUpgradeDomainDeltaUnhealthyNodes {:description "Additional unhealthy nodes percentage per upgrade domain ", :maximum 100, :minimum 0, :type "integer"}}, :required ["maxPercentDeltaUnhealthyNodes" "maxPercentUpgradeDomainDeltaUnhealthyNodes" "maxPercentDeltaUnhealthyApplications"]}, :ErrorModel {:description "The structure of the error", :properties {:error {:description "The error detail ", :properties {:code {:description "The error code", :type "string"}, :message {:description "The error message", :type "string"}}}}}, :ClusterUpgradePolicy {:description "Cluster upgrade policy", :properties {:healthCheckStableDuration {:description "The length of time that health checks must pass continuously,it represents .Net TimeSpan", :type "string"}, :overrideUserUpgradePolicy {:description "Use the user defined upgrade policy or not", :type "boolean"}, :upgradeDomainTimeout {:description "The timeout for any upgrade domain,it represents .Net TimeSpan", :type "string"}, :upgradeTimeout {:description "The upgrade timeout,it represents .Net TimeSpan", :type "string"}, :upgradeReplicaSetCheckTimeout {:description "Timeout for replica set upgrade to complete,it represents .Net TimeSpan", :type "string"}, :healthPolicy #:reference{:definitions "ClusterHealthPolicy"}, :deltaHealthPolicy #:reference{:definitions "ClusterUpgradeDeltaHealthPolicy"}, :healthCheckRetryTimeout {:description "The length of time that health checks can fail continuously,it represents .Net TimeSpan", :type "string"}, :forceRestart {:description "Force node to restart or not", :type "boolean"}, :healthCheckWaitDuration {:description "The length of time to wait after completing an upgrade domain before performing health checks, it represents .Net TimeSpan", :type "string"}}, :required ["upgradeReplicaSetCheckTimeout" "healthCheckWaitDuration" "healthCheckStableDuration" "healthCheckRetryTimeout" "upgradeTimeout" "upgradeDomainTimeout" "healthPolicy"]}, :ClusterListResult {:description "Cluster list results", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:items #:reference{:definitions "Cluster"}, :type "array"}}}, :ClusterCodeVersionsResult {:description "The result of the ServiceFabric runtime versions", :properties {:id {:description "The identification of the result", :type "string"}, :name {:description "The name of the result", :type "string"}, :properties #:reference{:definitions "ClusterVersionDetails"}, :type {:description "The result resource type", :type "string"}}}, :CertificateDescription {:description "Certificate details", :properties {:thumbprint {:description "Thumbprint of the primary certificate", :type "string"}, :thumbprintSecondary {:description "Thumbprint of the secondary certificate", :type "string"}, :x509StoreName {:description "The local certificate store location", :enum ["AddressBook" "AuthRoot" "CertificateAuthority" "Disallowed" "My" "Root" "TrustedPeople" "TrustedPublisher"], :type "string"}}, :required ["thumbprint"]}, :EndpointRangeDescription {:description "Port range details", :properties {:endPort {:description "End port of a range of ports", :type "integer"}, :startPort {:description "Starting port of a range of ports", :type "integer"}}, :required ["startPort" "endPort"]}, :OperationResult {:description "Available operation list result", :properties {:display #:reference{:definitions "AvailableOperationDisplay"}, :name {:description "Result name", :type "string"}, :nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :origin {:description "Origin result", :type "string"}}}, :NodeTypeDescription {:description "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster", :properties {:vmInstanceCount {:description "The number of node instances in the node type", :maximum 2147483647, :minimum 1, :type "integer"}, :httpGatewayEndpointPort {:description "The HTTP cluster management endpoint port", :type "integer"}, :reverseProxyEndpointPort {:description "Endpoint used by reverse proxy", :type "integer"}, :isPrimary {:description "Mark this as the primary node type", :type "boolean"}, :name {:description "Name of the node type", :type "string"}, :applicationPorts #:reference{:definitions "EndpointRangeDescription"}, :durabilityLevel {:description "Node type durability Level", :enum ["Bronze" "Silver" "Gold"], :type "string"}, :ephemeralPorts #:reference{:definitions "EndpointRangeDescription"}, :capacities {:additionalProperties {:description "Capacity tag value", :type "string"}, :description "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much of a resource a node has", :type "object"}, :placementProperties {:additionalProperties {:description "Placement tag value", :type "string"}, :description "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run", :type "object"}, :clientConnectionEndpointPort {:description "The TCP cluster management endpoint port", :type "integer"}}, :required ["vmInstanceCount" "name" "clientConnectionEndpointPort" "httpGatewayEndpointPort" "isPrimary"]}, :Cluster {:allOf [#:reference{:definitions "Resource"}], :description "The cluster resource", :properties {:properties #:reference{:definitions "ClusterProperties"}}}, :ClusterHealthPolicy {:description "Defines a health policy used to evaluate the health of the cluster or of a cluster node.", :properties {:maxPercentUnhealthyApplications {:description "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. ", :maximum 100, :minimum 0, :type "integer"}, :maxPercentUnhealthyNodes {:description "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. ", :maximum 100, :minimum 0, :type "integer"}}}, :ClusterPropertiesUpdateParameters {:description "The cluster resource properties can be updated", :properties {:fabricSettings {:description "List of custom fabric settings to configure the cluster, Note, it will overwrite existing collection", :items #:reference{:definitions "SettingsSectionDescription"}, :type "array"}, :clientCertificateThumbprints {:description "The client thumbprint details, it is used for client access for cluster operation, it will override existing collection", :items #:reference{:definitions "ClientCertificateThumbprint"}, :type "array"}, :nodeTypes {:description "The list of node types that make up the cluster, it will override", :items #:reference{:definitions "NodeTypeDescription"}, :type "array"}, :clusterCodeVersion {:description "The ServiceFabric code version, if set it, please make sure you have set upgradeMode to Manual, otherwise ,it will fail, if you are using PUT new cluster, you can get the version by using ClusterVersions_List, if you are updating existing cluster, you can get the availableClusterVersions from Clusters_Get", :type "string"}, :reliabilityLevel {:description "This level is used to set the number of replicas of the system services", :enum ["Bronze" "Silver" "Gold"], :type "string"}, :certificate #:reference{:definitions "CertificateDescription"}, :upgradeMode {:description "Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not", :enum ["Automatic" "Manual"], :type "string"}, :reverseProxyCertificate #:reference{:definitions "CertificateDescription"}, :upgradeDescription #:reference{:definitions "ClusterUpgradePolicy"}, :clientCertificateCommonNames {:description "List of client certificates to whitelist based on common names.", :items #:reference{:definitions "ClientCertificateCommonName"}, :type "array"}}}, :AvailableOperationDisplay {:description "Operation supported by ServiceFabric resource provider", :properties {:description {:description "Operation description", :type "string"}, :operation {:description "Operation name", :type "string"}, :provider {:description "Provider name", :type "string"}, :resource {:description "Resource name", :type "string"}}}, :Resource {:description "The resource model definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :ClusterEnvironment {:description "Cluster operating system, the default will be Windows", :enum ["Windows" "Linux"], :type "string"}, :ClientCertificateCommonName {:description "Client certificate details using common name", :properties {:certificateCommonName {:description "Certificate common name to be granted access; be careful using wild card common names", :type "string"}, :certificateIssuerThumbprint {:description "Certificate issuer thumbprint", :type "string"}, :isAdmin {:description "Is this certificate used for admin access from the client, if false , it is used or query only access", :type "boolean"}}, :required ["isAdmin" "certificateCommonName" "certificateIssuerThumbprint"]}, :SettingsSectionDescription {:description "ServiceFabric section settings", :properties {:name {:description "The name of settings section", :type "string"}, :parameters {:description "Collection of settings in the section, each setting is a tuple consisting of setting name and value", :items #:reference{:definitions "SettingsParameterDescription"}, :type "array"}}, :required ["name" "parameters"]}, :ClusterProperties {:description "The cluster resource properties", :properties {:fabricSettings {:description "List of custom fabric settings to configure the cluster.", :items #:reference{:definitions "SettingsSectionDescription"}, :type "array"}, :provisioningState {:description "The provisioning state of the cluster resource", :enum ["Updating" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :clientCertificateThumbprints {:description "The client thumbprint details ,it is used for client access for cluster operation", :items #:reference{:definitions "ClientCertificateThumbprint"}, :type "array"}, :nodeTypes {:description "The list of node types that make up the cluster", :items #:reference{:definitions "NodeTypeDescription"}, :type "array"}, :clusterCodeVersion {:description "The ServiceFabric code version running in your cluster", :type "string"}, :clusterEndpoint {:description "The endpoint for the cluster connecting to servicefabric resource provider", :readOnly true, :type "string"}, :reliabilityLevel {:description "Cluster reliability level indicates replica set size of system service", :enum ["Bronze" "Silver" "Gold" "Platinum"], :type "string"}, :azureActiveDirectory #:reference{:definitions "AzureActiveDirectory"}, :clusterId {:description "The unique identifier for the cluster resource", :readOnly true, :type "string"}, :diagnosticsStorageAccountConfig #:reference{:definitions "DiagnosticsStorageAccountConfig"}, :vmImage {:description "The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.", :type "string"}, :managementEndpoint {:description "The http management endpoint of the cluster", :type "string"}, :certificate #:reference{:definitions "CertificateDescription"}, :upgradeMode {:description "Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not", :enum ["Automatic" "Manual"], :type "string"}, :clusterState {:description "The state for the cluster", :enum ["WaitingForNodes" "Deploying" "BaselineUpgrade" "UpdatingUserConfiguration" "UpdatingUserCertificate" "UpdatingInfrastructure" "EnforcingClusterVersion" "UpgradeServiceUnreachable" "AutoScale" "Ready"], :readOnly true, :type "string"}, :reverseProxyCertificate #:reference{:definitions "CertificateDescription"}, :availableClusterVersions {:description "The available cluster code version which the cluster can upgrade to, note that you must choose upgradeMode to manual to upgrade to", :items #:reference{:definitions "ClusterVersionDetails"}, :readOnly true, :type "array"}, :upgradeDescription #:reference{:definitions "ClusterUpgradePolicy"}, :clientCertificateCommonNames {:description " List of client certificates to whitelist based on common names", :items #:reference{:definitions "ClientCertificateCommonName"}, :type "array"}}, :required ["managementEndpoint" "nodeTypes"]}, :ClusterVersionDetails {:description "The detail of the ServiceFabric runtime version result", :properties {:codeVersion {:description "The ServiceFabric runtime version of the cluster", :type "string"}, :environment #:reference{:definitions "ClusterEnvironment"}, :supportExpiryUtc {:description "The date of expiry of support of the version", :type "string"}}}}}