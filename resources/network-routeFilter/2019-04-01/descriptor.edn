{:scheme "https", :host "management.azure.com", :info {:description "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.", :title "NetworkManagementClient", :version "2019-04-01"}, :ops {:RouteFilterRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Creates or updates a route in the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the route filter rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Parameters supplied to the create or update route filter rule operation.", :in "body", :name "routeFilterRuleParameters", :required true, :schema #:reference{:definitions "RouteFilterRule"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :RouteFilterRules_ListByRouteFilter {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules", :description "Gets all RouteFilterRules in a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RouteFilters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Gets the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Expands referenced express route bgp peering resources.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :RouteFilters_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Creates or updates a route filter in a specified resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Parameters supplied to the create or update route filter operation.", :in "body", :name "routeFilterParameters", :required true, :schema #:reference{:definitions "RouteFilter"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :RouteFilters_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters", :description "Gets all route filters in a subscription.", :parameters [{:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RouteFilterRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Gets the specified rule from a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RouteFilters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Deletes the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :RouteFilterRules_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Updates a route in the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the route filter rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Parameters supplied to the update route filter rule operation.", :in "body", :name "routeFilterRuleParameters", :required true, :schema #:reference{:definitions "PatchRouteFilterRule"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :RouteFilters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Updates a route filter in a specified resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Parameters supplied to the update route filter operation.", :in "body", :name "routeFilterParameters", :required true, :schema #:reference{:definitions "PatchRouteFilter"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :RouteFilters_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters", :description "Gets all route filters in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RouteFilterRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Deletes the specified rule from a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}}, :parameters nil, :definitions {:PatchRouteFilter {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterPropertiesFormat"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :PatchRouteFilterRule {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Rule Resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterRulePropertiesFormat"}}}, :RouteFilter {:allOf [{:description "Common resource representation.", :properties {:id {:description "Resource ID.", :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Resource.", :properties {:etag {:description "Gets a unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterPropertiesFormat"}}, :required ["location"]}, :RouteFilterListResult {:description "Response for the ListRouteFilters API service call.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "Gets a list of route filters in a resource group.", :items #:reference{:definitions "RouteFilter"}, :type "array"}}}, :RouteFilterPropertiesFormat {:description "Route Filter Resource.", :properties {:ipv6Peerings {:description "A collection of references to express route circuit ipv6 peerings.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Peering in an ExpressRouteCircuit resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the express route circuit peering.", :properties {:secondaryAzurePort {:description "The secondary port.", :type "string"}, :vlanId {:description "The VLAN ID.", :format "int32", :type "integer"}, :lastModifiedBy {:description "Gets whether the provider or the customer last modified the peering.", :type "string"}, :provisioningState {:description "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.", :type "string"}, :peerASN {:description "The peer ASN.", :format "int64", :maximum 4294967295, :minimum 1, :type "integer"}, :routeFilter {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peeredConnections {:description "The list of peered circuit connections associated with Azure Private Peering for this circuit.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the peer express route circuit connection.", :properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authResourceGuid {:description "The resource guid of the authorization used for the express route circuit connection.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit connection state.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CircuitConnectionStatus"}}, :connectionName {:description "The name of the express route circuit connection resource.", :type "string"}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the peer express route circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :readOnly true, :type "array"}, :primaryAzurePort {:description "The primary port.", :type "string"}, :state {:description "The state of peering.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringState"}}, :ipv6PeeringConfig {:description "Contains IPv6 peering config.", :properties {:microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "The advertised public prefix state of the Peering resource.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :routeFilter {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :state {:description "The state of peering.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringState"}}}}, :expressRouteConnection {:description "The ID of the ExpressRouteConnection.", :properties {:id {:description "The ID of the ExpressRouteConnection.", :readOnly true, :type "string"}}}, :microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "The advertised public prefix state of the Peering resource.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :azureASN {:description "The Azure ASN.", :format "int32", :type "integer"}, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :peeringType {:description "The peering type.", :enum ["AzurePublicPeering" "AzurePrivatePeering" "MicrosoftPeering"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringType"}}, :sharedKey {:description "The shared key.", :type "string"}, :gatewayManagerEtag {:description "The GatewayManager Etag.", :type "string"}, :connections {:description "The list of circuit connections associated with Azure Private Peering for this circuit.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the express route circuit connection.", :properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authorizationKey {:description "The authorization key.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit connection state.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CircuitConnectionStatus"}}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :type "array"}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :stats {:description "Contains stats associated with the peering.", :properties {:primarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :primarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}, :secondarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :secondarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}}}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :type "array"}, :peerings {:description "A collection of references to express route circuit peerings.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Peering in an ExpressRouteCircuit resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the express route circuit peering.", :properties {:secondaryAzurePort {:description "The secondary port.", :type "string"}, :vlanId {:description "The VLAN ID.", :format "int32", :type "integer"}, :lastModifiedBy {:description "Gets whether the provider or the customer last modified the peering.", :type "string"}, :provisioningState {:description "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.", :type "string"}, :peerASN {:description "The peer ASN.", :format "int64", :maximum 4294967295, :minimum 1, :type "integer"}, :routeFilter {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peeredConnections {:description "The list of peered circuit connections associated with Azure Private Peering for this circuit.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the peer express route circuit connection.", :properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authResourceGuid {:description "The resource guid of the authorization used for the express route circuit connection.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit connection state.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CircuitConnectionStatus"}}, :connectionName {:description "The name of the express route circuit connection resource.", :type "string"}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the peer express route circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :readOnly true, :type "array"}, :primaryAzurePort {:description "The primary port.", :type "string"}, :state {:description "The state of peering.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringState"}}, :ipv6PeeringConfig {:description "Contains IPv6 peering config.", :properties {:microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "The advertised public prefix state of the Peering resource.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :routeFilter {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :state {:description "The state of peering.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringState"}}}}, :expressRouteConnection {:description "The ID of the ExpressRouteConnection.", :properties {:id {:description "The ID of the ExpressRouteConnection.", :readOnly true, :type "string"}}}, :microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "The advertised public prefix state of the Peering resource.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :azureASN {:description "The Azure ASN.", :format "int32", :type "integer"}, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :peeringType {:description "The peering type.", :enum ["AzurePublicPeering" "AzurePrivatePeering" "MicrosoftPeering"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringType"}}, :sharedKey {:description "The shared key.", :type "string"}, :gatewayManagerEtag {:description "The GatewayManager Etag.", :type "string"}, :connections {:description "The list of circuit connections associated with Azure Private Peering for this circuit.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Properties of the express route circuit connection.", :properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authorizationKey {:description "The authorization key.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit connection state.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CircuitConnectionStatus"}}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :type "array"}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :stats {:description "Contains stats associated with the peering.", :properties {:primarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :primarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}, :secondarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :secondarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}}}}}, :type {:description "Type of the resource.", :readOnly true, :type "string"}}}, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :rules {:description "Collection of RouteFilterRules contained within a route filter.", :items #:reference{:definitions "RouteFilterRule"}, :type "array"}}}, :RouteFilterRule {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Rule Resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties #:reference{:definitions "RouteFilterRulePropertiesFormat"}}}, :RouteFilterRuleListResult {:description "Response for the ListRouteFilterRules API service call.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "Gets a list of RouteFilterRules in a resource group.", :items #:reference{:definitions "RouteFilterRule"}, :type "array"}}}, :RouteFilterRulePropertiesFormat {:description "Route Filter Rule Resource.", :properties {:access {:description "Access to be allowed or denied.", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "Access"}}, :communities {:description "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].", :items {:type "string"}, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :routeFilterRuleType {:description "The rule type of the rule.", :enum ["Community"], :type "string", :x-ms-enum {:modelAsString true, :name "RouteFilterRuleType"}}}, :required ["access" "routeFilterRuleType" "communities"]}}}