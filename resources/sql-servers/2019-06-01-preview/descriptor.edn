{:scheme "https", :host "management.azure.com", :info {:description "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.", :title "SqlManagementClient", :version "2019-06-01-preview"}, :ops {:Servers_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability", :description "Determines whether a resource can be created with the specified name.", :parameters [{:description "The name availability request parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityRequest"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Servers_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers", :description "Gets a list of all servers in the subscription.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Servers_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers", :description "Gets a list of servers in a resource groups.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Servers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}", :description "Deletes a server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Servers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}", :description "Gets a server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Servers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}", :description "Updates a server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The requested server resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ServerUpdate"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :Servers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}", :description "Creates or updates a server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The requested server resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Server"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :put}}, :parameters {:DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}, :ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineInstanceNameParameter {:description "The name of the SqlVirtualMachineInstance.", :in "path", :name "sqlVirtualMachineInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineContainerNameParameter {:description "The name of the SqlVirtualMachineContainer.", :in "path", :name "sqlVirtualMachineContainerName", :required true, :type "string", :x-ms-parameter-location "method"}, :ManagedInstanceNameParameter {:description "The name of the managed instance.", :in "path", :name "managedInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :VirtualClusterNameParameter {:description "The name of the virtual cluster.", :in "path", :name "virtualClusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :BlobAuditingPolicyNameParameter {:description "The name of the blob auditing policy.", :enum ["default"], :in "path", :name "blobAuditingPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:CheckNameAvailabilityRequest {:description "A request to check whether the specified name for a resource is available.", :properties {:name {:type "string"}, :type {:enum ["Microsoft.Sql/servers"], :type "string", :x-ms-enum {:modelAsString false, :name "CheckNameAvailabilityResourceType"}}}, :required ["name" "type"], :type "object"}, :Server {:allOf [#:reference{:definitions "TrackedResource"}], :description "An Azure SQL Database server.", :properties {:identity #:reference{:definitions "ResourceIdentity"}, :kind {:description "Kind of sql server. This is metadata used for the Azure portal experience.", :readOnly true, :type "string"}, :properties #:reference{:definitions "ServerProperties"}}, :required ["location"], :type "object"}, :PrivateEndpointProperty {:properties {:id {:description "Resource id of the private endpoint.", :type "string"}}, :type "object", :x-ms-azure-resource true}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "ARM tracked top level resource.", :properties {:location {:description "Resource location.", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}, :required ["location"], :type "object"}, :PrivateEndpointConnectionProperties {:description "Properties of a private endpoint connection.", :properties {:privateEndpoint #:reference{:definitions "PrivateEndpointProperty"}, :privateLinkServiceConnectionState #:reference{:definitions "PrivateLinkServiceConnectionStateProperty"}, :provisioningState {:description "State of the private endpoint connection.", :enum ["Approving" "Ready" "Dropping" "Failed" "Rejecting"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "PrivateEndpointProvisioningState"}}}, :type "object"}, :ServerPrivateEndpointConnection {:description "A private endpoint connection under a server", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :properties #:reference{:definitions "PrivateEndpointConnectionProperties"}}, :type "object"}, :ServerUpdate {:description "An update request for an Azure SQL Database server.", :properties {:properties #:reference{:definitions "ServerProperties"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}, :type "object"}, :ServerProperties {:description "The properties of a server.", :properties {:administratorLogin {:description "Administrator username for the server. Once created it cannot be changed.", :type "string", :x-ms-mutability ["read" "create"]}, :administratorLoginPassword {:description "The administrator login password (required for server creation).", :type "string", :x-ms-mutability ["create" "update"]}, :fullyQualifiedDomainName {:description "The fully qualified domain name of the server.", :readOnly true, :type "string"}, :privateEndpointConnections {:description "List of private endpoint connections on a server", :items #:reference{:definitions "ServerPrivateEndpointConnection"}, :readOnly true, :type "array"}, :state {:description "The state of the server.", :readOnly true, :type "string"}, :version {:description "The version of the server.", :type "string"}}, :type "object"}, :Resource {:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :PrivateLinkServiceConnectionStateProperty {:properties {:actionsRequired {:description "The actions required for private link service connection.", :enum ["None"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "PrivateLinkServiceConnectionStateActionsRequire"}}, :description {:description "The private link service connection description.", :type "string"}, :status {:description "The private link service connection status.", :enum ["Approved" "Pending" "Rejected" "Disconnected"], :type "string", :x-ms-enum {:modelAsString true, :name "PrivateLinkServiceConnectionStateStatus"}}}, :required ["status" "description"], :type "object"}, :CheckNameAvailabilityResponse {:description "The result of a name availability check.", :properties {:available {:description "True if the name is available, otherwise false.", :readOnly true, :type "boolean"}, :message {:description "A message explaining why the name is unavailable. Will be undefined if the name is available.", :readOnly true, :type "string"}, :name {:description "The name whose availability was checked.", :readOnly true, :type "string"}, :reason {:description "The reason code explaining why the name is unavailable. Will be undefined if the name is available.", :enum ["Invalid" "AlreadyExists"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "CheckNameAvailabilityReason"}}}, :type "object"}, :ServerListResult {:description "A list of servers.", :properties {:nextLink {:description "Link to retrieve next page of results.", :readOnly true, :type "string"}, :value {:description "Array of results.", :items #:reference{:definitions "Server"}, :readOnly true, :type "array"}}, :type "object"}, :ResourceIdentity {:description "Azure Active Directory identity configuration for a resource.", :properties {:principalId {:description "The Azure Active Directory principal id.", :format "uuid", :readOnly true, :type "string"}, :tenantId {:description "The Azure Active Directory tenant id.", :format "uuid", :readOnly true, :type "string"}, :type {:description "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString true, :name "IdentityType"}}}, :type "object"}}}