{:scheme "https", :host "management.azure.com", :info {:description "Migrate your workloads to Azure.", :title "Azure Migrate Hub", :version "2018-09-01-preview"}, :ops {:Events_DeleteEvent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}", :description "Delete the migrate event. Deleting non-existent migrate event is a no-operation.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "eventName"}], :verb :delete}, :Solutions_GetConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/getConfig", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} #:reference{:parameters "api-version"}], :verb :post}, :MigrateProjects_PutMigrateProject {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} {:description "Body with migrate project details.", :in "body", :name "body", :required true, :schema #:reference{:definitions "MigrateProject"}} #:reference{:parameters "acceptLanguage"}], :verb :put}, :Solutions_PatchSolution {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}", :description "Update a solution with specified name. Supports partial updates, for example only tags can be provided.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} {:description "The input for the solution.", :in "body", :name "solutionInput", :required true, :schema #:reference{:definitions "Solution"}} #:reference{:parameters "api-version"}], :verb :patch}, :Databases_EnumerateDatabases {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "continuationToken"} #:reference{:parameters "pageSize"} #:reference{:parameters "acceptLanguage"}], :verb :get}, :MigrateProjects_RefreshMigrateProjectSummary {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/refreshSummary", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} {:description "The goal input which needs to be refreshed.", :in "body", :name "input", :required true, :schema #:reference{:definitions "RefreshSummaryInput"}}], :verb :post}, :Events_GetEvent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "eventName"}], :verb :get}, :MigrateProjects_RegisterTool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/registerTool", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} {:description "Input containing the name of the tool to be registered.", :in "body", :name "input", :required true, :schema #:reference{:definitions "RegisterToolInput"}} #:reference{:parameters "acceptLanguage"}], :verb :post}, :MigrateProjects_PatchMigrateProject {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}", :description "Update a migrate project with specified name. Supports partial updates, for example only tags can be provided.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} {:description "Body with migrate project details.", :in "body", :name "body", :required true, :schema #:reference{:definitions "MigrateProject"}} #:reference{:parameters "acceptLanguage"}], :verb :patch}, :Machines_GetMachine {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines/{machineName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "machineName"}], :verb :get}, :Databases_GetDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases/{databaseName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "databaseName"} #:reference{:parameters "api-version"} #:reference{:parameters "acceptLanguage"}], :verb :get}, :Solutions_PutSolution {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} {:description "The input for the solution.", :in "body", :name "solutionInput", :required true, :schema #:reference{:definitions "Solution"}} #:reference{:parameters "api-version"}], :verb :put}, :Machines_EnumerateMachines {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "continuationToken"} #:reference{:parameters "pageSize"}], :verb :get}, :Solutions_GetSolution {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} #:reference{:parameters "api-version"}], :verb :get}, :DatabaseInstances_EnumerateDatabaseInstances {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "continuationToken"} #:reference{:parameters "pageSize"} #:reference{:parameters "acceptLanguage"}], :verb :get}, :Solutions_CleanupSolutionData {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/cleanupData", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} #:reference{:parameters "api-version"}], :verb :post}, :MigrateProjects_GetMigrateProject {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"}], :verb :get}, :MigrateProjects_DeleteMigrateProject {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}", :description "Delete the migrate project. Deleting non-existent project is a no-operation.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "acceptLanguage"}], :verb :delete}, :Solutions_EnumerateSolutions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"}], :verb :get}, :Events_EnumerateEvents {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "api-version"} #:reference{:parameters "continuationToken"} #:reference{:parameters "pageSize"} #:reference{:parameters "acceptLanguage"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.Migrate/operations", :description "Get a list of REST API supported by Microsoft.Migrate provider.", :parameters nil, :verb :get}, :Solutions_DeleteSolution {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}", :description "Delete the solution. Deleting non-existent project is a no-operation.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "solutionName"} #:reference{:parameters "api-version"} #:reference{:parameters "acceptLanguage"}], :verb :delete}, :DatabaseInstances_GetDatabaseInstance {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances/{databaseInstanceName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "migrateProjectName"} #:reference{:parameters "databaseInstanceName"} #:reference{:parameters "api-version"} #:reference{:parameters "acceptLanguage"}], :verb :get}}, :parameters {:continuationToken {:description "The continuation token.", :in "query", :name "continuationToken", :required false, :type "string", :x-ms-parameter-location "method"}, :eventName {:description "Unique name of an event within a migrate project.", :in "path", :name "eventName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupName {:description "Name of the Azure Resource Group that migrate project is part of.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :solutionName {:description "Unique name of a migration solution within a migrate project.", :in "path", :name "solutionName", :required true, :type "string", :x-ms-parameter-location "method"}, :api-version {:description "Standard request header. Used by service to identify API version used by client.", :enum ["2018-09-01-preview"], :in "query", :name "api-version", :required true, :type "string"}, :databaseInstanceName {:description "Unique name of a database instance in Azure migration hub.", :in "path", :name "databaseInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :pageSize {:description "The number of items to be returned in a single page. This value is honored only if it is less than the 100.", :in "query", :name "pageSize", :required false, :type "integer", :x-ms-parameter-location "method"}, :databaseName {:description "Unique name of a database in Azure migration hub.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :migrateProjectName {:description "Name of the Azure Migrate project.", :in "path", :name "migrateProjectName", :required true, :type "string", :x-ms-parameter-location "method"}, :machineName {:description "Unique name of a machine in Azure migration hub.", :in "path", :name "machineName", :required true, :type "string", :x-ms-parameter-location "method"}, :acceptLanguage {:description "Standard request header. Used by service to respond to client in appropriate language.", :in "header", :name "Accept-Language", :type "string", :x-ms-parameter-location "client"}, :subscriptionId {:description "Azure Subscription Id in which migrate project was created.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:DatabaseInstance {:description "DatabaseInstance REST resource.", :properties {:id {:description "Gets or sets the relative URL to get to this REST resource.", :type "string"}, :name {:description "Gets or sets the name of this REST resource.", :type "string"}, :properties #:reference{:definitions "DatabaseInstanceProperties"}, :type {:description "Gets the type of this REST resource.", :readOnly true, :type "string"}}, :type "object"}, :ServersSolutionSummary {:allOf [#:reference{:definitions "SolutionSummary"}], :description "Class representing the servers solution summary.", :properties {:assessedCount {:description "Gets or sets the count of servers assessed.", :format "int32", :type "integer"}, :discoveredCount {:description "Gets or sets the count of servers discovered.", :format "int32", :type "integer"}, :migratedCount {:description "Gets or sets the count of servers migrated.", :format "int32", :type "integer"}, :replicatingCount {:description "Gets or sets the count of servers being replicated.", :format "int32", :type "integer"}, :testMigratedCount {:description "Gets or sets the count of servers test migrated.", :format "int32", :type "integer"}}, :type "object", :x-ms-discriminator-value "Servers"}, :IEdmNavigationPropertyBinding {:properties {:navigationProperty #:reference{:definitions "IEdmNavigationProperty"}, :path #:reference{:definitions "IEdmPathExpression"}, :target #:reference{:definitions "IEdmNavigationSource"}}, :type "object"}, :MigrationDetails {:description "Migration properties that can be shared by various publishers.", :properties {:extendedInfo {:additionalProperties {:type "string"}, :description "Gets or sets the ISV specific extended information.", :type "object"}, :machineManagerId {:description "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).", :type "string"}, :targetVMArmId {:description "Gets or sets the ARM id the migrated VM.", :type "string"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the machine details.", :format "date-time", :type "string"}, :solutionName {:description "Gets or sets the name of the solution that sent the data.", :type "string"}, :machineId {:description "Gets or sets the unique identifier of the machine.", :type "string"}, :migrationPhase {:description "Gets or sets the phase of migration of the machine.", :type "string"}, :replicationProgressPercentage {:description "Gets or sets the progress percentage of migration on the machine.", :format "int32", :type "integer"}, :ipAddresses {:description "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.", :items {:type "string"}, :type "array"}, :fqdn {:description "Gets or sets the FQDN of the machine.", :type "string"}, :fabricType {:description "Gets or sets the fabric type.", :type "string"}, :macAddresses {:description "Gets or sets the list of MAC addresses of the machine.", :items {:type "string"}, :type "array"}, :migrationTested {:description "Gets or sets a value indicating whether migration was tested on the machine.", :type "boolean"}, :enqueueTime {:description "Gets or sets the time the message was enqueued.", :type "string"}, :biosId {:description "Gets or sets the BIOS ID of the machine.", :type "string"}, :machineName {:description "Gets or sets the name of the machine.", :type "string"}}, :type "object"}, :RegistrationResult {:description "Class representing the registration status of a tool with the migrate project.", :properties {:isRegistered {:description "Gets or sets a value indicating whether the tool is registered or not.", :type "boolean"}}, :type "object"}, :ODataQueryContext {:properties {:defaultQuerySettings #:reference{:definitions "DefaultQuerySettings"}, :elementClrType {:readOnly true, :type "string"}, :elementType #:reference{:definitions "IEdmType"}, :model #:reference{:definitions "IEdmModel"}, :navigationSource #:reference{:definitions "IEdmNavigationSource"}, :path #:reference{:definitions "ODataPath"}, :requestContainer #:reference{:definitions "IServiceProvider"}}, :type "object"}, :SolutionsCollection {:description "Collection of solutions.", :properties {:nextLink {:description "Gets or sets the value of next link.", :type "string"}, :value {:description "Gets or sets the list of solutions.", :items #:reference{:definitions "Solution"}, :type "array"}}, :type "object"}, :DatabaseAssessmentDetails {:description "Assessment properties that can be shared by various publishers.", :properties {:extendedInfo {:additionalProperties {:type "string"}, :description "Gets or sets the extended properties of the database.", :type "object"}, :breakingChangesCount {:description "Gets or sets the number of breaking changes found.", :format "int32", :type "integer"}, :assessmentTargetType {:description "Gets or sets the assessed target database type.", :type "string"}, :instanceId {:description "Gets or sets the database server instance Id.", :type "string"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the database details.", :format "date-time", :type "string"}, :solutionName {:description "Gets or sets the name of the solution that sent the data.", :type "string"}, :assessmentId {:description "Gets or sets the database assessment scope/Id.", :type "string"}, :compatibilityLevel {:description "Gets or sets the compatibility level of the database.", :type "string"}, :lastAssessedTime {:description "Gets or sets the time when the database was last assessed.", :format "date-time", :type "string"}, :isReadyForMigration {:description "Gets or sets a value indicating whether the database is ready for migration.", :type "boolean"}, :migrationBlockersCount {:description "Gets or sets the number of blocking changes found.", :format "int32", :type "integer"}, :databaseName {:description "Gets or sets the database name.", :type "string"}, :enqueueTime {:description "Gets or sets the time the message was enqueued.", :type "string"}, :databaseSizeInMB {:description "Gets or sets the database size.", :type "string"}}, :type "object"}, :SelectItem {:properties {}, :type "object"}, "ODataQueryOptions`1" {:properties {:filter #:reference{:definitions "FilterQueryOption"}}, :type "object"}, :DatabaseProperties {:description "Properties of the database resource.", :properties {:assessmentData {:description "Gets or sets the assessment details of the database published by various sources.", :items #:reference{:definitions "DatabaseAssessmentDetails"}, :type "array"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the database.", :format "date-time", :type "string"}}, :type "object"}, :RefreshSummaryInput {:description "Class representing the refresh summary input.", :properties {:goal {:description "Gets or sets the goal for which summary needs to be refreshed.", :enum ["Servers" "Databases"], :type "string"}}, :type "object"}, :IEdmModel {:properties {:declaredNamespaces {:items {:type "string"}, :readOnly true, :type "array"}, :directValueAnnotationsManager #:reference{:definitions "IEdmDirectValueAnnotationsManager"}, :entityContainer #:reference{:definitions "IEdmEntityContainer"}, :referencedModels {:items #:reference{:definitions "IEdmModel"}, :readOnly true, :type "array"}, :schemaElements {:items #:reference{:definitions "IEdmSchemaElement"}, :readOnly true, :type "array"}, :vocabularyAnnotations {:items #:reference{:definitions "IEdmVocabularyAnnotation"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseProjectSummary {:allOf [#:reference{:definitions "ProjectSummary"}], :description "The database project summary class.", :properties {}, :type "object", :x-ms-discriminator-value "Databases"}, :Operation {:description "A REST API operation supported by the provider.", :properties {:display #:reference{:definitions "OperationDisplay"}, :name {:description "Name of the operation.", :readOnly true, :type "string"}, :origin {:description "Origin of the operation.", :readOnly true, :type "string"}}, :type "object"}, :MachineCollection {:description "Collection of machines.", :properties {:nextLink {:description "Gets or sets the value of nextLink.", :type "string"}, :value {:description "Gets or sets the machines.", :items #:reference{:definitions "Machine"}, :type "array"}}, :type "object"}, :IEdmStructuralProperty {:properties {:declaringType #:reference{:definitions "IEdmStructuredType"}, :defaultValueString {:readOnly true, :type "string"}, :name {:readOnly true, :type "string"}, :propertyKind {:enum ["None" "Structural" "Navigation"], :readOnly true, :type "string"}, :type #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :AssessmentDetails {:description "Assessment properties that can be shared by various publishers.", :properties {:extendedInfo {:additionalProperties {:type "string"}, :description "Gets or sets the ISV specific extended information.", :type "object"}, :machineManagerId {:description "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).", :type "string"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the machine details.", :format "date-time", :type "string"}, :solutionName {:description "Gets or sets the name of the solution that sent the data.", :type "string"}, :machineId {:description "Gets or sets the unique identifier of the machine.", :type "string"}, :ipAddresses {:description "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.", :items {:type "string"}, :type "array"}, :assessmentId {:description "Gets or sets the id of the assessment done on the machine.", :type "string"}, :targetVMSize {:description "Gets or sets the target VM size.", :type "string"}, :fqdn {:description "Gets or sets the FQDN of the machine.", :type "string"}, :fabricType {:description "Gets or sets the fabric type.", :type "string"}, :macAddresses {:description "Gets or sets the list of MAC addresses of the machine.", :items {:type "string"}, :type "array"}, :enqueueTime {:description "Gets or sets the time the message was enqueued.", :type "string"}, :biosId {:description "Gets or sets the BIOS ID of the machine.", :type "string"}, :machineName {:description "Gets or sets the name of the machine.", :type "string"}, :targetVMLocation {:description "Gets or sets the target VM location.", :type "string"}, :targetStorageType {:additionalProperties {:type "string"}, :description "Gets or sets the target storage type.", :type "object"}}, :type "object"}, :SolutionConfig {:description "Class representing the config for the solution in the migrate project.", :properties {:publisherSasUri {:description "Gets or sets the publisher sas uri for the solution.", :type "string"}}, :type "object"}, :SingleValueNode {:properties {:kind {:enum ["None" "Constant" "Convert" "NonResourceRangeVariableReference" "BinaryOperator" "UnaryOperator" "SingleValuePropertyAccess" "CollectionPropertyAccess" "SingleValueFunctionCall" "Any" "CollectionNavigationNode" "SingleNavigationNode" "SingleValueOpenPropertyAccess" "SingleResourceCast" "All" "CollectionResourceCast" "ResourceRangeVariableReference" "SingleResourceFunctionCall" "CollectionFunctionCall" "CollectionResourceFunctionCall" "NamedFunctionParameter" "ParameterAlias" "EntitySet" "KeyLookup" "SearchTerm" "CollectionOpenPropertyAccess" "CollectionComplexNode" "SingleComplexNode" "Count" "SingleValueCast" "CollectionPropertyNode" "AggregatedCollectionPropertyNode" "In" "CollectionConstant"], :readOnly true, :type "string"}, :typeReference #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :IEdmNavigationSource {:properties {:name {:readOnly true, :type "string"}, :navigationPropertyBindings {:items #:reference{:definitions "IEdmNavigationPropertyBinding"}, :readOnly true, :type "array"}, :path #:reference{:definitions "IEdmPathExpression"}, :type #:reference{:definitions "IEdmType"}}, :type "object"}, :MachineProperties {:description "Properties of the machine resource.", :properties {:assessmentData {:description "Gets or sets the assessment details of the machine published by various sources.", :items #:reference{:definitions "AssessmentDetails"}, :type "array"}, :discoveryData {:description "Gets or sets the discovery details of the machine published by various sources.", :items #:reference{:definitions "DiscoveryDetails"}, :type "array"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the machine.", :format "date-time", :type "string"}, :migrationData {:description "Gets or sets the migration details of the machine published by various sources.", :items #:reference{:definitions "MigrationDetails"}, :type "array"}}, :type "object"}, :IEdmVocabularyAnnotatable {:properties {}, :type "object"}, :SolutionDetails {:description "Class representing the details of the solution.", :properties {:assessmentCount {:description "Gets or sets the count of assessments reported by the solution.", :format "int32", :type "integer"}, :extendedDetails {:additionalProperties {:type "string"}, :description "Gets or sets the extended details reported by the solution.", :type "object"}, :groupCount {:description "Gets or sets the count of groups reported by the solution.", :format "int32", :type "integer"}}, :type "object"}, :IEdmSchemaElement {:properties {:name {:readOnly true, :type "string"}, :namespace {:readOnly true, :type "string"}, :schemaElementKind {:enum ["None" "TypeDefinition" "Term" "Action" "EntityContainer" "Function"], :readOnly true, :type "string"}}, :type "object"}, :ProjectSummary {:description "The project summary class.", :discriminator "instanceType", :properties {:extendedSummary {:additionalProperties {:type "string"}, :description "Gets or sets the extended summary.", :type "object"}, :instanceType {:description "Gets the Instance type.", :readOnly true, :type "string"}, :lastSummaryRefreshedTime {:description "Gets or sets the time when summary was last refreshed.", :format "date-time", :type "string"}, :refreshSummaryState {:description "Gets or sets the state of refresh summary.", :enum ["Started" "InProgress" "Completed" "Failed"], :type "string"}}, :type "object"}, :IEdmType {:properties {:typeKind {:enum ["None" "Primitive" "Entity" "Complex" "Collection" "EntityReference" "Enum" "TypeDefinition" "Untyped" "Path"], :readOnly true, :type "string"}}, :type "object"}, :MigrateProjectProperties {:description "Class for migrate project properties.", :properties {:lastSummaryRefreshedTime {:description "Gets the last time the project summary was refreshed.", :format "date-time", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the migrate project.", :enum ["Accepted" "Creating" "Deleting" "Failed" "Moving" "Succeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :refreshSummaryState {:description "Gets the refresh summary state.", :enum ["Started" "InProgress" "Completed" "Failed"], :readOnly true, :type "string"}, :registeredTools {:description "Gets or sets the list of tools registered with the migrate project.", :items {:enum ["ServerDiscovery" "ServerAssessment" "ServerMigration" "Cloudamize" "Turbonomic" "Zerto" "CorentTech" "ServerAssessmentV1" "ServerMigration_Replication" "Carbonite" "DataMigrationAssistant" "DatabaseMigrationService"], :type "string"}, :type "array"}, :summary {:additionalProperties #:reference{:definitions "ProjectSummary"}, :description "Gets the summary of the migrate project.", :readOnly true, :type "object"}}, :type "object"}, :OperationResultList {:description "List of API operations.", :properties {:value {:description "List of operations.", :items #:reference{:definitions "Operation"}, :type "array"}}, :type "object"}, :IEdmNavigationProperty {:properties {:containsTarget {:readOnly true, :type "boolean"}, :declaringType #:reference{:definitions "IEdmStructuredType"}, :name {:readOnly true, :type "string"}, :onDelete {:enum ["None" "Cascade"], :readOnly true, :type "string"}, :partner #:reference{:definitions "IEdmNavigationProperty"}, :propertyKind {:enum ["None" "Structural" "Navigation"], :readOnly true, :type "string"}, :referentialConstraint #:reference{:definitions "IEdmReferentialConstraint"}, :type #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :IEdmEntityContainerElement {:properties {:container #:reference{:definitions "IEdmEntityContainer"}, :containerElementKind {:enum ["None" "EntitySet" "ActionImport" "FunctionImport" "Singleton"], :readOnly true, :type "string"}, :name {:readOnly true, :type "string"}}, :type "object"}, :RangeVariable {:properties {:kind {:format "int32", :readOnly true, :type "integer"}, :name {:readOnly true, :type "string"}, :typeReference #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :IEdmPathExpression {:properties {:expressionKind {:enum ["None" "BinaryConstant" "BooleanConstant" "DateTimeOffsetConstant" "DecimalConstant" "FloatingConstant" "GuidConstant" "IntegerConstant" "StringConstant" "DurationConstant" "Null" "Record" "Collection" "Path" "If" "Cast" "IsType" "FunctionApplication" "LabeledExpressionReference" "Labeled" "PropertyPath" "NavigationPropertyPath" "DateConstant" "TimeOfDayConstant" "EnumMember" "AnnotationPath"], :readOnly true, :type "string"}, :path {:readOnly true, :type "string"}, :pathSegments {:items {:type "string"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseCollection {:description "Collection of databases.", :properties {:nextLink {:description "Gets or sets the value of nextLink.", :type "string"}, :value {:description "Gets or sets the databases.", :items #:reference{:definitions "Database"}, :type "array"}}, :type "object"}, :MigrateEventProperties {:description "Properties of the error resource.", :discriminator "instanceType", :properties {:clientRequestId {:description "Gets or sets the client request Id of the payload for which the event is being reported.", :type "string"}, :errorCode {:description "Gets or sets the error code.", :type "string"}, :errorMessage {:description "Gets or sets the error message.", :type "string"}, :instanceType {:description "Gets the Instance type.", :readOnly true, :type "string"}, :possibleCauses {:description "Gets or sets the possible causes for the error.", :type "string"}, :recommendation {:description "Gets or sets the recommendation for the error.", :type "string"}, :solution {:description "Gets or sets the solution for which the error is being reported.", :type "string"}}, :type "object"}, :Database {:description "Database REST resource.", :properties {:id {:description "Gets or sets the relative URL to get to this REST resource.", :type "string"}, :name {:description "Gets or sets the name of this REST resource.", :type "string"}, :properties #:reference{:definitions "DatabaseProperties"}, :type {:description "Gets the type of this REST resource.", :readOnly true, :type "string"}}, :type "object"}, :Solution {:description "Solution REST Resource.", :properties {:etag {:description "Gets or sets the ETAG for optimistic concurrency control.", :type "string"}, :id {:description "Gets the relative URL to get to this REST resource.", :readOnly true, :type "string"}, :name {:description "Gets the name of this REST resource.", :readOnly true, :type "string"}, :properties #:reference{:definitions "SolutionProperties"}, :type {:description "Gets the type of this REST resource.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :ODataQueryValidator {:properties {}, :type "object"}, :MigrateEvent {:description "MigrateEvent REST resource.", :properties {:id {:description "Gets or sets the relative URL to get to this REST resource.", :type "string"}, :name {:description "Gets or sets the name of this REST resource.", :type "string"}, :properties #:reference{:definitions "MigrateEventProperties"}, :type {:description "Gets the type of this REST resource.", :readOnly true, :type "string"}}, :type "object"}, :DatabaseInstanceSummary {:description "Class representing the database instance summary object.", :properties {:databasesAssessedCount {:description "Gets or sets the count of databases assessed.", :format "int32", :type "integer"}, :migrationReadyCount {:description "Gets or sets the count of databases ready for migration.", :format "int32", :type "integer"}}, :type "object"}, :FilterQueryValidator {:properties {}, :type "object"}, :SelectExpandClause {:properties {:allSelected {:readOnly true, :type "boolean"}, :selectedItems {:items #:reference{:definitions "SelectItem"}, :readOnly true, :type "array"}}, :type "object"}, :DefaultQuerySettings {:properties {:enableCount {:type "boolean"}, :enableExpand {:type "boolean"}, :enableFilter {:type "boolean"}, :enableOrderBy {:type "boolean"}, :enableSelect {:type "boolean"}, :maxTop {:format "int32", :type "integer"}}, :type "object"}, :ApplyClause {:properties {:transformations {:items #:reference{:definitions "TransformationNode"}, :readOnly true, :type "array"}}, :type "object"}, :IEdmEntityContainer {:properties {:elements {:items #:reference{:definitions "IEdmEntityContainerElement"}, :readOnly true, :type "array"}, :name {:readOnly true, :type "string"}, :namespace {:readOnly true, :type "string"}, :schemaElementKind {:enum ["None" "TypeDefinition" "Term" "Action" "EntityContainer" "Function"], :readOnly true, :type "string"}}, :type "object"}, :IEdmReferentialConstraint {:properties {:propertyPairs {:items #:reference{:definitions "EdmReferentialConstraintPropertyPair"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseMigrateEventProperties {:allOf [#:reference{:definitions "MigrateEventProperties"}], :description "Properties of the database error resource.", :properties {:database {:description "Gets or sets the database for which the error is being reported.", :type "string"}, :databaseInstanceId {:description "Gets or sets the database instance for which the error is being reported.", :type "string"}}, :type "object", :x-ms-discriminator-value "Databases"}, :TransformationNode {:properties {:kind {:enum ["Aggregate" "GroupBy" "Filter" "Compute"], :readOnly true, :type "string"}}, :type "object"}, :IEdmDirectValueAnnotationsManager {:properties {}, :type "object"}, :DatabasesSolutionSummary {:allOf [#:reference{:definitions "SolutionSummary"}], :description "Class representing the databases solution summary.", :properties {:databaseInstancesAssessedCount {:description "Gets or sets the count of database instances assessed.", :format "int32", :type "integer"}, :databasesAssessedCount {:description "Gets or sets the count of databases assessed.", :format "int32", :type "integer"}, :migrationReadyCount {:description "Gets or sets the count of databases ready for migration.", :format "int32", :type "integer"}}, :type "object", :x-ms-discriminator-value "Databases"}, :IEdmExpression {:properties {:expressionKind {:enum ["None" "BinaryConstant" "BooleanConstant" "DateTimeOffsetConstant" "DecimalConstant" "FloatingConstant" "GuidConstant" "IntegerConstant" "StringConstant" "DurationConstant" "Null" "Record" "Collection" "Path" "If" "Cast" "IsType" "FunctionApplication" "LabeledExpressionReference" "Labeled" "PropertyPath" "NavigationPropertyPath" "DateConstant" "TimeOfDayConstant" "EnumMember" "AnnotationPath"], :readOnly true, :type "string"}}, :type "object"}, :ODataPath {:properties {:edmType #:reference{:definitions "IEdmType"}, :navigationSource #:reference{:definitions "IEdmNavigationSource"}, :path {:items #:reference{:definitions "ODataPathSegment"}, :readOnly true, :type "array"}, :pathTemplate {:readOnly true, :type "string"}, :segments {:items #:reference{:definitions "ODataPathSegment"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseInstanceCollection {:description "Collection of database instances.", :properties {:nextLink {:description "Gets or sets the value of nextLink.", :type "string"}, :value {:description "Gets or sets the database instances.", :items #:reference{:definitions "DatabaseInstance"}, :type "array"}}, :type "object"}, :SelectExpandQueryValidator {:properties {}, :type "object"}, :IEdmProperty {:properties {:declaringType #:reference{:definitions "IEdmStructuredType"}, :name {:readOnly true, :type "string"}, :propertyKind {:enum ["None" "Structural" "Navigation"], :readOnly true, :type "string"}, :type #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :SolutionSummary {:description "The solution summary class.", :discriminator "instanceType", :properties {:instanceType {:description "Gets the Instance type.", :readOnly true, :type "string"}}, :type "object"}, :EdmReferentialConstraintPropertyPair {:properties {:dependentProperty #:reference{:definitions "IEdmStructuralProperty"}, :principalProperty #:reference{:definitions "IEdmStructuralProperty"}}, :type "object"}, :IEdmStructuredType {:properties {:baseType #:reference{:definitions "IEdmStructuredType"}, :declaredProperties {:items #:reference{:definitions "IEdmProperty"}, :readOnly true, :type "array"}, :isAbstract {:readOnly true, :type "boolean"}, :isOpen {:readOnly true, :type "boolean"}, :typeKind {:enum ["None" "Primitive" "Entity" "Complex" "Collection" "EntityReference" "Enum" "TypeDefinition" "Untyped" "Path"], :readOnly true, :type "string"}}, :type "object"}, :FilterClause {:properties {:expression #:reference{:definitions "SingleValueNode"}, :itemType #:reference{:definitions "IEdmTypeReference"}, :rangeVariable #:reference{:definitions "RangeVariable"}}, :type "object"}, :EventCollection {:description "Collection of events.", :properties {:nextLink {:description "Gets or sets the value of nextLink.", :type "string"}, :value {:description "Gets or sets the machines.", :items #:reference{:definitions "MigrateEvent"}, :type "array"}}, :type "object"}, :OperationDisplay {:description "Displayable properties of the operation.", :properties {:description {:description "Description of the operation.", :readOnly true, :type "string"}, :operation {:description "Operation Type.", :readOnly true, :type "string"}, :provider {:description "Provider of the operation.", :readOnly true, :type "string"}, :resource {:description "Resource operated on by the operation.", :readOnly true, :type "string"}}, :readOnly true, :type "object"}, :RefreshSummaryResult {:description "Class representing the refresh summary status of the migrate project.", :properties {:isRefreshed {:description "Gets or sets a value indicating whether the migrate project summary is refreshed.", :type "boolean"}}, :type "object"}, :RegisterToolInput {:description "Class representing the register tool input.", :properties {:tool {:description "Gets or sets the tool to be registered.", :enum ["ServerDiscovery" "ServerAssessment" "ServerMigration" "Cloudamize" "Turbonomic" "Zerto" "CorentTech" "ServerAssessmentV1" "ServerMigration_Replication" "Carbonite" "DataMigrationAssistant" "DatabaseMigrationService"], :type "string"}}, :type "object"}, :IEdmVocabularyAnnotation {:properties {:qualifier {:readOnly true, :type "string"}, :target #:reference{:definitions "IEdmVocabularyAnnotatable"}, :term #:reference{:definitions "IEdmTerm"}, :value #:reference{:definitions "IEdmExpression"}}, :type "object"}, :ODataRawQueryOptions {:properties {:filter {:readOnly true, :type "string"}}, :type "object"}, :SolutionProperties {:description "Class for solution properties.", :properties {:cleanupState {:description "Gets or sets the cleanup state of the solution.", :enum ["None" "Started" "InProgress" "Completed" "Failed"], :type "string"}, :details #:reference{:definitions "SolutionDetails"}, :goal {:description "Gets or sets the goal of the solution.", :enum ["Servers" "Databases"], :type "string"}, :purpose {:description "Gets or sets the purpose of the solution.", :enum ["Discovery" "Assessment" "Migration"], :type "string"}, :status {:description "Gets or sets the current status of the solution.", :enum ["Inactive" "Active"], :type "string"}, :summary #:reference{:definitions "SolutionSummary"}, :tool {:description "Gets or sets the tool being used in the solution.", :enum ["ServerDiscovery" "ServerAssessment" "ServerMigration" "Cloudamize" "Turbonomic" "Zerto" "CorentTech" "ServerAssessmentV1" "ServerMigration_Replication" "Carbonite" "DataMigrationAssistant" "DatabaseMigrationService"], :type "string"}}, :type "object"}, :IEdmTerm {:properties {:appliesTo {:readOnly true, :type "string"}, :defaultValue {:readOnly true, :type "string"}, :name {:readOnly true, :type "string"}, :namespace {:readOnly true, :type "string"}, :schemaElementKind {:enum ["None" "TypeDefinition" "Term" "Action" "EntityContainer" "Function"], :readOnly true, :type "string"}, :type #:reference{:definitions "IEdmTypeReference"}}, :type "object"}, :DatabaseInstanceProperties {:description "Properties of the database instance resource.", :properties {:discoveryData {:description "Gets or sets the assessment details of the database instance published by various sources.", :items #:reference{:definitions "DatabaseInstanceDiscoveryDetails"}, :type "array"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the database.", :format "date-time", :type "string"}, :summary {:additionalProperties #:reference{:definitions "DatabaseInstanceSummary"}, :description "Gets or sets the database instances summary per solution. The key of dictionary is the solution name and value is the corresponding database instance summary object.", :type "object"}}, :type "object"}, :IServiceProvider {:properties {}, :type "object"}, :Machine {:description "Machine REST resource.", :properties {:id {:description "Gets or sets the relative URL to get to this REST resource.", :type "string"}, :name {:description "Gets or sets the name of this REST resource.", :type "string"}, :properties #:reference{:definitions "MachineProperties"}, :type {:description "Gets the type of this REST resource.", :readOnly true, :type "string"}}, :type "object"}, :Object {:properties {}, :type "object"}, :FilterQueryOption {:properties {:context #:reference{:definitions "ODataQueryContext"}, :filterClause #:reference{:definitions "FilterClause"}, :rawValue {:readOnly true, :type "string"}, :validator #:reference{:definitions "FilterQueryValidator"}}, :type "object"}, :DiscoveryDetails {:description "Discovery properties that can be published by various ISVs.", :properties {:extendedInfo {:additionalProperties {:type "string"}, :description "Gets or sets the ISV specific extended information.", :type "object"}, :machineManagerId {:description "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).", :type "string"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the machine details.", :format "date-time", :type "string"}, :osName {:description "Gets or sets the OS name.", :type "string"}, :solutionName {:description "Gets or sets the name of the solution that sent the data.", :type "string"}, :machineId {:description "Gets or sets the unique identifier of the machine.", :type "string"}, :ipAddresses {:description "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.", :items {:type "string"}, :type "array"}, :fqdn {:description "Gets or sets the FQDN of the machine.", :type "string"}, :fabricType {:description "Gets or sets the fabric type.", :type "string"}, :macAddresses {:description "Gets or sets the list of MAC addresses of the machine.", :items {:type "string"}, :type "array"}, :osVersion {:description "Gets or sets the OS version.", :type "string"}, :enqueueTime {:description "Gets or sets the time the message was enqueued.", :type "string"}, :biosId {:description "Gets or sets the BIOS ID of the machine.", :type "string"}, :machineName {:description "Gets or sets the name of the machine.", :type "string"}, :osType {:description "Gets or sets the OS type.", :type "string"}}, :type "object"}, :MachineMigrateEventProperties {:allOf [#:reference{:definitions "MigrateEventProperties"}], :description "Properties of the machine error resource.", :properties {:machine {:description "Gets or sets the machine for which the error is being reported.", :type "string"}}, :type "object", :x-ms-discriminator-value "Servers"}, :ServersProjectSummary {:allOf [#:reference{:definitions "ProjectSummary"}], :description "Class representing the servers project summary.", :properties {:assessedCount {:description "Gets or sets the count of entities assessed.", :format "int32", :type "integer"}, :discoveredCount {:description "Gets or sets the count of entities discovered.", :format "int32", :type "integer"}, :migratedCount {:description "Gets or sets the count of entities migrated.", :format "int32", :type "integer"}, :replicatingCount {:description "Gets or sets the count of entities being replicated.", :format "int32", :type "integer"}, :testMigratedCount {:description "Gets or sets the count of entities test migrated.", :format "int32", :type "integer"}}, :type "object", :x-ms-discriminator-value "Servers"}, :ODataPathSegment {:properties {:edmType #:reference{:definitions "IEdmType"}, :identifier {:type "string"}}, :type "object"}, :DatabaseInstanceDiscoveryDetails {:description "Discovery properties that can be shared by various publishers.", :properties {:extendedInfo {:additionalProperties {:type "string"}, :description "Gets or sets the extended properties of the database server.", :type "object"}, :instanceType {:description "Gets or sets the database instance type.", :type "string"}, :instanceId {:description "Gets or sets the database instance Id.", :type "string"}, :instanceName {:description "Gets or sets the database instance name.", :type "string"}, :lastUpdatedTime {:description "Gets or sets the time of the last modification of the database instance details.", :format "date-time", :type "string"}, :solutionName {:description "Gets or sets the name of the solution that sent the data.", :type "string"}, :hostName {:description "Gets or sets the host name of the database server.", :type "string"}, :enqueueTime {:description "Gets or sets the time the message was enqueued.", :type "string"}, :ipAddress {:description "Gets or sets the IP addresses of the database server. IP addresses could be IP V4 or IP V6.", :type "string"}, :instanceVersion {:description "Gets or sets the database instance version.", :type "string"}, :portNumber {:description "Gets or sets the port number of the database server.", :format "int32", :type "integer"}}, :type "object"}, :MigrateProject {:description "Migrate Project REST Resource.", :properties {:eTag {:description "Gets or sets the eTag for concurrency control.", :type "string"}, :id {:description "Gets the relative URL to get this migrate project.", :readOnly true, :type "string"}, :location {:description "Gets or sets the Azure location in which migrate project is created.", :type "string"}, :name {:description "Gets the name of the migrate project.", :readOnly true, :type "string"}, :properties #:reference{:definitions "MigrateProjectProperties"}, :tags {:description "Gets or sets the tags.", :properties {:additionalProperties {:type "string"}}, :type "object"}, :type {:description "Handled by resource provider. Type = Microsoft.Migrate/MigrateProject.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :IEdmTypeReference {:properties {:definition #:reference{:definitions "IEdmType"}, :isNullable {:readOnly true, :type "boolean"}}, :type "object"}}}