{:scheme "https", :host "azure.local", :info {:description "Creates an Azure Data Lake Analytics job client.", :title "DataLakeAnalyticsJobManagementClient", :version "2016-11-01"}, :ops {:Job_GetStatistics {:path "/Jobs/{jobIdentity}/GetStatistics", :description "Gets statistics of the specified job.", :parameters [{:description "Job Information ID.", :format "uuid", :in "path", :name "jobIdentity", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Job_Create {:path "/Jobs/{jobIdentity}", :description "Submits a job to the specified Data Lake Analytics account.", :parameters [{:description "Job identifier. Uniquely identifies the job across all jobs submitted to the service.", :format "uuid", :in "path", :name "jobIdentity", :required true, :type "string"} {:description "The parameters to submit a job.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CreateJobParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Job_Get {:path "/Jobs/{jobIdentity}", :description "Gets the job information for the specified job ID.", :parameters [{:description "JobInfo ID.", :format "uuid", :in "path", :name "jobIdentity", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Job_List {:path "/Jobs", :description "Lists the jobs, if any, associated with the specified Data Lake Analytics account. The response includes a link to the next page of results, if any.", :parameters [{:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :minimum 1, :name "$skip", :required false, :type "integer"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Pipeline_List {:path "/pipelines", :description "Lists all pipelines.", :parameters [{:description "The start date for when to get the list of pipelines. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "startDateTime", :required false, :type "string"} {:description "The end date for when to get the list of pipelines. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "endDateTime", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Pipeline_Get {:path "/pipelines/{pipelineIdentity}", :description "Gets the Pipeline information for the specified pipeline ID.", :parameters [{:description "Pipeline ID.", :format "uuid", :in "path", :name "pipelineIdentity", :required true, :type "string"} {:description "The start date for when to get the pipeline and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "startDateTime", :required false, :type "string"} {:description "The end date for when to get the pipeline and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "endDateTime", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Job_Cancel {:path "/Jobs/{jobIdentity}/CancelJob", :description "Cancels the running job specified by the job ID.", :parameters [{:description "Job identifier. Uniquely identifies the job across all jobs submitted to the service.", :format "uuid", :in "path", :name "jobIdentity", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Job_GetDebugDataPath {:path "/Jobs/{jobIdentity}/GetDebugDataPath", :description "Gets the job debug data information specified by the job ID.", :parameters [{:description "Job identifier. Uniquely identifies the job across all jobs submitted to the service.", :format "uuid", :in "path", :name "jobIdentity", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Recurrence_Get {:path "/recurrences/{recurrenceIdentity}", :description "Gets the recurrence information for the specified recurrence ID.", :parameters [{:description "Recurrence ID.", :format "uuid", :in "path", :name "recurrenceIdentity", :required true, :type "string"} {:description "The start date for when to get the recurrence and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "startDateTime", :required false, :type "string"} {:description "The end date for when to get recurrence and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "endDateTime", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Recurrence_List {:path "/recurrences", :description "Lists all recurrences.", :parameters [{:description "The start date for when to get the list of recurrences. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "startDateTime", :required false, :type "string"} {:description "The end date for when to get the list of recurrences. The startDateTime and endDateTime can be no more than 30 days apart.", :format "date-time", :in "query", :name "endDateTime", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Job_Build {:path "/BuildJob", :description "Builds (compiles) the specified job in the specified Data Lake Analytics account for job correctness and validation.", :parameters [{:description "The parameters to build a job.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BuildJobParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :post}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :adlaJobDnsSuffixInPath {:default "azuredatalakeanalytics.net", :description "Gets the DNS suffix used as the base for all Azure Data Lake Analytics Job service requests.", :in "path", :name "adlaJobDnsSuffix", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}}, :definitions {:CreateUSqlJobProperties {:allOf [#:reference{:definitions "CreateJobProperties"}], :description "U-SQL job properties used when submitting U-SQL jobs.", :properties {:compileMode {:description "the specific compilation mode for the job used during execution. If this is not specified during submission, the server will determine the optimal compilation mode.", :enum ["Semantic" "Full" "SingleBox"], :type "string", :x-ms-enum {:modelAsString false, :name "CompileMode"}}}, :x-ms-discriminator-value "USql"}, :USqlJobProperties {:allOf [#:reference{:definitions "JobProperties"}], :description "U-SQL job properties used when retrieving U-SQL jobs.", :properties {:compileMode {:description "the specific compilation mode for the job used during execution. If this is not specified during submission, the server will determine the optimal compilation mode.", :enum ["Semantic" "Full" "SingleBox"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "CompileMode"}}, :diagnostics {:description "the diagnostics for the job.", :items #:reference{:definitions "Diagnostics"}, :readOnly true, :type "array"}, :totalQueuedTime {:description "the total time this job spent queued. This value should not be set by the user and will be ignored if it is.", :format "duration", :readOnly true, :type "string"}, :debugData #:reference{:definitions "JobDataPath"}, :yarnApplicationTimeStamp {:description "the timestamp (in ticks) for the yarn application executing the job. This value should not be set by the user and will be ignored if it is.", :format "int64", :readOnly true, :type "integer"}, :yarnApplicationId {:description "the ID used to identify the yarn application executing the job. This value should not be set by the user and will be ignored if it is.", :readOnly true, :type "string"}, :statistics #:reference{:definitions "JobStatistics"}, :totalCompilationTime {:description "the total time this job spent compiling. This value should not be set by the user and will be ignored if it is.", :format "duration", :readOnly true, :type "string"}, :resources {:description "the list of resources that are required by the job", :items #:reference{:definitions "JobResource"}, :readOnly true, :type "array"}, :rootProcessNodeId {:description "the ID used to identify the job manager coordinating job execution. This value should not be set by the user and will be ignored if it is.", :readOnly true, :type "string"}, :totalRunningTime {:description "the total time this job spent executing. This value should not be set by the user and will be ignored if it is.", :format "duration", :readOnly true, :type "string"}, :algebraFilePath {:description "the algebra file path after the job has completed", :readOnly true, :type "string"}, :totalPauseTime {:description "the total time this job spent paused. This value should not be set by the user and will be ignored if it is.", :format "duration", :readOnly true, :type "string"}}, :x-ms-discriminator-value "USql"}, :JobDataPath {:description "A Data Lake Analytics job data path item.", :properties {:command {:description "the command that this job data relates to.", :readOnly true, :type "string"}, :jobId {:description "the id of the job this data is for.", :format "uuid", :readOnly true, :type "string"}, :paths {:description "the list of paths to all of the job data.", :items {:type "string"}, :readOnly true, :type "array"}}}, :JobErrorDetails {:description "The Data Lake Analytics job error details.", :properties {:description {:description "the error message description", :readOnly true, :type "string"}, :startOffset {:description "the start offset in the job where the error was found", :format "int32", :readOnly true, :type "integer"}, :helpLink {:description "the link to MSDN or Azure help for this type of error, if any.", :readOnly true, :type "string"}, :internalDiagnostics {:description "the internal diagnostic stack trace if the user requesting the job error details has sufficient permissions it will be retrieved, otherwise it will be empty.", :readOnly true, :type "string"}, :innerError #:reference{:definitions "JobInnerError"}, :endOffset {:description "the end offset in the job where the error was found.", :format "int32", :readOnly true, :type "integer"}, :source {:description "the ultimate source of the failure (usually either SYSTEM or USER).", :readOnly true, :type "string"}, :resolution {:description "the recommended resolution for the failure, if any.", :readOnly true, :type "string"}, :details {:description "the details of the error message.", :readOnly true, :type "string"}, :filePath {:description "the path to any supplemental error files, if any.", :readOnly true, :type "string"}, :severity {:description "the severity level of the failure.", :enum ["Warning" "Error" "Info" "SevereWarning" "Deprecated" "UserWarning"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "SeverityTypes"}}, :lineNumber {:description "the specific line number in the job where the error occurred.", :format "int32", :readOnly true, :type "integer"}, :errorId {:description "the specific identifier for the type of error encountered in the job.", :readOnly true, :type "string"}, :message {:description "the user friendly error message for the failure.", :readOnly true, :type "string"}}}, :JobRecurrenceInformationListResult {:description "List of job recurrence information items.", :properties {:nextLink {:description "the link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "the list of job recurrence information items.", :items #:reference{:definitions "JobRecurrenceInformation"}, :readOnly true, :type "array"}}}, :CreateJobProperties {:description "The common Data Lake Analytics job properties for job submission.", :discriminator "type", :properties {:runtimeVersion {:description "the runtime version of the Data Lake Analytics engine to use for the specific type of job being run.", :type "string"}, :script {:description "the script to run. Please note that the maximum script size is 3 MB.", :type "string"}, :type {:description "the job type of the current job (i.e. USql).", :type "string"}}, :required ["script" "type"]}, :JobPipelineInformationListResult {:description "List of job pipeline information items.", :properties {:nextLink {:description "the link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "the list of job pipeline information items.", :items #:reference{:definitions "JobPipelineInformation"}, :readOnly true, :type "array"}}}, :CreateJobParameters {:allOf [#:reference{:definitions "BaseJobParameters"}], :description "The parameters used to submit a new Data Lake Analytics job.", :properties {:degreeOfParallelism {:default 1, :description "the degree of parallelism used for this job. At most one of degreeOfParallelism and degreeOfParallelismPercent should be specified. If none, a default value of 1 will be used.", :format "int32", :type "integer"}, :degreeOfParallelismPercent {:description "the degree of parallelism in percentage used for this job. At most one of degreeOfParallelism and degreeOfParallelismPercent should be specified. If none, a default value of 1 will be used for degreeOfParallelism.", :format "double", :type "number"}, :logFilePatterns {:description "the list of log file name patterns to find in the logFolder. '*' is the only matching character allowed. Example format: jobExecution*.log or *mylog*.txt", :items {:type "string"}, :type "array"}, :name {:description "the friendly name of the job to submit.", :type "string"}, :priority {:description "the priority value to use for the current job. Lower numbers have a higher priority. By default, a job has a priority of 1000. This must be greater than 0.", :format "int32", :type "integer"}, :related #:reference{:definitions "JobRelationshipProperties"}}, :required ["name"]}, :JobInnerError {:description "The Data Lake Analytics job error details.", :properties {:description {:description "the error message description", :readOnly true, :type "string"}, :helpLink {:description "the link to MSDN or Azure help for this type of error, if any.", :readOnly true, :type "string"}, :internalDiagnostics {:description "the internal diagnostic stack trace if the user requesting the job error details has sufficient permissions it will be retrieved, otherwise it will be empty.", :readOnly true, :type "string"}, :innerError #:reference{:definitions "JobInnerError"}, :diagnosticCode {:description "the diagnostic error code.", :format "int32", :readOnly true, :type "integer"}, :source {:description "the ultimate source of the failure (usually either SYSTEM or USER).", :readOnly true, :type "string"}, :component {:description "the component that failed.", :readOnly true, :type "string"}, :resolution {:description "the recommended resolution for the failure, if any.", :readOnly true, :type "string"}, :details {:description "the details of the error message.", :readOnly true, :type "string"}, :severity {:description "the severity level of the failure.", :enum ["Warning" "Error" "Info" "SevereWarning" "Deprecated" "UserWarning"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "SeverityTypes"}}, :errorId {:description "the specific identifier for the type of error encountered in the job.", :readOnly true, :type "string"}, :message {:description "the user friendly error message for the failure.", :readOnly true, :type "string"}}}, :JobInformationBasic {:description "The common Data Lake Analytics job information properties.", :properties {:hierarchyQueueNode {:description "the name of hierarchy queue node this job is assigned to, null if job has not been assigned yet or the account doesn't have hierarchy queue.", :readOnly true, :type "string"}, :startTime {:description "the start time of the job.", :format "date-time", :readOnly true, :type "string"}, :logFilePatterns {:description "the list of log file name patterns to find in the logFolder. '*' is the only matching character allowed. Example format: jobExecution*.log or *mylog*.txt", :items {:type "string"}, :readOnly true, :type "array"}, :degreeOfParallelismPercent {:description "the degree of parallelism in percentage used for this job.", :format "double", :readOnly true, :type "number"}, :name {:description "the friendly name of the job.", :type "string"}, :endTime {:description "the completion time of the job.", :format "date-time", :readOnly true, :type "string"}, :type {:description "the job type of the current job (Hive or USql).", :enum ["USql" "Hive"], :type "string", :x-ms-enum {:modelAsString false, :name "JobType"}}, :state {:description "the job state. When the job is in the Ended state, refer to Result and ErrorMessage for details.", :enum ["Accepted" "Compiling" "Ended" "New" "Queued" "Running" "Scheduling" "Starting" "Paused" "WaitingForCapacity"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "JobState"}}, :related #:reference{:definitions "JobRelationshipProperties"}, :priority {:description "the priority value for the current job. Lower numbers have a higher priority. By default, a job has a priority of 1000. This must be greater than 0.", :format "int32", :readOnly true, :type "integer"}, :logFolder {:description "the log folder path to use in the following format: adl://<accountName>.azuredatalakestore.net/system/jobservice/jobs/Usql/2016/03/13/17/18/5fe51957-93bc-4de0-8ddc-c5a4753b068b/logs/.", :readOnly true, :type "string"}, :result {:description "the result of job execution or the current result of the running job.", :enum ["None" "Succeeded" "Cancelled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "JobResult"}}, :submitTime {:description "the time the job was submitted to the service.", :format "date-time", :readOnly true, :type "string"}, :degreeOfParallelism {:default 1, :description "the degree of parallelism used for this job.", :format "int32", :readOnly true, :type "integer"}, :jobId {:description "the job's unique identifier (a GUID).", :format "uuid", :readOnly true, :type "string"}, :submitter {:description "the user or account that submitted the job.", :readOnly true, :type "string"}}, :required ["name" "type"]}, :HiveJobProperties {:allOf [#:reference{:definitions "JobProperties"}], :description "Hive job properties used when retrieving Hive jobs.", :properties {:executedStatementCount {:description "the number of statements that have been run based on the script", :format "int32", :readOnly true, :type "integer"}, :logsLocation {:description "the Hive logs location", :readOnly true, :type "string"}, :outputLocation {:description "the location of Hive job output files (both execution output and results)", :readOnly true, :type "string"}, :statementCount {:description "the number of statements that will be run based on the script", :format "int32", :readOnly true, :type "integer"}}, :x-ms-discriminator-value "Hive"}, :JobStatisticsVertexStage {:description "The Data Lake Analytics job statistics vertex stage information.", :properties {:dataToRead {:description "the amount of data remaining to be read, in bytes.", :format "int64", :readOnly true, :type "integer"}, :scheduledCount {:description "the number of currently scheduled vertices in this stage", :format "int32", :readOnly true, :type "integer"}, :tempDataWritten {:description "the amount of temporary data written, in bytes.", :format "int64", :readOnly true, :type "integer"}, :failedCount {:description "the number of failures that occurred in this stage.", :format "int32", :readOnly true, :type "integer"}, :duplicateDiscardCount {:description "the number of duplicates that were discarded.", :format "int32", :readOnly true, :type "integer"}, :totalSucceededTime {:description "the amount of time all successful vertices took in this stage.", :format "duration", :readOnly true, :type "string"}, :dataWritten {:description "the amount of data written, in bytes.", :format "int64", :readOnly true, :type "integer"}, :dataReadIntraPod {:description "the amount of data read in one pod, in bytes.", :format "int64", :readOnly true, :type "integer"}, :totalFailedTime {:description "the amount of time that failed vertices took up in this stage.", :format "duration", :readOnly true, :type "string"}, :succeededCount {:description "the number of vertices that succeeded in this stage.", :format "int32", :readOnly true, :type "integer"}, :minVertexDataRead {:description "the minimum amount of data read in a single vertex, in bytes.", :format "int64", :readOnly true, :type "integer"}, :runningCount {:description "the number of currently running vertices in this stage.", :format "int32", :readOnly true, :type "integer"}, :revocationCount {:description "the number of vertices that were revoked during this stage.", :format "int32", :readOnly true, :type "integer"}, :dataReadCrossPod {:description "the amount of data read across multiple pods, in bytes.", :format "int64", :readOnly true, :type "integer"}, :readFailureCount {:description "the number of read failures in this stage.", :format "int32", :readOnly true, :type "integer"}, :totalProgress {:description "the current progress of this stage, as a percentage.", :format "int32", :readOnly true, :type "integer"}, :totalCount {:description "the total vertex count for this stage.", :format "int32", :readOnly true, :type "integer"}, :dataRead {:description "the amount of data read, in bytes.", :format "int64", :readOnly true, :type "integer"}, :maxVertexDataRead {:description "the maximum amount of data read in a single vertex, in bytes.", :format "int64", :readOnly true, :type "integer"}, :stageName {:description "the name of this stage in job execution.", :readOnly true, :type "string"}}}, :Diagnostics {:description "Error diagnostic information for failed jobs.", :properties {:columnNumber {:description "the column where the error occurred.", :format "int32", :readOnly true, :type "integer"}, :end {:description "the ending index of the error.", :format "int32", :readOnly true, :type "integer"}, :lineNumber {:description "the line number the error occurred on.", :format "int32", :readOnly true, :type "integer"}, :message {:description "the error message.", :readOnly true, :type "string"}, :severity {:description "the severity of the error.", :enum ["Warning" "Error" "Info" "SevereWarning" "Deprecated" "UserWarning"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "SeverityTypes"}}, :start {:description "the starting index of the error.", :format "int32", :readOnly true, :type "integer"}}}, :JobRecurrenceInformation {:description "Recurrence job information for a specific recurrence.", :properties {:lastSubmitTime {:description "the last time a job in this recurrence was submitted.", :format "date-time", :readOnly true, :type "string"}, :recurrenceId {:description "the recurrence identifier (a GUID), unique per activity/script, regardless of iterations. This is something to link different occurrences of the same job together.", :format "uuid", :readOnly true, :type "string"}, :auHoursSucceeded {:description "the number of job execution hours that resulted in successful jobs.", :format "double", :readOnly true, :type "number"}, :recurrenceName {:description "the recurrence name, user friendly name for the correlation between jobs.", :readOnly true, :type "string"}, :auHoursCanceled {:description "the number of job execution hours that resulted in canceled jobs.", :format "double", :readOnly true, :type "number"}, :numJobsCanceled {:description "the number of jobs in this recurrence that have been canceled.", :format "int32", :readOnly true, :type "integer"}, :numJobsFailed {:description "the number of jobs in this recurrence that have failed.", :format "int32", :readOnly true, :type "integer"}, :auHoursFailed {:description "the number of job execution hours that resulted in failed jobs.", :format "double", :readOnly true, :type "number"}, :numJobsSucceeded {:description "the number of jobs in this recurrence that have succeeded.", :format "int32", :readOnly true, :type "integer"}}}, :JobStateAuditRecord {:description "The Data Lake Analytics job state audit records for tracking the lifecycle of a job.", :properties {:details {:description "the details of the audit log.", :readOnly true, :type "string"}, :newState {:description "the new state the job is in.", :readOnly true, :type "string"}, :requestedByUser {:description "the user who requests the change.", :readOnly true, :type "string"}, :timeStamp {:description "the time stamp that the state change took place.", :format "date-time", :readOnly true, :type "string"}}}, :JobInfoListResult {:description "List of JobInfo items.", :properties {:nextLink {:description "the link (url) to the next page of results.", :readOnly true, :type "string"}, :value {:description "the list of JobInfo items.", :items #:reference{:definitions "JobInformationBasic"}, :readOnly true, :type "array"}}}, :JobStatistics {:description "The Data Lake Analytics job execution statistics.", :properties {:finalizingTimeUtc {:description "the job finalizing start time.", :format "date-time", :readOnly true, :type "string"}, :lastUpdateTimeUtc {:description "the last update time for the statistics.", :format "date-time", :readOnly true, :type "string"}, :stages {:description "the list of stages for the job.", :items #:reference{:definitions "JobStatisticsVertexStage"}, :readOnly true, :type "array"}}}, :JobPipelineInformation {:description "Job Pipeline Information, showing the relationship of jobs and recurrences of those jobs in a pipeline.", :properties {:lastSubmitTime {:description "the last time a job in this pipeline was submitted.", :format "date-time", :readOnly true, :type "string"}, :auHoursSucceeded {:description "the number of job execution hours that resulted in successful jobs.", :format "double", :readOnly true, :type "number"}, :pipelineUri {:description "the pipeline uri, unique, links to the originating service for this pipeline.", :readOnly true, :type "string"}, :pipelineId {:description "the job relationship pipeline identifier (a GUID).", :format "uuid", :readOnly true, :type "string"}, :auHoursCanceled {:description "the number of job execution hours that resulted in canceled jobs.", :format "double", :readOnly true, :type "number"}, :numJobsCanceled {:description "the number of jobs in this pipeline that have been canceled.", :format "int32", :readOnly true, :type "integer"}, :numJobsFailed {:description "the number of jobs in this pipeline that have failed.", :format "int32", :readOnly true, :type "integer"}, :auHoursFailed {:description "the number of job execution hours that resulted in failed jobs.", :format "double", :readOnly true, :type "number"}, :recurrences {:description "the list of recurrence identifiers representing each recurrence in this pipeline.", :items {:format "uuid", :type "string"}, :readOnly true, :type "array"}, :numJobsSucceeded {:description "the number of jobs in this pipeline that have succeeded.", :format "int32", :readOnly true, :type "integer"}, :runs {:description "the list of run identifiers representing each run of this pipeline.", :items #:reference{:definitions "JobPipelineRunInformation"}, :readOnly true, :type "array"}, :pipelineName {:description "the friendly name of the job relationship pipeline, which does not need to be unique.", :maxLength 260, :readOnly true, :type "string"}}}, :JobRelationshipProperties {:description "Job relationship information properties including pipeline information, correlation information, etc.", :properties {:pipelineId {:description "the job relationship pipeline identifier (a GUID).", :format "uuid", :type "string"}, :pipelineName {:description "the friendly name of the job relationship pipeline, which does not need to be unique.", :maxLength 260, :type "string"}, :pipelineUri {:description "the pipeline uri, unique, links to the originating service for this pipeline.", :type "string"}, :recurrenceId {:description "the recurrence identifier (a GUID), unique per activity/script, regardless of iterations. This is something to link different occurrences of the same job together.", :format "uuid", :type "string"}, :recurrenceName {:description "the recurrence name, user friendly name for the correlation between jobs.", :maxLength 260, :type "string"}, :runId {:description "the run identifier (a GUID), unique identifier of the iteration of this pipeline.", :format "uuid", :type "string"}}, :required ["recurrenceId"]}, :BaseJobParameters {:description "Data Lake Analytics Job Parameters base class for build and submit.", :properties {:properties #:reference{:definitions "CreateJobProperties"}, :type {:description "the job type of the current job (Hive or USql).", :enum ["USql" "Hive"], :type "string", :x-ms-enum {:modelAsString false, :name "JobType"}}}, :required ["type" "properties"]}, :JobPipelineRunInformation {:description "Run info for a specific job pipeline.", :properties {:lastSubmitTime {:description "the time this instance was last submitted.", :format "date-time", :readOnly true, :type "string"}, :runId {:description "the run identifier of an instance of pipeline executions (a GUID).", :format "uuid", :readOnly true, :type "string"}}}, :JobResource {:description "The Data Lake Analytics job resources.", :properties {:name {:description "the name of the resource.", :type "string"}, :resourcePath {:description "the path to the resource.", :type "string"}, :type {:description "the job resource type.", :enum ["VertexResource" "JobManagerResource" "StatisticsResource" "VertexResourceInUserFolder" "JobManagerResourceInUserFolder" "StatisticsResourceInUserFolder"], :type "string", :x-ms-enum {:modelAsString false, :name "JobResourceType"}}}}, :JobProperties {:description "The common Data Lake Analytics job properties.", :discriminator "type", :properties {:runtimeVersion {:description "the runtime version of the Data Lake Analytics engine to use for the specific type of job being run.", :readOnly true, :type "string"}, :script {:description "the script to run. Please note that the maximum script size is 3 MB.", :type "string"}, :type {:description "the job type of the current job (i.e. Hive or USql).", :type "string"}}, :required ["script" "type"]}, :BuildJobParameters {:allOf [#:reference{:definitions "BaseJobParameters"}], :description "The parameters used to build a new Data Lake Analytics job.", :properties {:name {:description "the friendly name of the job to build.", :type "string"}}}, :JobInformation {:allOf [#:reference{:definitions "JobInformationBasic"}], :description "The extended Data Lake Analytics job information properties returned when retrieving a specific job.", :properties {:errorMessage {:description "the error message details for the job, if the job failed.", :items #:reference{:definitions "JobErrorDetails"}, :readOnly true, :type "array"}, :properties #:reference{:definitions "JobProperties"}, :stateAuditRecords {:description "the job state audit records, indicating when various operations have been performed on this job.", :items #:reference{:definitions "JobStateAuditRecord"}, :readOnly true, :type "array"}}, :required ["properties"]}}}