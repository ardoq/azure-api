{:scheme "https", :host "management.azure.com", :info {:description "Azure EventGrid Management Client", :title "EventGridManagementClient", :version "2018-05-01-preview"}, :ops {:EventSubscriptions_ListRegionalBySubscriptionForTopicType {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_ListEventTypes {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes", :description "List event types for a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Namespace of the provider of the topic", :in "path", :name "providerNamespace", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "resourceTypeName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_GetFullUrl {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl", :description "Get the full endpoint URL for an event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Topics_ListSharedAccessKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys", :description "List the two keys used to publish to a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Topics_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics", :description "List all the topics under a resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Update {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Asynchronously updates an existing event subscription.", :parameters [{:description "The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription to be updated", :in "path", :name "eventSubscriptionName", :required true, :type "string"} {:description "Updated event subscription information", :in "body", :name "eventSubscriptionUpdateParameters", :required true, :schema #:reference{:definitions "EventSubscriptionUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :EventSubscriptions_ListGlobalByResourceGroupForTopicType {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all global event subscriptions under a resource group for a specific topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TopicTypes_Get {:path "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}", :description "Get information about a topic type", :parameters [{:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey", :description "Regenerate a shared access key for a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} {:description "Request body to regenerate key", :in "body", :name "regenerateKeyRequest", :required true, :schema #:reference{:definitions "TopicRegenerateKeyRequest"}} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :EventSubscriptions_ListGlobalByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all global event subscriptions under a specific Azure subscription and resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics", :description "List all the topics under an Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListGlobalBySubscriptionForTopicType {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all global event subscriptions under an Azure subscription for a topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListByResource {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all event subscriptions that have been created for a specific topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Namespace of the provider of the topic", :in "path", :name "providerNamespace", :required true, :type "string"} {:description "Name of the resource type", :in "path", :name "resourceTypeName", :required true, :type "string"} {:description "Name of the resource", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Delete {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Delete an existing event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :TopicTypes_ListEventTypes {:path "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes", :description "List event types for a topic type", :parameters [{:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListRegionalByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Delete existing topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Topics_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Asynchronously creates a new topic with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} {:description "Topic information", :in "body", :name "topicInfo", :required true, :schema #:reference{:definitions "Topic"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :TopicTypes_List {:path "/providers/Microsoft.EventGrid/topicTypes", :description "List all registered topic types", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListRegionalBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Get {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Get properties of an event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListGlobalBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all aggregated global event subscriptions under a specific Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Get properties of a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListRegionalByResourceGroupForTopicType {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_CreateOrUpdate {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Asynchronously creates a new event subscription or updates an existing event subscription based on the specified scope.", :parameters [{:description "The identifier of the resource to which the event subscription needs to be created or updated. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.", :in "path", :name "eventSubscriptionName", :required true, :type "string"} {:description "Event subscription properties containing the destination and filter information", :in "body", :name "eventSubscriptionInfo", :required true, :schema #:reference{:definitions "EventSubscription"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Operations_List {:path "/providers/Microsoft.EventGrid/operations", :description "List the available operations supported by the Microsoft.EventGrid resource provider", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Asynchronously updates a topic with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} {:description "Topic update information", :in "body", :name "topicUpdateParameters", :required true, :schema #:reference{:definitions "TopicUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}}, :parameters {:ApiVersionParameter {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:EventType {:allOf [#:reference{:definitions "Resource"}], :description "Event Type for a subject under a topic", :properties {:properties #:reference{:definitions "EventTypeProperties"}}, :type "object"}, :StorageQueueEventSubscriptionDestination {:allOf [#:reference{:definitions "EventSubscriptionDestination"}], :description "Information about the storage queue destination for an event subscription.", :properties {:properties #:reference{:definitions "StorageQueueEventSubscriptionDestinationProperties"}}, :type "object", :x-ms-discriminator-value "StorageQueue"}, :OperationInfo {:description "Information about an operation", :properties {:description {:description "Description of the operation", :type "string"}, :operation {:description "Name of the operation", :type "string"}, :provider {:description "Name of the provider", :type "string"}, :resource {:description "Name of the resource type", :type "string"}}, :type "object"}, :HybridConnectionEventSubscriptionDestinationProperties {:description "The properties for a hybrid connection destination.", :properties {:resourceId {:description "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.", :type "string"}}, :type "object"}, :EventTypesListResult {:description "Result of the List Event Types operation", :properties {:value {:description "A collection of event types", :items #:reference{:definitions "EventType"}, :type "array"}}, :type "object"}, :TopicProperties {:description "Properties of the Topic", :properties {:endpoint {:description "Endpoint for the topic.", :readOnly true, :type "string"}, :inputSchema {:default "EventGridSchema", :description "This determines the format that Event Grid should expect for incoming events published to the topic.", :enum ["EventGridSchema" "CustomEventSchema" "CloudEventV01Schema"], :type "string", :x-ms-enum {:modelAsString true, :name "InputSchema"}}, :inputSchemaMapping #:reference{:definitions "InputSchemaMapping"}, :provisioningState {:description "Provisioning state of the topic.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "TopicProvisioningState"}}}, :type "object"}, :JsonField {:description "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema.", :properties {:sourceField {:description "Name of a field in the input event schema that's to be used as the source of a mapping.", :type "string"}}, :type "object"}, :Operation {:description "Represents an operation returned by the GetOperations request", :properties {:display #:reference{:definitions "OperationInfo"}, :name {:description "Name of the operation", :type "string"}, :origin {:description "Origin of the operation", :type "string"}, :properties {:description "Properties of the operation", :type "object", :x-ms-client-flatten true}}, :type "object"}, :EventHubEventSubscriptionDestination {:allOf [#:reference{:definitions "EventSubscriptionDestination"}], :description "Information about the event hub destination for an event subscription", :properties {:properties #:reference{:definitions "EventHubEventSubscriptionDestinationProperties"}}, :type "object", :x-ms-discriminator-value "EventHub"}, :EventSubscriptionProperties {:description "Properties of the Event Subscription", :properties {:deadLetterDestination #:reference{:definitions "DeadLetterDestination"}, :destination #:reference{:definitions "EventSubscriptionDestination"}, :eventDeliverySchema {:default "InputEventSchema", :description "The event delivery schema for the event subscription.", :enum ["EventGridSchema" "InputEventSchema" "CloudEventV01Schema"], :type "string", :x-ms-enum {:modelAsString true, :name "EventDeliverySchema"}}, :filter #:reference{:definitions "EventSubscriptionFilter"}, :labels {:description "List of user defined labels.", :items {:type "string"}, :type "array"}, :provisioningState {:description "Provisioning state of the event subscription.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed" "AwaitingManualAction"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "EventSubscriptionProvisioningState"}}, :retryPolicy #:reference{:definitions "RetryPolicy"}, :topic {:description "Name of the topic of the event subscription.", :readOnly true, :type "string"}}, :type "object"}, :TopicsListResult {:description "Result of the List Topics operation", :properties {:value {:description "A collection of Topics", :items #:reference{:definitions "Topic"}, :type "array"}}, :type "object"}, :TopicTypesListResult {:description "Result of the List Topic Types operation", :properties {:value {:description "A collection of topic types", :items #:reference{:definitions "TopicTypeInfo"}, :type "array"}}, :type "object"}, :EventTypeProperties {:description "Properties of the event type", :properties {:description {:description "Description of the event type.", :type "string"}, :displayName {:description "Display name of the event type.", :type "string"}, :schemaUrl {:description "Url of the schema for this event type.", :type "string"}}, :type "object"}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "Definition of a Tracked Resource", :properties {:location {:description "Location of the resource", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Tags of the resource", :type "object"}}, :required ["location"], :type "object"}, :TopicSharedAccessKeys {:description "Shared access keys of the Topic", :properties {:key1 {:description "Shared access key1 for the topic.", :type "string"}, :key2 {:description "Shared access key2 for the topic.", :type "string"}}, :type "object"}, :TopicTypeProperties {:description "Properties of a topic type.", :properties {:description {:description "Description of the topic type.", :type "string"}, :displayName {:description "Display Name for the topic type.", :type "string"}, :provider {:description "Namespace of the provider of the topic type.", :type "string"}, :provisioningState {:description "Provisioning state of the topic type", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed"], :type "string", :x-ms-enum {:modelAsString true, :name "TopicTypeProvisioningState"}}, :resourceRegionType {:description "Region type of the resource.", :enum ["RegionalResource" "GlobalResource"], :type "string", :x-ms-enum {:modelAsString true, :name "ResourceRegionType"}}, :supportedLocations {:description "List of locations supported by this topic type.", :items {:type "string"}, :type "array"}}, :type "object"}, :EventSubscriptionFullUrl {:description "Full endpoint url of an event subscription", :properties {:endpointUrl {:description "The URL that represents the endpoint of the destination of an event subscription.", :type "string"}}, :type "object"}, :RetryPolicy {:description "Information about the retry policy for an event subscription", :properties {:eventTimeToLiveInMinutes {:description "Time To Live (in minutes) for events.", :format "int32", :type "integer"}, :maxDeliveryAttempts {:description "Maximum number of delivery retry attempts for events.", :format "int32", :type "integer"}}, :type "object"}, :StorageBlobDeadLetterDestinationProperties {:description "Properties of the storage blob based dead letter destination.", :properties {:blobContainerName {:description "The name of the Storage blob container that is the destination of the deadletter events", :type "string"}, :resourceId {:description "The Azure Resource ID of the storage account that is the destination of the deadletter events", :type "string"}}, :type "object"}, :WebHookEventSubscriptionDestinationProperties {:description "Information about the webhook destination properties for an event subscription.", :properties {:endpointBaseUrl {:description "The base URL that represents the endpoint of the destination of an event subscription.", :readOnly true, :type "string"}, :endpointUrl {:description "The URL that represents the endpoint of the destination of an event subscription.", :type "string"}}, :type "object"}, :EventSubscriptionDestination {:description "Information about the destination for an event subscription", :discriminator "endpointType", :properties {:endpointType {:description "Type of the endpoint for the event subscription destination", :enum ["WebHook" "EventHub" "StorageQueue" "HybridConnection"], :type "string", :x-ms-enum {:modelAsString true, :name "EndpointType"}}}, :required ["endpointType"], :type "object"}, :EventSubscription {:allOf [#:reference{:definitions "Resource"}], :description "Event Subscription", :properties {:properties #:reference{:definitions "EventSubscriptionProperties"}}, :type "object"}, :TopicTypeInfo {:allOf [#:reference{:definitions "Resource"}], :description "Properties of a topic type info.", :properties {:properties #:reference{:definitions "TopicTypeProperties"}}, :type "object"}, :TopicUpdateParameters {:description "Properties of the Topic update", :properties {:tags {:additionalProperties {:type "string"}, :description "Tags of the resource", :type "object"}}, :type "object"}, :JsonFieldWithDefault {:description "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided.", :properties {:defaultValue {:description "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.", :type "string"}, :sourceField {:description "Name of a field in the input event schema that's to be used as the source of a mapping.", :type "string"}}, :type "object"}, :EventHubEventSubscriptionDestinationProperties {:description "The properties for a event hub destination.", :properties {:resourceId {:description "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.", :type "string"}}, :type "object"}, :EventSubscriptionUpdateParameters {:description "Properties of the Event Subscription update", :properties {:deadLetterDestination #:reference{:definitions "DeadLetterDestination"}, :destination #:reference{:definitions "EventSubscriptionDestination"}, :eventDeliverySchema {:description "The event delivery schema for the event subscription.", :enum ["EventGridSchema" "InputEventSchema" "CloudEventV01Schema"], :type "string", :x-ms-enum {:modelAsString true, :name "EventDeliverySchema"}}, :filter #:reference{:definitions "EventSubscriptionFilter"}, :labels {:description "List of user defined labels.", :items {:type "string"}, :type "array"}, :retryPolicy #:reference{:definitions "RetryPolicy"}}, :type "object"}, :StorageQueueEventSubscriptionDestinationProperties {:description "The properties for a storage queue destination.", :properties {:queueName {:description "The name of the Storage queue under a storage account that is the destination of an event subscription.", :type "string"}, :resourceId {:description "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.", :type "string"}}, :type "object"}, :JsonInputSchemaMappingProperties {:description "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.", :properties {:dataVersion #:reference{:definitions "JsonFieldWithDefault"}, :eventTime #:reference{:definitions "JsonField"}, :eventType #:reference{:definitions "JsonFieldWithDefault"}, :id #:reference{:definitions "JsonField"}, :subject #:reference{:definitions "JsonFieldWithDefault"}, :topic #:reference{:definitions "JsonField"}}, :type "object"}, :EventSubscriptionFilter {:description "Filter for the Event Subscription", :properties {:includedEventTypes {:description "A list of applicable event types that need to be part of the event subscription. \r\nIf it is desired to subscribe to all event types, the string \"all\" needs to be specified as an element in this list.", :items {:type "string"}, :type "array"}, :isSubjectCaseSensitive {:default false, :description "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter \r\nshould be compared in a case sensitive manner.", :type "boolean"}, :subjectBeginsWith {:description "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events. \r\nWildcard characters are not supported in this path.", :type "string"}, :subjectEndsWith {:description "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.", :type "string"}}, :type "object"}, :TopicRegenerateKeyRequest {:description "Topic regenerate share access key request", :properties {:keyName {:description "Key name to regenerate key1 or key2", :type "string"}}, :required ["keyName"], :type "object"}, :Resource {:description "Definition of a Resource", :properties {:id {:description "Fully qualified identifier of the resource", :readOnly true, :type "string"}, :name {:description "Name of the resource", :readOnly true, :type "string"}, :type {:description "Type of the resource", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :DeadLetterDestination {:description "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.", :discriminator "endpointType", :properties {:endpointType {:description "Type of the endpoint for the dead letter destination", :enum ["StorageBlob"], :type "string", :x-ms-enum {:modelAsString true, :name "DeadLetterEndPointType"}}}, :required ["endpointType"], :type "object"}, :StorageBlobDeadLetterDestination {:allOf [#:reference{:definitions "DeadLetterDestination"}], :description "Information about the storage blob based dead letter destination.", :properties {:properties #:reference{:definitions "StorageBlobDeadLetterDestinationProperties"}}, :type "object", :x-ms-discriminator-value "StorageBlob"}, :EventSubscriptionsListResult {:description "Result of the List EventSubscriptions operation", :properties {:value {:description "A collection of EventSubscriptions", :items #:reference{:definitions "EventSubscription"}, :type "array"}}, :type "object"}, :JsonInputSchemaMapping {:allOf [#:reference{:definitions "InputSchemaMapping"}], :description "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.", :properties {:properties #:reference{:definitions "JsonInputSchemaMappingProperties"}}, :type "object", :x-ms-discriminator-value "Json"}, :WebHookEventSubscriptionDestination {:allOf [#:reference{:definitions "EventSubscriptionDestination"}], :description "Information about the webhook destination for an event subscription", :properties {:properties #:reference{:definitions "WebHookEventSubscriptionDestinationProperties"}}, :type "object", :x-ms-discriminator-value "WebHook"}, :Topic {:allOf [#:reference{:definitions "TrackedResource"}], :description "EventGrid Topic", :properties {:properties #:reference{:definitions "TopicProperties"}}, :type "object"}, :OperationsListResult {:description "Result of the List Operations operation", :properties {:value {:description "A collection of operations", :items #:reference{:definitions "Operation"}, :type "array"}}, :type "object"}, :InputSchemaMapping {:description "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.", :discriminator "inputSchemaMappingType", :properties {:inputSchemaMappingType {:description "Type of the custom mapping", :enum ["Json"], :type "string", :x-ms-enum {:modelAsString true, :name "InputSchemaMappingType"}}}, :type "object"}, :HybridConnectionEventSubscriptionDestination {:allOf [#:reference{:definitions "EventSubscriptionDestination"}], :description "Information about the HybridConnection destination for an event subscription.", :properties {:properties #:reference{:definitions "HybridConnectionEventSubscriptionDestinationProperties"}}, :type "object", :x-ms-discriminator-value "HybridConnection"}}}