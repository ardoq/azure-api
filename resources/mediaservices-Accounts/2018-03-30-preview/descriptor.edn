{:scheme "https", :host "azure.local", :info {:description "This Swagger was generated by the API Framework.", :title "Azure Media Services", :version "2018-03-30-preview"}, :ops {:Mediaservices_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices", :description "List Media Services accounts in the subscription.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ApiVersion"}], :verb :get}, :Mediaservices_SyncStorageKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/syncStorageKeys", :description "Synchronizes storage account keys for a storage account associated with the Media Service account.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SyncStorageKeysInput"}} #:reference{:parameters "ApiVersion"}], :verb :post}, :Mediaservices_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}", :description "Get the details of a Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :Mediaservices_GetBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices/{accountName}", :description "Get the details of a Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :Locations_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability", :description "Checks whether the Media Service resource name is available.", :parameters [#:reference{:parameters "SubscriptionId"} {:in "path", :name "locationName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityInput"}} #:reference{:parameters "ApiVersion"}], :verb :post}, :Mediaservices_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}", :description "Deletes a Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :Mediaservices_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}", :description "Creates or updates a Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "MediaService"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :Mediaservices_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices", :description "List Media Services accounts in the resource group", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "ApiVersion"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.Media/operations", :description "Lists all the Media Services operations.", :parameters [#:reference{:parameters "ApiVersion"}], :verb :get}, :Mediaservices_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}", :description "Updates an existing Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "MediaService"}} #:reference{:parameters "ApiVersion"}], :verb :patch}}, :parameters {:ApiVersion {:description "The Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :ResourceGroupName {:description "The name of the resource group within the Azure subscription.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionId {:description "The unique identifier for a Microsoft Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:StorageAccount {:description "The storage account details.", :properties {:id {:description "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.", :type "string"}, :type {:description "The type of the storage account.", :enum ["Primary" "Secondary"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "StorageAccountType", :values [{:description "The primary storage account for the Media Services account.", :value "Primary"} {:description "A secondary storage account for the Media Services account.", :value "Secondary"}]}}}, :required ["type"], :type "object"}, :MediaServiceProperties {:description "Properties of the Media Services account.", :properties {:mediaServiceId {:description "The Media Services account ID.", :format "uuid", :readOnly true, :type "string", :x-nullable false}, :storageAccounts {:description "The storage accounts for this resource.", :items #:reference{:definitions "StorageAccount"}, :type "array"}}, :type "object"}, :EntityNameAvailabilityCheckOutput {:description "The response from the check name availability request.", :properties {:message {:description "Specifies the detailed reason if the name is not available.", :type "string"}, :nameAvailable {:description "Specifies if the name is available.", :type "boolean"}, :reason {:description "Specifies the reason if the name is not available.", :type "string"}}, :required ["nameAvailable"], :type "object"}, :Operation {:description "An operation.", :properties {:display #:reference{:definitions "OperationDisplay"}, :name {:description "The operation name.", :type "string"}}, :required ["name"], :type "object"}, :CheckNameAvailabilityInput {:description "The input to the check name availability request.", :properties {:name {:description "The account name.", :type "string"}, :type {:description "The account type. For a Media Services account, this should be 'MediaServices'.", :type "string"}}, :type "object"}, :SubscriptionMediaServiceCollection {:description "A collection of SubscriptionMediaService items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of SubscriptionMediaService items.", :items #:reference{:definitions "SubscriptionMediaService"}, :type "array"}}, :type "object"}, :MediaServiceCollection {:description "A collection of MediaService items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of MediaService items.", :items #:reference{:definitions "MediaService"}, :type "array"}}, :type "object"}, :SyncStorageKeysInput {:description "The input to the sync storage keys request.", :properties {:id {:description "The ID of the storage account resource.", :type "string"}}, :type "object"}, :ODataError {}, :MediaService {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked resource.", :properties {:location {:description "The Azure Region of the resource.", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}}], :description "A Media Services account.", :properties {:properties #:reference{:definitions "MediaServiceProperties"}}, :type "object"}, :SubscriptionMediaService {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked resource.", :properties {:location {:description "The Azure Region of the resource.", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}}], :description "A Media Services account.", :properties {:properties #:reference{:definitions "MediaServiceProperties"}}, :type "object"}, :OperationDisplay {:description "Operation details.", :properties {:description {:description "The operation description.", :type "string"}, :operation {:description "The operation type.", :type "string"}, :provider {:description "The service provider.", :type "string"}, :resource {:description "Resource on which the operation is performed.", :type "string"}}, :type "object"}, :OperationCollection {:description "A collection of Operation items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of Operation items.", :items #:reference{:definitions "Operation"}, :type "array"}}, :type "object"}, :Provider {:description "A resource provider.", :properties {:providerName {:description "The provider name.", :type "string"}}, :required ["providerName"], :type "object"}, :Location {:properties {:name {:type "string"}}, :required ["name"], :type "object"}}}