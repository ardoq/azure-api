{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.", :title "ApiManagementClient", :version "2018-01-01"}, :ops {:Subscription_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions", :description "Lists all subscriptions of the API Management service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Subscription_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Deletes the specified subscription.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :Subscription_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Gets the specified Subscription entity.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Subscription_GetEntityTag {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :head}, :Subscription_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Updates the details of a subscription specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SubscriptionUpdateParameters"}} #:reference{:parameters "NotifySubscriptionStateChangeParameter"} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :Subscription_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Creates or updates the subscription of specified user to the specified product.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SubscriptionCreateParameters"}} #:reference{:parameters "NotifySubscriptionStateChangeParameter"} {:description "ETag of the Entity. Not required when creating an entity, but required when updating an entity.", :in "header", :name "If-Match", :required false, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :Subscription_RegeneratePrimaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey", :description "Regenerates primary key of existing subscription of the API Management service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :post}, :Subscription_RegenerateSecondaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey", :description "Regenerates secondary key of existing subscription of the API Management service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "SubscriptionEntityIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :post}}, :parameters {:NotifySubscriptionStateChangeParameter {:description "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription ", :in "query", :name "notify", :required false, :type "boolean", :x-ms-parameter-location "method"}, :SubscriptionEntityIdParameter {:description "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.", :in "path", :maxLength 80, :name "sid", :pattern "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:SubscriptionCollection {:description "Paged Subscriptions list representation.", :properties {:nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "SubscriptionContract"}, :type "array"}}}, :SubscriptionContract {:allOf [{:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type for API Management resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Subscription details.", :properties {:properties #:reference{:definitions "SubscriptionContractProperties"}}}, :SubscriptionContractProperties {:description "Subscription details.", :properties {:secondaryKey {:description "Subscription secondary key.", :maxLength 256, :minLength 1, :type "string"}, :notificationDate {:description "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :displayName {:description "The name of the subscription, or null if the subscription has no name.", :maxLength 100, :minLength 0, :type "string"}, :primaryKey {:description "Subscription primary key.", :maxLength 256, :minLength 1, :type "string"}, :startDate {:description "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :state {:description "Subscription state. Possible states are * active â€“ the subscription is active, * suspended â€“ the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted â€“ the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected â€“ the subscription request has been denied by an administrator, * cancelled â€“ the subscription has been cancelled by the developer or administrator, * expired â€“ the subscription reached its expiration date and was deactivated.", :enum ["suspended" "active" "expired" "submitted" "rejected" "cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionState"}}, :productId {:description "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.", :type "string"}, :endDate {:description "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :userId {:description "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier.", :type "string"}, :createdDate {:description "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :readOnly true, :type "string"}, :stateComment {:description "Optional subscription comment added by an administrator.", :type "string"}, :expirationDate {:description "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}}, :required ["userId" "productId" "state" "primaryKey" "secondaryKey"]}, :SubscriptionCreateParameterProperties {:description "Parameters supplied to the Create subscription operation.", :properties {:displayName {:description "Subscription name.", :maxLength 100, :minLength 1, :type "string"}, :primaryKey {:description "Primary subscription key. If not specified during request key will be generated automatically.", :maxLength 256, :minLength 1, :type "string"}, :productId {:description "Product (product id path) for which subscription is being created in form /products/{productId}", :type "string"}, :secondaryKey {:description "Secondary subscription key. If not specified during request key will be generated automatically.", :maxLength 256, :minLength 1, :type "string"}, :state {:description "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active â€“ the subscription is active, * suspended â€“ the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted â€“ the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected â€“ the subscription request has been denied by an administrator, * cancelled â€“ the subscription has been cancelled by the developer or administrator, * expired â€“ the subscription reached its expiration date and was deactivated.", :enum ["suspended" "active" "expired" "submitted" "rejected" "cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionState"}}, :userId {:description "User (user id path) for whom subscription is being created in form /users/{uid}", :type "string"}}, :required ["userId" "productId" "displayName"]}, :SubscriptionCreateParameters {:description "Subscription create details.", :properties {:properties #:reference{:definitions "SubscriptionCreateParameterProperties"}}}, :SubscriptionUpdateParameterProperties {:description "Parameters supplied to the Update subscription operation.", :properties {:displayName {:description "Subscription name.", :type "string"}, :expirationDate {:description "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.", :format "date-time", :type "string"}, :primaryKey {:description "Primary subscription key.", :maxLength 256, :minLength 1, :type "string"}, :productId {:description "Product identifier path: /products/{productId}", :type "string"}, :secondaryKey {:description "Secondary subscription key.", :maxLength 256, :minLength 1, :type "string"}, :state {:description "Subscription state. Possible states are * active â€“ the subscription is active, * suspended â€“ the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted â€“ the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected â€“ the subscription request has been denied by an administrator, * cancelled â€“ the subscription has been cancelled by the developer or administrator, * expired â€“ the subscription reached its expiration date and was deactivated.", :enum ["suspended" "active" "expired" "submitted" "rejected" "cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionState"}}, :stateComment {:description "Comments describing subscription state change by the administrator.", :type "string"}, :userId {:description "User identifier path: /users/{uid}", :type "string"}}}, :SubscriptionUpdateParameters {:description "Subscription update details.", :properties {:properties #:reference{:definitions "SubscriptionUpdateParameterProperties"}}}}}