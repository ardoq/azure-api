{:scheme "https", :host "management.azure.com", :info {:title "SchedulerManagementClient", :version "2016-03-01"}, :ops {:Jobs_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs", :description "Lists all jobs under the specified job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "The number of jobs to request, in the of range of [1..100].", :in "query", :maximum 100, :minimum 1, :name "$top", :required false, :type "integer"} {:description "The (0-based) index of the job history list from which to begin requesting entries.", :in "query", :name "$skip", :required false, :type "integer"} {:description "The filter to apply on the job state.", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :JobCollections_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections", :description "Gets all job collections under specified resource group.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :get}, :Jobs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}", :description "Gets a job.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :get}, :JobCollections_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections", :description "Gets all job collections under specified subscription.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "apiVersion"}], :verb :get}, :Jobs_Run {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run", :description "Runs a job.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :post}, :JobCollections_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}", :description "Gets a job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :get}, :JobCollections_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}", :description "Deletes a job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :delete}, :Jobs_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}", :description "Provisions a new job or updates an existing job.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "The job definition.", :in "body", :name "job", :required true, :schema #:reference{:definitions "JobDefinition"}}], :verb :put}, :JobCollections_Patch {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}", :description "Patches an existing job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "The job collection definition.", :in "body", :name "jobCollection", :required true, :schema #:reference{:definitions "JobCollectionDefinition"}}], :verb :patch}, :Jobs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}", :description "Deletes a job.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :delete}, :JobCollections_Disable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable", :description "Disables all of the jobs in the job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :post}, :Jobs_Patch {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}", :description "Patches an existing job.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "The job definition.", :in "body", :name "job", :required true, :schema #:reference{:definitions "JobDefinition"}}], :verb :patch}, :JobCollections_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}", :description "Provisions a new job collection or updates an existing job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "The job collection definition.", :in "body", :name "jobCollection", :required true, :schema #:reference{:definitions "JobCollectionDefinition"}}], :verb :put}, :Jobs_ListJobHistory {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history", :description "Lists job history.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "apiVersion"} {:description "the number of job history to request, in the of range of [1..100].", :in "query", :maximum 100, :minimum 1, :name "$top", :required false, :type "integer"} {:description "The (0-based) index of the job history list from which to begin requesting entries.", :in "query", :name "$skip", :required false, :type "integer"} {:description "The filter to apply on the job state.", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :JobCollections_Enable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable", :description "Enables all of the jobs in the job collection.", :parameters [#:reference{:parameters "subscriptionId"} {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The job collection name.", :in "path", :name "jobCollectionName", :required true, :type "string"} #:reference{:parameters "apiVersion"}], :verb :post}}, :parameters {:apiVersion {:description "The API version.", :in "query", :name "api-version", :required true, :type "string"}, :subscriptionId {:description "The subscription id.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ServiceBusQueueMessage {:allOf [#:reference{:definitions "ServiceBusMessage"}], :properties {:queueName {:description "Gets or sets the queue name.", :type "string"}}}, :JobRecurrenceSchedule {:properties {:hours {:description "Gets or sets the hours of the day that the job should execute at.", :items {:type "integer"}, :type "array"}, :minutes {:description "Gets or sets the minutes of the hour that the job should execute at.", :items {:type "integer"}, :type "array"}, :monthDays {:description "Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.", :items {:type "integer"}, :type "array"}, :monthlyOccurrences {:description "Gets or sets the occurrences of days within a month.", :items #:reference{:definitions "JobRecurrenceScheduleMonthlyOccurrence"}, :type "array"}, :weekDays {:description "Gets or sets the days of the week that the job should execute on.", :items {:enum ["Sunday" "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday"], :type "string", :x-ms-enum {:modelAsString false, :name "DayOfWeek"}}, :type "array"}}}, :JobListResult {:properties {:nextLink {:description "Gets or sets the URL to get the next set of jobs.", :type "string"}, :value {:description "Gets or sets all jobs under job collection.", :items #:reference{:definitions "JobDefinition"}, :type "array"}}}, :ServiceBusBrokeredMessageProperties {:properties {:forcePersistence {:description "Gets or sets the force persistence.", :type "boolean"}, :sessionId {:description "Gets or sets the session ID.", :type "string"}, :replyToSessionId {:description "Gets or sets the reply to session ID.", :type "string"}, :scheduledEnqueueTimeUtc {:description "Gets or sets the scheduled enqueue time UTC.", :format "date-time", :type "string"}, :correlationId {:description "Gets or sets the correlation ID.", :type "string"}, :partitionKey {:description "Gets or sets the partition key.", :type "string"}, :timeToLive {:description "Gets or sets the time to live.", :format "duration", :type "string"}, :messageId {:description "Gets or sets the message ID.", :type "string"}, :replyTo {:description "Gets or sets the reply to.", :type "string"}, :label {:description "Gets or sets the label.", :type "string"}, :contentType {:description "Gets or sets the content type.", :type "string"}, :viaPartitionKey {:description "Gets or sets the via partition key.", :type "string"}, :to {:description "Gets or sets the to.", :type "string"}}}, :JobExecutionStatus {:description "Gets the job execution status.", :enum ["Completed" "Failed" "Postponed"], :type "string", :x-ms-enum {:modelAsString false, :name "JobExecutionStatus"}}, :JobStatus {:properties {:executionCount {:description "Gets the number of times this job has executed.", :readOnly true, :type "integer"}, :failureCount {:description "Gets the number of times this job has failed.", :readOnly true, :type "integer"}, :faultedCount {:description "Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).", :readOnly true, :type "integer"}, :lastExecutionTime {:description "Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.", :format "date-time", :readOnly true, :type "string"}, :nextExecutionTime {:description "Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.", :format "date-time", :readOnly true, :type "string"}}}, :JobCollectionQuota {:properties {:maxJobCount {:description "Gets or set the maximum job count.", :type "integer"}, :maxJobOccurrence {:description "Gets or sets the maximum job occurrence.", :type "integer"}, :maxRecurrence #:reference{:definitions "JobMaxRecurrence"}}}, :RecurrenceFrequency {:description "Gets or sets the frequency of recurrence (minute, hour, day, week, month).", :enum ["Minute" "Hour" "Day" "Week" "Month"], :type "string", :x-ms-enum {:modelAsString false, :name "RecurrenceFrequency"}}, :ServiceBusMessage {:properties {:authentication #:reference{:definitions "ServiceBusAuthentication"}, :brokeredMessageProperties #:reference{:definitions "ServiceBusBrokeredMessageProperties"}, :customMessageProperties {:additionalProperties {:type "string"}, :description "Gets or sets the custom message properties.", :type "object"}, :message {:description "Gets or sets the message.", :type "string"}, :namespace {:description "Gets or sets the namespace.", :type "string"}, :transportType {:description "Gets or sets the transport type.", :enum ["NotSpecified" "NetMessaging" "AMQP"], :type "string", :x-ms-enum {:modelAsString false, :name "ServiceBusTransportType"}}}}, :ServiceBusAuthentication {:properties {:sasKey {:description "Gets or sets the SAS key.", :type "string"}, :sasKeyName {:description "Gets or sets the SAS key name.", :type "string"}, :type {:description "Gets or sets the authentication type.", :enum ["NotSpecified" "SharedAccessKey"], :type "string", :x-ms-enum {:modelAsString false, :name "ServiceBusAuthenticationType"}}}}, :OAuthAuthentication {:allOf [#:reference{:definitions "HttpAuthentication"}], :properties {:audience {:description "Gets or sets the audience.", :type "string"}, :clientId {:description "Gets or sets the client identifier.", :type "string"}, :secret {:description "Gets or sets the secret, return value will always be empty.", :type "string"}, :tenant {:description "Gets or sets the tenant.", :type "string"}}, :x-ms-discriminator-value "ActiveDirectoryOAuth"}, :JobStateFilter {:properties {:state #:reference{:definitions "JobState"}}, :type "object"}, :JobAction {:properties {:errorAction #:reference{:definitions "JobErrorAction"}, :queueMessage #:reference{:definitions "StorageQueueMessage"}, :request #:reference{:definitions "HttpRequest"}, :retryPolicy #:reference{:definitions "RetryPolicy"}, :serviceBusQueueMessage #:reference{:definitions "ServiceBusQueueMessage"}, :serviceBusTopicMessage #:reference{:definitions "ServiceBusTopicMessage"}, :type {:description "Gets or sets the job action type.", :enum ["Http" "Https" "StorageQueue" "ServiceBusQueue" "ServiceBusTopic"], :type "string", :x-ms-enum {:modelAsString false, :name "JobActionType"}}}}, :RetryPolicy {:properties {:retryCount {:description "Gets or sets the number of times a retry should be attempted.", :type "integer"}, :retryInterval {:description "Gets or sets the retry interval between retries, specify duration in ISO 8601 format.", :format "duration", :type "string"}, :retryType {:description "Gets or sets the retry strategy to be used.", :enum ["None" "Fixed"], :type "string", :x-ms-enum {:modelAsString false, :name "RetryType"}}}}, :JobDefinition {:properties {:id {:description "Gets the job resource identifier.", :readOnly true, :type "string"}, :name {:description "Gets the job resource name.", :readOnly true, :type "string"}, :properties #:reference{:definitions "JobProperties"}, :type {:description "Gets the job resource type.", :readOnly true, :type "string"}}}, :HttpRequest {:properties {:authentication #:reference{:definitions "HttpAuthentication"}, :body {:description "Gets or sets the request body.", :type "string"}, :headers {:additionalProperties {:type "string"}, :description "Gets or sets the headers.", :type "object"}, :method {:description "Gets or sets the method of the request.", :type "string"}, :uri {:description "Gets or sets the URI of the request.", :type "string"}}}, :JobCollectionListResult {:properties {:nextLink {:description "Gets or sets the URL to get the next set of job collections.", :type "string"}, :value {:description "Gets the job collections.", :items #:reference{:definitions "JobCollectionDefinition"}, :readOnly true, :type "array"}}}, :JobErrorAction {:properties {:queueMessage #:reference{:definitions "StorageQueueMessage"}, :request #:reference{:definitions "HttpRequest"}, :retryPolicy #:reference{:definitions "RetryPolicy"}, :serviceBusQueueMessage #:reference{:definitions "ServiceBusQueueMessage"}, :serviceBusTopicMessage #:reference{:definitions "ServiceBusTopicMessage"}, :type {:description "Gets or sets the job error action type.", :enum ["Http" "Https" "StorageQueue" "ServiceBusQueue" "ServiceBusTopic"], :type "string", :x-ms-enum {:modelAsString false, :name "JobActionType"}}}}, :BasicAuthentication {:allOf [#:reference{:definitions "HttpAuthentication"}], :properties {:password {:description "Gets or sets the password, return value will always be empty.", :type "string"}, :username {:description "Gets or sets the username.", :type "string"}}, :x-ms-discriminator-value "Basic"}, :JobState {:description "Gets or set the job state.", :enum ["Enabled" "Disabled" "Faulted" "Completed"], :type "string", :x-ms-enum {:modelAsString false, :name "JobState"}}, :HttpAuthentication {:discriminator "type", :properties {:type {:description "Gets or sets the HTTP authentication type.", :enum ["NotSpecified" "ClientCertificate" "ActiveDirectoryOAuth" "Basic"], :type "string", :x-ms-enum {:modelAsString false, :name "HttpAuthenticationType"}}}, :required ["type"]}, :JobCollectionProperties {:properties {:quota #:reference{:definitions "JobCollectionQuota"}, :sku #:reference{:definitions "Sku"}, :state {:description "Gets or sets the state.", :enum ["Enabled" "Disabled" "Suspended" "Deleted"], :type "string", :x-ms-enum {:modelAsString false, :name "JobCollectionState"}}}}, :JobHistoryDefinitionProperties {:properties {:actionName {:description "Gets the job history action name.", :enum ["MainAction" "ErrorAction"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "JobHistoryActionName"}}, :endTime {:description "Gets the end time for this job.", :format "date-time", :readOnly true, :type "string"}, :expectedExecutionTime {:description "Gets the expected execution time for this job.", :format "date-time", :readOnly true, :type "string"}, :message {:description "Gets the message for the job history.", :readOnly true, :type "string"}, :repeatCount {:description "Gets the repeat count for the job.", :readOnly true, :type "integer"}, :retryCount {:description "Gets the retry count for job.", :readOnly true, :type "integer"}, :startTime {:description "Gets the start time for this job.", :format "date-time", :readOnly true, :type "string"}, :status #:reference{:definitions "JobExecutionStatus"}}}, :JobCollectionDefinition {:properties {:id {:description "Gets the job collection resource identifier.", :readOnly true, :type "string"}, :location {:description "Gets or sets the storage account location.", :type "string"}, :name {:description "Gets or sets the job collection resource name.", :type "string"}, :properties #:reference{:definitions "JobCollectionProperties"}, :tags {:additionalProperties {:type "string"}, :description "Gets or sets the tags.", :type "object"}, :type {:description "Gets the job collection resource type.", :readOnly true, :type "string"}}}, :ServiceBusTopicMessage {:allOf [#:reference{:definitions "ServiceBusMessage"}], :properties {:topicPath {:description "Gets or sets the topic path.", :type "string"}}}, :JobHistoryFilter {:properties {:status #:reference{:definitions "JobExecutionStatus"}}, :type "object"}, :JobRecurrence {:properties {:count {:description "Gets or sets the maximum number of times that the job should run.", :type "integer"}, :endTime {:description "Gets or sets the time at which the job will complete.", :format "date-time", :type "string"}, :frequency {:description "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).", :enum ["Minute" "Hour" "Day" "Week" "Month"], :type "string", :x-ms-enum {:modelAsString false, :name "RecurrenceFrequency"}}, :interval {:description "Gets or sets the interval between retries.", :type "integer"}, :schedule #:reference{:definitions "JobRecurrenceSchedule"}}}, :StorageQueueMessage {:properties {:message {:description "Gets or sets the message.", :type "string"}, :queueName {:description "Gets or sets the queue name.", :type "string"}, :sasToken {:description "Gets or sets the SAS key.", :type "string"}, :storageAccount {:description "Gets or sets the storage account name.", :type "string"}}}, :Sku {:properties {:name {:description "Gets or set the SKU.", :enum ["Standard" "Free" "P10Premium" "P20Premium"], :type "string", :x-ms-enum {:modelAsString false, :name "SkuDefinition"}}}}, :JobProperties {:properties {:action #:reference{:definitions "JobAction"}, :recurrence #:reference{:definitions "JobRecurrence"}, :startTime {:description "Gets or sets the job start time.", :format "date-time", :type "string"}, :state #:reference{:definitions "JobState"}, :status #:reference{:definitions "JobStatus"}}}, :JobHistoryListResult {:properties {:nextLink {:description "Gets or sets the URL to get the next set of job histories.", :type "string"}, :value {:description "Gets or sets the job histories under job.", :items #:reference{:definitions "JobHistoryDefinition"}, :type "array"}}}, :JobRecurrenceScheduleMonthlyOccurrence {:properties {:Occurrence {:description "Gets or sets the occurrence. Must be between -5 and 5.", :type "integer"}, :day {:description "Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.", :enum ["Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" "Sunday"], :type "string", :x-ms-enum {:modelAsString false, :name "JobScheduleDay"}}}}, :ClientCertAuthentication {:allOf [#:reference{:definitions "HttpAuthentication"}], :properties {:certificateExpirationDate {:description "Gets or sets the certificate expiration date.", :format "date-time", :type "string"}, :certificateSubjectName {:description "Gets or sets the certificate subject name.", :type "string"}, :certificateThumbprint {:description "Gets or sets the certificate thumbprint.", :type "string"}, :password {:description "Gets or sets the certificate password, return value will always be empty.", :type "string"}, :pfx {:description "Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty.", :type "string"}}, :x-ms-discriminator-value "ClientCertificate"}, :JobMaxRecurrence {:properties {:frequency {:description "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).", :enum ["Minute" "Hour" "Day" "Week" "Month"], :type "string", :x-ms-enum {:modelAsString false, :name "RecurrenceFrequency"}}, :interval {:description "Gets or sets the interval between retries.", :type "integer"}}}, :JobHistoryDefinition {:properties {:id {:description "Gets the job history identifier.", :readOnly true, :type "string"}, :name {:description "Gets the job history name.", :readOnly true, :type "string"}, :properties #:reference{:definitions "JobHistoryDefinitionProperties"}, :type {:description "Gets the job history resource type.", :readOnly true, :type "string"}}}}}