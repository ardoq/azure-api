{:scheme "https", :host "azure.local", :info {:title "LUIS Authoring Client", :version "3.0-preview"}, :ops {:Features_AddPhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists", :description "Creates a new phraselist feature in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true.", :in "body", :name "phraselistCreateObject", :required true, :schema #:reference{:definitions "PhraselistCreateObject"}}], :verb :post}, :Model_UpdateClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Updates the list entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The new list entity name and words list.", :in "body", :name "closedListModelUpdateObject", :required true, :schema #:reference{:definitions "ClosedListModelUpdateObject"}}], :verb :put}, :Model_CreateRegexEntityRole {:path "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Model_PatchClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Adds a batch of sublists to an existing list entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list entity model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "A words list batch.", :in "body", :name "closedListModelPatchObject", :required true, :schema #:reference{:definitions "ClosedListModelPatchObject"}}], :verb :patch}, :Examples_List {:path "/apps/{appId}/versions/{versionId}/examples", :description "Returns example utterances to be reviewed from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :AzureAccounts_RemoveFromApp {:path "/apps/{appId}/azureaccounts", :description "Removes assigned Azure account from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "BearerAuthPath"} {:description "The Azure account information object.", :in "body", :name "azureAccountInfoObject", :schema #:reference{:definitions "AzureAccountInfoObject"}}], :verb :delete}, :Model_UpdateHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Updates the name of a hierarchical entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "Model containing names of the hierarchical entity.", :in "body", :name "modelUpdateObject", :required true, :schema #:reference{:definitions "ModelUpdateObject"}}], :verb :patch}, :Model_UpdateHierarchicalEntityRole {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_GetClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Gets information about a list entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"}], :verb :get}, :Model_GetPrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Model_DeleteCustomPrebuiltDomain {:path "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}", :description "Deletes a prebuilt domain's models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "Domain name.", :in "path", :name "domainName", :required true, :type "string"}], :verb :delete}, :Model_GetPrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}", :description "Gets information about a prebuilt entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The prebuilt entity extractor ID.", :format "uuid", :in "path", :name "prebuiltId", :required true, :type "string"}], :verb :get}, :Model_ReplaceIntentFeatures {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/features", :description "Updates the information of the features used by the intent in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:description "A list of feature information objects containing the new feature relations.", :in "body", :name "featureRelationsUpdateObject", :required true, :schema #:reference{:definitions "FeaturesPerModelResponseObject"}}], :verb :put}, :Features_List {:path "/apps/{appId}/versions/{versionId}/features", :description "Gets all the extraction phraselist and pattern features in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Pattern_UpdatePattern {:path "/apps/{appId}/versions/{versionId}/patternrules/{patternId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern ID.", :format "uuid", :in "path", :name "patternId", :required true, :type "string"} {:description "An object representing a pattern.", :in "body", :name "pattern", :required true, :schema #:reference{:definitions "PatternRuleUpdateObject"}}], :verb :put}, :Model_CreateCustomPrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Apps_Update {:path "/apps/{appId}", :description "Updates the name or description of the application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing Name and Description of the application.", :in "body", :name "applicationUpdateObject", :required true, :schema #:reference{:definitions "ApplicationUpdateObject"}}], :verb :put}, :Apps_Import {:path "/apps/import", :description "Imports an application to LUIS, the application's structure is included in the request body.", :parameters [{:description "The application name to create. If not specified, the application name will be read from the imported object. If the application name already exists, an error is returned.", :in "query", :name "appName", :type "string"} {:description "A LUIS application structure.", :in "body", :name "luisApp", :required true, :schema #:reference{:definitions "LuisApp"}}], :verb :post}, :Apps_Add {:path "/apps/", :description "Creates a new LUIS app.", :parameters [{:description "An application containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is \"0.1\". Note: the culture cannot be changed after the app is created.", :in "body", :name "applicationCreateObject", :required true, :schema #:reference{:definitions "ApplicationCreateObject"}}], :verb :post}, :Model_UpdatePatternAnyEntityRole {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_GetCompositeEntityRole {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Model_ListPatternAnyEntityInfos {:path "/apps/{appId}/versions/{versionId}/patternanyentities", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Features_ListPhraseLists {:path "/apps/{appId}/versions/{versionId}/phraselists", :description "Gets all the phraselist features in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Features_GetPhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Gets phraselist feature info in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be retrieved.", :in "path", :name "phraselistId", :required true, :type "integer"}], :verb :get}, :Model_GetHierarchicalEntityRole {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :AzureAccounts_GetAssigned {:path "/apps/{appId}/azureaccounts", :description "Gets the LUIS Azure accounts assigned to the application for the user using his ARM token.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "BearerAuthPath"}], :verb :get}, :Model_GetPatternAnyEntityInfo {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Apps_PackagePublishedApplicationAsGzip {:path "/package/{appId}/slot/{slotName}/gzip", :description "Packages a published LUIS application as a GZip file to be used in the LUIS container.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "SlotNameInPath"}], :verb :get}, :Permissions_Add {:path "/apps/{appId}/permissions", :description "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing the user's email address.", :in "body", :name "userToAdd", :required true, :schema #:reference{:definitions "UserCollaborator"}}], :verb :post}, :Apps_ListCortanaEndpoints {:path "/apps/assistants", :description "Gets the endpoint URLs for the prebuilt Cortana applications.", :parameters nil, :verb :get}, :Model_AddIntent {:path "/apps/{appId}/versions/{versionId}/intents", :description "Adds an intent to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the new intent.", :in "body", :name "intentCreateObject", :required true, :schema #:reference{:definitions "ModelCreateObject"}}], :verb :post}, :Model_GetEntityFeatures {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/features", :description "Gets the information of the features used by the entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "EntityIdInPath"}], :verb :get}, :Model_AddSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists", :description "Adds a sublist to an existing list entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "Words list.", :in "body", :name "wordListCreateObject", :required true, :schema #:reference{:definitions "WordListObject"}}], :verb :post}, :Pattern_ListPatterns {:path "/apps/{appId}/versions/{versionId}/patternrules", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdatePatternAnyEntityModel {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An object containing the explicit list of the Pattern.Any entity.", :in "body", :name "patternAnyUpdateObject", :required true, :schema #:reference{:definitions "PatternAnyModelUpdateObject"}}], :verb :put}, :Model_GetEntityRole {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Pattern_AddPattern {:path "/apps/{appId}/versions/{versionId}/patternrule", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The input pattern.", :in "body", :name "pattern", :required true, :schema #:reference{:definitions "PatternRuleCreateObject"}}], :verb :post}, :Examples_Add {:path "/apps/{appId}/versions/{versionId}/example", :description "Adds a labeled example utterance in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A labeled example utterance with the expected intent and entities.", :in "body", :name "exampleLabelObject", :required true, :schema #:reference{:definitions "ExampleLabelObject"}}], :verb :post}, :Model_AddPrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts", :description "Adds a list of prebuilt entities to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "An array of prebuilt entity extractor names.", :in "body", :name "prebuiltExtractorNames", :required true, :schema #:reference{:definitions "PrebuiltExtractorNames"}}], :verb :post}, :Apps_ListUsageScenarios {:path "/apps/usagescenarios", :description "Gets the application available usage scenarios.", :parameters nil, :verb :get}, :Versions_Export {:path "/apps/{appId}/versions/{versionId}/export", :description "Exports a LUIS application to JSON format.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_ListCompositeEntities {:path "/apps/{appId}/versions/{versionId}/compositeentities", :description "Gets information about all the composite entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Deletes a list entity model from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list entity model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"}], :verb :delete}, :Model_GetHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Gets information about the child's model contained in an hierarchical entity child model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"}], :verb :get}, :Model_GetRegexEntityEntityInfo {:path "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The regular expression entity model ID.", :format "uuid", :in "path", :name "regexEntityId", :required true, :type "string"}], :verb :get}, :Apps_PackageTrainedApplicationAsGzip {:path "/package/{appId}/versions/{versionId}/gzip", :description "Packages trained LUIS application as GZip file to be used in the LUIS container.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Versions_Get {:path "/apps/{appId}/versions/{versionId}/", :description "Gets the version information such as date created, last modified date, endpoint URL, count of intents and entities, training and publishing status.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Versions_Clone {:path "/apps/{appId}/versions/{versionId}/clone", :description "Creates a new version from the selected version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the new version ID.", :in "body", :name "versionCloneObject", :required true, :schema #:reference{:definitions "TaskUpdateObject"}}], :verb :post}, :Apps_ListSupportedCultures {:path "/apps/cultures", :description "Gets a list of supported cultures. Cultures are equivalent to the written language and locale. For example,\"en-us\" represents the U.S. variation of English.", :parameters nil, :verb :get}, :Model_AddCustomPrebuiltIntent {:path "/apps/{appId}/versions/{versionId}/customprebuiltintents", :description "Adds a customizable prebuilt intent model to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the customizable prebuilt intent and the name of the domain to which this model belongs.", :in "body", :name "prebuiltDomainModelCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainModelCreateObject"}}], :verb :post}, :Model_DeleteEntityRole {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Train_GetStatus {:path "/apps/{appId}/versions/{versionId}/train", :description "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_ListEntityRoles {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Versions_Update {:path "/apps/{appId}/versions/{versionId}/", :description "Updates the name or description of the application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing Name and Description of the application.", :in "body", :name "versionUpdateObject", :required true, :schema #:reference{:definitions "TaskUpdateObject"}}], :verb :put}, :Model_UpdateRegexEntityRole {:path "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_ListEntitySuggestions {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest", :description "Get suggested example utterances that would improve the accuracy of the entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The target entity extractor model to enhance.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_Examples {:path "/apps/{appId}/versions/{versionId}/models/{modelId}/examples", :description "Gets the example utterances for the given intent or entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID (GUID) of the model.", :in "path", :name "modelId", :required true, :type "string", :x-ms-parameter-location "method"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Apps_ListAvailableCustomPrebuiltDomainsForCulture {:path "/apps/customprebuiltdomains/{culture}", :description "Gets all the available prebuilt domains for a specific culture.", :parameters [{:description "Culture.", :in "path", :name "culture", :required true, :type "string"}], :verb :get}, :Permissions_Delete {:path "/apps/{appId}/permissions", :description "Removes a user from the allowed list of users to access this LUIS application. Users are removed using their email address.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing the user's email address.", :in "body", :name "userToDelete", :required true, :schema #:reference{:definitions "UserCollaborator"}}], :verb :delete}, :Apps_AddCustomPrebuiltDomain {:path "/apps/customprebuiltdomains", :description "Adds a prebuilt domain along with its intent and entity models as a new application.", :parameters [{:description "A prebuilt domain create object containing the name and culture of the domain.", :in "body", :name "prebuiltDomainCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainCreateObject"}}], :verb :post}, :Model_AddClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists", :description "Adds a list entity model to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the name and words for the new list entity extractor.", :in "body", :name "closedListModelCreateObject", :required true, :schema #:reference{:definitions "ClosedListModelCreateObject"}}], :verb :post}, :AzureAccounts_AssignToApp {:path "/apps/{appId}/azureaccounts", :description "Assigns an Azure account to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "BearerAuthPath"} {:description "The Azure account information object.", :in "body", :name "azureAccountInfoObject", :schema #:reference{:definitions "AzureAccountInfoObject"}}], :verb :post}, :Model_DeletePatternAnyEntityRole {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Versions_Import {:path "/apps/{appId}/versions/import", :description "Imports a new version into a LUIS application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "The new versionId to import. If not specified, the versionId will be read from the imported object.", :in "query", :name "versionId", :type "string"} {:description "A LUIS application structure.", :in "body", :name "luisApp", :required true, :schema #:reference{:definitions "LuisApp"}}], :verb :post}, :Model_DeleteRegexEntityRole {:path "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Model_ListPatternAnyEntityRoles {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Examples_Batch {:path "/apps/{appId}/versions/{versionId}/examples", :description "Adds a batch of labeled example utterances to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "Array of example utterances.", :in "body", :name "exampleLabelObjectArray", :required true, :schema #:reference{:definitions "ExampleLabelObjectArray"}}], :verb :post}, :Model_DeletePrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}", :description "Deletes a prebuilt entity extractor from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The prebuilt entity extractor ID.", :format "uuid", :in "path", :name "prebuiltId", :required true, :type "string"}], :verb :delete}, :Model_GetCustomEntityRole {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Permissions_List {:path "/apps/{appId}/permissions", :description "Gets the list of user emails that have permissions to access your application.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_DeletePatternAnyEntityModel {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :delete}, :Examples_Delete {:path "/apps/{appId}/versions/{versionId}/examples/{exampleId}", :description "Deletes the labeled example utterances with the specified ID from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The example ID.", :in "path", :name "exampleId", :required true, :type "integer"}], :verb :delete}, :Model_GetEntity {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Gets information about an entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_GetClosedListEntityRole {:path "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Model_ListIntents {:path "/apps/{appId}/versions/{versionId}/intents", :description "Gets information about the intent models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdateHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Renames a single child in an existing hierarchical entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"} {:description "Model object containing new name of the hierarchical entity child.", :in "body", :name "hierarchicalChildModelUpdateObject", :required true, :schema {:properties {:name {:type "string"}}, :type "object"}}], :verb :patch}, :Model_ListCustomPrebuiltEntities {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities", :description "Gets all prebuilt entities used in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Apps_Get {:path "/apps/{appId}", :description "Gets the application info.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_DeleteHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Deletes a hierarchical entity extractor child in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"}], :verb :delete}, :Model_AddExplicitListItem {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The new explicit list item.", :in "body", :name "item", :required true, :schema #:reference{:definitions "ExplicitListItemCreateObject"}}], :verb :post}, :Model_ListPrebuiltEntities {:path "/apps/{appId}/versions/{versionId}/listprebuilts", :description "Gets all the available prebuilt entities in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_DeleteIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Deletes an intent from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:default false, :description "If true, deletes the intent's example utterances. If false, moves the example utterances to the None intent. The default value is false.", :in "query", :name "deleteUtterances", :type "boolean"}], :verb :delete}, :Apps_ListAvailableCustomPrebuiltDomains {:path "/apps/customprebuiltdomains", :description "Gets all the available custom prebuilt domains for all cultures.", :parameters nil, :verb :get}, :Settings_List {:path "/apps/{appId}/versions/{versionId}/settings", :description "Gets the settings in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Apps_List {:path "/apps/", :description "Lists all of the user's applications.", :parameters [#:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_GetIntentFeatures {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/features", :description "Gets the information of the features used by the intent in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"}], :verb :get}, :Apps_UpdatePublishSettings {:path "/apps/{appId}/publishsettings", :description "Updates the application publish settings including 'UseAllTrainingData'.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "An object containing the new publish application settings.", :in "body", :name "publishSettingUpdateObject", :required true, :schema #:reference{:definitions "PublishSettingUpdateObject"}}], :verb :put}, :Apps_GetSettings {:path "/apps/{appId}/settings", :description "Get the application settings including 'UseAllTrainingData'.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_DeletePrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Apps_DownloadQueryLogs {:path "/apps/{appId}/querylogs", :description "Gets the logs of the past month's endpoint queries for the application.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Train_TrainVersion {:path "/apps/{appId}/versions/{versionId}/train", :description "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :post}, :Model_UpdateCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Updates a composite entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "A model object containing the new entity extractor name and children.", :in "body", :name "compositeModelUpdateObject", :required true, :schema #:reference{:definitions "CompositeEntityModel"}}], :verb :put}, :Apps_UpdateSettings {:path "/apps/{appId}/settings", :description "Updates the application settings including 'UseAllTrainingData'.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "An object containing the new application settings.", :in "body", :name "applicationSettingUpdateObject", :required true, :schema #:reference{:definitions "ApplicationSettingUpdateObject"}}], :verb :put}, :Features_UpdatePhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Updates the phrases, the state and the name of the phraselist feature in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be updated.", :in "path", :name "phraselistId", :required true, :type "integer"} {:description "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature.", :in "body", :name "phraselistUpdateObject", :schema #:reference{:definitions "PhraselistUpdateObject"}}], :verb :put}, :Features_AddIntentFeature {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/features", :description "Adds a new feature relation to be used by the intent in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:description "A Feature relation information object.", :in "body", :name "featureRelationCreateObject", :required true, :schema #:reference{:definitions "ModelFeatureInformation"}}], :verb :post}, :Model_AddCompositeEntityChild {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children", :description "Creates a single child in an existing composite entity model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "A model object containing the name of the new composite child model.", :in "body", :name "compositeChildModelCreateObject", :required true, :schema {:properties {:name {:type "string"}}, :type "object"}}], :verb :post}, :Features_DeletePhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Deletes a phraselist feature from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be deleted.", :in "path", :name "phraselistId", :required true, :type "integer"}], :verb :delete}, :Model_ListCompositeEntityRoles {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"}], :verb :get}, :Model_AddEntity {:path "/apps/{appId}/versions/{versionId}/entities", :description "Adds an entity extractor to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the new entity extractor and its children.", :in "body", :name "entityModelCreateObject", :required true, :schema #:reference{:definitions "EntityModelCreateObject"}}], :verb :post}, :Model_CreatePatternAnyEntityRole {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Model_DeleteRegexEntityModel {:path "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The regular expression entity extractor ID.", :format "uuid", :in "path", :name "regexEntityId", :required true, :type "string"}], :verb :delete}, :Model_ListEntities {:path "/apps/{appId}/versions/{versionId}/entities", :description "Gets information about all the simple entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdateEntityChild {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Updates the name of an entity extractor or the name and instanceOf model of a child entity extractor.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor or the child entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "A model object containing the name new entity extractor or the name and instance of model of a child entity extractor ", :in "body", :name "entityModelUpdateObject", :required true, :schema #:reference{:definitions "EntityModelUpdateObject"}}], :verb :patch}, :Model_UpdatePrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_ReplaceEntityFeatures {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/features", :description "Updates the information of the features used by the entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "EntityIdInPath"} {:description "A list of feature information objects containing the new feature relations.", :in "body", :name "featureRelationsUpdateObject", :required true, :schema #:reference{:definitions "FeaturesPerModelResponseObject"}}], :verb :put}, :Model_GetHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Gets information about a hierarchical entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"}], :verb :get}, :Model_CreatePrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Settings_Update {:path "/apps/{appId}/versions/{versionId}/settings", :description "Updates the settings in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A list of the updated application version settings.", :in "body", :name "listOfAppVersionSettingObject", :required true, :schema {:items #:reference{:definitions "AppVersionSettingObject"}, :type "array"}}], :verb :put}, :Model_UpdateCompositeEntityRole {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Permissions_Update {:path "/apps/{appId}/permissions", :description "Replaces the current user access list with the new list sent in the body. If an empty list is sent, all access to other users will be removed.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing a list of user email addresses.", :in "body", :name "collaborators", :required true, :schema #:reference{:definitions "CollaboratorsArray"}}], :verb :put}, :Model_DeleteCompositeEntityRole {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Model_DeleteHierarchicalEntityRole {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Model_UpdateClosedListEntityRole {:path "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_UpdateIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Updates the name of an intent in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:description "A model object containing the new intent name.", :in "body", :name "modelUpdateObject", :required true, :schema #:reference{:definitions "ModelUpdateObject"}}], :verb :put}, :Model_UpdateExplicitListItem {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The explicit list item ID.", :format "int64", :in "path", :name "itemId", :required true, :type "integer"} {:description "The new explicit list item.", :in "body", :name "item", :required true, :schema #:reference{:definitions "ExplicitListItemUpdateObject"}}], :verb :put}, :Model_ListModels {:path "/apps/{appId}/versions/{versionId}/models", :description "Gets information about all the intent and entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_CreateRegexEntityModel {:path "/apps/{appId}/versions/{versionId}/regexentities", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name and regex pattern for the new regular expression entity extractor.", :in "body", :name "regexEntityExtractorCreateObj", :required true, :schema #:reference{:definitions "RegexModelCreateObject"}}], :verb :post}, :Model_DeleteCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Deletes a composite entity from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"}], :verb :delete}, :Apps_Delete {:path "/apps/{appId}", :description "Deletes an application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "ForcePath"}], :verb :delete}, :Model_UpdateRegexEntityModel {:path "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The regular expression entity extractor ID.", :format "uuid", :in "path", :name "regexEntityId", :required true, :type "string"} {:description "An object containing the new entity name and regex pattern.", :in "body", :name "regexEntityUpdateObject", :required true, :schema #:reference{:definitions "RegexModelUpdateObject"}}], :verb :put}, :Versions_Delete {:path "/apps/{appId}/versions/{versionId}/", :description "Deletes an application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :delete}, :Model_DeleteCustomEntityRole {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Model_GetExplicitListItem {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity Id.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The explicit list item Id.", :format "int64", :in "path", :name "itemId", :required true, :type "integer"}], :verb :get}, :Model_GetCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Gets information about a composite entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"}], :verb :get}, :Apps_ListEndpoints {:path "/apps/{appId}/endpoints", :description "Returns the available endpoint deployment regions and URLs.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_DeleteEntityFeature {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/features", :description "Deletes a relation from the feature relations used by the entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "EntityIdInPath"} {:description "A feature information object containing the feature relation to delete.", :in "body", :name "featureRelationDeleteObject", :required true, :schema #:reference{:definitions "ModelFeatureInformation"}}], :verb :delete}, :Versions_List {:path "/apps/{appId}/versions", :description "Gets a list of versions for this application ID.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdateCustomPrebuiltEntityRole {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_ListCustomPrebuiltEntityRoles {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_ListPrebuilts {:path "/apps/{appId}/versions/{versionId}/prebuilts", :description "Gets information about all the prebuilt entities in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Versions_DeleteUnlabelledUtterance {:path "/apps/{appId}/versions/{versionId}/suggest", :description "Deleted an unlabelled utterance in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The utterance text to delete.", :in "body", :name "utterance", :required true, :schema {:type "string"}}], :verb :delete}, :Model_AddCustomPrebuiltEntity {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities", :description "Adds a prebuilt entity model to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the prebuilt entity and the name of the domain to which this model belongs.", :in "body", :name "prebuiltDomainModelCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainModelCreateObject"}}], :verb :post}, :Apps_Publish {:path "/apps/{appId}/publish", :description "Publishes a specific version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "The application publish object. The region is the target region that the application is published to.", :in "body", :name "applicationPublishObject", :required true, :schema #:reference{:definitions "ApplicationPublishObject"}}], :verb :post}, :Apps_ListDomains {:path "/apps/domains", :description "Gets the available application domains.", :parameters nil, :verb :get}, :AzureAccounts_ListUserLUISAccounts {:path "/azureaccounts", :description "Gets the LUIS Azure accounts for the user using his ARM token.", :parameters [#:reference{:parameters "BearerAuthPath"}], :verb :get}, :Pattern_DeletePatterns {:path "/apps/{appId}/versions/{versionId}/patternrules", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The patterns IDs.", :in "body", :name "patternIds", :required true, :schema {:items {:format "uuid", :type "string"}, :type "array"}}], :verb :delete}, :Pattern_DeletePattern {:path "/apps/{appId}/versions/{versionId}/patternrules/{patternId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern ID.", :format "uuid", :in "path", :name "patternId", :required true, :type "string"}], :verb :delete}, :Model_ListRegexEntityRoles {:path "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_DeleteExplicitListItem {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern.any entity id.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The explicit list item which will be deleted.", :format "int64", :in "path", :name "itemId", :required true, :type "integer"}], :verb :delete}, :Features_AddEntityFeature {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/features", :description "Adds a new feature relation to be used by the entity in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "EntityIdInPath"} {:description "A Feature relation information object.", :in "body", :name "featureRelationCreateObject", :required true, :schema #:reference{:definitions "ModelFeatureInformation"}}], :verb :post}, :Model_CreateClosedListEntityRole {:path "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Pattern_ListIntentPatterns {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/patternrules", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_GetPatternAnyEntityRole {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Model_ListRegexEntityInfos {:path "/apps/{appId}/versions/{versionId}/regexentities", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_GetRegexEntityRole {:path "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :get}, :Model_UpdateEntityRole {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role ID.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"} {:description "The new entity role.", :in "body", :name "entityRoleUpdateObject", :required true, :schema #:reference{:definitions "EntityRoleUpdateObject"}}], :verb :put}, :Model_ListIntentSuggestions {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest", :description "Suggests example utterances that would improve the accuracy of the intent model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_CreateHierarchicalEntityRole {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Model_DeleteHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Deletes a hierarchical entity from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"}], :verb :delete}, :Model_ListClosedLists {:path "/apps/{appId}/versions/{versionId}/closedlists", :description "Gets information about all the list entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}", :description "Deletes a sublist of a specific list entity model from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The sublist ID.", :format "int64", :in "path", :name "subListId", :required true, :type "integer"}], :verb :delete}, :Model_CreatePatternAnyEntityModel {:path "/apps/{appId}/versions/{versionId}/patternanyentities", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name and explicit list for the new Pattern.Any entity extractor.", :in "body", :name "extractorCreateObject", :required true, :schema #:reference{:definitions "PatternAnyModelCreateObject"}}], :verb :post}, :Model_CreateCompositeEntityRole {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}, :Model_DeleteCompositeEntityChild {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}", :description "Deletes a composite entity extractor child from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "cChildId", :required true, :type "string"}], :verb :delete}, :Model_GetIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Gets information about the intent model in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"}], :verb :get}, :Model_DeleteEntity {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Deletes an entity or a child from a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor or the child entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :delete}, :Model_AddEntityChild {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/children", :description "Creates a single child in an existing entity model hierarchy in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "A model object containing the name of the new child model and its children.", :in "body", :name "childEntityModelCreateObject", :required true, :schema #:reference{:definitions "ChildEntityModelCreateObject"}}], :verb :post}, :Apps_GetPublishSettings {:path "/apps/{appId}/publishsettings", :description "Get the application publish settings including 'UseAllTrainingData'.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_ListCustomPrebuiltModels {:path "/apps/{appId}/versions/{versionId}/customprebuiltmodels", :description "Gets all prebuilt intent and entity model information used in a version of this application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_DeleteClosedListEntityRole {:path "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "The entity role Id.", :format "uuid", :in "path", :name "roleId", :required true, :type "string"}], :verb :delete}, :Model_ListClosedListEntityRoles {:path "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_ListHierarchicalEntityRoles {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"}], :verb :get}, :Model_ListHierarchicalEntities {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities", :description "Gets information about all the hierarchical entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_ListPrebuiltEntityRoles {:path "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "entity Id", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_AddCustomPrebuiltDomain {:path "/apps/{appId}/versions/{versionId}/customprebuiltdomains", :description "Adds a customizable prebuilt domain along with all of its intent and entity models in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A prebuilt domain create object containing the name of the domain.", :in "body", :name "prebuiltDomainObject", :required true, :schema #:reference{:definitions "PrebuiltDomainCreateBaseObject"}}], :verb :post}, :Pattern_UpdatePatterns {:path "/apps/{appId}/versions/{versionId}/patternrules", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "An array represents the patterns.", :in "body", :name "patterns", :required true, :schema {:items #:reference{:definitions "PatternRuleUpdateObject"}, :type "array"}}], :verb :put}, :Model_UpdateSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}", :description "Updates one of the list entity's sublists in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The sublist ID.", :format "int64", :in "path", :name "subListId", :required true, :type "integer"} {:description "A sublist update object containing the new canonical form and the list of words.", :in "body", :name "wordListBaseUpdateObject", :required true, :schema #:reference{:definitions "WordListBaseUpdateObject"}}], :verb :put}, :Model_DeleteIntentFeature {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/features", :description "Deletes a relation from the feature relations used by the intent in a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:description "A feature information object containing the feature relation to delete.", :in "body", :name "featureRelationDeleteObject", :required true, :schema #:reference{:definitions "ModelFeatureInformation"}}], :verb :delete}, :Pattern_BatchAddPatterns {:path "/apps/{appId}/versions/{versionId}/patternrules", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A JSON array containing patterns.", :in "body", :name "patterns", :required true, :schema {:items #:reference{:definitions "PatternRuleCreateObject"}, :type "array"}}], :verb :post}, :Model_GetExplicitList {:path "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Pattern.Any entity id.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_ListCustomPrebuiltIntents {:path "/apps/{appId}/versions/{versionId}/customprebuiltintents", :description "Gets information about customizable prebuilt intents added to a version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_CreateEntityRole {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles", :description nil, :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity model ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "An entity role object containing the name of role.", :in "body", :name "entityRoleCreateObject", :required true, :schema #:reference{:definitions "EntityRoleCreateObject"}}], :verb :post}}, :parameters {:SkipInPath {:default 0, :description "The number of entries to skip. Default value is 0.", :in "query", :minimum 0, :name "skip", :type "integer", :x-ms-parameter-location "method"}, :ForcePath {:default false, :description "A flag to indicate whether to force an operation.", :in "query", :name "force", :type "boolean", :x-ms-parameter-location "method"}, :Endpoint {:description "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).", :in "path", :name "Endpoint", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}, :IntentIdInPath {:description "The intent classifier ID.", :format "uuid", :in "path", :name "intentId", :required true, :type "string", :x-ms-parameter-location "method"}, :HEntityIdInPath {:description "The hierarchical entity extractor ID.", :format "uuid", :in "path", :name "hEntityId", :required true, :type "string", :x-ms-parameter-location "method"}, :VersionIdInPath {:description "The version ID.", :in "path", :name "versionId", :required true, :type "string", :x-ms-parameter-location "method"}, :CEntityIdInPath {:description "The composite entity extractor ID.", :format "uuid", :in "path", :name "cEntityId", :required true, :type "string", :x-ms-parameter-location "method"}, :SlotNameInPath {:description "The publishing slot name.", :in "path", :name "slotName", :required true, :type "string", :x-ms-parameter-location "method"}, :EntityIdInPath {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string", :x-ms-parameter-location "method"}, :AppIdInPath {:description "The application ID.", :format "uuid", :in "path", :name "appId", :required true, :type "string", :x-ms-parameter-location "method"}, :TakeInPath {:default 100, :description "The number of entries to return. Maximum page size is 500. Default is 100.", :in "query", :maximum 500, :minimum 0, :name "take", :type "integer", :x-ms-parameter-location "method"}, :BearerAuthPath {:description "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.", :in "header", :name "Authorization", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:CustomPrebuiltModel {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "IntentClassifier"} #:reference{:definitions "EntityExtractor"}], :description "A Custom Prebuilt model."}, :ClosedListEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "List Entity Extractor.", :properties {:subLists {:description "List of sublists.", :items #:reference{:definitions "SubClosedListResponse"}, :type "array"}}, :type "object", :x-ms-discriminator-value "List Entity Extractor"}, :ExplicitListItemUpdateObject {:description "Model object for updating an explicit (exception) list item.", :properties {:explicitListItem {:description "The explicit list item.", :type "string"}}, :type "object"}, :ExamplesPerModelResponseObject {:description "A list of example utterances per model.", :items #:reference{:definitions "LabelTextObject"}, :type "array"}, :PersonalAssistantsResponse {:description "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.", :properties {:endpointKeys #:reference{:definitions "EndpointKeys"}, :endpointUrls #:reference{:definitions "PersonalAssistantUrls"}}, :type "object"}, :NDepthEntityExtractorsList {:description "List of N-Depth Entity Extractors.", :items #:reference{:definitions "NDepthEntityExtractor"}, :type "array"}, :RegexEntityExtractorList {:description "List of Regular Expression Entity Extractors.", :items #:reference{:definitions "RegexEntityExtractor"}, :type "array"}, :PatternAnyModelCreateObject {:description "Model object for creating a Pattern.Any entity model.", :properties {:explicitList {:description "The Pattern.Any explicit list.", :items {:type "string"}, :type "array"}, :name {:description "The model name.", :type "string"}}, :type "object"}, :PhraseListFeatureInfo {:allOf [#:reference{:definitions "FeatureInfoObject"}], :description "Phraselist Feature.", :properties {:isExchangeable {:description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :phrases {:description "A list of comma-separated values.", :type "string"}}, :type "object"}, :OperationError {:description "Operation error details when invoking an operation on the API.", :properties {:code {:type "string"}, :message {:type "string"}}, :type "object"}, :ProductionOrStagingEndpointInfo {:allOf [#:reference{:definitions "EndpointInfo"}], :type "object"}, :PatternAnyEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "Pattern.Any Entity Extractor.", :properties {:explicitList #:reference{:definitions "ExplicitListItemList"}}, :type "object", :x-ms-discriminator-value "Pattern.Any Entity Extractor"}, :AvailablePrebuiltEntityModels {:description "List of Available Prebuilt entity models.", :items #:reference{:definitions "AvailablePrebuiltEntityModel"}, :type "array"}, :SubClosedListResponse {:allOf [#:reference{:definitions "SubClosedList"}], :description "Sublist of items for a list entity.", :properties {:id {:description "The sublist ID", :type "integer", :x-nullable false}}, :type "object"}, :ClosedListEntityExtractorsList {:description "List of List Entity Extractors.", :items #:reference{:definitions "ClosedListEntityExtractor"}, :type "array"}, :LabelTextObject {:description "An object containing the example utterance's text.", :properties {:id {:description "The ID of the Label.", :type "integer"}, :text {:description "The text of the label.", :type "string"}}, :type "object"}, :PrebuiltEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "Prebuilt Entity Extractor.", :type "object", :x-ms-discriminator-value "Prebuilt Entity Extractor"}, :AzureAccountInfoObject {:description "Defines the Azure account information object.", :properties {:accountName {:description "The Azure account name.", :type "string"}, :azureSubscriptionId {:description "The id for the Azure subscription.", :type "string"}, :resourceGroup {:description "The Azure resource group name.", :type "string"}}, :required ["azureSubscriptionId" "resourceGroup" "accountName"], :type "object"}, :ExplicitListItemList {:description "List of explicit (exception) list items", :items #:reference{:definitions "ExplicitListItem"}, :type "array"}, :VersionResponse {:description "The new version ID returned by when importing a model version.", :type "string"}, :FeatureInfoObject {:description "The base class Features-related response objects inherit from.", :properties {:enabledForAllModels {:description "Indicates if the feature is enabled for all models in the application.", :type "boolean"}, :id {:description "A six-digit ID used for Features.", :type "integer"}, :isActive {:description "Indicates if the feature is enabled.", :type "boolean"}, :name {:description "The name of the Feature.", :type "string"}}, :type "object"}, :ApplicationSettings {:description "The application settings.", :properties {:id {:description "The application ID.", :format "uuid", :type "string"}, :public {:description "Setting your application as public allows other people to use your application's endpoint using their own keys for billing purposes.", :type "boolean", :x-ms-client-name "isPublic", :x-nullable false}}, :required ["id" "public"], :type "object"}, :PatternFeatureInfo {:allOf [#:reference{:definitions "FeatureInfoObject"}], :description "Pattern feature.", :properties {:pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :JSONModelFeature {:description "Exported Model - Phraselist Model Feature.", :properties {:activated {:description "Indicates if the feature is enabled.", :type "boolean"}, :enabledForAllModels {:default true, :description "Indicates if the Phraselist is enabled for all models in the application.", :type "boolean"}, :mode {:description "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :words {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :ReadableType {:description "Full name of the entity type.", :enum ["Entity Extractor" "Child Entity Extractor" "Hierarchical Entity Extractor" "Hierarchical Child Entity Extractor" "Composite Entity Extractor" "List Entity Extractor" "Prebuilt Entity Extractor" "Intent Classifier" "Pattern.Any Entity Extractor" "Closed List Entity Extractor" "Regex Entity Extractor"], :type "string"}, :AvailablePrebuiltEntityModel {:description "Available Prebuilt entity model for using in an application.", :properties {:description {:description "The entity description and usage information.", :type "string"}, :examples {:description "Usage examples.", :type "string"}, :name {:description "The entity name.", :type "string"}}, :type "object"}, :ModelsInfoResponseObject {:description "A list of application model infos.", :items #:reference{:definitions "ModelInfoResponse"}, :type "array"}, :ClosedList {:description "Exported Model - A list entity.", :properties {:name {:description "Name of the list entity.", :type "string"}, :roles {:items {:type "string"}, :type "array"}, :subLists {:description "Sublists for the list entity.", :items #:reference{:definitions "SubClosedList"}, :type "array"}}, :type "object"}, :EntityRoleList {:description "List of Pattern.Any Entity Extractors.", :items #:reference{:definitions "EntityRole"}, :type "array"}, :EntityModelCreateObject {:description "An entity extractor create object.", :properties {:children {:description "Child entities.", :items #:reference{:definitions "ChildEntityModelCreateObject"}, :type "array"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :IntentClassifier {:allOf [#:reference{:definitions "ModelInfo"}], :description "Intent Classifier.", :properties {:customPrebuiltDomainName {:description "The domain name.", :type "string"}, :customPrebuiltModelName {:description "The intent name or entity name.", :type "string"}}, :type "object", :x-ms-discriminator-value "Intent Classifier"}, :LuisApp {:additionalProperties true, :description "Exported Model - An exported LUIS Application.", :properties {:versionId {:description "The version ID of the application that was exported.", :type "string"}, :intents {:description "List of intents.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :desc {:description "The description of the application.", :type "string"}, :culture {:description "The culture of the application. E.g.: en-us.", :type "string"}, :patternAnyEntities {:description "List of Pattern.Any entities.", :items #:reference{:definitions "PatternAny"}, :type "array"}, :regex_entities {:description "List of regular expression entities.", :items #:reference{:definitions "RegexEntity"}, :type "array"}, :patterns {:description "List of patterns.", :items #:reference{:definitions "PatternRule"}, :type "array"}, :name {:description "The name of the application.", :type "string"}, :entities {:description "List of entities.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :regex_features {:description "List of pattern features.", :items #:reference{:definitions "JSONRegexFeature"}, :type "array"}, :closedLists {:description "List of list entities.", :items #:reference{:definitions "ClosedList"}, :type "array"}, :prebuiltEntities {:description "List of prebuilt entities.", :items #:reference{:definitions "PrebuiltEntity"}, :type "array"}, :utterances {:description "List of example utterances.", :items #:reference{:definitions "JSONUtterance"}, :type "array"}, :hierarchicals {:description "List of hierarchical entities.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :composites {:description "List of composite entities.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :phraselists {:description "List of model features.", :items #:reference{:definitions "JSONModelFeature"}, :type "array"}}, :type "object"}, :EntityPrediction {:description "A suggested entity.", :properties {:endTokenIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity's name", :type "string"}, :phrase {:description "The actual token(s) that comprise the entity.", :type "string"}, :startTokenIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startTokenIndex" "endTokenIndex" "phrase"], :type "object"}, :CompositeEntityModel {:description "A composite entity extractor.", :properties {:children {:description "Child entities.", :items {:type "string"}, :type "array"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :PrebuiltDomain {:description "Prebuilt Domain.", :properties {:culture {:type "string"}, :description {:type "string"}, :entities {:items #:reference{:definitions "PrebuiltDomainItem"}, :type "array"}, :examples {:type "string"}, :intents {:items #:reference{:definitions "PrebuiltDomainItem"}, :type "array"}, :name {:type "string"}}, :type "object"}, :IntentsSuggestionExamples {:description "List of predicted/suggested intents.", :items #:reference{:definitions "IntentsSuggestionExample"}, :type "array"}, :PatternRuleCreateObject {:description "Object model for creating a pattern", :properties {:intent {:description "The intent's name which the pattern belongs to.", :type "string"}, :pattern {:description "The pattern text.", :type "string"}}, :type "object"}, :JSONEntity {:description "Exported Model - Extracted Entity from utterance.", :properties {:endPos {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entity {:description "The entity name.", :type "string"}, :role {:description "The role the entity plays in the utterance.", :type "string"}, :startPos {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["startPos" "endPos" "entity"], :type "object"}, :PersonalAssistantUrls {:additionalProperties {:type "string"}, :description "Endpoint URLs for prebuilt Cortana applications.", :type "object"}, :RegexEntity {:description "Regular Expression Entity Extractor.", :properties {:name {:type "string"}, :regexPattern {:type "string"}, :roles {:items {:type "string"}, :type "array"}}, :type "object"}, :NDepthEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "N-Depth Entity Extractor.", :properties {:children {:items #:reference{:definitions "ChildEntity"}, :type "array"}, :customPrebuiltDomainName {:description "The domain name.", :type "string"}, :customPrebuiltModelName {:description "The intent name or entity name.", :type "string"}}, :type "object", :x-ms-discriminator-value "N-Depth Entity Extractor"}, :AvailableCultures {:description "A list of available application cultures.", :items #:reference{:definitions "AvailableCulture"}, :type "array"}, :EntityLabel {:description "Defines the entity type and position of the extracted entity within the example.", :properties {:endTokenIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity type.", :type "string"}, :role {:description "The role of the predicted entity.", :type "string"}, :roleId {:description "The role id for the predicted entity.", :format "uuid", :type "string"}, :startTokenIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startTokenIndex" "endTokenIndex"], :type "object"}, :ExplicitListItemIDResponse {:description "The ID of the created explicit list item.", :type "integer", :x-nullable false}, :HierarchicalEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "Hierarchical Entity Extractor.", :properties {:children {:description "List of child entities.", :items #:reference{:definitions "ChildEntity"}, :type "array"}}, :type "object", :x-ms-discriminator-value "Hierarchical Entity Extractor"}, :EntityLabelObject {:description "Defines the entity type and position of the extracted entity within the example.", :properties {:endCharIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity type.", :type "string"}, :role {:description "The role the entity plays in the utterance.", :type "string"}, :startCharIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startCharIndex" "endCharIndex"], :type "object"}, :PatternAnyEntityExtractorList {:description "List of Pattern.Any Entity Extractors.", :items #:reference{:definitions "PatternAnyEntityExtractor"}, :type "array"}, :ClosedListModelCreateObject {:description "Object model for creating a list entity.", :properties {:name {:description "Name of the list entity.", :type "string"}, :subLists {:description "Sublists for the feature.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :ModelTrainingDetails {:description "Model Training Details.", :properties {:exampleCount {:description "The count of examples used to train the model.", :type "integer"}, :failureReason {:description "Reason for the training failure.", :type "string"}, :status #:reference{:definitions "TrainingStatus"}, :statusId {:description "The train request status ID.", :type "integer"}, :trainingDateTime {:description "When the model was trained.", :format "date-time", :type "string"}}, :type "object"}, :TrainingStatus {:description "The Training status.", :enum ["Queued" "InProgress" "UpToDate" "Fail" "Success"], :type "string"}, :LabelExampleResponse {:description "Response when adding a labeled example utterance.", :properties {:ExampleId {:description "The newly created sample ID.", :type "integer"}, :UtteranceText {:description "The example utterance.", :type "string"}}, :type "object"}, :ChildEntityModelCreateObject {:description "A child entity extractor create object.", :properties {:children {:description "Child entities.", :items #:reference{:definitions "ChildEntityModelCreateObject"}, :type "array"}, :instanceOf {:description "The instance of model name", :type "string"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :ApplicationUsageScenarios {:description "A list of possible application usage scenarios.", :items {:type "string"}, :type "array"}, :EnqueueTrainingResponse {:description "Response model when requesting to train the model.", :properties {:status #:reference{:definitions "TrainingStatus"}, :statusId {:description "The train request status ID.", :type "integer"}}, :type "object"}, :WordListObject {:description "Sublist of items for a list entity.", :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :ModelCreateObject {:description "Object model for creating a new entity extractor.", :properties {:name {:description "Name of the new entity extractor.", :type "string"}}, :type "object"}, :RegexEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "Regular Expression Entity Extractor.", :properties {:regexPattern {:description "The Regular Expression entity pattern.", :type "string"}}, :type "object", :x-ms-discriminator-value "Regex Entity Extractor"}, :ApplicationsInfoList {:description "List of Application Infos.", :items #:reference{:definitions "ApplicationInfoResponse"}, :type "array"}, :EndpointInfo {:description "The base class \"ProductionOrStagingEndpointInfo\" inherits from.", :properties {:assignedEndpointKey {:description "The endpoint key.", :type "string"}, :endpointRegion {:description "The endpoint's region.", :type "string"}, :endpointUrl {:description "The Runtime endpoint URL for this model version.", :type "string"}, :failedRegions {:description "Regions where publishing failed.", :type "string"}, :isStaging {:description "Indicates if the staging slot should be used, instead of the Production one.", :type "boolean"}, :publishedDateTime {:description "Timestamp when was last published.", :type "string"}, :region {:description "The target region that the application is published to.", :type "string"}, :versionId {:description "The version ID to publish.", :type "string"}}, :type "object"}, :FeaturesPerModelResponseObject {:description "A list of feature information objects per model.", :items #:reference{:definitions "ModelFeatureInformation"}, :type "array"}, :PatternAny {:description "Pattern.Any Entity Extractor.", :properties {:explicitList {:items {:type "string"}, :type "array"}, :name {:type "string"}, :roles {:items {:type "string"}, :type "array"}}, :type "object"}, :JSONRegexFeature {:description "Exported Model - A Pattern feature.", :properties {:activated {:description "Indicates if the Pattern feature is enabled.", :type "boolean"}, :name {:description "Name of the feature.", :type "string"}, :pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :PublishSettingUpdateObject {:description "Object model for updating an application's publish settings.", :properties {:sentimentAnalysis {:description "Setting sentiment analysis as true returns the Sentiment of the input utterance along with the response", :type "boolean", :x-nullable false}, :speech {:description "Setting speech as public enables speech priming in your app", :type "boolean", :x-nullable false}, :spellChecker {:description "Setting spell checker as public enables spell checking the input utterance.", :type "boolean", :x-nullable false}}, :type "object"}, :PrebuiltDomainModelCreateObject {:description "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs.", :properties {:domainName {:description "The domain name.", :type "string"}, :modelName {:description "The intent name or entity name.", :type "string"}}, :type "object"}, :AzureAccountInfoList {:description "List of Azure account info objects.", :items #:reference{:definitions "AzureAccountInfoObject"}, :type "array"}, :JSONUtterance {:description "Exported Model - Utterance that was used to train the model.", :properties {:entities {:description "The matched entities.", :items #:reference{:definitions "JSONEntity"}, :type "array"}, :intent {:description "The matched intent.", :type "string"}, :text {:description "The utterance.", :type "string"}}, :type "object"}, :AvailableDomains {:description "A list of available application domains.", :items {:type "string"}, :type "array"}, :AvailableCulture {:description "Available culture for using in a new application.", :properties {:code {:description "The ISO value for the language.", :type "string"}, :name {:description "The language name.", :type "string"}}, :type "object"}, :PatternAnyModelUpdateObject {:description "Model object for updating a Pattern.Any entity model.", :properties {:explicitList {:description "The Pattern.Any explicit list.", :items {:type "string"}, :type "array"}, :name {:description "The model name.", :type "string"}}, :type "object"}, :BatchLabelExample {:description "Response when adding a batch of labeled example utterances.", :properties {:error #:reference{:definitions "OperationStatus"}, :hasError {:type "boolean"}, :value #:reference{:definitions "LabelExampleResponse"}}, :type "object"}, :RegexModelCreateObject {:description "Model object for creating a regular expression entity model.", :properties {:name {:description "The model name.", :type "string"}, :regexPattern {:description "The regular expression entity pattern.", :type "string"}}, :type "object"}, :AvailableEndpoints {:additionalProperties {:type "string"}, :description "Collection of endpoint URLs where the selected application is deployed to.", :type "object"}, :ClosedListModelUpdateObject {:description "Object model for updating a list entity.", :properties {:name {:description "The new name of the list entity.", :type "string"}, :subLists {:description "The new sublists for the feature.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :AppVersionSettingObject {:description "Object model of an application version setting.", :properties {:name {:description "The application version setting name.", :type "string"}, :value {:description "The application version setting value.", :type "string"}}, :type "object"}, :ModelFeatureInformation {:description "An object containing the model feature information either the model name or feature name.", :properties {:featureName {:description "The name of the feature used.", :type "string"}, :modelName {:description "The name of the model used.", :type "string"}}, :type "object"}, :IntentPrediction {:description "A suggested intent.", :properties {:name {:description "The intent's name", :type "string"}, :score {:description "The intent's score, based on the prediction model.", :type "number"}}, :type "object"}, :VersionInfo {:description "Object model of an application version.", :properties {:endpointHitsCount {:description "Number of calls made to this endpoint.", :type "integer"}, :lastTrainedDateTime {:description "Timestamp of the last time the model was trained.", :format "date-time", :type "string"}, :intentsCount {:description "Number of intents in this model.", :type "integer"}, :endpointUrl {:description "The Runtime endpoint URL for this model version.", :type "string"}, :lastPublishedDateTime {:description "Timestamp when was last published.", :format "date-time", :type "string"}, :entitiesCount {:description "Number of entities in this model.", :type "integer"}, :trainingStatus {:description "The current training status.", :enum ["NeedsTraining" "InProgress" "Trained"], :type "string", :x-ms-enum {:name "TrainingStatus"}}, :lastModifiedDateTime {:description "Timestamp of the last update.", :format "date-time", :type "string"}, :assignedEndpointKey {:additionalProperties {:type "string"}, :description "The endpoint key.", :type "object"}, :externalApiKeys {:description "External keys.", :type "object"}, :createdDateTime {:description "The version's creation timestamp.", :format "date-time", :type "string"}, :version {:description "The version ID. E.g.: \"0.1\"", :type "string"}}, :required ["version" "trainingStatus"], :type "object"}, :BatchLabelExampleResponse {:description "Response when adding a batch of labeled example utterances.", :items #:reference{:definitions "BatchLabelExample"}, :type "array"}, :ApplicationUpdateObject {:description "Object model for updating the name or description of an application.", :properties {:description {:description "The application's new description.", :type "string"}, :name {:description "The application's new name.", :type "string"}}, :type "object"}, :PatternRuleUpdateObject {:description "Object model for updating a pattern.", :properties {:id {:description "The pattern ID.", :format "uuid", :type "string"}, :intent {:description "The intent's name which the pattern belongs to.", :type "string"}, :pattern {:description "The pattern text.", :type "string"}}, :type "object"}, :ModelUpdateObject {:description "Object model for updating an intent classifier.", :properties {:name {:description "The entity's new name.", :type "string"}}, :type "object"}, :IntentsSuggestionExample {:description "Predicted/suggested intent.", :properties {:entityPredictions {:description "Predicted/suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :intentPredictions {:description "Predicted/suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. For example, \"What's the weather like in seattle?\"", :type "string"}, :tokenizedText {:description "The tokenized utterance.", :items {:type "string"}, :type "array"}}, :type "object"}, :EntityModelInfo {:allOf [#:reference{:definitions "ModelInfo"}], :description "An Entity Extractor model info.", :properties {:roles #:reference{:definitions "EntityRoleList"}}, :type "object"}, :UserCollaborator {:properties {:email {:description "The email address of the user.", :type "string"}}, :type "object"}, :PhraseListFeatureInfoList {:description "List of Phraselist Features.", :items #:reference{:definitions "PhraseListFeatureInfo"}, :type "array"}, :ApplicationPublishObject {:description "Object model for publishing a specific application version.", :properties {:isStaging {:default false, :description "Indicates if the staging slot should be used, instead of the Production one.", :type "boolean"}, :versionId {:description "The version ID to publish.", :type "string"}}, :type "object"}, :PrebuiltDomainsList {:description "List of Prebuilt Domains.", :items #:reference{:definitions "PrebuiltDomain"}, :type "array"}, :GuidResponse {:description "The ID (GUID) returned by an operation.", :format "uuid", :type "string"}, :ModelInfo {:description "Base type used in entity types.", :properties {:id {:description "The ID of the Entity Model.", :format "uuid", :type "string"}, :name {:description "Name of the Entity Model.", :type "string"}, :readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :required ["id" "readableType"], :type "object"}, :TaskUpdateObject {:description "Object model for cloning an application's version.", :properties {:version {:description "The new version for the cloned model.", :type "string"}}, :type "object"}, :ModelTrainingInfoList {:description "List of Model Training Infos.", :items #:reference{:definitions "ModelTrainingInfo"}, :type "array"}, :JsonChild {:properties {:children {:items #:reference{:definitions "JsonChild"}, :type "array"}, :features {:items #:reference{:definitions "JsonModelFeatureInformation"}, :type "array"}, :instanceOf {:type "string"}, :name {:type "string"}}, :type "object"}, :ExplicitListItemCreateObject {:description "Object model for creating an explicit (exception) list item.", :properties {:explicitListItem {:description "The explicit list item.", :type "string"}}, :type "object"}, :EntityExtractorsList {:description "List of Entity Extractors.", :items #:reference{:definitions "EntityExtractor"}, :type "array"}, :HierarchicalChildEntity {:allOf [#:reference{:definitions "ChildEntity"}], :description "A Hierarchical Child Entity.", :properties {:readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :type "object"}, :OperationStatus {:description "Response of an Operation status.", :properties {:code {:description "Status Code.", :enum ["Failed" "FAILED" "Success"], :type "string", :x-ms-enum {:modelAsString true, :name "OperationStatusType"}}, :message {:description "Status details.", :type "string"}}, :type "object"}, :PrebuiltDomainObject {:properties {:domain_name {:type "string"}, :model_name {:type "string"}}, :type "object"}, :CustomPrebuiltModelList {:description "A List of Custom Prebuilt models.", :items #:reference{:definitions "CustomPrebuiltModel"}, :type "array"}, :PatternRuleInfo {:description "Pattern rule", :properties {:id {:description "The pattern ID.", :format "uuid", :type "string"}, :intent {:description "The intent's name where the pattern belongs to.", :type "string"}, :pattern {:description "The pattern text.", :type "string"}}, :type "object"}, :PrebuiltDomainCreateBaseObject {:description "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.", :properties {:domainName {:description "The domain name.", :type "string"}}, :type "object"}, :ChildEntity {:description "The base child entity type.", :properties {:children {:description "List of children", :items #:reference{:definitions "ChildEntity"}, :type "array"}, :id {:description "The ID (GUID) belonging to a child entity.", :format "uuid", :type "string"}, :instanceOf {:description "Instance of Model.", :type "string"}, :name {:description "The name of a child entity.", :type "string"}, :readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :required ["id"], :type "object"}, :PhraselistCreateObject {:description "Object model for creating a phraselist model.", :properties {:enabledForAllModels {:default true, :description "Indicates if the Phraselist is enabled for all models in the application.", :type "boolean"}, :isExchangeable {:default true, :description "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :phrases {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :PatternRule {:description "Pattern", :properties {:intent {:description "The intent's name where the pattern belongs to.", :type "string"}, :pattern {:description "The pattern text.", :type "string"}}, :type "object"}, :EntityModelUpdateObject {:description "An entity extractor update object.", :properties {:instanceOf {:description "The instance of model name", :type "string"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :GuidList {:description "List of IDs (GUID)", :items #:reference{:definitions "GuidResponse"}, :type "array"}, :HierarchicalModel {:properties {:children {:items #:reference{:definitions "JsonChild"}, :type "array"}, :features {:items #:reference{:definitions "JsonModelFeatureInformation"}, :type "array"}, :inherits #:reference{:definitions "PrebuiltDomainObject"}, :name {:type "string"}, :roles {:items {:type "string"}, :type "array"}}, :type "object"}, :FeaturesResponseObject {:description "Model Features, including Patterns and Phraselists.", :properties {:patternFeatures #:reference{:definitions "PatternFeatureInfoList"}, :phraselistFeatures #:reference{:definitions "PhraseListFeatureInfoList"}}, :type "object"}, :ApplicationCreateObject {:description "Properties for creating a new LUIS Application", :properties {:culture {:description "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.", :type "string"}, :description {:description "Description of the new application. Optional.", :type "string"}, :domain {:description "The domain for the new application. Optional. E.g.: Comics.", :type "string"}, :initialVersionId {:description "The initial version ID. Optional. Default value is: \"0.1\"", :type "string"}, :name {:description "The name for the new application.", :type "string"}, :usageScenario {:description "Defines the scenario for the new application. Optional. E.g.: IoT.", :type "string"}}, :required ["culture" "name"], :type "object"}, :PhraselistUpdateObject {:description "Object model for updating a Phraselist.", :properties {:enabledForAllModels {:default true, :description "Indicates if the Phraselist is enabled for all models in the application.", :type "boolean"}, :isActive {:default true, :description "Indicates if the Phraselist is enabled.", :type "boolean"}, :isExchangeable {:default true, :description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :phrases {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :IntentClassifiersList {:description "List of Intent Classifiers.", :items #:reference{:definitions "IntentClassifier"}, :type "array"}, :JsonModelFeatureInformation {:description "An object containing the model feature information either the model name or feature name.", :properties {:featureName {:description "The name of the feature used.", :type "string"}, :modelName {:description "The name of the model used.", :type "string"}}, :type "object"}, :EntitiesSuggestionExamples {:description "List of predicted/suggested entities.", :items #:reference{:definitions "EntitiesSuggestionExample"}, :type "array"}, :EntitiesSuggestionExample {:description "Predicted/suggested entity.", :properties {:entityPredictions {:description "Predicted/suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :intentPredictions {:description "Predicted/suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. For example, \"What's the weather like in seattle?\"", :type "string"}, :tokenizedText {:description "The utterance tokenized.", :items {:type "string"}, :type "array"}}, :type "object"}, :ModelTrainingInfo {:description "Model Training Info.", :properties {:details #:reference{:definitions "ModelTrainingDetails"}, :modelId {:description "The ID (GUID) of the model.", :format "uuid", :type "string"}}, :type "object"}, :ExplicitListItem {:description "Explicit (exception) list item", :properties {:explicitListItem {:description "The explicit list item value.", :type "string"}, :id {:description "The explicit list item ID.", :format "int64", :type "integer"}}, :type "object"}, :EntityRoleUpdateObject {:description "Object model for updating an entity role.", :properties {:name {:description "The entity role name.", :type "string"}}, :type "object"}, :PublishSettings {:description "The application publish settings.", :properties {:id {:description "The application ID.", :format "uuid", :type "string"}, :sentimentAnalysis {:description "Setting sentiment analysis as true returns the sentiment of the input utterance along with the response", :type "boolean", :x-ms-client-name "IsSentimentAnalysisEnabled", :x-nullable false}, :speech {:description "Enables speech priming in your app", :type "boolean", :x-ms-client-name "IsSpeechEnabled", :x-nullable false}, :spellChecker {:description "Enables spell checking of the utterance.", :type "boolean", :x-ms-client-name "IsSpellCheckerEnabled", :x-nullable false}}, :required ["id" "sentimentAnalysis" "speech" "spellChecker"], :type "object"}, :PrebuiltExtractorNames {:description "Object model for adding a prebuilt entity to the application.", :items {:type "string"}, :type "array"}, :LabeledUtterances {:description "A list of predictions and label pairs for every example in the application.", :items #:reference{:definitions "LabeledUtterance"}, :type "array"}, :PrebuiltEntityExtractorsList {:description "List of Prebuilt Entity Extractors.", :items #:reference{:definitions "PrebuiltEntityExtractor"}, :type "array"}, :ErrorResponse {:additionalProperties {:type "object"}, :description "Error response when invoking an operation on the API.", :properties {:errorType {:type "string"}}, :type "object"}, :CollaboratorsArray {:properties {:emails {:description "The email address of the users.", :items {:type "string"}, :type "array"}}, :type "object"}, :CompositeEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "A Composite Entity Extractor.", :properties {:children {:description "List of child entities.", :items #:reference{:definitions "ChildEntity"}, :type "array"}}, :type "object", :x-ms-discriminator-value "Composite Entity Extractor"}, :ApplicationSettingUpdateObject {:description "Object model for updating an application's settings.", :properties {:public {:description "Setting your application as public allows other people to use your application's endpoint using their own keys.", :type "boolean", :x-ms-client-name "isPublic", :x-nullable false}}, :type "object"}, :PrebuiltEntity {:description "Prebuilt Entity Extractor.", :properties {:name {:type "string"}, :roles {:items {:type "string"}, :type "array"}}, :type "object"}, :FeatureIDResponse {:description "The ID of the created feature.", :type "integer", :x-nullable false}, :PrebuiltDomainCreateObject {:description "A prebuilt domain create object containing the name and culture of the domain.", :properties {:culture {:description "The culture of the new domain.", :type "string"}, :domainName {:description "The domain name.", :type "string"}}, :type "object"}, :ApplicationInfoResponse {:description "Response containing the Application Info.", :properties {:description {:description "The description of the application.", :type "string"}, :endpointHitsCount {:description "Number of calls made to this endpoint.", :type "integer"}, :culture {:description "The culture of the application. For example, \"en-us\".", :type "string"}, :usageScenario {:description "Defines the scenario for the new application. Optional. For example, IoT.", :type "string"}, :name {:description "The name of the application.", :type "string"}, :endpoints {:description "The Runtime endpoint URL for this model version.", :type "object"}, :id {:description "The ID (GUID) of the application.", :format "uuid", :type "string"}, :versionsCount {:description "Amount of model versions within the application.", :type "integer"}, :domain {:description "The domain for the new application. Optional. For example, Comics.", :type "string"}, :createdDateTime {:description "The version's creation timestamp.", :type "string"}, :activeVersion {:description "The version ID currently marked as active.", :type "string"}}, :type "object"}, :ClosedListModelPatchObject {:description "Object model for adding a batch of sublists to an existing list entity.", :properties {:subLists {:description "Sublists to add.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :EntityRole {:description "Entity extractor role", :properties {:id {:description "The entity role ID.", :format "uuid", :type "string"}, :name {:description "The entity role name.", :type "string"}}, :type "object"}, :ExampleLabelObject {:description "A labeled example utterance.", :properties {:entityLabels {:description "The identified entities within the example utterance.", :items #:reference{:definitions "EntityLabelObject"}, :type "array"}, :intentName {:description "The identified intent representing the example utterance.", :type "string"}, :text {:description "The example utterance.", :type "string"}}, :type "object"}, :PrebuiltDomainItem {:properties {:description {:type "string"}, :examples {:type "string"}, :name {:type "string"}}, :type "object"}, :EndpointKeys {:description "An a array of GUIDs, comprised of Azure Endpoint Keys and the Authoring API key.", :items {:format "uuid", :type "string"}, :type "array"}, :EntityRoleCreateObject {:description "Object model for creating an entity role.", :properties {:name {:description "The entity role name.", :type "string"}}, :type "object"}, :LabeledUtterance {:description "A prediction and label pair of an example.", :properties {:entityLabels {:description "The entities matching the example.", :items #:reference{:definitions "EntityLabel"}, :type "array"}, :entityPredictions {:description "List of suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :id {:description "ID of Labeled Utterance.", :type "integer"}, :intentLabel {:description "The intent matching the example.", :type "string"}, :intentPredictions {:description "List of suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. For example, \"What's the weather like in seattle?\"", :type "string"}, :tokenizedText {:description "The utterance tokenized.", :items {:type "string"}, :type "array"}}, :type "object"}, :PatternFeatureInfoList {:description "List of Pattern features.", :items #:reference{:definitions "PatternFeatureInfo"}, :type "array"}, :UserAccessList {:description "List of user permissions.", :properties {:emails {:items {:type "string"}, :type "array"}, :owner {:description "The email address of owner of the application.", :type "string"}}, :type "object"}, :SubClosedList {:description "Sublist of items for a list entity.", :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :HierarchicalEntityExtractorsList {:description "List of Hierarchical Entity Extractors.", :items #:reference{:definitions "HierarchicalEntityExtractor"}, :type "array"}, :ExampleLabelObjectArray {:description "Object model for adding a batch of labeled examples.", :items #:reference{:definitions "ExampleLabelObject"}, :type "array"}, :PatternRuleList {:description "List of patterns", :items #:reference{:definitions "PatternRuleInfo"}, :type "array"}, :ModelInfoResponse {:allOf [#:reference{:definitions "HierarchicalEntityExtractor"} #:reference{:definitions "CompositeEntityExtractor"} #:reference{:definitions "ClosedListEntityExtractor"} #:reference{:definitions "IntentClassifier"} #:reference{:definitions "EntityExtractor"} #:reference{:definitions "RegexEntityExtractor"} #:reference{:definitions "PatternAnyEntityExtractor"} #:reference{:definitions "NDepthEntityExtractor"}], :description "An application model info.", :properties {:id {:description "The ID of the Entity Model.", :format "uuid", :type "string"}, :name {:description "Name of the Entity Model.", :type "string"}, :readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :required ["id" "readableType"], :type "object"}, :WordListBaseUpdateObject {:description "Object model for updating one of the list entity's sublists.", :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :EntityExtractor {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "EntityModelInfo"}], :description "Entity Extractor.", :properties {:customPrebuiltDomainName {:description "The domain name.", :type "string"}, :customPrebuiltModelName {:description "The intent name or entity name.", :type "string"}}, :type "object", :x-ms-discriminator-value "Entity Extractor"}, :RegexModelUpdateObject {:description "Model object for updating a regular expression entity model.", :properties {:name {:description "The model name.", :type "string"}, :regexPattern {:description "The regular expression entity pattern.", :type "string"}}, :type "object"}, :CompositeEntityExtractorsList {:description "List of Composite Entity Extractors.", :items #:reference{:definitions "CompositeEntityExtractor"}, :type "array"}}}