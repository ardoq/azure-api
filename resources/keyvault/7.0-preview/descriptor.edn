{:scheme "https", :host "azure.local", :info {:description "The key vault client performs cryptographic key operations and vault operations against the Key Vault service.", :title "KeyVaultClient", :version "7.0-preview"}, :ops {:GetCertificateContacts {:path "/certificates/contacts", :description "The GetCertificateContacts operation returns the set of certificate contact resources in the specified key vault. This operation requires the certificates/managecontacts permission.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetSecret {:path "/secrets/{secret-name}/{secret-version}", :description "The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} {:description "The version of the secret.", :in "path", :name "secret-version", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetDeletedSasDefinition {:path "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}", :description "The Get Deleted SAS Definition operation returns the specified deleted SAS definition along with its attributes. This operation requires the storage/getsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :UpdateSasDefinition {:path "/storage/{storage-account-name}/sas/{sas-definition-name}", :description "Updates the specified attributes associated with the given SAS definition. This operation requires the storage/setsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The parameters to update a SAS definition.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SasDefinitionUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :DeleteStorageAccount {:path "/storage/{storage-account-name}", :description "Deletes a storage account. This operation requires the storage/delete permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :UpdateCertificateIssuer {:path "/certificates/issuers/{issuer-name}", :description "The UpdateCertificateIssuer operation performs an update on the specified certificate issuer entity. This operation requires the certificates/setissuers permission.", :parameters [{:description "The name of the issuer.", :in "path", :name "issuer-name", :required true, :type "string"} {:description "Certificate issuer update parameter.", :in "body", :name "parameter", :required true, :schema #:reference{:definitions "CertificateIssuerUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :sign {:path "/keys/{key-name}/{key-version}/sign", :description "The SIGN operation is applicable to asymmetric and symmetric keys stored in Azure Key Vault since this operation uses the private portion of the key. This operation requires the keys/sign permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for the signing operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeySignParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :RecoverDeletedKey {:path "/deletedkeys/{key-name}/recover", :description "The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled vaults. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled vaults. This operation requires the keys/recover permission.", :parameters [{:description "The name of the deleted key.", :in "path", :name "key-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :RecoverDeletedSasDefinition {:path "/deletedstorage/{storage-account-name}/sas/{sas-definition-name}/recover", :description "Recovers the deleted SAS definition for the specified storage account. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :ImportKey {:path "/keys/{key-name}", :description "The import key operation may be used to import any key type into an Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. This operation requires the keys/import permission.", :parameters [{:description "Name for the imported key.", :in "path", :name "key-name", :pattern "^[0-9a-zA-Z-]+$", :required true, :type "string"} {:description "The parameters to import a key.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyImportParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :SetCertificateIssuer {:path "/certificates/issuers/{issuer-name}", :description "The SetCertificateIssuer operation adds or updates the specified certificate issuer. This operation requires the certificates/setissuers permission.", :parameters [{:description "The name of the issuer.", :in "path", :name "issuer-name", :required true, :type "string"} {:description "Certificate issuer set parameter.", :in "body", :name "parameter", :required true, :schema #:reference{:definitions "CertificateIssuerSetParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :GetSecrets {:path "/secrets", :description "The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified, the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DeleteCertificateContacts {:path "/certificates/contacts", :description "Deletes the certificate contacts for a specified key vault certificate. This operation requires the certificates/managecontacts permission.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :CreateCertificate {:path "/certificates/{certificate-name}/create", :description "If this is the first version, the certificate resource is created. This operation requires the certificates/create permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :pattern "^[0-9a-zA-Z-]+$", :required true, :type "string"} {:description "The parameters to create a certificate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateCreateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :unwrapKey {:path "/keys/{key-name}/{key-version}/unwrapkey", :description "The UNWRAP operation supports decryption of a symmetric key using the target key encryption key. This operation is the reverse of the WRAP operation. The UNWRAP operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/unwrapKey permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for the key operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyOperationsParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetDeletedCertificates {:path "/deletedcertificates", :description "The GetDeletedCertificates operation retrieves the certificates in the current vault which are in a deleted state and ready for recovery or purging. This operation includes deletion-specific information. This operation requires the certificates/get/list permission. This operation can only be enabled on soft-delete enabled vaults.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} {:description "Specifies whether to include certificates which are not completely provisioned.", :in "query", :name "includePending", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :BackupSecret {:path "/secrets/{secret-name}/backup", :description "Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetDeletedCertificate {:path "/deletedcertificates/{certificate-name}", :description "The GetDeletedCertificate operation retrieves the deleted certificate information plus its attributes, such as retention interval, scheduled permanent deletion and the current deletion recovery level. This operation requires the certificates/get permission.", :parameters [{:description "The name of the certificate", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RecoverDeletedStorageAccount {:path "/deletedstorage/{storage-account-name}/recover", :description "Recovers the deleted storage account in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/recover permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :SetCertificateContacts {:path "/certificates/contacts", :description "Sets the certificate contacts for the specified key vault. This operation requires the certificates/managecontacts permission.", :parameters [{:description "The contacts for the key vault certificate.", :in "body", :name "contacts", :required true, :schema #:reference{:definitions "Contacts"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :RestoreCertificate {:path "/certificates/restore", :description "Restores a backed up certificate, and all its versions, to a vault. This operation requires the certificates/restore permission.", :parameters [{:description "The parameters to restore the certificate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateRestoreParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :DeleteCertificate {:path "/certificates/{certificate-name}", :description "Deletes all versions of a certificate object along with its associated policy. Delete certificate cannot be used to remove individual versions of a certificate object. This operation requires the certificates/delete permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetDeletedStorageAccounts {:path "/deletedstorage", :description "The Get Deleted Storage Accounts operation returns the storage accounts that have been deleted for a vault enabled for soft-delete. This operation requires the storage/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :encrypt {:path "/keys/{key-name}/{key-version}/encrypt", :description "The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Azure Key Vault. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encrypt permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for the encryption operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyOperationsParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetDeletedSecrets {:path "/deletedsecrets", :description "The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RecoverDeletedSecret {:path "/deletedsecrets/{secret-name}/recover", :description "Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission.", :parameters [{:description "The name of the deleted secret.", :in "path", :name "secret-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetStorageAccounts {:path "/storage", :description "List storage accounts managed by the specified key vault. This operation requires the storage/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetDeletedKey {:path "/deletedkeys/{key-name}", :description "The Get Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/get permission. ", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :wrapKey {:path "/keys/{key-name}/{key-version}/wrapkey", :description "The WRAP operation supports encryption of a symmetric key using a key encryption key that has previously been stored in an Azure Key Vault. The WRAP operation is only strictly necessary for symmetric keys stored in Azure Key Vault since protection with an asymmetric key can be performed using the public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/wrapKey permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for wrap operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyOperationsParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :SetSasDefinition {:path "/storage/{storage-account-name}/sas/{sas-definition-name}", :description "Creates or updates a new SAS definition for the specified storage account. This operation requires the storage/setsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The parameters to create a SAS definition.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SasDefinitionCreateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :GetCertificateIssuers {:path "/certificates/issuers", :description "The GetCertificateIssuers operation returns the set of certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetDeletedStorageAccount {:path "/deletedstorage/{storage-account-name}", :description "The Get Deleted Storage Account operation returns the specified deleted storage account along with its attributes. This operation requires the storage/get permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :UpdateKey {:path "/keys/{key-name}/{key-version}", :description "In order to perform this operation, the key must already exist in the Key Vault. Note: The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.", :parameters [{:description "The name of key to update.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key to update.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters of the key to update.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :DeleteSasDefinition {:path "/storage/{storage-account-name}/sas/{sas-definition-name}", :description "Deletes a SAS definition from a specified storage account. This operation requires the storage/deletesas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetStorageAccount {:path "/storage/{storage-account-name}", :description "Gets information about a specified storage account. This operation requires the storage/get permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :UpdateSecret {:path "/secrets/{secret-name}/{secret-version}", :description "The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} {:description "The version of the secret.", :in "path", :name "secret-version", :required true, :type "string"} {:description "The parameters for update secret operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SecretUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :GetSecretVersions {:path "/secrets/{secret-name}/versions", :description "The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} {:description "Maximum number of results to return in a page. If not specified, the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetCertificatePolicy {:path "/certificates/{certificate-name}/policy", :description "The GetCertificatePolicy operation returns the specified certificate policy resources in the specified key vault. This operation requires the certificates/get permission.", :parameters [{:description "The name of the certificate in a given key vault.", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :CreateKey {:path "/keys/{key-name}/create", :description "The create key operation can be used to create any key type in Azure Key Vault. If the named key already exists, Azure Key Vault creates a new version of the key. It requires the keys/create permission.", :parameters [{:description "The name for the new key. The system will generate the version name for the new key.", :in "path", :name "key-name", :pattern "^[0-9a-zA-Z-]+$", :required true, :type "string"} {:description "The parameters to create a key.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyCreateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :PurgeDeletedCertificate {:path "/deletedcertificates/{certificate-name}", :description "The PurgeDeletedCertificate operation performs an irreversible deletion of the specified certificate, without possibility for recovery. The operation is not available if the recovery level does not specify 'Purgeable'. This operation requires the certificate/purge permission.", :parameters [{:description "The name of the certificate", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :SetStorageAccount {:path "/storage/{storage-account-name}", :description "Creates or updates a new storage account. This operation requires the storage/set permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The parameters to create a storage account.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StorageAccountCreateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :GetKeys {:path "/keys", :description "Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :BackupStorageAccount {:path "/storage/{storage-account-name}/backup", :description "Requests that a backup of the specified storage account be downloaded to the client. This operation requires the storage/backup permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :DeleteCertificateOperation {:path "/certificates/{certificate-name}/pending", :description "Deletes the creation operation for a specified certificate that is in the process of being created. The certificate is no longer created. This operation requires the certificates/update permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetDeletedSasDefinitions {:path "/deletedstorage/{storage-account-name}/sas", :description "The Get Deleted Sas Definitions operation returns the SAS definitions that have been deleted for a vault enabled for soft-delete. This operation requires the storage/listsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :UpdateCertificatePolicy {:path "/certificates/{certificate-name}/policy", :description "Set specified members in the certificate policy. Leave others as null. This operation requires the certificates/update permission.", :parameters [{:description "The name of the certificate in the given vault.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "The policy for the certificate.", :in "body", :name "certificatePolicy", :required true, :schema #:reference{:definitions "CertificatePolicy"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :BackupKey {:path "/keys/{key-name}/backup", :description "The Key Backup operation exports a key from Azure Key Vault in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Azure Key Vault system, the returned key material is either protected to a Azure Key Vault HSM or to Azure Key Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Azure Key Vault instance, BACKUP the key, and then RESTORE it into another Azure Key Vault instance. The BACKUP operation may be used to export, in protected form, any key type from Azure Key Vault. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :DeleteKey {:path "/keys/{key-name}", :description "The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.", :parameters [{:description "The name of the key to delete.", :in "path", :name "key-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :PurgeDeletedSecret {:path "/deletedsecrets/{secret-name}", :description "The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetDeletedSecret {:path "/deletedsecrets/{secret-name}", :description "The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PurgeDeletedStorageAccount {:path "/deletedstorage/{storage-account-name}", :description "The purge deleted storage account operation removes the secret permanently, without the possibility of recovery. This operation can only be performed on a soft-delete enabled vault. This operation requires the storage/purge permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetCertificateVersions {:path "/certificates/{certificate-name}/versions", :description "The GetCertificateVersions operation returns the versions of a certificate in the specified key vault. This operation requires the certificates/list permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetKey {:path "/keys/{key-name}/{key-version}", :description "The get key operation is applicable to all key types. If the requested key is symmetric, then no key material is released in the response. This operation requires the keys/get permission.", :parameters [{:description "The name of the key to get.", :in "path", :name "key-name", :required true, :type "string"} {:description "Adding the version parameter retrieves a specific version of a key.", :in "path", :name "key-version", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :SetSecret {:path "/secrets/{secret-name}", :description " The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :pattern "^[0-9a-zA-Z-]+$", :required true, :type "string"} {:description "The parameters for setting the secret.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SecretSetParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :GetDeletedKeys {:path "/deletedkeys", :description "Retrieves a list of the keys in the Key Vault as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ImportCertificate {:path "/certificates/{certificate-name}/import", :description "Imports an existing valid certificate, containing a private key, into Azure Key Vault. The certificate to be imported can be in either PFX or PEM format. If the certificate is in PEM format the PEM file must contain the key as well as x509 certificates. This operation requires the certificates/import permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :pattern "^[0-9a-zA-Z-]+$", :required true, :type "string"} {:description "The parameters to import the certificate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateImportParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :decrypt {:path "/keys/{key-name}/{key-version}/decrypt", :description "The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Azure Key Vault since it uses the private portion of the key. This operation requires the keys/decrypt permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for the decryption operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyOperationsParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :verify {:path "/keys/{key-name}/{key-version}/verify", :description "The VERIFY operation is applicable to symmetric keys stored in Azure Key Vault. VERIFY is not strictly necessary for asymmetric keys stored in Azure Key Vault since signature verification can be performed using the public portion of the key but this operation is supported as a convenience for callers that only have a key-reference and not the public portion of the key. This operation requires the keys/verify permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "The version of the key.", :in "path", :name "key-version", :required true, :type "string"} {:description "The parameters for verify operations.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyVerifyParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetSasDefinitions {:path "/storage/{storage-account-name}/sas", :description "List storage SAS definitions for the given storage account. This operation requires the storage/listsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RecoverDeletedCertificate {:path "/deletedcertificates/{certificate-name}/recover", :description "The RecoverDeletedCertificate operation performs the reversal of the Delete operation. The operation is applicable in vaults enabled for soft-delete, and must be issued during the retention interval (available in the deleted certificate's attributes). This operation requires the certificates/recover permission.", :parameters [{:description "The name of the deleted certificate", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :GetCertificates {:path "/certificates", :description "The GetCertificates operation returns the set of certificates resources in the specified key vault. This operation requires the certificates/list permission.", :parameters [{:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} {:description "Specifies whether to include certificates which are not completely provisioned.", :in "query", :name "includePending", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetCertificate {:path "/certificates/{certificate-name}/{certificate-version}", :description "Gets information about a specific certificate. This operation requires the certificates/get permission.", :parameters [{:description "The name of the certificate in the given vault.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "The version of the certificate.", :in "path", :name "certificate-version", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :UpdateCertificate {:path "/certificates/{certificate-name}/{certificate-version}", :description "The UpdateCertificate operation applies the specified update on the given certificate; the only elements updated are the certificate's attributes. This operation requires the certificates/update permission.", :parameters [{:description "The name of the certificate in the given key vault.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "The version of the certificate.", :in "path", :name "certificate-version", :required true, :type "string"} {:description "The parameters for certificate update.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :RegenerateStorageAccountKey {:path "/storage/{storage-account-name}/regeneratekey", :description "Regenerates the specified key value for the given storage account. This operation requires the storage/regeneratekey permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The parameters to regenerate storage account key.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StorageAccountRegenerteKeyParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :RestoreKey {:path "/keys/restore", :description "Imports a previously backed up key into Azure Key Vault, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different vault. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints: The target Key Vault must be owned by the same Microsoft Azure Subscription as the source Key Vault The user must have RESTORE permission in the target Key Vault. This operation requires the keys/restore permission.", :parameters [{:description "The parameters to restore the key.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "KeyRestoreParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :PurgeDeletedKey {:path "/deletedkeys/{key-name}", :description "The Purge Deleted Key operation is applicable for soft-delete enabled vaults. While the operation can be invoked on any vault, it will return an error if invoked on a non soft-delete enabled vault. This operation requires the keys/purge permission.", :parameters [{:description "The name of the key", :in "path", :name "key-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :DeleteCertificateIssuer {:path "/certificates/issuers/{issuer-name}", :description "The DeleteCertificateIssuer operation permanently removes the specified certificate issuer from the vault. This operation requires the certificates/manageissuers/deleteissuers permission.", :parameters [{:description "The name of the issuer.", :in "path", :name "issuer-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :MergeCertificate {:path "/certificates/{certificate-name}/pending/merge", :description "The MergeCertificate operation performs the merging of a certificate or certificate chain with a key pair currently available in the service. This operation requires the certificates/create permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "The parameters to merge certificate.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateMergeParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :UpdateCertificateOperation {:path "/certificates/{certificate-name}/pending", :description "Updates a certificate creation operation that is already in progress. This operation requires the certificates/update permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} {:description "The certificate operation response.", :in "body", :name "certificateOperation", :required true, :schema #:reference{:definitions "CertificateOperationUpdateParameter"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :GetKeyVersions {:path "/keys/{key-name}/versions", :description "The full key identifier, attributes, and tags are provided in the response. This operation requires the keys/list permission.", :parameters [{:description "The name of the key.", :in "path", :name "key-name", :required true, :type "string"} {:description "Maximum number of results to return in a page. If not specified the service will return up to 25 results.", :format "int32", :in "query", :maximum 25, :minimum 1, :name "maxresults", :required false, :type "integer"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetCertificateOperation {:path "/certificates/{certificate-name}/pending", :description "Gets the creation operation associated with a specified certificate. This operation requires the certificates/get permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :BackupCertificate {:path "/certificates/{certificate-name}/backup", :description "Requests that a backup of the specified certificate be downloaded to the client. All versions of the certificate will be downloaded. This operation requires the certificates/backup permission.", :parameters [{:description "The name of the certificate.", :in "path", :name "certificate-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :UpdateStorageAccount {:path "/storage/{storage-account-name}", :description "Updates the specified attributes associated with the given storage account. This operation requires the storage/set/update permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The parameters to update a storage account.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StorageAccountUpdateParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :RestoreSecret {:path "/secrets/restore", :description "Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission.", :parameters [{:description "The parameters to restore the secret.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SecretRestoreParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :RestoreStorageAccount {:path "/storage/restore", :description "Restores a backed up storage account to a vault. This operation requires the storage/restore permission.", :parameters [{:description "The parameters to restore the storage account.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StorageRestoreParameters"}, :x-ms-client-flatten true} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :DeleteSecret {:path "/secrets/{secret-name}", :description "The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission.", :parameters [{:description "The name of the secret.", :in "path", :name "secret-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :GetSasDefinition {:path "/storage/{storage-account-name}/sas/{sas-definition-name}", :description "Gets information about a SAS definition for the specified storage account. This operation requires the storage/getsas permission.", :parameters [{:description "The name of the storage account.", :in "path", :name "storage-account-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} {:description "The name of the SAS definition.", :in "path", :name "sas-definition-name", :pattern "^[0-9a-zA-Z]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :GetCertificateIssuer {:path "/certificates/issuers/{issuer-name}", :description "The GetCertificateIssuer operation returns the specified certificate issuer resources in the specified key vault. This operation requires the certificates/manageissuers/getissuers permission.", :parameters [{:description "The name of the issuer.", :in "path", :name "issuer-name", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}}, :definitions {:PendingCertificateSigningRequestResult {:description "The pending certificate signing request result.", :properties {:value {:description "The pending certificate signing request as Base64 encoded string.", :readOnly true, :type "string"}}}, :BackupStorageResult {:description "The backup storage result, containing the backup blob.", :properties {:value {:description "The backup blob containing the backed up storage account.", :format "base64url", :readOnly true, :type "string"}}}, :SasDefinitionBundle {:description "A SAS definition bundle consists of key vault SAS definition details plus its attributes.", :properties {:attributes #:reference{:definitions "SasDefinitionAttributes"}, :id {:description "The SAS definition id.", :readOnly true, :type "string"}, :sasType {:description "The type of SAS token the SAS definition will create.", :enum ["account" "service"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "SasTokenType"}}, :sid {:description "Storage account SAS definition secret id.", :readOnly true, :type "string", :x-ms-client-name "SecretId"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs", :readOnly true, :type "object"}, :templateUri {:description "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.", :readOnly true, :type "string"}, :validityPeriod {:description "The validity period of SAS tokens created according to the SAS definition.", :readOnly true, :type "string"}}}, :CertificatePolicy {:description "Management policy for a certificate.", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :id {:description "The certificate id.", :readOnly true, :type "string"}, :issuer #:reference{:definitions "IssuerParameters"}, :key_props #:reference{:definitions "KeyProperties"}, :lifetime_actions {:description "Actions that will be performed by Key Vault over the lifetime of a certificate.", :items #:reference{:definitions "LifetimeAction"}, :type "array"}, :secret_props #:reference{:definitions "SecretProperties"}, :x509_props #:reference{:definitions "X509CertificateProperties"}}}, :SecretSetParameters {:description "The secret set parameters.", :properties {:attributes #:reference{:definitions "SecretAttributes"}, :contentType {:description "Type of the secret value such as a password.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :value {:description "The value of the secret.", :type "string"}}, :required ["value"]}, :KeyImportParameters {:description "The key import parameters.", :properties {:Hsm {:description "Whether to import as a hardware key (HSM) or software key.", :type "boolean"}, :attributes #:reference{:definitions "KeyAttributes"}, :key #:reference{:definitions "JsonWebKey"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}, :required ["key"]}, :DeletedCertificateItem {:allOf [#:reference{:definitions "CertificateItem"}], :description "The deleted certificate item containing metadata about the deleted certificate.", :properties {:deletedDate {:description "The time when the certificate was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted certificate.", :type "string"}, :scheduledPurgeDate {:description "The time when the certificate is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :KeyProperties {:description "Properties of the key pair backing a certificate.", :properties {:crv {:description "Elliptic curve name. For valid values, see JsonWebKeyCurveName.", :enum ["P-256" "P-384" "P-521" "P-256K"], :type "string", :x-ms-client-name "curve", :x-ms-enum {:modelAsString true, :name "JsonWebKeyCurveName"}}, :exportable {:description "Indicates if the private key can be exported.", :type "boolean"}, :key_size {:description "The key size in bits. For example: 2048, 3072, or 4096 for RSA.", :format "int32", :type "integer"}, :kty {:description "The type of key pair to be used for the certificate.", :enum ["EC" "EC-HSM" "RSA" "RSA-HSM" "oct"], :type "string", :x-ms-client-name "keyType", :x-ms-enum {:modelAsString true, :name "JsonWebKeyType"}}, :reuse_key {:description "Indicates if the same key pair will be used on certificate renewal.", :type "boolean"}}}, :DeletedSasDefinitionItem {:allOf [#:reference{:definitions "SasDefinitionItem"}], :description "The deleted SAS definition item containing metadata about the deleted SAS definition.", :properties {:deletedDate {:description "The time when the SAS definition was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted SAS definition.", :type "string"}, :scheduledPurgeDate {:description "The time when the SAS definition is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :DeletedCertificateBundle {:allOf [#:reference{:definitions "CertificateBundle"}], :description "A Deleted Certificate consisting of its previous id, attributes and its tags, as well as information on when it will be purged.", :properties {:deletedDate {:description "The time when the certificate was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted certificate.", :type "string"}, :scheduledPurgeDate {:description "The time when the certificate is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :SecretUpdateParameters {:description "The secret update parameters.", :properties {:attributes #:reference{:definitions "SecretAttributes"}, :contentType {:description "Type of the secret value such as a password.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :SecretRestoreParameters {:description "The secret restore parameters.", :properties {:value {:description "The backup blob associated with a secret bundle.", :format "base64url", :type "string", :x-ms-client-name "secretBundleBackup"}}, :required ["value"]}, :Contacts {:description "The contacts for the vault certificates.", :properties {:contacts {:description "The contact list for the vault certificates.", :items #:reference{:definitions "Contact"}, :type "array", :x-ms-client-name "ContactList"}, :id {:description "Identifier for the contacts collection.", :readOnly true, :type "string"}}}, :KeyUpdateParameters {:description "The key update parameters.", :properties {:attributes #:reference{:definitions "KeyAttributes"}, :key_ops {:description "Json web key operations. For more information on possible key operations, see JsonWebKeyOperation.", :items {:enum ["encrypt" "decrypt" "sign" "verify" "wrapKey" "unwrapKey"], :type "string", :x-ms-enum {:modelAsString true, :name "JsonWebKeyOperation"}}, :type "array"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :DeletedKeyItem {:allOf [#:reference{:definitions "KeyItem"}], :description "The deleted key item containing the deleted key metadata and information about deletion.", :properties {:deletedDate {:description "The time when the key was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted key.", :type "string"}, :scheduledPurgeDate {:description "The time when the key is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :KeyItem {:description "The key item containing key metadata.", :properties {:attributes #:reference{:definitions "KeyAttributes"}, :kid {:description "Key identifier.", :type "string"}, :managed {:description "True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.", :readOnly true, :type "boolean"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :DeletedStorageListResult {:description "The deleted storage account list result", :properties {:nextLink {:description "The URL to get the next set of deleted storage accounts.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of the deleted storage accounts in the vault along with a link to the next page of deleted storage accounts", :items #:reference{:definitions "DeletedStorageAccountItem"}, :readOnly true, :type "array"}}}, :DeletedSasDefinitionBundle {:allOf [#:reference{:definitions "SasDefinitionBundle"}], :description "A deleted SAS definition bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged.", :properties {:deletedDate {:description "The time when the SAS definition was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted SAS definition.", :type "string"}, :scheduledPurgeDate {:description "The time when the SAS definition is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :IssuerCredentials {:description "The credentials to be used for the certificate issuer.", :properties {:account_id {:description "The user name/account name/account id.", :type "string"}, :pwd {:description "The password/secret/account key.", :type "string", :x-ms-client-name "Password"}}}, :DeletedSecretBundle {:allOf [#:reference{:definitions "SecretBundle"}], :description "A Deleted Secret consisting of its previous id, attributes and its tags, as well as information on when it will be purged.", :properties {:deletedDate {:description "The time when the secret was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted secret.", :type "string"}, :scheduledPurgeDate {:description "The time when the secret is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :CertificateMergeParameters {:description "The certificate merge parameters", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :x5c {:description "The certificate or the certificate chain to merge.", :items {:format "byte", :type "string"}, :type "array", :x-ms-client-name "x509Certificates"}}, :required ["x5c"]}, :SecretItem {:description "The secret item containing secret metadata.", :properties {:attributes #:reference{:definitions "SecretAttributes"}, :contentType {:description "Type of the secret value such as a password.", :type "string"}, :id {:description "Secret identifier.", :type "string"}, :managed {:description "True if the secret's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.", :readOnly true, :type "boolean"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :KeyOperationsParameters {:description "The key operations parameters.", :properties {:alg {:description "algorithm identifier", :enum ["RSA-OAEP" "RSA-OAEP-256" "RSA1_5"], :minLength 1, :type "string", :x-ms-client-name "algorithm", :x-ms-enum {:modelAsString true, :name "JsonWebKeyEncryptionAlgorithm"}}, :value {:format "base64url", :type "string"}}, :required ["alg" "value"]}, :IssuerParameters {:description "Parameters for the issuer of the X509 component of a certificate.", :properties {:cert_transparency {:description "Indicates if the certificates generated under this policy should be published to certificate transparency logs.", :type "boolean", :x-ms-client-name "CertificateTransparency"}, :cty {:description "Certificate type as supported by the provider (optional); for example 'OV-SSL', 'EV-SSL'", :type "string", :x-ms-client-name "CertificateType"}, :name {:description "Name of the referenced issuer object or reserved names; for example, 'Self' or 'Unknown'.", :type "string"}}}, :CertificateRestoreParameters {:description "The certificate restore parameters.", :properties {:value {:description "The backup blob associated with a certificate bundle.", :format "base64url", :type "string", :x-ms-client-name "certificateBundleBackup"}}, :required ["value"]}, :CertificateAttributes {:allOf [#:reference{:definitions "Attributes"}], :description "The certificate management attributes.", :properties {:recoveryLevel {:description "Reflects the deletion recovery level currently in effect for certificates in the current vault. If it contains 'Purgeable', the certificate can be permanently deleted by a privileged user; otherwise, only the system can purge the certificate, at the end of the retention interval.", :enum ["Purgeable" "Recoverable+Purgeable" "Recoverable" "Recoverable+ProtectedSubscription"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DeletionRecoveryLevel"}, :x-nullable false}}}, :KeyRestoreParameters {:description "The key restore parameters.", :properties {:value {:description "The backup blob associated with a key bundle.", :format "base64url", :type "string", :x-ms-client-name "keyBundleBackup"}}, :required ["value"]}, :CertificateIssuerItem {:description "The certificate issuer item containing certificate issuer metadata.", :properties {:id {:description "Certificate Identifier.", :type "string"}, :provider {:description "The issuer provider.", :type "string"}}}, :KeyCreateParameters {:description "The key create parameters.", :properties {:attributes #:reference{:definitions "KeyAttributes"}, :crv {:description "Elliptic curve name. For valid values, see JsonWebKeyCurveName.", :enum ["P-256" "P-384" "P-521" "P-256K"], :type "string", :x-ms-client-name "curve", :x-ms-enum {:modelAsString true, :name "JsonWebKeyCurveName"}}, :key_ops {:items {:description "JSON web key operations. For more information, see JsonWebKeyOperation.", :enum ["encrypt" "decrypt" "sign" "verify" "wrapKey" "unwrapKey"], :type "string", :x-ms-enum {:modelAsString true, :name "JsonWebKeyOperation"}}, :type "array"}, :key_size {:description "The key size in bits. For example: 2048, 3072, or 4096 for RSA.", :format "int32", :type "integer"}, :kty {:description "The type of key to create. For valid values, see JsonWebKeyType.", :enum ["EC" "EC-HSM" "RSA" "RSA-HSM" "oct"], :minLength 1, :type "string", :x-ms-enum {:modelAsString true, :name "JsonWebKeyType"}}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}, :required ["kty"]}, :BackupSecretResult {:description "The backup secret result, containing the backup blob.", :properties {:value {:description "The backup blob containing the backed up secret.", :format "base64url", :readOnly true, :type "string"}}}, :IssuerBundle {:description "The issuer for Key Vault certificate.", :properties {:attributes #:reference{:definitions "IssuerAttributes"}, :credentials #:reference{:definitions "IssuerCredentials"}, :id {:description "Identifier for the issuer object.", :readOnly true, :type "string"}, :org_details #:reference{:definitions "OrganizationDetails"}, :provider {:description "The issuer provider.", :type "string"}}}, :DeletedStorageBundle {:allOf [#:reference{:definitions "StorageBundle"}], :description "A deleted storage account bundle consisting of its previous id, attributes and its tags, as well as information on when it will be purged.", :properties {:deletedDate {:description "The time when the storage account was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted storage account.", :type "string"}, :scheduledPurgeDate {:description "The time when the storage account is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :JsonWebKey {:description "As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18", :properties {:y {:description "Y component of an EC public key.", :format "base64url", :type "string"}, :q {:description "RSA secret prime, with p < q.", :format "base64url", :type "string"}, :qi {:description "RSA private key parameter.", :format "base64url", :type "string", :x-ms-client-name "QI"}, :n {:description "RSA modulus.", :format "base64url", :type "string"}, :kid {:description "Key identifier.", :type "string"}, :dq {:description "RSA private key parameter.", :format "base64url", :type "string", :x-ms-client-name "DQ"}, :e {:description "RSA public exponent.", :format "base64url", :type "string"}, :k {:description "Symmetric key.", :format "base64url", :type "string"}, :kty {:description "JsonWebKey Key Type (kty), as defined in https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40.", :enum ["EC" "EC-HSM" "RSA" "RSA-HSM" "oct"], :type "string", :x-ms-enum {:modelAsString true, :name "JsonWebKeyType", :values [{:description "Elliptic Curve.", :value "EC"} {:description "Elliptic Curve with a private key which is not exportable from the HSM.", :value "EC-HSM"} {:description "RSA (https://tools.ietf.org/html/rfc3447)", :value "RSA"} {:description "RSA with a private key which is not exportable from the HSM.", :value "RSA-HSM"} {:description "Octet sequence (used to represent symmetric keys)", :value "oct"}]}}, :dp {:description "RSA private key parameter.", :format "base64url", :type "string", :x-ms-client-name "DP"}, :d {:description "RSA private exponent, or the D component of an EC private key.", :format "base64url", :type "string"}, :x {:description "X component of an EC public key.", :format "base64url", :type "string"}, :crv {:description "Elliptic curve name. For valid values, see JsonWebKeyCurveName.", :enum ["P-256" "P-384" "P-521" "P-256K"], :type "string", :x-ms-enum {:modelAsString true, :name "JsonWebKeyCurveName", :values [{:description "The NIST P-256 elliptic curve, AKA SECG curve SECP256R1.", :value "P-256"} {:description "The NIST P-384 elliptic curve, AKA SECG curve SECP384R1.", :value "P-384"} {:description "The NIST P-521 elliptic curve, AKA SECG curve SECP521R1.", :value "P-521"} {:description "The SECG SECP256K1 elliptic curve.", :value "P-256K"}]}}, :key_ops {:items {:description "Supported key operations.", :type "string"}, :type "array"}, :p {:description "RSA secret prime.", :format "base64url", :type "string"}, :key_hsm {:description "HSM Token, used with 'Bring Your Own Key'.", :format "base64url", :type "string", :x-ms-client-name "t"}}}, :DeletedKeyBundle {:allOf [#:reference{:definitions "KeyBundle"}], :description "A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion info", :properties {:deletedDate {:description "The time when the key was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted key.", :type "string"}, :scheduledPurgeDate {:description "The time when the key is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :SasDefinitionCreateParameters {:description "The SAS definition create parameters.", :properties {:attributes #:reference{:definitions "SasDefinitionAttributes"}, :sasType {:description "The type of SAS token the SAS definition will create.", :enum ["account" "service"], :type "string", :x-ms-enum {:modelAsString true, :name "SasTokenType"}}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :templateUri {:description "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.", :type "string"}, :validityPeriod {:description "The validity period of SAS tokens created according to the SAS definition.", :type "string"}}, :required ["templateUri" "sasType" "validityPeriod"]}, :CertificateCreateParameters {:description "The certificate create parameters.", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :policy #:reference{:definitions "CertificatePolicy"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :SasDefinitionItem {:description "The SAS definition item containing storage SAS definition metadata.", :properties {:attributes #:reference{:definitions "SasDefinitionAttributes"}, :id {:description "The storage SAS identifier.", :readOnly true, :type "string"}, :sid {:description "The storage account SAS definition secret id.", :readOnly true, :type "string", :x-ms-client-name "SecretId"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :readOnly true, :type "object"}}}, :SecretListResult {:description "The secret list result.", :properties {:nextLink {:description "The URL to get the next set of secrets.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of secrets in the key vault along with a link to the next page of secrets.", :items #:reference{:definitions "SecretItem"}, :readOnly true, :type "array"}}}, :DeletedCertificateListResult {:description "A list of certificates that have been deleted in this vault.", :properties {:nextLink {:description "The URL to get the next set of deleted certificates.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of deleted certificates in the vault along with a link to the next page of deleted certificates", :items #:reference{:definitions "DeletedCertificateItem"}, :readOnly true, :type "array"}}}, :DeletedSecretListResult {:description "The deleted secret list result", :properties {:nextLink {:description "The URL to get the next set of deleted secrets.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of the deleted secrets in the vault along with a link to the next page of deleted secrets", :items #:reference{:definitions "DeletedSecretItem"}, :readOnly true, :type "array"}}}, :DeletedStorageAccountItem {:allOf [#:reference{:definitions "StorageAccountItem"}], :description "The deleted storage account item containing metadata about the deleted storage account.", :properties {:deletedDate {:description "The time when the storage account was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted storage account.", :type "string"}, :scheduledPurgeDate {:description "The time when the storage account is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :StorageAccountItem {:description "The storage account item containing storage account metadata.", :properties {:attributes #:reference{:definitions "StorageAccountAttributes"}, :id {:description "Storage identifier.", :readOnly true, :type "string"}, :resourceId {:description "Storage account resource Id.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :readOnly true, :type "object"}}}, :KeyVaultError {:description "The key vault error exception.", :properties {:error #:reference{:definitions "Error"}}}, :CertificateIssuerListResult {:description "The certificate issuer list result.", :properties {:nextLink {:description "The URL to get the next set of certificate issuers.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of certificate issuers in the key vault along with a link to the next page of certificate issuers.", :items #:reference{:definitions "CertificateIssuerItem"}, :readOnly true, :type "array"}}}, :CertificateListResult {:description "The certificate list result.", :properties {:nextLink {:description "The URL to get the next set of certificates.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of certificates in the key vault along with a link to the next page of certificates.", :items #:reference{:definitions "CertificateItem"}, :readOnly true, :type "array"}}}, :IssuerAttributes {:description "The attributes of an issuer managed by the Key Vault service.", :properties {:created {:description "Creation time in UTC.", :format "unixtime", :readOnly true, :type "integer"}, :enabled {:description "Determines whether the issuer is enabled.", :type "boolean"}, :updated {:description "Last updated time in UTC.", :format "unixtime", :readOnly true, :type "integer"}}}, :SecretAttributes {:allOf [#:reference{:definitions "Attributes"}], :description "The secret management attributes.", :properties {:recoveryLevel {:description "Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval.", :enum ["Purgeable" "Recoverable+Purgeable" "Recoverable" "Recoverable+ProtectedSubscription"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DeletionRecoveryLevel"}, :x-nullable false}}}, :SubjectAlternativeNames {:description "The subject alternate names of a X509 object.", :properties {:dns_names {:description "Domain names.", :items {:type "string"}, :type "array"}, :emails {:description "Email addresses.", :items {:type "string"}, :type "array"}, :upns {:description "User principal names.", :items {:type "string"}, :type "array"}}}, :StorageAccountRegenerteKeyParameters {:description "The storage account key regenerate parameters.", :properties {:keyName {:description "The storage account key name.", :type "string"}}, :required ["keyName"]}, :CertificateItem {:description "The certificate item containing certificate metadata.", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :id {:description "Certificate identifier.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :x5t {:description "Thumbprint of the certificate.", :format "base64url", :type "string", :x-ms-client-name "X509Thumbprint"}}}, :KeyVerifyResult {:description "The key verify result.", :properties {:value {:description "True if the signature is verified, otherwise false.", :readOnly true, :type "boolean"}}}, :CertificateIssuerUpdateParameters {:description "The certificate issuer update parameters.", :properties {:attributes #:reference{:definitions "IssuerAttributes"}, :credentials #:reference{:definitions "IssuerCredentials"}, :org_details #:reference{:definitions "OrganizationDetails"}, :provider {:description "The issuer provider.", :type "string"}}}, :StorageAccountAttributes {:description "The storage account management attributes.", :properties {:created {:description "Creation time in UTC.", :format "unixtime", :readOnly true, :type "integer"}, :enabled {:description "the enabled state of the object.", :type "boolean"}, :recoveryLevel {:description "Reflects the deletion recovery level currently in effect for storage accounts in the current vault. If it contains 'Purgeable' the storage account can be permanently deleted by a privileged user; otherwise, only the system can purge the storage account, at the end of the retention interval.", :enum ["Purgeable" "Recoverable+Purgeable" "Recoverable" "Recoverable+ProtectedSubscription"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DeletionRecoveryLevel"}, :x-nullable false}, :updated {:description "Last updated time in UTC.", :format "unixtime", :readOnly true, :type "integer"}}}, :Trigger {:description "A condition to be satisfied for an action to be executed.", :properties {:days_before_expiry {:description "Days before expiry to attempt renewal. Value should be between 1 and validity_in_months multiplied by 27. If validity_in_months is 36, then value should be between 1 and 972 (36 * 27).", :format "int32", :type "integer"}, :lifetime_percentage {:description "Percentage of lifetime at which to trigger. Value should be between 1 and 99.", :format "int32", :maximum 99, :minimum 1, :type "integer"}}}, :DeletedSasDefinitionListResult {:description "The deleted SAS definition list result", :properties {:nextLink {:description "The URL to get the next set of deleted SAS definitions.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of the deleted SAS definitions in the vault along with a link to the next page of deleted sas definitions", :items #:reference{:definitions "DeletedSasDefinitionItem"}, :readOnly true, :type "array"}}}, :OrganizationDetails {:description "Details of the organization of the certificate issuer.", :properties {:admin_details {:description "Details of the organization administrator.", :items #:reference{:definitions "AdministratorDetails"}, :type "array"}, :id {:description "Id of the organization.", :type "string"}}}, :CertificateOperationUpdateParameter {:description "The certificate operation update parameters.", :properties {:cancellation_requested {:description "Indicates if cancellation was requested on the certificate operation.", :type "boolean"}}, :required ["cancellation_requested"]}, :BackupCertificateResult {:description "The backup certificate result, containing the backup blob.", :properties {:value {:description "The backup blob containing the backed up certificate.", :format "base64url", :readOnly true, :type "string"}}}, :KeyAttributes {:allOf [#:reference{:definitions "Attributes"}], :description "The attributes of a key managed by the key vault service.", :properties {:recoveryLevel {:description "Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.", :enum ["Purgeable" "Recoverable+Purgeable" "Recoverable" "Recoverable+ProtectedSubscription"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DeletionRecoveryLevel"}, :x-nullable false}}}, :BackupKeyResult {:description "The backup key result, containing the backup blob.", :properties {:value {:description "The backup blob containing the backed up key.", :format "base64url", :readOnly true, :type "string"}}}, :CertificateIssuerSetParameters {:description "The certificate issuer set parameters.", :properties {:attributes #:reference{:definitions "IssuerAttributes"}, :credentials #:reference{:definitions "IssuerCredentials"}, :org_details #:reference{:definitions "OrganizationDetails"}, :provider {:description "The issuer provider.", :type "string"}}, :required ["provider"]}, :X509CertificateProperties {:description "Properties of the X509 component of a certificate.", :properties {:ekus {:description "The enhanced key usage.", :items {:type "string"}, :type "array"}, :key_usage {:description "List of key usages.", :items {:enum ["digitalSignature" "nonRepudiation" "keyEncipherment" "dataEncipherment" "keyAgreement" "keyCertSign" "cRLSign" "encipherOnly" "decipherOnly"], :type "string", :x-ms-enum {:modelAsString true, :name "KeyUsageType"}}, :type "array"}, :sans #:reference{:definitions "SubjectAlternativeNames"}, :subject {:description "The subject name. Should be a valid X509 distinguished Name.", :type "string"}, :validity_months {:description "The duration that the certificate is valid in months.", :format "int32", :minimum 0, :type "integer", :x-ms-client-name "ValidityInMonths"}}}, :Action {:description "The action that will be executed.", :properties {:action_type {:description "The type of the action.", :enum ["EmailContacts" "AutoRenew"], :type "string", :x-ms-enum {:modelAsString false, :name "ActionType"}}}}, :KeyBundle {:description "A KeyBundle consisting of a WebKey plus its attributes.", :properties {:attributes #:reference{:definitions "KeyAttributes"}, :key #:reference{:definitions "JsonWebKey"}, :managed {:description "True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.", :readOnly true, :type "boolean"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :KeyListResult {:description "The key list result.", :properties {:nextLink {:description "The URL to get the next set of keys.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of keys in the key vault along with a link to the next page of keys.", :items #:reference{:definitions "KeyItem"}, :readOnly true, :type "array"}}}, :StorageListResult {:description "The storage accounts list result.", :properties {:nextLink {:description "The URL to get the next set of storage accounts.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of storage accounts in the key vault along with a link to the next page of storage accounts.", :items #:reference{:definitions "StorageAccountItem"}, :readOnly true, :type "array"}}}, :CertificateUpdateParameters {:description "The certificate update parameters.", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :policy #:reference{:definitions "CertificatePolicy"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}, :SasDefinitionUpdateParameters {:description "The SAS definition update parameters.", :properties {:attributes #:reference{:definitions "SasDefinitionAttributes"}, :sasType {:description "The type of SAS token the SAS definition will create.", :enum ["account" "service"], :type "string", :x-ms-enum {:modelAsString true, :name "SasTokenType"}}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :templateUri {:description "The SAS definition token template signed with an arbitrary key.  Tokens created according to the SAS definition will have the same properties as the template.", :type "string"}, :validityPeriod {:description "The validity period of SAS tokens created according to the SAS definition.", :type "string"}}}, :KeyVerifyParameters {:description "The key verify parameters.", :properties {:alg {:description "The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.", :enum ["PS256" "PS384" "PS512" "RS256" "RS384" "RS512" "RSNULL" "ES256" "ES384" "ES512" "ES256K"], :minLength 1, :type "string", :x-ms-client-name "algorithm", :x-ms-enum {:modelAsString true, :name "JsonWebKeySignatureAlgorithm"}}, :digest {:description "The digest used for signing.", :format "base64url", :type "string"}, :value {:description "The signature to be verified.", :format "base64url", :type "string", :x-ms-client-name "signature"}}, :required ["alg" "digest" "value"]}, :SasDefinitionAttributes {:description "The SAS definition management attributes.", :properties {:created {:description "Creation time in UTC.", :format "unixtime", :readOnly true, :type "integer"}, :enabled {:description "the enabled state of the object.", :type "boolean"}, :recoveryLevel {:description "Reflects the deletion recovery level currently in effect for SAS definitions in the current vault. If it contains 'Purgeable' the SAS definition can be permanently deleted by a privileged user; otherwise, only the system can purge the SAS definition, at the end of the retention interval.", :enum ["Purgeable" "Recoverable+Purgeable" "Recoverable" "Recoverable+ProtectedSubscription"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DeletionRecoveryLevel"}, :x-nullable false}, :updated {:description "Last updated time in UTC.", :format "unixtime", :readOnly true, :type "integer"}}}, :CertificateImportParameters {:description "The certificate import parameters.", :properties {:attributes #:reference{:definitions "CertificateAttributes"}, :policy #:reference{:definitions "CertificatePolicy"}, :pwd {:description "If the private key in base64EncodedCertificate is encrypted, the password used for encryption.", :type "string", :x-ms-client-name "password"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :value {:description "Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key.", :type "string", :x-ms-client-name "base64EncodedCertificate"}}, :required ["value"]}, :LifetimeAction {:description "Action and its trigger that will be performed by Key Vault over the lifetime of a certificate.", :properties {:action #:reference{:definitions "Action"}, :trigger #:reference{:definitions "Trigger"}}}, :SasDefinitionListResult {:description "The storage account SAS definition list result.", :properties {:nextLink {:description "The URL to get the next set of SAS definitions.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of SAS definitions along with a link to the next page of SAS definitions.", :items #:reference{:definitions "SasDefinitionItem"}, :readOnly true, :type "array"}}}, :Error {:description "The key vault server error.", :properties {:code {:description "The error code.", :readOnly true, :type "string"}, :innererror #:reference{:definitions "Error"}, :message {:description "The error message.", :readOnly true, :type "string"}}}, :StorageRestoreParameters {:description "The secret restore parameters.", :properties {:value {:description "The backup blob associated with a storage account.", :format "base64url", :type "string", :x-ms-client-name "storageBundleBackup"}}, :required ["value"]}, :Attributes {:description "The object attributes managed by the KeyVault service.", :properties {:created {:description "Creation time in UTC.", :format "unixtime", :readOnly true, :type "integer"}, :enabled {:description "Determines whether the object is enabled.", :type "boolean"}, :exp {:description "Expiry date in UTC.", :format "unixtime", :type "integer", :x-ms-client-name "Expires"}, :nbf {:description "Not before date in UTC.", :format "unixtime", :type "integer", :x-ms-client-name "NotBefore"}, :updated {:description "Last updated time in UTC.", :format "unixtime", :readOnly true, :type "integer"}}}, :SecretBundle {:description "A secret consisting of a value, id and its attributes.", :properties {:attributes #:reference{:definitions "SecretAttributes"}, :contentType {:description "The content type of the secret.", :type "string"}, :id {:description "The secret id.", :type "string"}, :kid {:description "If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate.", :readOnly true, :type "string"}, :managed {:description "True if the secret's lifetime is managed by key vault. If this is a secret backing a certificate, then managed will be true.", :readOnly true, :type "boolean"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}, :value {:description "The secret value.", :type "string"}}}, :KeySignParameters {:description "The key operations parameters.", :properties {:alg {:description "The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm.", :enum ["PS256" "PS384" "PS512" "RS256" "RS384" "RS512" "RSNULL" "ES256" "ES384" "ES512" "ES256K"], :minLength 1, :type "string", :x-ms-client-name "algorithm", :x-ms-enum {:modelAsString true, :name "JsonWebKeySignatureAlgorithm", :values [{:description "RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https://tools.ietf.org/html/rfc7518", :value "PS256"} {:description "RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https://tools.ietf.org/html/rfc7518", :value "PS384"} {:description "RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https://tools.ietf.org/html/rfc7518", :value "PS512"} {:description "RSASSA-PKCS1-v1_5 using SHA-256, as described in https://tools.ietf.org/html/rfc7518", :value "RS256"} {:description "RSASSA-PKCS1-v1_5 using SHA-384, as described in https://tools.ietf.org/html/rfc7518", :value "RS384"} {:description "RSASSA-PKCS1-v1_5 using SHA-512, as described in https://tools.ietf.org/html/rfc7518", :value "RS512"} {:description "Reserved", :value "RSNULL"} {:description "ECDSA using P-256 and SHA-256, as described in https://tools.ietf.org/html/rfc7518.", :value "ES256"} {:description "ECDSA using P-384 and SHA-384, as described in https://tools.ietf.org/html/rfc7518", :value "ES384"} {:description "ECDSA using P-521 and SHA-512, as described in https://tools.ietf.org/html/rfc7518", :value "ES512"} {:description "ECDSA using P-256K and SHA-256, as described in https://tools.ietf.org/html/rfc7518", :value "ES256K"}]}}, :value {:format "base64url", :type "string"}}, :required ["alg" "value"]}, :AdministratorDetails {:description "Details of the organization administrator of the certificate issuer.", :properties {:email {:description "Email address.", :type "string", :x-ms-client-name "EmailAddress"}, :first_name {:description "First name.", :type "string"}, :last_name {:description "Last name.", :type "string"}, :phone {:description "Phone number.", :type "string"}}}, :StorageBundle {:description "A Storage account bundle consists of key vault storage account details plus its attributes.", :properties {:activeKeyName {:description "The current active storage account key name.", :readOnly true, :type "string"}, :attributes #:reference{:definitions "StorageAccountAttributes"}, :autoRegenerateKey {:description "whether keyvault should manage the storage account for the user.", :readOnly true, :type "boolean"}, :id {:description "The storage account id.", :readOnly true, :type "string"}, :regenerationPeriod {:description "The key regeneration time duration specified in ISO-8601 format.", :readOnly true, :type "string"}, :resourceId {:description "The storage account resource id.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs", :readOnly true, :type "object"}}}, :CertificateOperation {:description "A certificate operation is returned in case of asynchronous requests.", :properties {:cancellation_requested {:description "Indicates if cancellation was requested on the certificate operation.", :type "boolean"}, :csr {:description "The certificate signing request (CSR) that is being used in the certificate operation.", :format "byte", :type "string"}, :status {:description "Status of the certificate operation.", :type "string"}, :id {:description "The certificate id.", :readOnly true, :type "string"}, :issuer #:reference{:definitions "IssuerParameters"}, :error #:reference{:definitions "Error"}, :target {:description "Location which contains the result of the certificate operation.", :type "string"}, :request_id {:description "Identifier for the certificate operation.", :type "string"}, :status_details {:description "The status details of the certificate operation.", :type "string"}}}, :KeyOperationResult {:description "The key operation result.", :properties {:kid {:description "Key identifier", :readOnly true, :type "string"}, :value {:format "base64url", :readOnly true, :type "string", :x-ms-client-name "result"}}}, :StorageAccountCreateParameters {:description "The storage account create parameters.", :properties {:activeKeyName {:description "Current active storage account key name.", :type "string"}, :attributes #:reference{:definitions "StorageAccountAttributes"}, :autoRegenerateKey {:description "whether keyvault should manage the storage account for the user.", :type "boolean"}, :regenerationPeriod {:description "The key regeneration time duration specified in ISO-8601 format.", :type "string"}, :resourceId {:description "Storage account resource id.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}, :required ["resourceId" "activeKeyName" "autoRegenerateKey"]}, :SecretProperties {:description "Properties of the key backing a certificate.", :properties {:contentType {:description "The media type (MIME type).", :type "string"}}}, :DeletedSecretItem {:allOf [#:reference{:definitions "SecretItem"}], :description "The deleted secret item containing metadata about the deleted secret.", :properties {:deletedDate {:description "The time when the secret was deleted, in UTC", :format "unixtime", :readOnly true, :type "integer"}, :recoveryId {:description "The url of the recovery object, used to identify and recover the deleted secret.", :type "string"}, :scheduledPurgeDate {:description "The time when the secret is scheduled to be purged, in UTC", :format "unixtime", :readOnly true, :type "integer"}}}, :DeletedKeyListResult {:description "A list of keys that have been deleted in this vault.", :properties {:nextLink {:description "The URL to get the next set of deleted keys.", :readOnly true, :type "string"}, :value {:description "A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys", :items #:reference{:definitions "DeletedKeyItem"}, :readOnly true, :type "array"}}}, :CertificateBundle {:description "A certificate bundle consists of a certificate (X509) plus its attributes.", :properties {:tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs", :type "object"}, :kid {:description "The key id.", :readOnly true, :type "string"}, :policy #:reference{:definitions "CertificatePolicy"}, :id {:description "The certificate id.", :readOnly true, :type "string"}, :cer {:description "CER contents of x509 certificate.", :format "byte", :type "string"}, :contentType {:description "The content type of the secret.", :type "string"}, :attributes #:reference{:definitions "CertificateAttributes"}, :x5t {:description "Thumbprint of the certificate.", :format "base64url", :readOnly true, :type "string", :x-ms-client-name "X509Thumbprint"}, :sid {:description "The secret id.", :readOnly true, :type "string"}}}, :Contact {:description "The contact information for the vault certificates.", :properties {:email {:description "Email address.", :type "string", :x-ms-client-name "EmailAddress"}, :name {:description "Name.", :type "string"}, :phone {:description "Phone number.", :type "string"}}}, :StorageAccountUpdateParameters {:description "The storage account update parameters.", :properties {:activeKeyName {:description "The current active storage account key name.", :type "string"}, :attributes #:reference{:definitions "StorageAccountAttributes"}, :autoRegenerateKey {:description "whether keyvault should manage the storage account for the user.", :type "boolean"}, :regenerationPeriod {:description "The key regeneration time duration specified in ISO-8601 format.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application specific metadata in the form of key-value pairs.", :type "object"}}}}}