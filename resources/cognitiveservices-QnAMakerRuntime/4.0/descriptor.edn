{:scheme "https", :host "azure.local", :info {:description "An API for QnAMaker runtime", :title "QnAMaker Runtime Client", :version "4.0"}, :ops {:Runtime_GenerateAnswer {:path "/knowledgebases/{kbId}/generateAnswer", :description nil, :parameters [#:reference{:parameters "KbId"} #:reference{:parameters "GenerateAnswerPayload"}], :verb :post}, :Runtime_Train {:path "/knowledgebases/{kbId}/train", :description nil, :parameters [#:reference{:parameters "KbId"} #:reference{:parameters "TrainPayload"}], :verb :post}}, :parameters {:GenerateAnswerPayload {:description "Post body of the request.", :in "body", :name "generateAnswerPayload", :required true, :schema #:reference{:definitions "QueryDTO"}, :x-ms-parameter-location "method", :x-nullable true}, :KbId {:description "Knowledgebase id.", :in "path", :name "kbId", :required true, :type "string", :x-ms-parameter-location "method", :x-nullable false}, :RuntimeEndpoint {:description "QnA Maker App Service endpoint (for example: https://{qnaservice-hostname}.azurewebsites.net).", :in "path", :name "RuntimeEndpoint", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}, :TrainPayload {:description "Post body of the request.", :in "body", :name "trainPayload", :required true, :schema #:reference{:definitions "FeedbackRecordsDTO"}, :x-ms-parameter-location "method", :x-nullable true}}, :definitions {:ErrorCode {:description "Human readable error code.", :enum ["BadArgument" "Forbidden" "NotFound" "KbNotFound" "Unauthorized" "Unspecified" "EndpointKeysError" "QuotaExceeded" "QnaRuntimeError" "SKULimitExceeded" "OperationNotFound" "ServiceError" "ValidationFailure" "ExtractionFailure"], :type "string", :x-ms-enum {:modelAsString true, :name "ErrorCodeType"}}, :QueryContextDTO {:additionalProperties false, :description "Context object with previous QnA's information.", :properties {:previousQnaId {:description "Previous QnA Id - qnaId of the top result.", :type "string"}, :previousUserQuery {:description "Previous user query.", :type "string"}}, :type "object"}, :QnASearchResultList {:additionalProperties false, :description "Represents List of Question Answers.", :properties {:answers {:description "Represents Search Result list.", :items #:reference{:definitions "QnASearchResult"}, :type "array"}}, :type "object"}, :FeedbackRecordDTO {:additionalProperties false, :description "Active learning feedback record.", :properties {:qnaId {:description "The qnaId for which the suggested question is provided as feedback.", :format "int32", :type "integer"}, :userId {:description "Unique identifier for the user.", :type "string"}, :userQuestion {:description "The suggested question being provided as feedback.", :maxLength 1000, :type "string"}}, :type "object"}, :PromptDTO {:description "Prompt for an answer.", :properties {:displayOrder {:description "Index of the prompt - used in ordering of the prompts", :format "int32", :type "integer"}, :displayText {:description "Text displayed to represent a follow up question prompt", :maxLength 200, :type "string"}, :qna {:allOf [#:reference{:definitions "QnADTO"}], :description "QnADTO - Either QnaId or QnADTO needs to be present in a PromptDTO object"}, :qnaId {:description "Qna id corresponding to the prompt - if QnaId is present, QnADTO object is ignored.", :format "int32", :type "integer"}}, :type "object"}, :QnADTO {:additionalProperties false, :description "Q-A object.", :properties {:answer {:description "Answer text", :maxLength 25000, :minLength 1, :type "string"}, :context {:allOf [#:reference{:definitions "ContextDTO"}], :description "Context of a QnA"}, :id {:description "Unique id for the Q-A.", :format "int32", :type "integer"}, :metadata {:description "List of metadata associated with the answer.", :items #:reference{:definitions "MetadataDTO"}, :maxLength 10, :type "array"}, :questions {:description "List of questions associated with the answer.", :items {:type "string"}, :maxLength 100, :minLength 1, :type "array"}, :source {:description "Source from which Q-A was indexed. eg. https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs", :maxLength 300, :type "string"}}, :required ["answer" "questions"], :type "object"}, :QnASearchResult {:additionalProperties false, :description "Represents Search Result.", :properties {:answer {:description "Answer.", :type "string"}, :context {:allOf [#:reference{:definitions "ContextDTO"}], :description "Context object of the QnA", :type "object"}, :id {:description "Id of the QnA result.", :format "int32", :type "integer"}, :metadata {:description "List of metadata.", :items #:reference{:definitions "MetadataDTO"}, :type "array"}, :questions {:description "List of questions.", :items {:type "string"}, :type "array"}, :score {:description "Search result score.", :type "number"}, :source {:description "Source of QnA result.", :type "string"}}, :type "object"}, :FeedbackRecordsDTO {:additionalProperties false, :description "Active learning feedback records.", :properties {:feedbackRecords {:description "List of feedback records.", :items #:reference{:definitions "FeedbackRecordDTO"}, :maxLength 1000, :type "array"}}, :type "object"}, :Error {:additionalProperties false, :description "The error object. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.", :properties {:code #:reference{:definitions "ErrorCode"}, :details {:description "An array of details about specific errors that led to this reported error.", :items #:reference{:definitions "Error"}, :type "array"}, :innerError #:reference{:definitions "InnerErrorModel"}, :message {:description "A human-readable representation of the error.", :type "string"}, :target {:description "The target of the error.", :type "string"}}, :required ["code"], :type "object"}, :ErrorResponse {:additionalProperties false, :description "Error response. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.", :properties {:error {:allOf [#:reference{:definitions "Error"}], :description "The error object."}}, :type "object"}, :InnerErrorModel {:additionalProperties false, :description "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.", :properties {:code {:description "A more specific error code than was provided by the containing error.", :type "string"}, :innerError #:reference{:definitions "InnerErrorModel"}}, :type "object"}, :MetadataDTO {:additionalProperties false, :description "Name - value pair of metadata.", :properties {:name {:description "Metadata name.", :maxLength 100, :minLength 1, :type "string"}, :value {:description "Metadata value.", :maxLength 500, :minLength 1, :type "string"}}, :required ["name" "value"], :type "object"}, :QueryDTO {:additionalProperties false, :description "POST body schema to query the knowledgebase.", :properties {:isTest {:description "Query against the test index.", :type "boolean"}, :top {:description "Max number of answers to be returned for the question.", :format "int32", :type "integer"}, :qnaId {:description "Exact qnaId to fetch from the knowledgebase, this field takes priority over question.", :type "string"}, :question {:description "User question to query against the knowledge base.", :type "string"}, :context {:allOf [#:reference{:definitions "QueryContextDTO"}], :description "Context object with previous QnA's information."}, :userId {:description "Unique identifier for the user.", :type "string"}, :rankerType {:description "Optional field. Set to 'QuestionOnly' for using a question only Ranker.", :type "string"}, :strictFilters {:description "Find only answers that contain these metadata.", :items #:reference{:definitions "MetadataDTO"}, :type "array"}, :scoreThreshold {:description "Threshold for answers returned based on score.", :type "number"}}, :type "object"}, :ContextDTO {:description "Context associated with Qna.", :properties {:isContextOnly {:description "To mark if a prompt is relevant only with a previous question or not.\ntrue - Do not include this QnA as search result for queries without context\nfalse - ignores context and includes this QnA in search result", :type "boolean"}, :prompts {:description "List of prompts associated with the answer.", :items #:reference{:definitions "PromptDTO"}, :maxItems 20, :type "array"}}, :type "object"}}}