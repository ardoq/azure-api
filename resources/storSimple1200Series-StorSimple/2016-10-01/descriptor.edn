{:scheme "https", :host "management.azure.com", :info {:title "StorSimpleManagementClient", :version "2016-10-01"}, :ops {:FileServers_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics", :description "Gets the file server metrics.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The name of the file server name.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :StorageAccountCredentials_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}", :description "Creates or updates the storage account credential", :parameters [{:description "The credential name.", :in "path", :name "credentialName", :required true, :type "string"} {:description "The storage account credential to be added or updated.", :in "body", :name "storageAccount", :required true, :schema #:reference{:definitions "StorageAccountCredential"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :IscsiServers_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers", :description "Retrieves all the iSCSI in a device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ChapSettings_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings", :description "Retrieves all the chap settings in a device.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiDisks_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}", :description "Returns the properties of the specified iSCSI disk name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The disk name.", :in "path", :name "diskName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Managers_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers", :description "Retrieves all the managers in a resource group.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :StorageDomains_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}", :description "Creates or updates the storage domain.", :parameters [{:description "The storage domain name.", :in "path", :name "storageDomainName", :required true, :type "string"} {:description "The storageDomain.", :in "body", :name "storageDomain", :required true, :schema #:reference{:definitions "StorageDomain"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :ChapSettings_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}", :description "Returns the properties of the specified chap setting name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The user name of chap to be fetched.", :in "path", :name "chapUserName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Jobs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}", :description "Returns the properties of the specified job name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The job name.", :in "path", :name "jobName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiDisks_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}", :description "Creates or updates the iSCSI disk.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The disk name.", :in "path", :name "diskName", :required true, :type "string"} {:description "The iSCSI disk.", :in "body", :name "iscsiDisk", :required true, :schema #:reference{:definitions "ISCSIDisk"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :IscsiDisks_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}", :description "Deletes the iSCSI disk.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The disk name.", :in "path", :name "diskName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :AccessControlRecords_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords", :description "Retrieves all the access control records in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :AvailableProviderOperations_List {:path "/providers/Microsoft.StorSimple/operations", :description "List of AvailableProviderOperations", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :ChapSettings_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}", :description "Deletes the chap setting.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The chap user name.", :in "path", :name "chapUserName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :IscsiDisks_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions", :description "Retrieves metric definitions for all metric aggregated at the iSCSI disk.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The iSCSI disk name.", :in "path", :name "diskName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :StorageAccountCredentials_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}", :description "Returns the properties of the specified storage account credential name.", :parameters [{:description "The name of storage account credential to be fetched.", :in "path", :name "credentialName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_InstallUpdates {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/install", :description "Installs the updates on the device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Managers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}", :description "Creates or updates the manager.", :parameters [{:description "The manager.", :in "body", :name "Manager", :required true, :schema #:reference{:definitions "Manager"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :IscsiServers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}", :description "Returns the properties of the specified iSCSI server name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiDisks_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/disks", :description "Retrieves all the iSCSI disks in a device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiServers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}", :description "Creates or updates the iSCSI server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The iSCSI server.", :in "body", :name "iscsiServer", :required true, :schema #:reference{:definitions "ISCSIServer"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Managers_GetEncryptionKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/getEncryptionKey", :description "Returns the symmetric encryption key of the manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :StorageDomains_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains", :description "Retrieves all the storage domains in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :AccessControlRecords_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}", :description "Returns the properties of the specified access control record name.", :parameters [{:description "Name of access control record to be fetched.", :in "path", :name "accessControlRecordName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :AccessControlRecords_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}", :description "Creates or Updates an access control record.", :parameters [{:description "The name of the access control record.", :in "path", :name "accessControlRecordName", :required true, :type "string"} {:description "The access control record to be added or updated.", :in "body", :name "accessControlRecord", :required true, :schema #:reference{:definitions "AccessControlRecord"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Devices_DownloadUpdates {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/download", :description "Downloads updates on the device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Backups_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/backups", :description "Retrieves all the backups in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Devices_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}", :description "Deletes the device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Devices_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices", :description "Retrieves all the devices in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Specify $expand=details to populate additional fields related to the device.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :Managers_DeleteExtendedInfo {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo", :description "Deletes the extended info of the manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Devices_GetNetworkSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default", :description "Returns the network settings of the specified device name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :FileShares_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics", :description "Gets the file share metrics", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file share name.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :BackupScheduleGroups_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}", :description "Returns the properties of the specified backup schedule group name.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The name of the schedule group.", :in "path", :name "scheduleGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_Patch {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}", :description "Patches the device.", :parameters [{:description "The device Name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "Patch representation of the device.", :in "body", :name "devicePatch", :required true, :schema #:reference{:definitions "DevicePatch"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :IscsiServers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}", :description "Deletes the iSCSI server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :FileServers_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions", :description "Retrieves metric definitions of all metrics aggregated at the file server.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The name of the file server.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :FileServers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}", :description "Deletes the file server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :FileShares_ListByFileServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares", :description "Retrieves all the file shares in a file server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :StorageDomains_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}", :description "Returns the properties of the specified storage domain name.", :parameters [{:description "The storage domain name.", :in "path", :name "storageDomainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Alerts_SendTestEmail {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail", :description "Sends a test alert email.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The send test alert email request.", :in "body", :name "request", :required true, :schema #:reference{:definitions "SendTestAlertEmailRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :IscsiDisks_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics", :description "Gets the iSCSI disk metrics", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} {:description "The iSCSI disk name.", :in "path", :name "diskName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :IscsiServers_BackupNow {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup", :description "Backup the iSCSI server now.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Devices_GetAlertSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default", :description "Returns the alert settings of the specified device name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :FileShares_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/shares", :description "Retrieves all the file shares in a device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_ScanForUpdates {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates", :description "Scans for updates on the device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Jobs_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs", :description "Retrieves all the jobs in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Managers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}", :description "Returns the properties of the specified manager name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_ListFailoverTarget {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failoverTargets", :description "Retrieves all the devices which can be used as failover targets for the given device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Specify $expand=details to populate additional fields related to the device.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :FileServers_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers", :description "Retrieves all the file servers in a device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}", :description "Returns the properties of the specified device name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Specify $expand=details to populate additional fields related to the device.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :Devices_GetTimeSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default", :description "Returns the time settings of the specified device name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :FileServers_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/fileservers", :description "Retrieves all the file servers in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Backups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}", :description "Deletes the backup.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Managers_GetExtendedInfo {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo", :description "Returns the extended information of the specified manager name.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :BackupScheduleGroups_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}", :description "Creates or Updates the backup schedule Group.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The name of the schedule group.", :in "path", :name "scheduleGroupName", :required true, :type "string"} {:description "The schedule group to be created", :in "body", :name "scheduleGroup", :required true, :schema #:reference{:definitions "BackupScheduleGroup"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :FileShares_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}", :description "Returns the properties of the specified file share name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file share name.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Managers_CreateExtendedInfo {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo", :description "Creates the extended info of the manager.", :parameters [{:description "The manager extended information.", :in "body", :name "ManagerExtendedInfo", :required true, :schema #:reference{:definitions "ManagerExtendedInfo"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Managers_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics", :description "Gets the  manager metrics", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Devices_CreateOrUpdateAlertSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default", :description "Creates or updates the alert settings", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The alert settings.", :in "body", :name "alertSettings", :required true, :schema #:reference{:definitions "AlertSettings"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Managers_UpdateExtendedInfo {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo", :description "Updates the extended info of the manager.", :parameters [{:description "The manager extended information.", :in "body", :name "ManagerExtendedInfo", :required true, :schema #:reference{:definitions "ManagerExtendedInfo"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Pass the ETag of ExtendedInfo fetched from GET call", :in "header", :name "If-Match", :required true, :type "string"}], :verb :patch}, :Backups_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups", :description "Retrieves all the backups in a device. Can be used to get the backups for failover also.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "Set to true if you need backups which can be used for failover.", :in "query", :name "forFailover", :required false, :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Managers_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers", :description "Retrieves all the managers in a subscription.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ChapSettings_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}", :description "Creates or updates the chap setting.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The chap user name.", :in "path", :name "chapUserName", :required true, :type "string"} {:description "The chap setting to be added or updated.", :in "body", :name "chapSetting", :required true, :schema #:reference{:definitions "ChapSettings"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :FileServers_BackupNow {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup", :description "Backup the file server now.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Managers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}", :description "Deletes the manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :FileShares_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}", :description "Deletes the file share.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file share Name", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Devices_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics", :description "Retrieves the device metrics.", :parameters [{:description "The name of the appliance.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :FileServers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}", :description "Returns the properties of the specified file server name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :BackupScheduleGroups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}", :description "Deletes the backup schedule group.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The name of the schedule group.", :in "path", :name "scheduleGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Managers_UploadRegistrationCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/certificates/{certificateName}", :description "Upload Vault Cred Certificate.\r\nReturns UploadCertificateResponse", :parameters [{:description "Certificate Name", :in "path", :name "certificateName", :required true, :type "string"} {:description "UploadCertificateRequest Request", :in "body", :name "uploadCertificateRequestrequest", :required true, :schema #:reference{:definitions "UploadCertificateRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Managers_GetEncryptionSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default", :description "Returns the encryption settings of the manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiServers_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions", :description "Retrieves metric definitions for all metrics aggregated at iSCSI server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions", :description "Retrieves metric definition of all metrics aggregated at device.", :parameters [{:description "The name of the appliance.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Devices_GetUpdateSummary {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default", :description "Returns the update summary of the specified device name.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :StorageAccountCredentials_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}", :description "Deletes the storage account credential", :parameters [{:description "The name of the storage account credential.", :in "path", :name "credentialName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :StorageAccountCredentials_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials", :description "Retrieves all the storage account credentials in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Alerts_Clear {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts", :description "Clear the alerts.", :parameters [{:description "The clear alert request.", :in "body", :name "request", :required true, :schema #:reference{:definitions "ClearAlertRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :IscsiDisks_ListByIscsiServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks", :description "Retrieves all the disks in a iSCSI server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :BackupScheduleGroups_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups", :description "Retrieves all the backup schedule groups in a device.", :parameters [{:description "The name of the device.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :IscsiServers_ListMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics", :description "Gets the iSCSI server metrics", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The iSCSI server name.", :in "path", :name "iscsiServerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Backups_Clone {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone", :description "Clones the given backup element to a new disk or share with given details.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} {:description "The backup element name.", :in "path", :name "elementName", :required true, :type "string"} {:description "The clone request.", :in "body", :name "cloneRequest", :required true, :schema #:reference{:definitions "CloneRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :FileServers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}", :description "Creates or updates the file server.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file server.", :in "body", :name "fileServer", :required true, :schema #:reference{:definitions "FileServer"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :StorageDomains_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}", :description "Deletes the storage domain.", :parameters [{:description "The storage domain name.", :in "path", :name "storageDomainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :FileShares_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions", :description "Retrieves metric definitions of all metrics aggregated at the file share.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file share name.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Managers_ListMetricDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions", :description "Retrieves metric definition of all metrics aggregated at manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :FileShares_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}", :description "Creates or updates the file share.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The file server name.", :in "path", :name "fileServerName", :required true, :type "string"} {:description "The file share name.", :in "path", :name "shareName", :required true, :type "string"} {:description "The file share.", :in "body", :name "fileShare", :required true, :schema #:reference{:definitions "FileShare"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :IscsiServers_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/iscsiservers", :description "Retrieves all the iSCSI servers in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Alerts_ListByManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts", :description "Retrieves all the alerts in a manager.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :Devices_Failover {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failover", :description "Fails over the device to another device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The failover request.", :in "body", :name "failoverRequest", :required true, :schema #:reference{:definitions "FailoverRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Devices_Deactivate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate", :description "Deactivates the device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :AccessControlRecords_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}", :description "Deletes the access control record.", :parameters [{:description "The name of the access control record to delete.", :in "path", :name "accessControlRecordName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Managers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}", :description "Updates the StorSimple Manager.", :parameters [{:description "The manager update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ManagerPatch"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Devices_CreateOrUpdateSecuritySettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/update", :description "Creates or updates the security settings.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} {:description "The security settings.", :in "body", :name "securitySettings", :required true, :schema #:reference{:definitions "SecuritySettings"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Jobs_ListByDevice {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs", :description "Retrieves all the jobs in a device.", :parameters [{:description "The device name.", :in "path", :name "deviceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "managerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}}, :parameters {:apiVersionParameter {:description "The api version", :in "query", :name "api-version", :required true, :type "string"}, :managerNameParameter {:description "The manager name", :in "path", :maxLength 50, :minLength 2, :name "managerName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionIdParameter {:description "The subscription id", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:MetricDefinition {:description "Monitoring metric definition represents the metadata of the metrics.", :properties {:dimensions {:description "The supported dimensions", :items #:reference{:definitions "MetricDimension"}, :type "array"}, :metricAvailabilities {:description "The available metric granularities", :items #:reference{:definitions "MetricAvailablity"}, :type "array"}, :name #:reference{:definitions "MetricName"}, :primaryAggregationType {:description "The metric aggregation type", :enum ["Average" "Last" "Maximum" "Minimum" "None" "Total"], :type "string", :x-ms-enum {:modelAsString false, :name "MetricAggregationType"}}, :resourceId {:description "The metric source id", :type "string"}, :type {:description "The metric definition type", :type "string"}, :unit {:description "The metric unit", :enum ["Bytes" "BytesPerSecond" "Count" "CountPerSecond" "Percent" "Seconds"], :type "string", :x-ms-enum {:modelAsString false, :name "MetricUnit"}}}, :required ["name" "unit" "primaryAggregationType" "resourceId" "metricAvailabilities" "dimensions" "type"], :type "object"}, :AlertSettings {:allOf [#:reference{:definitions "BaseModel"}], :description "AlertSettings on the device which represents how alerts will be processed", :properties {:properties #:reference{:definitions "AlertSettingsProperties"}}, :required ["properties"], :type "object"}, :AlertSettingsProperties {:description "Class containing the properties of AlertSettings", :properties {:additionalRecipientEmailList {:description "List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent", :items {:type "string"}, :type "array"}, :alertNotificationCulture {:description "Culture setting to be used while building alert emails. For eg: \"en-US\"", :type "string"}, :emailNotification {:description "Value indicating whether user/admins will receive emails when an alert condition occurs on the system", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertEmailNotificationStatus"}}, :notificationToServiceOwners {:description "Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "ServiceOwnersAlertNotificationStatus"}}}, :required ["emailNotification" "notificationToServiceOwners" "alertNotificationCulture"], :type "object"}, :StorageAccountCredentialProperties {:description "Storage account properties", :properties {:accessKey #:reference{:definitions "AsymmetricEncryptedSecret"}, :cloudType {:description "The cloud service provider", :enum ["Azure" "S3" "S3_RRS" "OpenStack" "HP"], :type "string", :x-ms-enum {:modelAsString false, :name "CloudType"}}, :enableSSL {:description "SSL needs to be enabled or not", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "SslStatus"}}, :endPoint {:description "The storage endpoint", :type "string"}, :location {:description "The storage account's geo location", :type "string"}, :login {:description "The storage account login", :type "string"}}, :required ["cloudType" "endPoint" "login" "enableSSL"], :type "object"}, :AccessControlRecordList {:description "Collection of AccessControlRecords", :properties {:value {:description "The value.", :items #:reference{:definitions "AccessControlRecord"}, :type "array"}}, :required ["value"], :type "object"}, :JobErrorItem {:description "The job error items.", :properties {:code {:description "The code intended for programmatic access", :type "string"}, :message {:description "The message intended to describe the error in detail", :type "string"}, :recommendations {:description "The recommended actions.", :items {:type "string"}, :type "array"}}, :required ["code" "message"], :type "object"}, :BaseModel {:description "Base class for models", :properties {:id {:description "The identifier.", :readOnly true, :type "string"}, :name {:description "The name.", :readOnly true, :type "string"}, :type {:description "The type.", :readOnly true, :type "string"}}, :type "object"}, :AccessControlRecord {:allOf [#:reference{:definitions "BaseModel"}], :description "The access control record", :properties {:properties #:reference{:definitions "AccessControlRecordProperties"}}, :required ["properties"], :type "object"}, :ManagerList {:description "List of StorSimple Managers under a particular resourceGroup", :properties {:value {:description "List of Managers", :items #:reference{:definitions "Manager"}, :type "array"}}, :required ["value"], :type "object"}, :ISCSIServerList {:description "Collection of Iscsi servers", :properties {:value {:description "The value.", :items #:reference{:definitions "ISCSIServer"}, :type "array"}}, :required ["value"], :type "object"}, :StorageDomainList {:description "Collection of storage domains", :properties {:value {:description "The value.", :items #:reference{:definitions "StorageDomain"}, :type "array"}}, :required ["value"], :type "object"}, :ManagerIntrinsicSettings {:description "Intrinsic settings which refers to the type of the StorSimple manager", :properties {:type {:description "Refers to the type of the StorSimple Manager", :enum ["GardaV1" "HelsinkiV1"], :type "string", :x-ms-enum {:modelAsString false, :name "ManagerType"}}}, :required ["type"], :type "object"}, :AvailableProviderOperationProperties {:description "Class represents Properties in AvailableProviderOperations", :properties {}, :type "object"}, :BackupScheduleGroupProperties {:description "The Backup Schedule Group Properties", :properties {:startTime #:reference{:definitions "Time"}}, :required ["startTime"], :type "object"}, :Message {:properties {:language {:type "string"}, :value {:type "string"}}, :type "object"}, :ManagerExtendedInfoProperties {:description "Properties of the ManagerExtendedInfo", :properties {:algorithm {:description "Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used", :type "string"}, :encryptionKey {:description "Represents the CEK of the resource", :type "string"}, :encryptionKeyThumbprint {:description "Represents the Cert thumbprint that was used to encrypt the CEK", :type "string"}, :integrityKey {:description "Represents the CIK of the resource", :type "string"}, :portalCertificateThumbprint {:description "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.", :type "string"}, :version {:description "Represents the version of the ExtendedInfo object being persisted", :type "string"}}, :required ["integrityKey" "algorithm"], :type "object"}, :AlertProperties {:description "Properties of alert", :properties {:clearedAtSourceTime {:description "UTC time at which the alert was cleared on the source", :format "date-time", :type "string"}, :alertType {:description "Type of the alert", :type "string"}, :detailedInformation {:additionalProperties {:type "string"}, :description "Other information about the alert", :type "object"}, :errorDetails #:reference{:definitions "AlertErrorDetails"}, :resolutionReason {:description "Reason for resolving the alert", :type "string"}, :appearedAtSourceTime {:description "UTC time at which the alert appeared on the source", :format "date-time", :type "string"}, :source #:reference{:definitions "AlertSource"}, :scope {:description "Device or Resource alert", :enum ["Resource" "Device"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertScope"}}, :title {:description "Title of the alert", :type "string"}, :clearedAtTime {:description "UTC time at which the alert got cleared", :format "date-time", :type "string"}, :recommendation {:description "Recommendation for acting on the alert", :type "string"}, :appearedAtTime {:description "UTC time at which the alert appeared", :format "date-time", :type "string"}, :status {:description "Current status of the alert", :enum ["Active" "Cleared"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertStatus"}}, :severity {:description "Severity of the alert", :enum ["Informational" "Warning" "Critical"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertSeverity"}}}, :required ["title" "scope" "alertType" "appearedAtTime" "appearedAtSourceTime" "source" "severity" "status"], :type "object"}, :UploadCertificateResponse {:allOf [#:reference{:definitions "BaseModel"}], :description "Upload Certificate Response from IDM", :properties {:properties #:reference{:definitions "ResourceCertificateAndAADDetails"}}, :required ["properties"], :type "object"}, :JobErrorDetails {:description "The job error information containing List of JobErrorItem.", :properties {:code {:description "The code intended for programmatic access", :type "string"}, :errorDetails {:description "The error details.", :items #:reference{:definitions "JobErrorItem"}, :type "array"}, :message {:description "The message intended to describe the error in detail", :type "string"}}, :required ["code" "message"], :type "object"}, :FileShareProperties {:description "The File Share.", :properties {:adminUser {:description "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.", :type "string"}, :dataPolicy {:description "The data policy", :enum ["Invalid" "Local" "Tiered" "Cloud"], :type "string", :x-ms-enum {:modelAsString false, :name "DataPolicy"}}, :description {:description "Description for file share", :type "string"}, :localUsedCapacityInBytes {:description "The local used capacity in Bytes.", :format "int64", :readOnly true, :type "integer"}, :monitoringStatus {:description "The monitoring status", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "MonitoringStatus"}}, :provisionedCapacityInBytes {:description "The total provisioned capacity in Bytes", :format "int64", :type "integer"}, :shareStatus {:description "The Share Status", :enum ["Online" "Offline"], :type "string", :x-ms-enum {:modelAsString false, :name "ShareStatus"}}, :usedCapacityInBytes {:description "The used capacity in Bytes.", :format "int64", :readOnly true, :type "integer"}}, :required ["shareStatus" "dataPolicy" "adminUser" "provisionedCapacityInBytes" "monitoringStatus"], :type "object"}, :EncryptionSettings {:allOf [#:reference{:definitions "BaseModel"}], :description "The EncryptionSettings", :properties {:properties #:reference{:definitions "EncryptionSettingsProperties"}}, :required ["properties"], :type "object"}, :ManagerSku {:description "The Sku.", :properties {:name {:description "Refers to the sku name which should be \"Standard\"", :enum ["Standard"], :type "string", :x-ms-enum {:modelAsString false, :name "ManagerSkuType"}}}, :required ["name"], :type "object"}, :UploadCertificateRequest {:description "Upload Certificate Request to IDM", :properties {:contractVersion {:description "Gets ContractVersion", :enum ["InvalidVersion" "V2011_09" "V2012_02" "V2012_05" "V2012_12" "V2013_04" "V2013_10" "V2013_11" "V2014_04" "V2014_06" "V2014_07" "V2014_09" "V2014_10" "V2014_12" "V2015_01" "V2015_02" "V2015_04" "V2015_05" "V2015_06" "V2015_07" "V2015_08" "V2015_10" "V2015_12" "V2016_01" "V2016_02" "V2016_04" "V2016_05" "V2016_07" "V2016_08"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "ContractVersions"}}, :properties #:reference{:definitions "RawCertificateData"}}, :required ["properties"], :type "object"}, :ISCSIDiskList {:description "Collection of Iscsi disk", :properties {:value {:description "The value.", :items #:reference{:definitions "ISCSIDisk"}, :type "array"}}, :required ["value"], :type "object"}, :Alert {:allOf [#:reference{:definitions "BaseModel"}], :description "Alert class", :properties {:properties #:reference{:definitions "AlertProperties"}}, :required ["properties"], :type "object"}, :StorageAccountCredentialList {:description "Collection of Storage account credential entities", :properties {:value {:description "The value.", :items #:reference{:definitions "StorageAccountCredential"}, :type "array"}}, :required ["value"], :type "object"}, :AvailableProviderOperations {:description "Class for set of operations used for discovery of available provider operations.", :properties {:nextLink {:description "The NextLink.", :type "string"}, :value {:description "The value.", :items #:reference{:definitions "AvailableProviderOperation"}, :type "array"}}, :required ["value"], :type "object"}, :FailoverRequest {:description "The Failover request object.", :properties {:accesspointIds {:items {:type "string"}, :type "array"}, :keepSourceDevice {:type "boolean"}, :skipValidation {:type "boolean"}, :targetDeviceId {:type "string"}}, :type "object"}, :NetworkAdapter {:description "Represents a networkAdapter in a particular node.", :properties {:dhcpStatus {:description "Represents state of DHCP.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "DhcpStatus"}}, :iPv4Info #:reference{:definitions "IPConfig"}, :iPv6Info #:reference{:definitions "IPConfig"}, :linkSpeed {:description "The speed of the network adapter.", :format "int64", :type "integer"}, :networkAdapterName {:description "The name of the network adapter.", :type "string"}}, :required ["networkAdapterName" "dhcpStatus"], :type "object"}, :Backup {:allOf [#:reference{:definitions "BaseModel"}], :description "The backup.", :properties {:properties #:reference{:definitions "BackupProperties"}}, :required ["properties"], :type "object"}, :MetricList {:description "Collection of metrics", :properties {:value {:description "The value.", :items #:reference{:definitions "Metrics"}, :type "array"}}, :required ["value"], :type "object"}, :AlertErrorDetails {:description "Error details for the alert", :properties {:errorCode {:description "Error code.", :type "string"}, :errorMessage {:description "Error Message", :type "string"}, :occurences {:description "Number of occurrences.", :format "int32", :type "integer"}}, :type "object"}, :StorageAccountCredential {:allOf [#:reference{:definitions "BaseModel"}], :description "The storage account credential", :properties {:properties #:reference{:definitions "StorageAccountCredentialProperties"}}, :required ["properties"], :type "object"}, :Manager {:allOf [#:reference{:definitions "Resource"}], :description "The StorSimple Manager", :properties {:etag {:description "ETag of the Manager", :type "string"}, :properties #:reference{:definitions "ManagerProperties"}}, :type "object"}, :MetricFilter {:description "class representing the filters to be passed while fetching metrics", :properties {:endTime {:description "endtime for fetching metrics", :format "date-time", :type "string"}, :name #:reference{:definitions "MetricNameFilter"}, :startTime {:description "starttime for fetching metrics", :format "date-time", :type "string"}, :timeGrain {:description "timegrain of the metrics", :type "string"}}, :type "object"}, :FileServerList {:description "Collection of file servers", :properties {:value {:description "The value.", :items #:reference{:definitions "FileServer"}, :type "array"}}, :required ["value"], :type "object"}, :BackupList {:description "Collection of backups", :properties {:nextLink {:description "The NextLink.", :type "string"}, :value {:description "The value.", :items #:reference{:definitions "Backup"}, :type "array"}}, :required ["value"], :type "object"}, :FileShareList {:description "Collection of file shares", :properties {:value {:description "The value.", :items #:reference{:definitions "FileShare"}, :type "array"}}, :required ["value"], :type "object"}, :JobFilter {:description "Filters that can be specified for the job", :properties {:jobType {:description "The job type.", :enum ["Backup" "Clone" "Failover" "DownloadUpdates" "InstallUpdates"], :type "string", :x-ms-enum {:modelAsString false, :name "JobType"}}, :startTime {:description "The start time of the job.", :format "date-time", :type "string"}, :status {:description "The job status.", :enum ["Invalid" "Running" "Succeeded" "Failed" "Canceled" "Paused" "Scheduled"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["jobType" "status"], :type "object"}, :FileShare {:allOf [#:reference{:definitions "BaseModel"}], :description "The File Share.", :properties {:properties #:reference{:definitions "FileShareProperties"}}, :required ["properties"], :type "object"}, :BackupScheduleGroup {:allOf [#:reference{:definitions "BaseModel"}], :description "The Backup Schedule Group", :properties {:properties #:reference{:definitions "BackupScheduleGroupProperties"}}, :required ["properties"], :type "object"}, :Metrics {:description "Monitoring metric", :properties {:startTime {:description "The metric start time", :format "date-time", :type "string"}, :unit {:description "The unit of the metric data", :enum ["Bytes" "BytesPerSecond" "Count" "CountPerSecond" "Percent" "Seconds"], :type "string", :x-ms-enum {:modelAsString false, :name "MetricUnit"}}, :name #:reference{:definitions "MetricName"}, :endTime {:description "The metric end time", :format "date-time", :type "string"}, :primaryAggregation {:description "The metric aggregation type", :enum ["Average" "Last" "Maximum" "Minimum" "None" "Total"], :type "string", :x-ms-enum {:modelAsString false, :name "MetricAggregationType"}}, :type {:description "The Type of the metric data", :type "string"}, :timeGrain {:description "The time grain, time grain indicates frequency of the metric data", :type "string"}, :dimensions {:description "The Metric dimension which indicates the source of the metric", :items #:reference{:definitions "MetricDimension"}, :type "array"}, :resourceId {:description "The id of metric source", :type "string"}, :values {:description "The metric data", :items #:reference{:definitions "MetricData"}, :type "array"}}, :required ["resourceId" "startTime" "endTime" "timeGrain" "primaryAggregation" "name" "dimensions" "unit" "type" "values"], :type "object"}, :DeviceProperties {:description "Encases all the properties of the Device", :properties {:modelDescription {:description "Name of the device model", :type "string"}, :activationTime {:description "The UTC time at which the device was activated", :format "date-time", :type "string"}, :culture {:description "Language culture setting on the device. For eg: \"en-US\"", :type "string"}, :deviceCapabilities {:description "Device can be configured either as FileServer or IscsiServer", :items {:enum ["Invalid" "FileServer" "IscsiServer"], :type "string", :x-ms-enum {:modelAsString false, :name "SupportedDeviceCapabilities"}}, :type "array"}, :deviceDescription {:description "Short description given for the device", :type "string"}, :type {:description "Type of the device", :enum ["Invalid" "Appliance" "VirtualAppliance" "Series9000OnPremVirtualAppliance" "Series9000VirtualAppliance" "Series9000PhysicalAppliance"], :type "string", :x-ms-enum {:modelAsString false, :name "DeviceType"}}, :friendlySoftwareName {:description "Friendly name for the software version", :type "string"}, :details #:reference{:definitions "DeviceDetails"}, :domainName {:description "Fully qualified name of the domain to which the device is attached", :type "string"}, :status {:description "Current status of the device", :enum ["Unknown" "Online" "Offline" "RequiresAttention" "MaintenanceMode" "Creating" "Provisioning" "Deleted" "ReadyToSetup" "Deactivated" "Deactivating"], :type "string", :x-ms-enum {:modelAsString false, :name "DeviceStatus"}}, :allowedDeviceOperations {:description "Operations that are allowed on the device based on its current state", :items {:enum ["None" "Delete" "DeleteWithWarning" "DRSource" "DRTarget" "Browsable" "ReadOnlyForDR" "Deactivate"], :type "string", :x-ms-enum {:modelAsString false, :name "DeviceOperation"}}, :type "array"}, :deviceConfigurationStatus {:description "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete, \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending", :enum ["Complete" "Pending"], :type "string", :x-ms-enum {:modelAsString false, :name "DeviceConfigurationStatus"}}, :deviceSoftwareVersion {:description "Version number of the software running on the device", :type "string"}}, :type "object"}, :DevicePatch {:description "Class that represents the Input for the PATCH call on Device. Currently the only patchable property on device is \"DeviceDescription\"", :properties {:deviceDescription {:description "Short description given for the device", :type "string"}}, :type "object"}, :ClearAlertRequest {:description "Request for clearing the alert", :properties {:alerts {:description "List of alert Ids to be cleared", :items {:type "string"}, :type "array"}, :resolutionMessage {:description "Resolution message while clearing the request", :type "string"}}, :required ["alerts"], :type "object"}, :CloneRequest {:description "Clone Job Request Model.", :properties {:properties #:reference{:definitions "CloneRequestProperties"}}, :required ["properties"], :type "object"}, :ISCSIDisk {:allOf [#:reference{:definitions "BaseModel"}], :description "The iSCSI disk.", :properties {:properties #:reference{:definitions "ISCSIDiskProperties"}}, :required ["properties"], :type "object"}, :Job {:allOf [#:reference{:definitions "BaseModel"}], :description "The Job.", :properties {:endTime {:description "The UTC time at which the job completed", :format "date-time", :type "string"}, :error #:reference{:definitions "JobErrorDetails"}, :percentComplete {:description "The percentage of the job that is already complete", :format "int32", :type "integer"}, :properties #:reference{:definitions "JobProperties"}, :startTime {:description "The UTC time at which the job was started", :format "date-time", :type "string"}, :status {:description "Current status of the job", :enum ["Invalid" "Running" "Succeeded" "Failed" "Canceled" "Paused" "Scheduled"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["status" "percentComplete"], :type "object"}, :MetricAvailablity {:description "Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain", :properties {:retention {:description "The retention period for the metric at the specified timegrain", :type "string"}, :timeGrain {:description "The time grain, specifies the aggregation interval for the metric.", :type "string"}}, :required ["timeGrain" "retention"], :type "object"}, :ISCSIDiskProperties {:description "The iSCSI disk properties.", :properties {:accessControlRecords {:description "The access control records.", :items {:type "string"}, :type "array"}, :dataPolicy {:description "The data policy.", :enum ["Invalid" "Local" "Tiered" "Cloud"], :type "string", :x-ms-enum {:modelAsString false, :name "DataPolicy"}}, :description {:description "The description.", :type "string"}, :diskStatus {:description "The disk status.", :enum ["Online" "Offline"], :type "string", :x-ms-enum {:modelAsString false, :name "DiskStatus"}}, :localUsedCapacityInBytes {:description "The local used capacity in bytes.", :format "int64", :readOnly true, :type "integer"}, :monitoringStatus {:description "The monitoring.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "MonitoringStatus"}}, :provisionedCapacityInBytes {:description "The provisioned capacity in bytes.", :format "int64", :type "integer"}, :usedCapacityInBytes {:description "The used capacity in bytes.", :format "int64", :readOnly true, :type "integer"}}, :required ["diskStatus" "accessControlRecords" "dataPolicy" "provisionedCapacityInBytes" "monitoringStatus"], :type "object"}, :StorageDomain {:allOf [#:reference{:definitions "BaseModel"}], :description "The storage domain.", :properties {:properties #:reference{:definitions "StorageDomainProperties"}}, :required ["properties"], :type "object"}, :ManagerPatch {:description "The StorSimple Manager patch.", :properties {:tags {:additionalProperties {:type "string"}, :description "The tags attached to the StorSimple Manager.", :type "object"}}, :type "object"}, :ChapSettingsList {:description "Collection of Chap setting entities", :properties {:value {:description "The chap settings entity collection", :items #:reference{:definitions "ChapSettings"}, :type "array"}}, :required ["value"], :type "object"}, :SymmetricEncryptedSecret {:description "This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, \"Value\" is a secret and the \"valueThumbprint\" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.", :properties {:encryptionAlgorithm {:description "Algorithm used to encrypt \"Value\"", :enum ["None" "AES256" "RSAES_PKCS1_v_1_5"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionAlgorithm"}}, :value {:description "The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none", :type "string"}, :valueCertificateThumbprint {:description "Thumbprint cert that was used to encrypt \"Value\"", :type "string"}}, :required ["value" "encryptionAlgorithm"], :type "object"}, :DeviceDetails {:description "Class containing more granular details about the device", :properties {:availableStorageInBytes {:description "Total pending available storage on the device in bytes", :format "int64", :type "integer"}, :usingStorageInBytes {:description "Storage that is being currently used in bytes including both local and cloud", :format "int64", :type "integer"}, :provisionedStorageInBytes {:description "Storage in bytes that has been provisioned on the device including both local and cloud", :format "int64", :type "integer"}, :availableLocalStorageInBytes {:description "Local pending storage available on the device in bytes", :format "int64", :type "integer"}, :totalStorageInBytes {:description "Total storage available on the device in bytes.", :format "int64", :type "integer"}, :endpointCount {:description "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)", :format "int32", :type "integer"}, :totalBackupSizeInBytes {:description "Total size taken up by backups in bytes", :format "int64", :type "integer"}, :provisionedLocalStorageInBytes {:description "Storage in bytes that has been provisioned locally on the device", :format "int64", :type "integer"}, :usingLocalStorageInBytes {:description "Local Storage that is being currently used in bytes", :format "int64", :type "integer"}, :totalLocalStorageInBytes {:description "Total local storage capacity in device in bytes.", :format "int64", :type "integer"}}, :type "object"}, :ISCSIServer {:allOf [#:reference{:definitions "BaseModel"}], :description "The iSCSI server.", :properties {:properties #:reference{:definitions "ISCSIServerProperties"}}, :required ["properties"], :type "object"}, :CloneRequestProperties {:description "Properties of CloneRequest", :properties {:disk #:reference{:definitions "ISCSIDisk"}, :newEndpointName {:description "Name of new endpoint which will created as part of clone job.", :type "string"}, :share #:reference{:definitions "FileShare"}, :targetAccessPointId {:description "Access point Id on which clone job will performed.", :type "string"}, :targetDeviceId {:description "DeviceId of the device which will act as the Clone target", :type "string"}}, :required ["targetDeviceId" "targetAccessPointId" "newEndpointName"], :type "object"}, :SecuritySettingsProperties {:description "The properties of SecuritySettings", :properties {:deviceAdminPassword #:reference{:definitions "AsymmetricEncryptedSecret"}}, :required ["deviceAdminPassword"], :type "object"}, :FileServerProperties {:description "The file server properties.", :properties {:backupScheduleGroupId {:description "The backup policy id.", :type "string"}, :description {:description "The description of the file server", :type "string"}, :domainName {:description "Domain of the file server", :type "string"}, :storageDomainId {:description "The storage domain id.", :type "string"}}, :required ["domainName" "storageDomainId" "backupScheduleGroupId"], :type "object"}, :BackupProperties {:description "Class represents Backup properties", :properties {:createdTime {:description "The time when the backup was created.", :format "date-time", :type "string"}, :deviceId {:description "The Device Identifier.", :type "string"}, :elements {:description "The backup elements.", :items #:reference{:definitions "BackupElement"}, :type "array"}, :expirationTime {:description "The time when the backup will expire.", :format "date-time", :type "string"}, :initiatedBy {:description "Indicates how the backup was initiated \"Manual | Scheduled\".", :enum ["Manual" "Scheduled"], :type "string", :x-ms-enum {:modelAsString false, :name "InitiatedBy"}}, :sizeInBytes {:description "The backup size in bytes.", :format "int64", :type "integer"}, :targetId {:description "The path id of the target FileServer or IscsiServer for which the backup was taken.", :type "string"}, :targetType {:description "Type of target, FileServer or IscsiServer", :type "string"}}, :required ["sizeInBytes" "initiatedBy" "deviceId" "elements"], :type "object"}, :IPConfig {:description "Details related to the IP address configuration", :properties {:gateway {:description "The gateway of the network adapter.", :type "string"}, :ipAddress {:description "The IP address of the network adapter, either ipv4 or ipv6.", :type "string"}, :prefixLength {:description "The prefix length of the network adapter.", :format "int32", :type "integer"}}, :required ["ipAddress" "gateway"], :type "object"}, :MetricData {:description "The metric data.", :properties {:average {:description "The average of all sample for the given instance", :format "double", :type "number"}, :count {:description "The count of samples of the metric data available for the given instance", :format "int32", :type "integer"}, :maximum {:description "The maximum of all samples available", :format "double", :type "number"}, :minimum {:description "The minimum of all samples available", :format "double", :type "number"}, :sum {:description "The sum of all the samples available in the given instance of time for the specific metric data", :format "double", :type "number"}, :timeStamp {:description "The time when the metric data is fetched", :format "date-time", :type "string"}}, :required ["timeStamp" "sum" "count" "average" "minimum" "maximum"], :type "object"}, :RawCertificateData {:description "Raw Certificate Data From IDM", :properties {:authType {:description "Specify the Authentication type", :enum ["Invalid" "AccessControlService" "AzureActiveDirectory"], :type "string", :x-ms-enum {:modelAsString false, :name "AuthType"}}, :certificate {:description "Gets or sets the base64 encoded certificate raw data string", :type "string"}}, :required ["certificate"], :type "object"}, :TimeSettingsProperties {:description "The properties of TimeSettings", :properties {:primaryTimeServer {:description "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.", :type "string"}, :secondaryTimeServer {:description "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.", :type "string"}, :timeZone {:description "The timezone of device, like '(UTC -06:00) Central America'", :type "string"}}, :required ["timeZone" "primaryTimeServer"], :type "object"}, :MetricDimension {:description "Metric dimension", :properties {:name {:description "Metric dimension name", :type "string"}, :value {:description "Metric dimension values", :type "string"}}, :required ["name" "value"], :type "object"}, :AvailableProviderOperation {:description "Class represents provider operation", :properties {:display #:reference{:definitions "AvailableProviderOperationDisplay"}, :name {:description "Gets or sets the name of the operation being performed on this particular object\r\nReturn value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\nEg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n    Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action", :type "string"}, :origin {:description "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”", :type "string"}, :properties #:reference{:definitions "AvailableProviderOperationProperties"}}, :type "object"}, :BackupElement {:allOf [#:reference{:definitions "BaseModel"}], :description "Class represents BackupElement", :properties {:properties #:reference{:definitions "BackupElementProperties"}}, :required ["properties"], :type "object"}, :Updates {:allOf [#:reference{:definitions "BaseModel"}], :description "The updates profile", :properties {:properties #:reference{:definitions "UpdatesProperties"}}, :type "object"}, :SecuritySettings {:allOf [#:reference{:definitions "BaseModel"}], :description "The SecuritySettings of a device", :properties {:properties #:reference{:definitions "SecuritySettingsProperties"}}, :required ["properties"], :type "object"}, :FileServer {:allOf [#:reference{:definitions "BaseModel"}], :description "The file server.", :properties {:properties #:reference{:definitions "FileServerProperties"}}, :required ["properties"], :type "object"}, :NodeNetwork {:description "Represents a single node in a device.", :properties {:networkAdapters {:description "The array of network adapters in the node.", :items #:reference{:definitions "NetworkAdapter"}, :type "array"}}, :required ["networkAdapters"], :type "object"}, :ISCSIServerProperties {:description "The iSCSI server properties.", :properties {:backupScheduleGroupId {:description "The backup policy id.", :type "string"}, :chapId {:description "The chap id.", :type "string"}, :description {:description "The description.", :type "string"}, :reverseChapId {:description "The reverse chap id.", :type "string"}, :storageDomainId {:description "The storage domain id.", :type "string"}}, :required ["storageDomainId" "backupScheduleGroupId"], :type "object"}, :AsymmetricEncryptedSecret {:description "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.", :properties {:encryptionAlgorithm {:description "Algorithm used to encrypt \"Value\"", :enum ["None" "AES256" "RSAES_PKCS1_v_1_5"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionAlgorithm"}}, :encryptionCertificateThumbprint {:description "Thumbprint certificate that was used to encrypt \"Value\"", :type "string"}, :value {:description "The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.", :type "string"}}, :required ["value" "encryptionAlgorithm"], :type "object"}, :AlertFilter {:description "Filters that can be specified on the alert", :properties {:appearedOnTime {:description "UTC time on which the alert appeared", :format "date-time", :type "string"}, :severity {:description "Severity of the alert", :enum ["Informational" "Warning" "Critical"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertSeverity"}}, :sourceName {:description "Source name of the alert", :type "string"}, :sourceType {:description "Source of the alert", :enum ["Resource" "Device"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertSourceType"}}, :status {:description "Status of the alert", :enum ["Active" "Cleared"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertStatus"}}}, :type "object"}, :TimeSettings {:allOf [#:reference{:definitions "BaseModel"}], :description "The TimeSettings of a device", :properties {:properties #:reference{:definitions "TimeSettingsProperties"}}, :required ["properties"], :type "object"}, :MetricNameFilter {:description "Class representing the name filter to be passed while fetching metrics", :properties {:value {:description "The value.", :type "string"}}, :type "object"}, :StorageDomainProperties {:description "The storage domain properties.", :properties {:encryptionKey #:reference{:definitions "AsymmetricEncryptedSecret"}, :encryptionStatus {:description "The encryption status \"Enabled | Disabled\".", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionStatus"}}, :storageAccountCredentialIds {:description "The storage account credentials.", :items {:type "string"}, :type "array"}}, :required ["storageAccountCredentialIds" "encryptionStatus"], :type "object"}, :ManagerProperties {:description "The properties of the Manager", :properties {:cisIntrinsicSettings #:reference{:definitions "ManagerIntrinsicSettings"}, :provisioningState {:description "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created", :readOnly true, :type "string"}, :sku #:reference{:definitions "ManagerSku"}}, :type "object"}, :AlertSource {:description "source at which the alert can be raised", :properties {:alertSourceType {:description "Source type of the alert.", :enum ["Resource" "Device"], :type "string", :x-ms-enum {:modelAsString false, :name "AlertSourceType"}}, :name {:description "Name of the source.", :type "string"}, :timeZone {:description "The time zone.", :type "string"}}, :type "object"}, :Resource {:description "The Azure Resource.", :properties {:id {:description "The Resource Id", :readOnly true, :type "string"}, :location {:description "The Geo location of the Manager", :type "string"}, :name {:description "The Resource Name", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Tags attached to the Manager", :type "object"}, :type {:description "The Resource type", :readOnly true, :type "string"}}, :required ["location"], :type "object", :x-ms-azure-resource true}, :Time {:description "The Time.", :properties {:hour {:description "The hour.", :format "int32", :maximum 23, :minimum 0, :type "integer"}, :minute {:description "The minute.", :format "int32", :maximum 59, :minimum 0, :type "integer"}}, :required ["hour" "minute"], :type "object"}, :JobList {:description "Collection of jobs", :properties {:nextLink {:description "The NextLink.", :type "string"}, :value {:description "The value.", :items #:reference{:definitions "Job"}, :type "array"}}, :required ["value"], :type "object"}, :SendTestAlertEmailRequest {:description "Request for sending test alert email", :properties {:emailList {:description "List of emails to send the test alerts", :items {:type "string"}, :type "array"}}, :required ["emailList"], :type "object"}, :NetworkSettingsProperties {:description "The properties of NetworkSettings", :properties {:nodeNetworks {:description "The NetworkAdapters under each node of the device.", :items #:reference{:definitions "NodeNetwork"}, :type "array"}, :primaryDnsServer {:description "The Primary DNS server for the device", :type "string"}, :secondaryDnsServer {:description "The secondary DNS server for the device", :type "string"}}, :required ["primaryDnsServer" "nodeNetworks"], :type "object"}, :Error {:properties {:errorCode {:type "string"}, :message #:reference{:definitions "Message"}, :values {:items #:reference{:definitions "Item"}, :type "array"}}, :required ["errorCode" "message"], :type "object"}, :DeviceList {:description "Collection of Devices", :properties {:value {:description "The value.", :items #:reference{:definitions "Device"}, :type "array"}}, :required ["value"], :type "object"}, :ManagerExtendedInfo {:allOf [#:reference{:definitions "BaseModel"}], :description "The extended info of the manager.", :properties {:etag {:description "ETag of the Resource", :type "string"}, :properties #:reference{:definitions "ManagerExtendedInfoProperties"}}, :required ["properties"], :type "object"}, :JobStats {:description "Stats that are available for all jobs in common", :properties {:completedWorkItemCount {:description "Completed work item count.", :format "int32", :type "integer"}, :estimatedTimeRemaining {:description "The estimated time remaining.", :format "int32", :type "integer"}, :totalWorkItemCount {:description "Total work item count.", :format "int32", :type "integer"}}, :type "object"}, :JobStage {:description "Contains details about the multiple job stages of a job", :properties {:detail {:description "The details of the stage.", :type "string"}, :errorCode {:description "The error code of the stage if any.", :type "string"}, :message {:description "The message of the job stage.", :type "string"}, :stageStatus {:description "The stage status.", :enum ["Invalid" "Running" "Succeeded" "Failed" "Canceled" "Paused" "Scheduled"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["stageStatus"], :type "object"}, :BackupFilter {:description "Backup OData filter class", :properties {:createdTime {:description "Gets or sets CreatedTime", :format "date-time", :type "string"}, :initiatedBy {:description "Gets or sets InitiatedBy", :enum ["Manual" "Scheduled"], :type "string", :x-ms-enum {:modelAsString false, :name "InitiatedBy"}}}, :type "object"}, :ChapSettings {:allOf [#:reference{:definitions "BaseModel"}], :description "Challenge-Handshake Authentication Protocol (CHAP) setting", :properties {:properties #:reference{:definitions "ChapProperties"}}, :required ["properties"], :type "object"}, :Device {:allOf [#:reference{:definitions "BaseModel"}], :description "Represents a StorSimple device object along with its properties", :properties {:properties #:reference{:definitions "DeviceProperties"}}, :type "object"}, :MetricName {:description "The name of the metric", :properties {:localizedValue {:description "Localized name of the metric", :type "string"}, :value {:description "Name of the metric", :type "string"}}, :required ["value" "localizedValue"], :type "object"}, :EncryptionSettingsProperties {:description "The properties of EncryptionSettings", :properties {:encryptionStatus {:description "The encryption status which indicates if encryption is enabled or not.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "EncryptionStatus"}}, :keyRolloverStatus {:description "The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.", :enum ["Required" "NotRequired"], :type "string", :x-ms-enum {:modelAsString false, :name "KeyRolloverStatus"}}}, :required ["encryptionStatus" "keyRolloverStatus"], :type "object"}, :AvailableProviderOperationDisplay {:description "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations.", :properties {:description {:description "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views.", :type "string"}, :operation {:description "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.", :type "string"}, :provider {:description "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services.", :type "string"}, :resource {:description "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section.", :type "string"}}, :type "object"}, :Item {:properties {:key {:type "string"}, :value {:type "string"}}, :required ["key" "value"], :type "object"}, :NetworkSettings {:allOf [#:reference{:definitions "BaseModel"}], :description "The NetworkSettings of a device", :properties {:properties #:reference{:definitions "NetworkSettingsProperties"}}, :required ["properties"], :type "object"}, :ResourceCertificateAndAADDetails {:description "Resource Certificate And AAD Details from IDM", :properties {:validFrom {:description "Certificate Validity start Date time", :format "date-time", :type "string"}, :thumbprint {:description "Certificate thumbprint", :type "string"}, :servicePrincipalClientId {:description "AAD service principal clientId", :type "string"}, :aadTenantId {:description "AAD tenant Id", :type "string"}, :authType {:description "Specify the Authentication type", :enum ["Invalid" "AccessControlService" "AzureActiveDirectory"], :type "string", :x-ms-enum {:modelAsString false, :name "AuthType"}}, :aadAuthority {:description "AAD tenant authority", :type "string"}, :resourceId {:description "Gets or Sets the ResourceId", :format "int64", :type "integer"}, :certificate {:description "Gets or sets the base64 encoded certificate raw data string", :type "string"}, :azureManagementEndpointAudience {:description "Azure Management Endpoint Audience", :type "string"}, :friendlyName {:description "Certificate friendly name", :type "string"}, :validTo {:description "Certificate Validity End Date time", :format "date-time", :type "string"}, :issuer {:description "Certificate issuer", :type "string"}, :servicePrincipalObjectId {:description "AAD service principal ObjectId", :type "string"}, :subject {:description "Certificate Subject Name", :type "string"}}, :required ["certificate" "resourceId" "aadAuthority" "aadTenantId" "servicePrincipalClientId" "servicePrincipalObjectId" "azureManagementEndpointAudience" "subject" "validFrom" "validTo" "thumbprint" "friendlyName" "issuer"], :type "object"}, :JobProperties {:description "properties for the job", :properties {:backupPointInTime {:description "The time of the backup used for the failover.", :format "date-time", :type "string"}, :isCancellable {:description "Represents whether the job is cancellable or not", :type "boolean"}, :deviceId {:description "The device id in which the job is currently running", :type "string"}, :sourceDeviceId {:description "The source device identifier of the failover job.", :type "string"}, :targetId {:description "Id of the object that is created by the job", :type "string"}, :downloadProgress #:reference{:definitions "UpdateDownloadProgress"}, :installProgress #:reference{:definitions "UpdateInstallProgress"}, :targetType {:description "The target type of the backup.", :enum ["FileServer" "DiskServer"], :type "string", :x-ms-enum {:modelAsString false, :name "TargetType"}}, :jobType {:description "Type of the job", :enum ["Backup" "Clone" "Failover" "DownloadUpdates" "InstallUpdates"], :type "string", :x-ms-enum {:modelAsString false, :name "JobType"}}, :entityId {:description "The entity identifier for which the job ran.", :type "string"}, :stats #:reference{:definitions "JobStats"}, :entityType {:description "The entity type for which the job ran.", :type "string"}, :jobStages {:description "The job stages.", :items #:reference{:definitions "JobStage"}, :type "array"}}, :required ["jobType"], :type "object"}, :MetricDefinitionList {:description "List of metric definition", :properties {:value {:description "The list of metric definition", :items #:reference{:definitions "MetricDefinition"}, :type "array"}}, :required ["value"], :type "object"}, :UpdateInstallProgress {:description "Class representing the progress during installation of updates", :properties {:numberOfUpdatesInstalled {:description "Number of updates installed.", :format "int32", :type "integer"}, :numberOfUpdatesToInstall {:description "Number of updates to install.", :format "int32", :type "integer"}, :percentComplete {:description "Percentage of completion.", :format "int32", :type "integer"}}, :type "object"}, :BackupElementProperties {:description "The backup element properties", :properties {:dataPolicy {:description "The data policy of backed up endpoint.", :enum ["Invalid" "Local" "Tiered" "Cloud"], :type "string", :x-ms-enum {:modelAsString false, :name "DataPolicy"}}, :endpointName {:description "The name of the endpoint.", :type "string"}, :sizeInBytes {:description "The size in bytes.", :format "int64", :type "integer"}}, :required ["sizeInBytes" "endpointName" "dataPolicy"], :type "object"}, :BackupScheduleGroupList {:description "The list response of backup schedule groups", :properties {:value {:description "The value.", :items #:reference{:definitions "BackupScheduleGroup"}, :type "array"}}, :required ["value"], :type "object"}, :AccessControlRecordProperties {:description "Properties of access control record", :properties {:initiatorName {:description "The Iscsi initiator name (IQN)", :type "string"}}, :required ["initiatorName"], :type "object"}, :UpdateDownloadProgress {:description "details available during the download", :properties {:downloadPhase {:description "The download phase.", :enum ["Unknown" "Initializing" "Downloading" "Verifying"], :type "string", :x-ms-enum {:modelAsString false, :name "DownloadPhase"}}, :numberOfUpdatesDownloaded {:description "Number of updates downloaded.", :format "int32", :type "integer"}, :numberOfUpdatesToDownload {:description "Number of updates to download.", :format "int32", :type "integer"}, :percentComplete {:description "Percentage of completion.", :format "int32", :type "integer"}, :totalBytesDownloaded {:description "Total bytes downloaded.", :format "double", :type "number"}, :totalBytesToDownload {:description "Total bytes to download.", :format "double", :type "number"}}, :type "object"}, :ChapProperties {:description "Chap properties", :properties {:password #:reference{:definitions "AsymmetricEncryptedSecret"}}, :required ["password"], :type "object"}, :AlertList {:description "Collection of Alerts", :properties {:nextLink {:description "Id of the next page of alerts", :type "string"}, :value {:description "The value.", :items #:reference{:definitions "Alert"}, :type "array"}}, :required ["value"], :type "object"}, :UpdatesProperties {:description "Properties of the update profile", :properties {:inProgressDownloadJobId {:description "If a download is in progress, this field contains the JobId of that particular download job", :type "string"}, :lastCompletedDownloadJobTime {:description "The time when the last Download job was completed (success|cancelled|failed) on the device.", :format "date-time", :type "string"}, :lastCompletedInstallJobTime {:description "The time when the last Install job was completed (success|cancelled|failed) on the device.", :format "date-time", :type "string"}, :regularUpdatesAvailable {:description "Set to true if regular updates were detected for the current version of the device.", :type "boolean"}, :rebootRequiredForInstall {:description "Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.", :type "boolean"}, :lastCompletedScanTime {:description "The time when the last scan job was completed (success|cancelled|failed) on the device.", :format "date-time", :type "string"}, :deviceLastScannedTime {:description "The last time when the device did an update scan.", :format "date-time", :type "string"}, :inProgressScanStartedTime {:description "The time when the currently running scan (if any) started", :format "date-time", :type "string"}, :status {:description "The current update operation.", :enum ["Idle" "Scanning" "Downloading" "Installing"], :type "string", :x-ms-enum {:modelAsString false, :name "UpdateOperation"}}, :deviceVersion {:description "The current Device version.", :type "string"}, :inProgressDownloadJobStartedTime {:description "The time when the currently running download (if any) started", :format "date-time", :type "string"}, :inProgressInstallJobId {:description "If an install is in progress, this field contains the JobId of that particular install job", :type "string"}, :inProgressInstallJobStartedTime {:description "The time when the currently running install (if any) started", :format "date-time", :type "string"}, :totalItemsPendingForInstall {:description "The total number of items pending for install.", :format "int32", :type "integer"}, :totalItemsPendingForDownload {:description "The total number of items pending for download.", :format "int32", :type "integer"}}, :type "object"}}}