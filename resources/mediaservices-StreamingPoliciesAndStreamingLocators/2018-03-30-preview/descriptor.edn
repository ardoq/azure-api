{:scheme "https", :host "azure.local", :info {:description "This Swagger was generated by the API Framework.", :title "Azure Media Services", :version "2018-03-30-preview"}, :ops {:StreamingLocators_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}", :description "Get the details of a Streaming Locator in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Locator name.", :in "path", :name "streamingLocatorName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :StreamingPolicies_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies", :description "Lists the Streaming Policies in the account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} #:reference{:parameters "ApiVersion"} {:description "Restricts the set of items returned.", :in "query", :name "$filter", :required false, :type "string"} {:description "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.", :in "query", :name "$top", :required false, :type "integer"} {:description "Specifies the key by which the result collection should be ordered.", :in "query", :name "$orderby", :required false, :type "string"}], :verb :get}, :StreamingLocators_ListPaths {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listPaths", :description "List Paths supported by this Streaming Locator", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Locator name.", :in "path", :name "streamingLocatorName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}, :StreamingLocators_ListContentKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}/listContentKeys", :description "List Content Keys used by this Streaming Locator", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Locator name.", :in "path", :name "streamingLocatorName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}, :StreamingLocators_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators", :description "Lists the Streaming Locators in the account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} #:reference{:parameters "ApiVersion"} {:description "Restricts the set of items returned.", :in "query", :name "$filter", :required false, :type "string"} {:description "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.", :in "query", :name "$top", :required false, :type "integer"} {:description "Specifies the key by which the result collection should be ordered.", :in "query", :name "$orderby", :required false, :type "string"}], :verb :get}, :StreamingPolicies_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}", :description "Deletes a Streaming Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Policy name.", :in "path", :name "streamingPolicyName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :StreamingPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}", :description "Get the details of a Streaming Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Policy name.", :in "path", :name "streamingPolicyName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :StreamingLocators_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}", :description "Create a Streaming Locator in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Locator name.", :in "path", :name "streamingLocatorName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StreamingLocator"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :StreamingLocators_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingLocators/{streamingLocatorName}", :description "Deletes a Streaming Locator in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Locator name.", :in "path", :name "streamingLocatorName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :StreamingPolicies_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/streamingPolicies/{streamingPolicyName}", :description "Create a Streaming Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Streaming Policy name.", :in "path", :name "streamingPolicyName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "StreamingPolicy"}} #:reference{:parameters "ApiVersion"}], :verb :put}}, :parameters {:ApiVersion {:description "The Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :MediaServicesAccountName {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupName {:description "The name of the resource group within the Azure subscription.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionId {:description "The unique identifier for a Microsoft Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:CencDrmConfiguration {:description "Class to specify drm configurations of CommonEncryptionCenc scheme in Streaming Policy", :properties {:playReady #:reference{:definitions "StreamingPolicyPlayReadyConfiguration"}, :widevine #:reference{:definitions "StreamingPolicyWidevineConfiguration"}}, :type "object"}, :StreamingLocatorContentKey {:description "Class for content key in Streaming Locator", :properties {:id {:description "ID of Content Key", :format "uuid", :type "string"}, :label {:description "Label of Content Key", :type "string"}, :policyName {:description "ContentKeyPolicy used by Content Key", :type "string"}, :tracks {:description "Tracks which use this Content Key", :items #:reference{:definitions "TrackSelection"}, :type "array"}, :type {:description "Encryption type of Content Key", :enum ["CommonEncryptionCenc" "CommonEncryptionCbcs" "EnvelopeEncryption"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "StreamingLocatorContentKeyType", :values [{:description "Common Encryption using CENC", :value "CommonEncryptionCenc"} {:description "Common Encryption using CBCS", :value "CommonEncryptionCbcs"} {:description "Envelope Encryption", :value "EnvelopeEncryption"}]}}, :value {:description "Value of Content Key", :type "string"}}, :required ["type" "id"], :type "object"}, :StreamingPolicyFairPlayConfiguration {:description "Class to specify configurations of FairPlay in Streaming Policy", :properties {:allowPersistentLicense {:description "All license to be persistent or not", :type "boolean"}, :customLicenseAcquisitionUrlTemplate {:description "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.", :type "string"}}, :required ["allowPersistentLicense"], :type "object"}, :StreamingLocatorProperties {:description "Class to specify properties of Streaming Locator", :properties {:assetName {:description "Asset Name", :type "string"}, :contentKeys {:description "ContentKeys used by this Streaming Locator", :items #:reference{:definitions "StreamingLocatorUserDefinedContentKey"}, :type "array"}, :created {:description "Creation time of Streaming Locator", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :defaultContentKeyPolicyName {:description "Default ContentKeyPolicy used by this Streaming Locator", :type "string"}, :endTime {:description "EndTime of Streaming Locator", :format "date-time", :type "string"}, :startTime {:description "StartTime of Streaming Locator", :format "date-time", :type "string"}, :streamingLocatorId {:description "StreamingLocatorId of Streaming Locator", :format "uuid", :type "string"}, :streamingPolicyName {:description "Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'", :type "string"}}, :required ["assetName" "streamingPolicyName"], :type "object"}, :StreamingPolicyContentKeys {:description "Class to specify properties of all content keys in Streaming Policy", :properties {:defaultKey #:reference{:definitions "DefaultKey"}, :keyToTrackMappings {:description "Representing tracks needs separate content key", :items #:reference{:definitions "StreamingPolicyContentKey"}, :type "array"}}, :type "object"}, :ListPathsResponse {:description "Class of response for listPaths action", :properties {:downloadPaths {:description "Download Paths supported by current Streaming Locator", :items {:type "string"}, :type "array"}, :streamingPaths {:description "Streaming Paths supported by current Streaming Locator", :items #:reference{:definitions "StreamingPath"}, :type "array"}}, :type "object"}, :EnvelopeEncryption {:description "Class for EnvelopeEncryption encryption scheme", :properties {:clearTracks {:description "Representing which tracks should not be encrypted", :items #:reference{:definitions "TrackSelection"}, :type "array"}, :contentKeys #:reference{:definitions "StreamingPolicyContentKeys"}, :customLicenseAcquisitionUrlTemplate {:description "LicenseAcquisitionUrlTemplate is used to point to user specified service to delivery content keys", :type "string"}, :enabledProtocols #:reference{:definitions "EnabledProtocols"}}, :type "object"}, :ListContentKeysResponse {:description "Class of response for listContentKeys action", :properties {:contentKeys {:description "ContentKeys used by current Streaming Locator", :items #:reference{:definitions "StreamingLocatorContentKey"}, :type "array"}}, :type "object"}, :CommonEncryptionCbcs {:description "Class for CommonEncryptionCbcs encryption scheme", :properties {:clearTracks {:description "Representing which tracks should not be encrypted", :items #:reference{:definitions "TrackSelection"}, :type "array"}, :contentKeys #:reference{:definitions "StreamingPolicyContentKeys"}, :drm #:reference{:definitions "CbcsDrmConfiguration"}, :enabledProtocols #:reference{:definitions "EnabledProtocols"}}, :type "object"}, :StreamingLocatorCollection {:description "A collection of StreamingLocator items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of StreamingLocator items.", :items #:reference{:definitions "StreamingLocator"}, :type "array"}}, :type "object"}, :NoEncryption {:description "Class for NoEncryption scheme", :properties {:enabledProtocols #:reference{:definitions "EnabledProtocols"}}, :type "object"}, :CommonEncryptionCenc {:description "Class for envelope encryption scheme", :properties {:clearTracks {:description "Representing which tracks should not be encrypted", :items #:reference{:definitions "TrackSelection"}, :type "array"}, :contentKeys #:reference{:definitions "StreamingPolicyContentKeys"}, :drm #:reference{:definitions "CencDrmConfiguration"}, :enabledProtocols #:reference{:definitions "EnabledProtocols"}}, :type "object"}, :ODataError {}, :StreamingLocator {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "A Streaming Locator resource", :properties {:properties #:reference{:definitions "StreamingLocatorProperties"}}, :type "object"}, :CbcsDrmConfiguration {:description "Class to specify drm configurations of CommonEncryptionCbcs scheme in Streaming Policy", :properties {:fairPlay #:reference{:definitions "StreamingPolicyFairPlayConfiguration"}, :playReady #:reference{:definitions "StreamingPolicyPlayReadyConfiguration"}, :widevine #:reference{:definitions "StreamingPolicyWidevineConfiguration"}}, :type "object"}, :StreamingPolicyPlayReadyConfiguration {:description "Class to specify configurations of PlayReady in Streaming Policy", :properties {:customLicenseAcquisitionUrlTemplate {:description "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.", :type "string"}, :playReadyCustomAttributes {:description "Custom attributes for PlayReady", :type "string"}}, :type "object"}, :StreamingPolicyProperties {:description "Class to specify properties of Streaming Policy", :properties {:commonEncryptionCbcs #:reference{:definitions "CommonEncryptionCbcs"}, :commonEncryptionCenc #:reference{:definitions "CommonEncryptionCenc"}, :created {:description "Creation time of Streaming Policy", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :defaultContentKeyPolicyName {:description "Default ContentKey used by current Streaming Policy", :type "string"}, :envelopeEncryption #:reference{:definitions "EnvelopeEncryption"}, :noEncryption #:reference{:definitions "NoEncryption"}}, :type "object"}, :TrackSelection {:description "Class to select a track", :properties {:trackSelections {:description "TrackSelections is a track property condition list which can specify track(s)", :items #:reference{:definitions "TrackPropertyCondition"}, :type "array"}}, :type "object"}, :StreamingPath {:description "Class of paths for streaming", :properties {:encryptionScheme {:description "Encryption scheme", :enum ["NoEncryption" "EnvelopeEncryption" "CommonEncryptionCenc" "CommonEncryptionCbcs"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "EncryptionScheme", :values [{:description "NoEncryption scheme", :value "NoEncryption"} {:description "EnvelopeEncryption scheme", :value "EnvelopeEncryption"} {:description "CommonEncryptionCenc scheme", :value "CommonEncryptionCenc"} {:description "CommonEncryptionCbcs scheme", :value "CommonEncryptionCbcs"}]}}, :paths {:description "Streaming paths for each protocol and encryptionScheme pair", :items {:type "string"}, :type "array"}, :streamingProtocol {:description "Streaming protocol", :enum ["Hls" "Dash" "SmoothStreaming" "Download"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "StreamingPolicyStreamingProtocol", :values [{:description "HLS protocol", :value "Hls"} {:description "DASH protocol", :value "Dash"} {:description "SmoothStreaming protocol", :value "SmoothStreaming"} {:description "Download protocol", :value "Download"}]}}}, :required ["streamingProtocol" "encryptionScheme"], :type "object"}, :StreamingPolicyWidevineConfiguration {:description "Class to specify configurations of Widevine in Streaming Policy", :properties {:customLicenseAcquisitionUrlTemplate {:description "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.", :type "string"}}, :type "object"}, :StreamingPolicyContentKey {:description "Class to specify properties of content key", :properties {:label {:description "Label can be used to specify Content Key when creating Streaming Locator", :type "string"}, :policyName {:description "Policy used by Content Key", :type "string"}, :tracks {:description "Tracks which use this content key", :items #:reference{:definitions "TrackSelection"}, :type "array"}}, :type "object"}, :StreamingPolicy {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "A Streaming Policy resource", :properties {:properties #:reference{:definitions "StreamingPolicyProperties"}}, :type "object"}, :StreamingPolicyCollection {:description "A collection of StreamingPolicy items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of StreamingPolicy items.", :items #:reference{:definitions "StreamingPolicy"}, :type "array"}}, :type "object"}, :EnabledProtocols {:description "Class to specify which protocols are enabled", :properties {:dash {:description "Enable Dash protocol or not", :type "boolean"}, :download {:description "Enable Download protocol or not", :type "boolean"}, :hls {:description "Enable Hls protocol or not", :type "boolean"}, :smoothStreaming {:description "Enable SmoothStreaming protocol or not", :type "boolean"}}, :required ["download" "dash" "hls" "smoothStreaming"], :type "object"}, :DefaultKey {:description "Class to specify properties of default content key for each encryption scheme", :properties {:label {:description "Label can be used to specify Content Key when creating Streaming Locator", :type "string"}, :policyName {:description "Policy used by Default Key", :type "string"}}, :type "object"}, :TrackPropertyCondition {:description "Class to specify one track property condition", :properties {:operation {:description "Track property condition operation", :enum ["Unknown" "Equal"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "TrackPropertyCompareOperation", :values [{:description "Unknown track property compare operation", :value "Unknown"} {:description "Equal operation", :value "Equal"}]}}, :property {:description "Track property type", :enum ["Unknown" "FourCC"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "TrackPropertyType", :values [{:description "Unknown track property", :value "Unknown"} {:description "Track FourCC", :value "FourCC"}]}}, :value {:description "Track property value", :type "string"}}, :required ["property" "operation"], :type "object"}, :StreamingLocatorUserDefinedContentKey {:description "Describes the properties of a user-defined content key in the Streaming Locator", :properties {:id {:description "ID of Content Key", :format "uuid", :type "string"}, :label {:description "The Content Key description", :type "string"}, :value {:description "The Content Key secret", :type "string"}}, :required ["id"], :type "object"}}}