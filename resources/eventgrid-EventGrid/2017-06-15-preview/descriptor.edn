{:scheme "https", :host "management.azure.com", :info {:description "Azure EventGrid Management Client", :title "EventGridManagementClient", :version "2017-06-15-preview"}, :ops {:EventSubscriptions_ListRegionalBySubscriptionForTopicType {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_ListEventTypes {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes", :description "List event types for a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Namespace of the provider of the topic", :in "path", :name "providerNamespace", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "resourceTypeName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_GetFullUrl {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl", :description "Get the full endpoint URL for an event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Topics_ListSharedAccessKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys", :description "List the two keys used to publish to a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Topics_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics", :description "List all the topics under a resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Update {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Asynchronously updates an existing event subscription.", :parameters [{:description "The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription to be created", :in "path", :name "eventSubscriptionName", :required true, :type "string"} {:description "Updated event subscription information", :in "body", :name "eventSubscriptionUpdateParameters", :required true, :schema #:reference{:definitions "EventSubscriptionUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :EventSubscriptions_ListGlobalByResourceGroupForTopicType {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all global event subscriptions under a resource group for a specific topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TopicTypes_Get {:path "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}", :description "Get information about a topic type", :parameters [{:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_RegenerateKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey", :description "Regenerate a shared access key for a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} {:description "Request body to regenerate key", :in "body", :name "regenerateKeyRequest", :required true, :schema #:reference{:definitions "TopicRegenerateKeyRequest"}} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :EventSubscriptions_ListGlobalByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all global event subscriptions under a specific Azure subscription and resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics", :description "List all the topics under an Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListGlobalBySubscriptionForTopicType {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all global event subscriptions under an Azure subscription for a topic type.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListByResource {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all event subscriptions that have been created for a specific topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Namespace of the provider of the topic", :in "path", :name "providerNamespace", :required true, :type "string"} {:description "Name of the resource type", :in "path", :name "resourceTypeName", :required true, :type "string"} {:description "Name of the resource", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Delete {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Delete an existing event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :TopicTypes_ListEventTypes {:path "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes", :description "List event types for a topic type", :parameters [{:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Create {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Asynchronously creates a new event subscription to the specified scope. Existing event subscriptions cannot be updated with this API and should instead use the Update event subscription API.", :parameters [{:description "The scope of the resource to which the event subscription needs to be created. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription to be created. Event subscription names must be between 3 and 64 characters in length and use alphanumeric letters only.", :in "path", :name "eventSubscriptionName", :required true, :type "string"} {:description "Event subscription properties containing the destination and filter information", :in "body", :name "eventSubscriptionInfo", :required true, :schema #:reference{:definitions "EventSubscription"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :EventSubscriptions_ListRegionalByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and resource group", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Delete existing topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Topics_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Asynchronously creates a new topic with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} {:description "Topic information", :in "body", :name "topicInfo", :required true, :schema #:reference{:definitions "Topic"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :TopicTypes_List {:path "/providers/Microsoft.EventGrid/topicTypes", :description "List all registered topic types", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListRegionalBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_Get {:path "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}", :description "Get properties of an event subscription", :parameters [{:description "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Name of the event subscription", :in "path", :name "eventSubscriptionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListGlobalBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions", :description "List all aggregated global event subscriptions under a specific Azure subscription", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Topics_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}", :description "Get properties of a topic", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the topic", :in "path", :name "topicName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :EventSubscriptions_ListRegionalByResourceGroupForTopicType {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions", :description "List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type", :parameters [#:reference{:parameters "SubscriptionIdParameter"} {:description "The name of the resource group within the user's subscription.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the location", :in "path", :name "location", :required true, :type "string"} {:description "Name of the topic type", :in "path", :name "topicTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.EventGrid/operations", :description "List the available operations supported by the Microsoft.EventGrid resource provider", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:EventType {:allOf [#:reference{:definitions "Resource"}], :description "Event Type for a subject under a topic", :properties {:properties #:reference{:definitions "EventTypeProperties"}}, :type "object"}, :EventSubscriptionDestinationProperties {:description "Properties of the event subscription destination", :properties {:endpointBaseUrl {:description "The base URL that represents the endpoint of the destination of an event subscription.", :readOnly true, :type "string"}, :endpointUrl {:description "The URL that represents the endpoint of the destination of an event subscription.", :type "string"}}, :type "object"}, :OperationInfo {:description "Information about an operation", :properties {:description {:description "Description of the operation", :type "string"}, :operation {:description "Name of the operation", :type "string"}, :provider {:description "Name of the provider", :type "string"}, :resource {:description "Name of the resource type", :type "string"}}, :type "object"}, :EventTypesListResult {:description "Result of the List Event Types operation", :properties {:value {:description "A collection of event types", :items #:reference{:definitions "EventType"}, :type "array"}}, :type "object"}, :TopicProperties {:description "Properties of the Topic", :properties {:endpoint {:description "Endpoint for the topic.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the topic.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "TopicProvisioningState"}}}, :type "object"}, :Operation {:description "Represents an operation returned by the GetOperations request", :properties {:display #:reference{:definitions "OperationInfo"}, :name {:description "Name of the operation", :type "string"}, :origin {:description "Origin of the operation", :enum ["User" "System" "UserAndSystem"], :type "string", :x-ms-enum {:modelAsString true, :name "OperationOrigin"}}, :properties {:description "Properties of the operation", :type "object", :x-ms-client-flatten true}}, :type "object"}, :EventSubscriptionProperties {:description "Properties of the Event Subscription", :properties {:destination #:reference{:definitions "EventSubscriptionDestination"}, :filter #:reference{:definitions "EventSubscriptionFilter"}, :labels {:description "List of user defined labels.", :items {:type "string"}, :type "array"}, :provisioningState {:description "Provisioning state of the event subscription.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "EventSubscriptionProvisioningState"}}, :topic {:description "Name of the topic of the event subscription.", :readOnly true, :type "string"}}, :type "object"}, :TopicsListResult {:description "Result of the List Topics operation", :properties {:value {:description "A collection of Topics", :items #:reference{:definitions "Topic"}, :type "array"}}, :type "object"}, :TopicTypesListResult {:description "Result of the List Topic Types operation", :properties {:value {:description "A collection of topic types", :items #:reference{:definitions "TopicTypeInfo"}, :type "array"}}, :type "object"}, :EventTypeProperties {:description "Properties of the event type", :properties {:description {:description "Description of the event type.", :type "string"}, :displayName {:description "Display name of the event type.", :type "string"}, :schemaUrl {:description "Url of the schema for this event type.", :type "string"}}, :type "object"}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "Definition of a Tracked Resource", :properties {:location {:description "Location of the resource", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Tags of the resource", :type "object"}}, :required ["location"], :type "object"}, :TopicSharedAccessKeys {:description "Shared access keys of the Topic", :properties {:key1 {:description "Shared access key1 for the topic.", :type "string"}, :key2 {:description "Shared access key2 for the topic.", :type "string"}}, :type "object"}, :TopicTypeProperties {:description "Properties of a topic type.", :properties {:description {:description "Description of the topic type.", :type "string"}, :displayName {:description "Display Name for the topic type.", :type "string"}, :provider {:description "Namespace of the provider of the topic type.", :type "string"}, :provisioningState {:description "Provisioning state of the topic type", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Canceled" "Failed"], :type "string", :x-ms-enum {:modelAsString true, :name "TopicTypeProvisioningState"}}, :resourceRegionType {:description "Region type of the resource.", :enum ["RegionalResource" "GlobalResource"], :type "string", :x-ms-enum {:modelAsString true, :name "ResourceRegionType"}}}, :type "object"}, :EventSubscriptionFullUrl {:description "Full endpoint url of an event subscription", :properties {:endpointUrl {:description "The URL that represents the endpoint of the destination of an event subscription.", :type "string"}}, :type "object"}, :EventSubscriptionDestination {:description "Information about the destination for an event subscription", :properties {:endpointType {:description "Type of the endpoint for the event subscription destination", :enum ["WebHook"], :type "string", :x-ms-enum {:modelAsString true, :name "EndpointType"}}, :properties #:reference{:definitions "EventSubscriptionDestinationProperties"}}, :type "object"}, :EventSubscription {:allOf [#:reference{:definitions "Resource"}], :description "Event Subscription", :properties {:properties #:reference{:definitions "EventSubscriptionProperties"}}, :type "object"}, :TopicTypeInfo {:allOf [#:reference{:definitions "Resource"}], :description "Properties of a topic type info.", :properties {:properties #:reference{:definitions "TopicTypeProperties"}}, :type "object"}, :EventSubscriptionUpdateParameters {:description "Properties of the Event Subscription update", :properties {:destination #:reference{:definitions "EventSubscriptionDestination"}, :filter #:reference{:definitions "EventSubscriptionFilter"}, :labels {:description "List of user defined labels.", :items {:type "string"}, :type "array"}}, :type "object"}, :EventSubscriptionFilter {:description "Filter for the Event Subscription", :properties {:includedEventTypes {:description "A list of applicable event types that need to be part of the event subscription. \r\nIf it is desired to subscribe to all event types, the string \"all\" needs to be specified as an element in this list.", :items {:type "string"}, :type "array"}, :isSubjectCaseSensitive {:default false, :description "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter \r\nshould be compared in a case sensitive manner.", :type "boolean"}, :subjectBeginsWith {:description "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events. \r\nWildcard characters are not supported in this path.", :type "string"}, :subjectEndsWith {:description "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.", :type "string"}}, :type "object"}, :TopicRegenerateKeyRequest {:description "Topic regenerate share access key request", :properties {:keyName {:description "Key name to regenerate key1 or key2", :type "string"}}, :required ["keyName"], :type "object"}, :Resource {:description "Definition of a Resource", :properties {:id {:description "Fully qualified identifier of the resource", :readOnly true, :type "string"}, :name {:description "Name of the resource", :readOnly true, :type "string"}, :type {:description "Type of the resource", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :EventSubscriptionsListResult {:description "Result of the List EventSubscriptions operation", :properties {:value {:description "A collection of EventSubscriptions", :items #:reference{:definitions "EventSubscription"}, :type "array"}}, :type "object"}, :Topic {:allOf [#:reference{:definitions "TrackedResource"}], :description "EventGrid Topic", :properties {:properties #:reference{:definitions "TopicProperties"}}, :type "object"}, :OperationsListResult {:description "Result of the List Operations operation", :properties {:value {:description "A collection of operations", :items #:reference{:definitions "Operation"}, :type "array"}}, :type "object"}}}