{:scheme "https", :host "adminmanagement.local.azurestack.external", :info {:description "The Admin Storage Management Client.", :title "StorageManagementClient", :version "2015-12-01-preview"}, :ops {:Containers_MigrationStatus {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/shares/operationresults/{operationId}", :description "Returns the status of a container migration job.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Operation Id.", :in "path", :name "operationId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :Containers_CancelMigration {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/shares/operationresults/{operationId}", :description "Cancel a container migration job.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Operation Id.", :in "path", :name "operationId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :Containers_List {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/shares/{shareName}/containers", :description "Returns the list of containers which can be migrated in the specified share.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Share name.", :in "path", :name "shareName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "MigrationIntentParameter"} #:reference{:parameters "MaxCountParameter"} #:reference{:parameters "StartIndexParameter"}], :verb :get}, :Containers_ListDestinationShares {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/shares/{shareName}/destinationshares", :description "Returns a list of destination shares that the system considers as best candidates for migration.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Share name.", :in "path", :name "shareName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :Containers_Migrate {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/shares/{shareName}/migrate", :description "Starts a container migration job to migrate containers to the specified destination share.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Share name.", :in "path", :name "shareName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "MigrationParameterParameter"}], :verb :post}}, :parameters {:MaxCountParameter {:description "The maximum number of containers.", :format "int32", :in "query", :name "MaxCount", :required false, :type "integer", :x-ms-parameter-location "method"}, :MigrationIntentParameter {:description "The container migration intent.", :in "query", :name "Intent", :required true, :type "string", :x-ms-parameter-location "method"}, :MigrationParameterParameter {:description "The parameters of container migration job.", :in "body", :name "migrationParameters", :required true, :schema #:reference{:definitions "MigrationParameters"}, :x-ms-parameter-location "method"}, :StartIndexParameter {:description "The starting index the resource provider uses.", :format "int32", :in "query", :name "StartIndex", :required false, :type "integer", :x-ms-parameter-location "method"}}, :definitions {:Container {:description "Container properties.", :properties {:accountid {:description "The ID of the storage account.", :readOnly true, :type "string"}, :accountname {:description "The name of storage account where the container locates.", :readOnly true, :type "string"}, :containerState {:description "The current state of the container.", :readOnly true, :type "string"}, :containerid {:description "The container ID.", :format "int64", :readOnly true, :type "integer"}, :containername {:description "Container name.", :readOnly true, :type "string"}, :sharename {:description "The name of the share where the container locates.", :readOnly true, :type "string"}, :usedBytesInPrimaryVolume {:description "The used space, in bytes, of the container in the primary volume.", :format "int64", :readOnly true, :type "integer"}}, :type "object"}, :ContainerList {:description "List of containers.", :items #:reference{:definitions "Container"}, :type "array"}, :MigrationParameters {:description "Parameters of container migration job.", :properties {:containerName {:description "The name of the container to be migrated.", :type "string"}, :destinationShareUncPath {:description "The UNC path of the destination share for migration.", :type "string"}, :storageAccountName {:description "The name of the storage account where the container locates.", :type "string"}}, :required ["storageAccountName" "containerName" "destinationShareUncPath"], :type "object"}, :MigrationResult {:description "The result of the container migration.", :properties {:destinationShareName {:description "The name of the destination storage share.", :readOnly true, :type "string"}, :migrationStatus #:reference{:definitions "MigrationState"}, :storageAccountName {:description "The storage account name.", :readOnly true, :type "string"}, :sourceShareName {:description "The name of the source storage share.", :readOnly true, :type "string"}, :subEntitiesCompleted {:description "The number of entities which have been migrated.", :format "int64", :readOnly true, :type "integer"}, :failureReason {:description "The migration failure reason.", :readOnly true, :type "string"}, :jobId {:description "The migration job ID.", :readOnly true, :type "string"}, :subEntitiesFailed {:description "The number of entities which failed in migration.", :format "int64", :readOnly true, :type "integer"}, :containerName {:description "The name of the container to be migrated.", :readOnly true, :type "string"}}, :type "object"}, :MigrationState {:enum ["Active" "Paused" "Deleted" "Rollback" "Complete" "Canceled" "Failed" "All"], :type "string", :x-ms-enum {:modelAsString true, :name "MigrationState"}}}}