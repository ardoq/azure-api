{:scheme "https", :host "management.azure.com", :info {:description "Azure Service Fabric Resource Provider API Client", :title "ServiceFabricManagementClient", :version "2017-07-01-preview"}, :ops {:Clusters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Get cluster resource\n", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Delete cluster resource\n", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :delete}, :ClusterVersions_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions", :description "List cluster code versions by location\n", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Update cluster configuration\n", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} {:description "The parameters which contains the property value and property name which used to update the cluster configuration.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ClusterUpdateParameters"}, :x-ms-parameter-location "method"}], :verb :patch}, :Clusters_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters", :description "List cluster resource\n", :parameters [#:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :ClusterVersions_Get {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}", :description "Get cluster code versions by location\n", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} #:reference{:parameters "clusterVersion"}], :verb :get}, :ClusterVersions_ListByEnvironment {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions", :description "List cluster code versions by environment\n", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "environment"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters", :description "List cluster resource by resource group\n", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"}], :verb :get}, :Clusters_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}", :description "Create cluster resource\n", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "clusterNameParameter"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} {:description "The cluster resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Cluster"}, :x-ms-parameter-location "method"}], :verb :put}, :ClusterVersions_GetByEnvironment {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}", :description "Get cluster code versions by environment\n", :parameters [#:reference{:parameters "locationForClusterCodeVersions"} #:reference{:parameters "environment"} #:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} #:reference{:parameters "clusterVersion"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.ServiceFabric/operations", :description "", :parameters [{:description "The version of the ServiceFabric resource provider api", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}}, :parameters {:applicationName {:description "The name of the application resource.", :in "path", :name "applicationName", :required true, :type "string", :x-ms-parameter-location "method"}, :api-version {:description "The version of the API.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "method"}, :applicationTypeName {:description "The name of the application type name resource", :in "path", :name "applicationTypeName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :clusterVersion {:description "The cluster code version", :in "path", :name "clusterVersion", :required true, :type "string", :x-ms-parameter-location "method"}, :environment {:description "Cluster operating system, the default means all", :enum ["Windows" "Linux"], :in "path", :name "environment", :required true, :type "string", :x-ms-parameter-location "method"}, :serviceName {:description "The name of the service resource in the format of {applicationName}~{serviceName}.", :in "path", :name "serviceName", :required true, :type "string", :x-ms-parameter-location "method"}, :version {:description "The application type version.", :in "path", :name "version", :required true, :type "string", :x-ms-parameter-location "method"}, :clusterNameParameter {:description "The name of the cluster resource", :in "path", :name "clusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :locationForClusterCodeVersions {:description "The location for the cluster code versions, this is different from cluster location", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionId {:description "The customer subscription identifier", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:PartitionScheme {:description "Enumerates the ways that a service can be partitioned. Possible values are:\n\n- Invalid - Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.\n- Singleton - Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.\n- UniformInt64Range - Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.\n- Named - Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3\n", :enum ["Invalid" "Singleton" "UniformInt64Range" "Named"], :type "string"}, :DiagnosticsStorageAccountConfig {:description "The storage account information for storing Service Fabric diagnostic logs.", :properties {:blobEndpoint {:description "The blob endpoint of the azure storage account.", :type "string"}, :protectedAccountKeyName {:description "The protected diagnostics storage key name.", :type "string"}, :queueEndpoint {:description "The queue endpoint of the azure storage account.", :type "string"}, :storageAccountName {:description "The Azure storage account name.", :type "string"}, :tableEndpoint {:description "The table endpoint of the azure storage account.", :type "string"}}, :required ["blobEndpoint" "protectedAccountKeyName" "queueEndpoint" "storageAccountName" "tableEndpoint"]}, :ForceRestart {:default false, :description "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).", :type "boolean"}, :PartitionSchemeDescription {:description "Describes how the service is partitioned.", :discriminator "PartitionScheme", :properties {:PartitionScheme #:reference{:definitions "PartitionScheme"}}, :required ["PartitionScheme"], :type "object"}, :AzureActiveDirectory {:description "The settings to enable AAD authentication on the cluster.", :properties {:clientApplication {:description "Azure active directory client application id.", :type "string"}, :clusterApplication {:description "Azure active directory cluster application id.", :type "string"}, :tenantId {:description "Azure active directory tenant id.", :type "string"}}}, :VersionResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "A version resource for the specified application type name.", :properties {:properties #:reference{:definitions "VersionProperties"}}}, :OperationListResult {:description "Describes the result of the request to list Service Fabric operations.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.", :items #:reference{:definitions "OperationResult"}, :type "array"}}}, :AddOnFeatures {:description "Available cluster add-on features", :enum ["RepairManager" "DnsService" "BackupRestoreService"], :type "string"}, :ServiceKind {:description "The kind of service (Stateless or Stateful). Following are the possible values.\n\n- Invalid - Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.\n- Stateless - Does not use Service Fabric to make its state highly available or reliable. The value is 1.\n- Stateful - Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.\n", :enum ["Invalid" "Stateless" "Stateful"], :type "string"}, :ServiceUpdateProperties {:allOf [#:reference{:definitions "ServicePropertiesBase"}], :description "The service resource properties for patch operations.", :discriminator "serviceKind", :properties {:serviceKind #:reference{:definitions "ServiceKind"}}, :required ["serviceKind"]}, :ClientCertificateThumbprint {:description "Describes the client certificate details using thumbprint.", :properties {:certificateThumbprint {:description "The thumbprint of the client certificate.", :type "string"}, :isAdmin {:description "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.", :type "boolean"}}, :required ["certificateThumbprint" "isAdmin"]}, :ClusterUpdateParameters {:description "Cluster update request", :properties {:properties #:reference{:definitions "ClusterPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "Cluster update parameters", :type "object"}}}, :ServicePlacementPolicyDescription {:description "Describes the policy to be used for placement of a Service Fabric service.", :discriminator "Type", :properties {:Type #:reference{:definitions "ServicePlacementPolicyType"}}, :required ["Type"], :type "object"}, :MoveCost {:description "Specifies the move cost for the service. Possible values are the following.\n\n  - Zero - Zero move cost. This value is zero.\n  - Low - Specifies the move cost of the service as Low. The value is 1.\n  - Medium - Specifies the move cost of the service as Medium. The value is 2.\n  - High - Specifies the move cost of the service as High. The value is 3.\n", :enum ["Zero" "Low" "Medium" "High"], :type "string"}, :ApplicationTypeName {:description "The application type name as defined in the application manifest.", :type "string"}, :ApplicationParameterList {:description "List of application parameters with overridden values from their default values specified in the application manifest.", :items #:reference{:definitions "ApplicationParameter"}, :type "array"}, :ClusterCodeVersionsListResult {:description "The list results of the ServiceFabric runtime versions.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:items #:reference{:definitions "ClusterCodeVersionsResult"}, :type "array"}}}, :ServiceLoadMetricDescription {:description "Specifies a metric to load balance a service during runtime.", :properties {:DefaultLoad {:description "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.", :type "integer"}, :Name {:description "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.", :type "string"}, :PrimaryDefaultLoad {:description "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.", :type "integer"}, :SecondaryDefaultLoad {:description "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.", :type "integer"}, :Weight #:reference{:definitions "ServiceLoadMetricWeight"}}, :required ["Name"], :type "object"}, :RollingUpgradeMonitoringPolicy {:description "The policy used for monitoring the application upgrade", :properties {:healthCheckRetryTimeout #:reference{:definitions "HealthCheckRetryTimeout"}, :healthCheckStableDuration #:reference{:definitions "HealthCheckStableDuration"}, :healthCheckWaitDuration #:reference{:definitions "HealthCheckWaitDuration"}, :upgradeDomainTimeout #:reference{:definitions "UpgradeDomainTimeout"}, :upgradeTimeout #:reference{:definitions "UpgradeTimeout"}}}, :ServiceLoadMetricWeight {:description "Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight. Possible values are following.\n\n  - Zero - Disables resource balancing for this metric. This value is zero.\n  - Low - Specifies the metric weight of the service load as Low. The value is 1.\n  - Medium - Specifies the metric weight of the service load as Medium. The value is 2.\n  - High - Specifies the metric weight of the service load as High. The value is 3.\n", :enum ["Zero" "Low" "Medium" "High"], :type "string"}, :StatefulServiceUpdateProperties {:allOf [#:reference{:definitions "ServiceUpdateProperties"}], :description "The properties of a stateful service resource for patch operations.", :properties {:minReplicaSetSize {:description "The minimum replica set size as a number.", :minimum 1, :type "integer"}, :quorumLossWaitDuration {:description "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :replicaRestartWaitDuration {:description "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :standByReplicaKeepDuration {:description "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :targetReplicaSetSize {:description "The target replica set size as a number.", :minimum 1, :type "integer"}}, :x-ms-discriminator-value "Stateful"}, :HealthCheckWaitDuration {:default "0", :description "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.", :type "string"}, :ApplicationTypeParameterList {:description "List of application type parameters that can be overridden when creating or updating the application.", :items #:reference{:definitions "ApplicationParameter"}, :type "array"}, :ServiceTypeHealthPolicy {:description "Represents the health policy used to evaluate the health of services belonging to a service type.\n", :properties {:MaxPercentUnhealthyPartitionsPerService {:default 0, :description "The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.\n", :type "integer"}, :MaxPercentUnhealthyReplicasPerPartition {:default 0, :description "The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.\n", :type "integer"}, :MaxPercentUnhealthyServices {:default 0, :description "The maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.\n", :type "integer"}}, :type "object"}, :ApplicationTypeProperties {:description "The application type name properties", :properties {:provisioningState {:description "The current deployment or provisioning state, which only appears in the response.", :readOnly true, :type "string"}}}, :ApplicationResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "The application resource.", :properties {:properties #:reference{:definitions "ApplicationProperties"}}}, :ServiceResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "The service resource.", :properties {:properties #:reference{:definitions "ServiceProperties"}}}, :ServiceResourceUpdate {:allOf [#:reference{:definitions "ProxyResource"}], :description "The service resource for patch operations.", :properties {:properties #:reference{:definitions "ServiceUpdateProperties"}}}, :ServiceResourceList {:description "The list of service resources.", :properties {:value {:items #:reference{:definitions "ServiceResource"}, :type "array"}}}, :ReliabilityLevel {:description "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n", :enum ["None" "Bronze" "Silver" "Gold" "Platinum"], :type "string"}, :UpgradeMode {:description "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n\n  - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.\n  - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.\n", :enum ["Automatic" "Manual"], :type "string"}, :SettingsParameterDescription {:description "Describes a parameter in fabric settings of the cluster.", :properties {:name {:description "The parameter name of fabric setting.", :type "string"}, :value {:description "The parameter value of fabric setting.", :type "string"}}, :required ["name" "value"]}, :ClusterState {:description "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n", :enum ["WaitingForNodes" "Deploying" "BaselineUpgrade" "UpdatingUserConfiguration" "UpdatingUserCertificate" "UpdatingInfrastructure" "EnforcingClusterVersion" "UpgradeServiceUnreachable" "AutoScale" "Ready"], :type "string"}, :ApplicationResourceUpdate {:allOf [#:reference{:definitions "ProxyResource"}], :description "The application resource for patch operations.", :properties {:properties #:reference{:definitions "ApplicationUpdateProperties"}}}, :ClusterUpgradeDeltaHealthPolicy {:description "Describes the delta health policies for the cluster upgrade.", :properties {:maxPercentDeltaUnhealthyApplications {:description "The maximum allowed percentage of applications health degradation allowed during cluster upgrades. The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.", :maximum 100, :minimum 0, :type "integer"}, :maxPercentDeltaUnhealthyNodes {:description "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.", :maximum 100, :minimum 0, :type "integer"}, :maxPercentUpgradeDomainDeltaUnhealthyNodes {:description "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. ", :maximum 100, :minimum 0, :type "integer"}}, :required ["maxPercentDeltaUnhealthyApplications" "maxPercentDeltaUnhealthyNodes" "maxPercentUpgradeDomainDeltaUnhealthyNodes"]}, :ErrorModel {:description "The error details.", :properties {:code {:description "The error code.", :type "string"}, :message {:description "The error message.", :type "string"}}}, :ClusterUpgradePolicy {:description "Describes the policy used when upgrading the cluster.", :properties {:healthCheckStableDuration {:description "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}, :upgradeDomainTimeout {:description "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}, :upgradeTimeout {:description "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}, :upgradeReplicaSetCheckTimeout {:description "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}, :healthPolicy #:reference{:definitions "ClusterHealthPolicy"}, :deltaHealthPolicy #:reference{:definitions "ClusterUpgradeDeltaHealthPolicy"}, :healthCheckRetryTimeout {:description "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}, :forceRestart {:description "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).", :type "boolean"}, :healthCheckWaitDuration {:description "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.", :type "string"}}, :required ["healthCheckRetryTimeout" "healthCheckStableDuration" "healthCheckWaitDuration" "healthPolicy" "upgradeDomainTimeout" "upgradeReplicaSetCheckTimeout" "upgradeTimeout"]}, :ApplicationTypeResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "The application type name resource", :properties {:properties #:reference{:definitions "ApplicationTypeProperties"}}}, :ApplicationMetricDescription {:description "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n", :properties {:MaximumCapacity {:description "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n", :format "int64", :type "integer"}, :Name {:description "The name of the metric.", :type "string"}, :ReservationCapacity {:description "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n", :format "int64", :type "integer"}, :TotalApplicationCapacity {:description "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n", :format "int64", :type "integer"}}, :type "object"}, :ApplicationParameter {:description "Describes an application parameter override to be applied when creating or upgrading an application.", :properties {:Key {:description "The name of the parameter.", :type "string"}, :Value {:description "The value of the parameter.", :type "string"}}, :required ["Key" "Value"], :type "object"}, :ApplicationHealthPolicy {:description "Defines a health policy used to evaluate the health of an application or one of its children entities.\n", :properties {:ConsiderWarningAsError {:default false, :description "Indicates whether warnings are treated with the same severity as errors.", :type "boolean"}, :DefaultServiceTypeHealthPolicy #:reference{:definitions "ServiceTypeHealthPolicy"}, :MaxPercentUnhealthyDeployedApplications {:default 0, :description "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n", :type "integer"}, :ServiceTypeHealthPolicyMap #:reference{:definitions "ServiceTypeHealthPolicyMap"}}, :type "object"}, :CorrelationSchemeList {:description "A list that describes the correlation of the service with other services.", :items #:reference{:definitions "ServiceCorrelationDescription"}, :type "array"}, :ServiceProperties {:allOf [#:reference{:definitions "ServicePropertiesBase"}], :description "The service resource properties.", :discriminator "serviceKind", :properties {:partitionDescription #:reference{:definitions "PartitionSchemeDescription"}, :provisioningState {:description "The current deployment or provisioning state, which only appears in the response", :readOnly true, :type "string"}, :serviceKind #:reference{:definitions "ServiceKind"}, :serviceTypeName {:description "The name of the service type", :type "string"}}, :required ["serviceKind"]}, :ApplicationTypeResourceList {:description "The list of application type names.", :properties {:value {:items #:reference{:definitions "ApplicationTypeResource"}, :type "array"}}}, :ServicePropertiesBase {:description "The common service resource properties.", :properties {:correlationScheme #:reference{:definitions "CorrelationSchemeList"}, :defaultMoveCost #:reference{:definitions "MoveCost"}, :placementConstraints {:description "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\".", :type "string"}, :serviceLoadMetrics #:reference{:definitions "ServiceLoadMetricsList"}, :servicePlacementPolicies #:reference{:definitions "ServicePlacementPoliciesList"}}}, :ClusterListResult {:description "Cluster list results", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:items #:reference{:definitions "Cluster"}, :type "array"}}}, :ServiceTypeHealthPolicyMap {:description "Defines a ServiceTypeHealthPolicy per service type name.\n\nThe entries in the map replace the default service type health policy for each specified service type. For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently. With policy per service type, there's more granular control of the health of the service.\n\nIf no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.\n", :items #:reference{:definitions "ServiceTypeHealthPolicyMapItem"}, :type "array"}, :ApplicationUpdateProperties {:description "The application resource properties for patch operations.", :properties {:maximumNodes {:default 0, :description "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.", :format "int64", :minimum 0, :type "integer"}, :metrics #:reference{:definitions "ApplicationMetricDescriptionList"}, :minimumNodes {:description "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.", :format "int64", :minimum 0, :type "integer"}, :parameters #:reference{:definitions "ApplicationParameterList"}, :removeApplicationCapacity {:description "The version of the application type", :type "boolean"}, :typeVersion #:reference{:definitions "ApplicationTypeVersion"}, :upgradePolicy #:reference{:definitions "ApplicationUpgradePolicy"}}}, :ApplicationMetricDescriptionList {:description "List of application capacity metric description.", :items #:reference{:definitions "ApplicationMetricDescription"}, :type "array"}, :ServiceTypeHealthPolicyMapItem {:description "Defines an item in ServiceTypeHealthPolicyMap.\n", :properties {:Key {:description "The key of the service type health policy map item. This is the name of the service type.", :type "string"}, :Value #:reference{:definitions "ServiceTypeHealthPolicy"}}, :required ["Key" "Value"], :type "object"}, :HealthCheckRetryTimeout {:default "PT0H10M0S", :description "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.", :type "string"}, :ClusterCodeVersionsResult {:description "The result of the ServiceFabric runtime versions", :properties {:id {:description "The identification of the result", :type "string"}, :name {:description "The name of the result", :type "string"}, :properties #:reference{:definitions "ClusterVersionDetails"}, :type {:description "The result resource type", :type "string"}}}, :StatelessServiceProperties {:allOf [#:reference{:definitions "ServiceProperties"}], :description "The properties of a stateless service resource.", :properties {:instanceCount {:description "The instance count.", :minimum -1, :type "integer"}}, :x-ms-discriminator-value "Stateless"}, :CertificateDescription {:description "Describes the certificate details.", :properties {:thumbprint {:description "Thumbprint of the primary certificate.", :type "string"}, :thumbprintSecondary {:description "Thumbprint of the secondary certificate.", :type "string"}, :x509StoreName {:description "The local certificate store location.", :enum ["AddressBook" "AuthRoot" "CertificateAuthority" "Disallowed" "My" "Root" "TrustedPeople" "TrustedPublisher"], :type "string"}}, :required ["thumbprint"]}, :StatelessServiceUpdateProperties {:allOf [#:reference{:definitions "ServiceUpdateProperties"}], :description "The properties of a stateless service resource for patch operations.", :properties {:instanceCount {:description "The instance count.", :minimum -1, :type "integer"}}, :x-ms-discriminator-value "Stateless"}, :EndpointRangeDescription {:description "Port range details", :properties {:endPort {:description "End port of a range of ports", :type "integer"}, :startPort {:description "Starting port of a range of ports", :type "integer"}}, :required ["endPort" "startPort"]}, :ServiceCorrelationScheme {:description "The service correlation scheme. Possible values are following.\n\n  - Invalid - An invalid correlation scheme. Cannot be used. The value is zero.\n  - Affinity - Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.\n  - AlignedAffinity - Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.\n  - NonAlignedAffinity - Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.\n", :enum ["Invalid" "Affinity" "AlignedAffinity" "NonAlignedAffinity"], :type "string"}, :ApplicationTypeVersion {:description "The version of the application type as defined in the application manifest.", :type "string"}, :OperationResult {:description "Available operation list result", :properties {:display #:reference{:definitions "AvailableOperationDisplay"}, :name {:description "The name of the operation.", :type "string"}, :nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :origin {:description "Origin result", :type "string"}}}, :NodeTypeDescription {:description "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.", :properties {:vmInstanceCount {:description "The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource.", :maximum 2147483647, :minimum 1, :type "integer"}, :httpGatewayEndpointPort {:description "The HTTP cluster management endpoint port.", :type "integer"}, :reverseProxyEndpointPort {:description "The endpoint used by reverse proxy.", :type "integer"}, :isPrimary {:description "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.", :type "boolean"}, :name {:description "The name of the node type.", :type "string"}, :applicationPorts #:reference{:definitions "EndpointRangeDescription"}, :durabilityLevel #:reference{:definitions "DurabilityLevel"}, :ephemeralPorts #:reference{:definitions "EndpointRangeDescription"}, :capacities {:additionalProperties {:description "Capacity tag value", :type "string"}, :description "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.", :type "object"}, :placementProperties {:additionalProperties {:description "Placement tag value", :type "string"}, :description "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.", :type "object"}, :clientConnectionEndpointPort {:description "The TCP cluster management endpoint port.", :type "integer"}}, :required ["clientConnectionEndpointPort" "httpGatewayEndpointPort" "isPrimary" "name" "vmInstanceCount"]}, :ServicePlacementPoliciesList {:description "A list that describes the correlation of the service with other services.", :items #:reference{:definitions "ServicePlacementPolicyDescription"}, :type "array"}, :Cluster {:allOf [{:description "The cluster resource properties"} #:reference{:definitions "Resource"} {:properties {:properties #:reference{:definitions "ClusterProperties"}}, :type "object"}], :description "The cluster resource\n", :type "object"}, :UpgradeReplicaSetCheckTimeout {:default 42949672925, :description "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).", :format "int64", :type "integer"}, :ClusterHealthPolicy {:description "Defines a health policy used to evaluate the health of the cluster or of a cluster node.", :properties {:maxPercentUnhealthyApplications {:description "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. ", :maximum 100, :minimum 0, :type "integer"}, :maxPercentUnhealthyNodes {:description "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. ", :maximum 100, :minimum 0, :type "integer"}}}, :ClusterPropertiesUpdateParameters {:description "Describes the cluster resource properties that can be updated during PATCH operation.", :properties {:fabricSettings {:description "The list of custom fabric settings to configure the cluster. This will overwrite the existing list.", :items #:reference{:definitions "SettingsSectionDescription"}, :type "array"}, :clientCertificateThumbprints {:description "The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.", :items #:reference{:definitions "ClientCertificateThumbprint"}, :type "array"}, :nodeTypes {:description "The list of node types in the cluster. This will overwrite the existing list.", :items #:reference{:definitions "NodeTypeDescription"}, :type "array"}, :clusterCodeVersion {:description "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.", :type "string"}, :reliabilityLevel {:description "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).", :enum ["Bronze" "Silver" "Gold"], :type "string"}, :certificate #:reference{:definitions "CertificateDescription"}, :upgradeMode {:description "The upgrade mode of the cluster. This indicates if the cluster should be automatically upgraded when new Service Fabric runtime version is available.", :enum ["Automatic" "Manual"], :type "string"}, :addOnFeatures {:description "The list of add-on features to enable in the cluster.", :items #:reference{:definitions "AddOnFeatures"}, :type "array"}, :reverseProxyCertificate #:reference{:definitions "CertificateDescription"}, :upgradeDescription #:reference{:definitions "ClusterUpgradePolicy"}, :clientCertificateCommonNames {:description "The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.", :items #:reference{:definitions "ClientCertificateCommonName"}, :type "array"}}}, :AvailableOperationDisplay {:description "Operation supported by Service Fabric resource provider", :properties {:description {:description "Operation description", :type "string"}, :operation {:description "The operation that can be performed.", :type "string"}, :provider {:description "The name of the provider.", :type "string"}, :resource {:description "The resource on which the operation is performed", :type "string"}}}, :ServiceTypeDeltaHealthPolicy {:description "Service health policy\n", :properties {:maxPercentDeltaUnhealthyServices {:description "Maximum percentage of unhealthy services in cluster", :maximum 100, :minimum 0, :type "integer"}}, :type "object"}, :HealthCheckStableDuration {:default "PT0H2M0S", :description "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.", :type "string"}, :ApplicationUpgradePolicy {:description "Describes the policy for a monitored application upgrade.", :properties {:applicationHealthPolicy #:reference{:definitions "ApplicationHealthPolicy"}, :forceRestart #:reference{:definitions "ForceRestart"}, :rollingUpgradeMonitoringPolicy #:reference{:definitions "RollingUpgradeMonitoringPolicy"}, :upgradeReplicaSetCheckTimeout #:reference{:definitions "UpgradeReplicaSetCheckTimeout"}}}, :Resource {:description "The resource model definition.", :properties {:id {:description "Azure resource ID.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Azure resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Azure resource type.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :VersionResourceList {:description "The list of version resources for the specified application type name.", :properties {:value {:items #:reference{:definitions "VersionResource"}, :type "array"}}}, :StatefulServiceProperties {:allOf [#:reference{:definitions "ServiceProperties"}], :description "The properties of a stateful service resource.", :properties {:hasPersistedState {:description "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.", :type "boolean"}, :minReplicaSetSize {:description "The minimum replica set size as a number.", :minimum 1, :type "integer"}, :quorumLossWaitDuration {:description "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :replicaRestartWaitDuration {:description "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :standByReplicaKeepDuration {:description "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).", :format "date-time", :type "string"}, :targetReplicaSetSize {:description "The target replica set size as a number.", :minimum 1, :type "integer"}}, :x-ms-discriminator-value "Stateful"}, :ClusterEnvironment {:description "Cluster operating system, the default will be Windows", :enum ["Windows" "Linux"], :type "string"}, :ClientCertificateCommonName {:description "Describes the client certificate details using common name.", :properties {:certificateCommonName {:description "The common name of the client certificate.", :type "string"}, :certificateIssuerThumbprint {:description "The issuer thumbprint of the client certificate.", :type "string"}, :isAdmin {:description "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.", :type "boolean"}}, :required ["certificateCommonName" "isAdmin" "certificateIssuerThumbprint"]}, :ServiceCorrelationDescription {:description "Creates a particular correlation between services.", :properties {:Scheme #:reference{:definitions "ServiceCorrelationScheme"}, :ServiceName #:reference{:definitions "ServiceName"}}, :required ["Scheme" "ServiceName"], :type "object"}, :ApplicationResourceList {:description "The list of application resources.", :properties {:value {:items #:reference{:definitions "ApplicationResource"}, :type "array"}}}, :ServicePlacementPolicyType {:description "The type of placement policy for a service fabric service. Following are the possible values.\n\n  - Invalid - Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.\n  - InvalidDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.\n  - RequiredDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.\n  - PreferredPrimaryDomain - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.\n  - RequiredDomainDistribution - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.\n  - NonPartiallyPlaceService - Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.\n", :enum ["Invalid" "InvalidDomain" "RequiredDomain" "PreferredPrimaryDomain" "RequiredDomainDistribution" "NonPartiallyPlaceService"], :type "string"}, :UpgradeDomainTimeout {:default "P10675199DT02H48M05.4775807S", :description "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.", :type "string"}, :SettingsSectionDescription {:description "Describes a section in the fabric settings of the cluster.", :properties {:name {:description "The section name of the fabric settings.", :type "string"}, :parameters {:description "The collection of parameters in the section.", :items #:reference{:definitions "SettingsParameterDescription"}, :type "array"}}, :required ["name" "parameters"]}, :UpgradeTimeout {:default "P10675199DT02H48M05.4775807S", :description "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.", :type "string"}, :NamedPartitionSchemeDescription {:allOf [#:reference{:definitions "PartitionSchemeDescription"} {:description "NamedPartitionSchemeDescription", :type "object"}], :description "Describes the named partition scheme of the service.", :properties {:Count {:description "The number of partitions.", :type "integer"}, :Names {:description "Array of size specified by the ‘Count’ parameter, for the names of the partitions.", :items {:type "string"}, :type "array"}}, :required ["Count" "Names"], :x-ms-discriminator-value "Named"}, :ClusterProperties {:description "Describes the cluster resource properties.", :properties {:fabricSettings {:description "The list of custom fabric settings to configure the cluster.", :items #:reference{:definitions "SettingsSectionDescription"}, :type "array"}, :provisioningState {:description "The provisioning state of the cluster resource.", :enum ["Updating" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :clientCertificateThumbprints {:description "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.", :items #:reference{:definitions "ClientCertificateThumbprint"}, :type "array"}, :nodeTypes {:description "The list of node types in the cluster.", :items #:reference{:definitions "NodeTypeDescription"}, :type "array"}, :clusterCodeVersion {:description "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.", :type "string"}, :clusterEndpoint {:description "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.", :readOnly true, :type "string"}, :reliabilityLevel #:reference{:definitions "ReliabilityLevel"}, :azureActiveDirectory #:reference{:definitions "AzureActiveDirectory"}, :clusterId {:description "A service generated unique identifier for the cluster resource.", :readOnly true, :type "string"}, :diagnosticsStorageAccountConfig #:reference{:definitions "DiagnosticsStorageAccountConfig"}, :vmImage {:description "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.", :type "string"}, :managementEndpoint {:description "The http management endpoint of the cluster.", :type "string"}, :certificate #:reference{:definitions "CertificateDescription"}, :upgradeMode #:reference{:definitions "UpgradeMode"}, :addOnFeatures {:description "The list of add-on features to enable in the cluster.", :items #:reference{:definitions "AddOnFeatures"}, :type "array"}, :clusterState #:reference{:definitions "ClusterState"}, :reverseProxyCertificate #:reference{:definitions "CertificateDescription"}, :availableClusterVersions {:description "The Service Fabric runtime versions available for this cluster.", :items #:reference{:definitions "ClusterVersionDetails"}, :type "array"}, :upgradeDescription #:reference{:definitions "ClusterUpgradePolicy"}, :clientCertificateCommonNames {:description "The list of client certificates referenced by common name that are allowed to manage the cluster.", :items #:reference{:definitions "ClientCertificateCommonName"}, :type "array"}}, :required ["managementEndpoint" "nodeTypes"]}, :DurabilityLevel {:description "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 30 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n", :enum ["Bronze" "Silver" "Gold"], :type "string"}, :ServiceLoadMetricsList {:description "The service load metrics is given as an array of ServiceLoadMetricDescription objects.", :items #:reference{:definitions "ServiceLoadMetricDescription"}, :type "array"}, :ApplicationProperties {:allOf [#:reference{:definitions "ApplicationUpdateProperties"}], :description "The application resource properties.", :properties {:provisioningState {:description "The current deployment or provisioning state, which only appears in the response", :readOnly true, :type "string"}, :typeName #:reference{:definitions "ApplicationTypeName"}}}, :UniformInt64RangePartitionSchemeDescription {:allOf [#:reference{:definitions "PartitionSchemeDescription"} {:description "UniformInt64RangePartitionSchemeDescription", :type "object"}], :description "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.", :properties {:Count {:description "The number of partitions.", :type "integer"}, :HighKey {:description "String indicating the upper bound of the partition key range that\nshould be split between the partition ‘Count’\n", :type "string"}, :LowKey {:description "String indicating the lower bound of the partition key range that\nshould be split between the partition ‘Count’\n", :type "string"}}, :required ["Count" "LowKey" "HighKey"], :x-ms-discriminator-value "UniformInt64Range"}, :VersionProperties {:description "The properties of the version resource.", :properties {:appPackageUrl {:description "The URL to the application package", :type "string"}, :defaultParameterList #:reference{:definitions "ApplicationTypeParameterList"}, :provisioningState {:description "The current deployment or provisioning state, which only appears in the response", :readOnly true, :type "string"}}, :required ["appPackageUrl"]}, :SingletonPartitionSchemeDescription {:allOf [#:reference{:definitions "PartitionSchemeDescription"} {:description "SingletonPartitionSchemeDescription", :type "object"}], :description "Describes the partition scheme of a singleton-partitioned, or non-partitioned service.", :x-ms-discriminator-value "Singleton"}, :ProxyResource {:description "The resource model definition for proxy-only resource.", :properties {:id {:description "Azure resource ID.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Azure resource name.", :readOnly true, :type "string"}, :type {:description "Azure resource type.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :ServiceName {:description "The full name of the service with 'fabric:' URI scheme.", :type "string"}, :ClusterVersionDetails {:description "The detail of the Service Fabric runtime version result", :properties {:codeVersion {:description "The Service Fabric runtime version of the cluster.", :type "string"}, :environment #:reference{:definitions "ClusterEnvironment"}, :supportExpiryUtc {:description "The date of expiry of support of the version.", :type "string"}}}}}