{:scheme "https", :host "management.azure.com", :info {:title "ContainerRegistryManagementClient", :version "2019-05-01-preview"}, :ops {:ScopeMaps_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}", :description "Updates a scope map with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ScopeMapNameParameter"} {:description "The parameters for updating a scope map.", :in "body", :name "scopeMapUpdateParameters", :required true, :schema #:reference{:definitions "ScopeMapUpdateParameters"}}], :verb :patch}, :ScopeMaps_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps", :description "Lists all the scope maps for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :ScopeMaps_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}", :description "Creates a scope map for a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ScopeMapNameParameter"} {:description "The parameters for creating a scope map.", :in "body", :name "scopeMapCreateParameters", :required true, :schema #:reference{:definitions "ScopeMap"}}], :verb :put}, :Tokens_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}", :description "Deletes a token from a container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "TokenNameParameter"}], :verb :delete}, :Tokens_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens", :description "Lists all the tokens for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :Registries_GenerateCredentials {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/generateCredentials", :description "Generate keys for a token of a specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} {:description "The parameters for generating credentials.", :in "body", :name "generateCredentialsParameters", :required true, :schema #:reference{:definitions "GenerateCredentialsParameters"}}], :verb :post}, :Tokens_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}", :description "Updates a token with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "TokenNameParameter"} {:description "The parameters for updating a token.", :in "body", :name "tokenUpdateParameters", :required true, :schema #:reference{:definitions "TokenUpdateParameters"}}], :verb :patch}, :ScopeMaps_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}", :description "Gets the properties of the specified scope map.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ScopeMapNameParameter"}], :verb :get}, :Tokens_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}", :description "Creates a token for a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "TokenNameParameter"} {:description "The parameters for creating a token.", :in "body", :name "tokenCreateParameters", :required true, :schema #:reference{:definitions "Token"}}], :verb :put}, :ScopeMaps_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}", :description "Deletes a scope map from a container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ScopeMapNameParameter"}], :verb :delete}, :Tokens_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}", :description "Gets the properties of the specified token.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "TokenNameParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The client API version.", :in "query", :name "api-version", :required true, :type "string"}, :RegistryNameParameter {:description "The name of the container registry.", :name "registryName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :ResourceGroupParameter {:description "The name of the resource group to which the container registry belongs.", :in "path", :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :ScopeMapNameParameter {:description "The name of the scope map.", :name "scopeMapName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9-_]*$"}, :SubscriptionIdParameter {:description "The Microsoft Azure subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}, :TokenNameParameter {:description "The name of the token.", :name "tokenName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9-]*$"}}, :definitions {:ScopeMapUpdateParameters {:description "The properties for updating the scope map.", :properties {:properties #:reference{:definitions "ScopeMapPropertiesUpdateParameters"}}, :type "object"}, :TokenUpdateProperties {:description "The parameters for updating token properties.", :properties {:credentials #:reference{:definitions "TokenCredentialsProperties"}, :scopeMapId {:description "The resource ID of the scope map to which the token will be associated with.", :type "string"}, :status {:description "The status of the token example enabled or disabled.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenStatus"}}}, :type "object"}, :Token {:allOf [#:reference{:definitions "ProxyResource"}], :description "An object that represents a token for a container registry.", :properties {:properties #:reference{:definitions "TokenProperties"}}, :type "object"}, :TokenPassword {:description "The password that will be used for authenticating the token of a container registry.", :properties {:creationTime {:description "The creation datetime of the password.", :format "date-time", :type "string"}, :expiry {:description "The expiry datetime of the password.", :format "date-time", :type "string"}, :name {:description "The password name \"password1\" or \"password2\"", :enum ["password1" "password2"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenPasswordName"}}, :value {:description "The password value.", :readOnly true, :type "string"}}, :type "object"}, :TokenCertificate {:description "The properties of a certificate used for authenticating a token.", :properties {:encodedPemCertificate {:description "Base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token.", :type "string"}, :expiry {:description "The expiry datetime of the certificate.", :format "date-time", :type "string"}, :name {:enum ["certificate1" "certificate2"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenCertificateName"}}, :thumbprint {:description "The thumbprint of the certificate.", :type "string"}}, :type "object"}, :ScopeMapProperties {:description "The properties of a scope map.", :properties {:actions {:description "The list of scoped permissions for registry artifacts.\r\nE.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write", :items {:type "string"}, :type "array"}, :creationDate {:description "The creation date of scope map.", :format "date-time", :readOnly true, :type "string"}, :description {:description "The user friendly description of the scope map.", :type "string"}, :provisioningState {:description "Provisioning state of the resource.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :type {:description "The type of the scope map. E.g. BuildIn scope map.", :readOnly true, :type "string"}}, :required ["actions"], :type "object"}, :TokenListResult {:description "The result of a request to list tokens for a container registry.", :properties {:nextLink {:description "The URI that can be used to request the next list of tokens.", :type "string"}, :value {:description "The list of tokens. Since this list may be incomplete, the nextLink field should be used to request the next list of tokens.", :items #:reference{:definitions "Token"}, :type "array"}}, :type "object"}, :GenerateCredentialsResult {:description "The response from the GenerateCredentials operation.", :properties {:passwords {:description "The list of passwords for a container registry.", :items #:reference{:definitions "TokenPassword"}, :type "array"}, :username {:description "The username for a container registry.", :type "string"}}, :type "object"}, :TokenUpdateParameters {:description "The parameters for updating a token.", :properties {:properties #:reference{:definitions "TokenUpdateProperties"}}, :type "object"}, :ScopeMap {:allOf [#:reference{:definitions "ProxyResource"}], :description "An object that represents a scope map for a container registry.", :properties {:properties #:reference{:definitions "ScopeMapProperties"}}, :type "object"}, :ScopeMapListResult {:description "The result of a request to list scope maps for a container registry.", :properties {:nextLink {:description "The URI that can be used to request the next list of scope maps.", :type "string"}, :value {:description "The list of scope maps. Since this list may be incomplete, the nextLink field should be used to request the next list of scope maps.", :items #:reference{:definitions "ScopeMap"}, :type "array"}}, :type "object"}, :GenerateCredentialsParameters {:description "The parameters used to generate credentials for a specified token or user of a container registry.", :properties {:expiry {:description "The expiry date of the generated credentials after which the credentials become invalid.", :format "date-time", :type "string"}, :name {:description "Specifies name of the password which should be regenerated if any -- password1 or password2.", :enum ["password1" "password2"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenPasswordName"}}, :tokenId {:description "The resource ID of the token for which credentials have to be generated.", :type "string"}}, :type "object"}, :ScopeMapPropertiesUpdateParameters {:description "The update parameters for scope map properties.", :properties {:actions {:description "The list of scope permissions for registry artifacts.\r\nE.g. repositories/repository-name/pull, \r\nrepositories/repository-name/delete", :items {:type "string"}, :type "array"}, :description {:description "The user friendly description of the scope map.", :type "string"}}, :type "object"}, :TokenCredentialsProperties {:description "The properties of the credentials that can be used for authenticating the token.", :properties {:certificates {:items #:reference{:definitions "TokenCertificate"}, :type "array"}, :passwords {:items #:reference{:definitions "TokenPassword"}, :type "array"}}, :type "object"}, :ProxyResource {:description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :TokenProperties {:description "The properties of a token.", :properties {:creationDate {:description "The creation date of scope map.", :format "date-time", :readOnly true, :type "string"}, :credentials #:reference{:definitions "TokenCredentialsProperties"}, :objectId {:description "The user/group/application object ID for which the token has to be created.", :type "string"}, :provisioningState {:description "Provisioning state of the resource.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :scopeMapId {:description "The resource ID of the scope map to which the token will be associated with.", :type "string"}, :status {:description "The status of the token example enabled or disabled.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenStatus"}}}, :type "object"}}}