{:scheme "https", :host "management.azure.com", :info {:description "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.", :title "SqlManagementClient", :version "2019-06-01-preview"}, :ops {:Databases_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases", :description "Gets a list of databases.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}", :description "Deletes the database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Databases_Pause {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause", :description "Pauses a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database to be paused.", :in "path", :name "databaseName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Databases_ListByElasticPool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases", :description "Gets a list of databases in an elastic pool.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the elastic pool.", :in "path", :name "elasticPoolName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_ListInaccessibleByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/inaccessibleDatabases", :description "Gets a list of inaccessible databases in a logical server", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_UpgradeDataWarehouse {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/upgradeDataWarehouse", :description "Upgrades a data warehouse.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database to be upgraded.", :in "path", :name "databaseName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Databases_Resume {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume", :description "Resumes a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database to be resumed.", :in "path", :name "databaseName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Databases_Rename {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/move", :description "Renames a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database to rename.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The resource move definition for renaming this database.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ResourceMoveDefinition"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Databases_Failover {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/failover", :description "Failovers a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the database to failover.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The type of replica to be failed over.", :enum ["Primary" "ReadableSecondary"], :in "query", :name "replicaType", :required false, :type "string", :x-ms-enum {:modelAsString true, :name "ReplicaType"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Databases_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}", :description "Gets a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}", :description "Updates an existing database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The requested database resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DatabaseUpdate"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :Databases_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}", :description "Creates a new database or updates an existing database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The requested database resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Database"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :put}}, :parameters {:DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}, :ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineInstanceNameParameter {:description "The name of the SqlVirtualMachineInstance.", :in "path", :name "sqlVirtualMachineInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineContainerNameParameter {:description "The name of the SqlVirtualMachineContainer.", :in "path", :name "sqlVirtualMachineContainerName", :required true, :type "string", :x-ms-parameter-location "method"}, :ManagedInstanceNameParameter {:description "The name of the managed instance.", :in "path", :name "managedInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :VirtualClusterNameParameter {:description "The name of the virtual cluster.", :in "path", :name "virtualClusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :BlobAuditingPolicyNameParameter {:description "The name of the blob auditing policy.", :enum ["default"], :in "path", :name "blobAuditingPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:Database {:allOf [#:reference{:definitions "TrackedResource"}], :description "A database resource.", :properties {:kind {:description "Kind of database. This is metadata used for the Azure portal experience.", :readOnly true, :type "string"}, :managedBy {:description "Resource that manages the database.", :readOnly true, :type "string"}, :properties #:reference{:definitions "DatabaseProperties"}, :sku #:reference{:definitions "Sku"}}, :required ["location"], :type "object"}, :DatabaseListResult {:description "A list of databases.", :properties {:nextLink {:description "Link to retrieve next page of results.", :readOnly true, :type "string"}, :value {:description "Array of results.", :items #:reference{:definitions "Database"}, :readOnly true, :type "array"}}, :type "object"}, :DatabaseProperties {:description "The database's properties.", :properties {:defaultSecondaryLocation {:description "The default secondary region for this database.", :readOnly true, :type "string"}, :licenseType {:description "The license type to apply for this database.", :enum ["LicenseIncluded" "BasePrice"], :type "string", :x-ms-enum {:modelAsString true, :name "DatabaseLicenseType"}}, :sourceDatabaseId {:description "The resource identifier of the source database associated with create operation of this database.", :type "string", :x-ms-mutability ["create"]}, :minCapacity {:description "Minimal capacity that database will always have allocated, if not paused", :format "double", :type "number"}, :recoveryServicesRecoveryPointId {:description "The resource identifier of the recovery point associated with create operation of this database.", :type "string", :x-ms-mutability ["create"]}, :autoPauseDelay {:description "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled", :format "int32", :type "integer"}, :pausedDate {:description "The date when database was paused by user configuration or action(ISO8601 format). Null if the database is ready.", :format "date-time", :readOnly true, :type "string"}, :readScale {:description "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "DatabaseReadScale"}, :x-ms-mutability ["read" "update"]}, :recoverableDatabaseId {:description "The resource identifier of the recoverable database associated with create operation of this database.", :type "string", :x-ms-mutability ["create"]}, :collation {:description "The collation of the database.", :type "string", :x-ms-mutability ["read" "create"]}, :requestedServiceObjectiveName {:description "The requested service level objective name of the database.", :readOnly true, :type "string"}, :longTermRetentionBackupResourceId {:description "The resource identifier of the long term retention backup associated with create operation of this database.", :type "string", :x-ms-mutability ["create"]}, :maxLogSizeBytes {:description "The max log size for this database.", :format "int64", :readOnly true, :type "integer"}, :failoverGroupId {:description "Failover Group resource identifier that this database belongs to.", :readOnly true, :type "string"}, :storageAccountType {:description "The storage account type used to store backups for this database. Currently the only supported option is GRS (GeoRedundantStorage).", :enum ["GRS" "LRS" "ZRS"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountType"}}, :elasticPoolId {:description "The resource identifier of the elastic pool containing this database.", :type "string"}, :earliestRestoreDate {:description "This records the earliest start date and time that restore is available for this database (ISO8601 format).", :format "date-time", :readOnly true, :type "string"}, :status {:description "The status of the database.", :enum ["Online" "Restoring" "RecoveryPending" "Recovering" "Suspect" "Offline" "Standby" "Shutdown" "EmergencyMode" "AutoClosed" "Copying" "Creating" "Inaccessible" "OfflineSecondary" "Pausing" "Paused" "Resuming" "Scaling" "OfflineChangingDwPerformanceTiers" "OnlineChangingDwPerformanceTiers" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "DatabaseStatus"}}, :restorePointInTime {:description "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.", :format "date-time", :type "string", :x-ms-mutability ["create"]}, :currentSku #:reference{:definitions "Sku"}, :zoneRedundant {:description "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.", :type "boolean"}, :catalogCollation {:description "Collation of the metadata catalog.", :enum ["DATABASE_DEFAULT" "SQL_Latin1_General_CP1_CI_AS"], :type "string", :x-ms-enum {:modelAsString true, :name "CatalogCollationType"}, :x-ms-mutability ["read" "create"]}, :databaseId {:description "The ID of the database.", :format "uuid", :readOnly true, :type "string"}, :readReplicaCount {:description "The number of readonly secondary replicas associated with the database.", :format "int32", :type "integer"}, :maxSizeBytes {:description "The max size of the database expressed in bytes.", :format "int64", :type "integer"}, :restorableDroppedDatabaseId {:description "The resource identifier of the restorable dropped database associated with create operation of this database.", :type "string", :x-ms-mutability ["create"]}, :currentServiceObjectiveName {:description "The current service level objective name of the database.", :readOnly true, :type "string"}, :creationDate {:description "The creation date of the database (ISO8601 format).", :format "date-time", :readOnly true, :type "string"}, :sourceDatabaseDeletionDate {:description "Specifies the time that the database was deleted.", :format "date-time", :type "string", :x-ms-mutability ["create"]}, :createMode {:description "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.", :enum ["Default" "Copy" "Secondary" "PointInTimeRestore" "Restore" "Recovery" "RestoreExternalBackup" "RestoreExternalBackupSecondary" "RestoreLongTermRetentionBackup" "OnlineSecondary"], :type "string", :x-ms-enum {:modelAsString true, :name "CreateMode"}, :x-ms-mutability ["create"]}, :resumedDate {:description "The date when database was resumed by user action or database login (ISO8601 format). Null if the database is paused.", :format "date-time", :readOnly true, :type "string"}, :sampleName {:description "The name of the sample schema to apply when creating this database.", :enum ["AdventureWorksLT" "WideWorldImportersStd" "WideWorldImportersFull"], :type "string", :x-ms-enum {:modelAsString true, :name "SampleName"}, :x-ms-mutability ["create"]}}, :type "object"}, :DatabaseUpdate {:description "A database resource.", :properties {:properties #:reference{:definitions "DatabaseProperties"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}, :type "object"}, :Resource {:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :ResourceMoveDefinition {:description "Contains the information necessary to perform a resource move (rename).", :properties {:id {:description "The target ID for the resource", :type "string"}}, :required ["id"], :type "object"}, :Sku {:description "An ARM Resource SKU.", :properties {:capacity {:description "Capacity of the particular SKU.", :format "int32", :type "integer"}, :family {:description "If the service has different generations of hardware, for the same SKU, then that can be captured here.", :type "string"}, :name {:description "The name of the SKU, typically, a letter + Number code, e.g. P3.", :type "string"}, :size {:description "Size of the particular SKU", :type "string"}, :tier {:description "The tier or edition of the particular SKU, e.g. Basic, Premium.", :type "string"}}, :required ["name"], :type "object"}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "ARM tracked top level resource.", :properties {:location {:description "Resource location.", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}, :required ["location"], :type "object"}}}