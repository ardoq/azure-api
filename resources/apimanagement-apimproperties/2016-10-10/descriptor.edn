{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on Property entity associated with your Azure API Management deployment. API Management policies are a powerful capability of the system that allow the publisher to change the behavior of the API through configuration. Policies are a collection of statements that are executed sequentially on the request or response of an API. Policy statements can be constructed using literal text values, policy expressions, and properties. Each API Management service instance has a properties collection of key/value pairs that are global to the service instance. These properties can be used to manage constant string values across all API configuration and policies.", :title "ApiManagementClient", :version "2016-10-10"}, :ops {:Properties_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties", :description "Lists a collection of properties defined within a service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "| Field | Supported operators    | Supported functions                                   |\n|-------|------------------------|-------------------------------------------------------|\n| tags  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith           |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Property_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Deletes specific property from the API Management service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "PropertyIdParameter"} {:description "The entity state (Etag) version of the property to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :Property_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Gets the details of the property specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "PropertyIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Property_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Updates the specific property.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "PropertyIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PropertyUpdateParameters"}} {:description "The entity state (Etag) version of the property to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :Property_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Creates or updates a property.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "PropertyIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PropertyCreateParameters"}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}}, :parameters {:PropertyIdParameter {:description "Identifier of the property.", :in "path", :maxLength 256, :name "propId", :pattern "^[^*#&+:<>?]+$", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:PropertyCollection {:description "Paged Property list representation.", :properties {:count {:description "Total record count number across all pages.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "PropertyContract"}, :type "array"}}}, :PropertyContract {:description "Property details.", :properties {:id {:description "Uniquely identifies the property within the current API Management service instance. The value is a valid relative URL in the format of /properties/{propId} where {propId} is a property identifier.", :readOnly true, :type "string"}, :name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}, :required ["name" "value"]}, :PropertyCreateParameters {:description "Parameters supplied to the Create Property operation.", :properties {:name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}, :required ["name" "value"]}, :PropertyUpdateParameters {:description "Parameters supplied to the Update Property operation.", :properties {:name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}}}}