{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.", :title "ApiManagementClient", :version "2017-03-01"}, :ops {:Logger_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers", :description "Lists a collection of loggers in the specified service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type  | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Logger_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Deletes the specified logger.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "LoggerIdParameter"} {:description "The entity state (Etag) version of the logger to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :Logger_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Gets the details of the logger specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "LoggerIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Logger_GetEntityTag {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Gets the entity state (Etag) version of the logger specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "LoggerIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :head}, :Logger_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Updates an existing logger.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "LoggerIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "LoggerUpdateContract"}} {:description "The entity state (Etag) version of the logger to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :Logger_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Creates or Updates a logger.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "LoggerIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "LoggerContract"}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}}, :parameters {:LoggerIdParameter {:description "Logger identifier. Must be unique in the API Management service instance.", :in "path", :maxLength 256, :name "loggerid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:LoggerCollection {:description "Paged Logger list representation.", :properties {:count {:description "Total record count number across all pages.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Logger values.", :items #:reference{:definitions "LoggerContract"}, :type "array"}}}, :LoggerContract {:allOf [{:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type for API Management resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Logger details.", :properties {:properties #:reference{:definitions "LoggerContractProperties"}}}, :LoggerContractProperties {:description "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.", :properties {:credentials {:additionalProperties {:type "string"}, :description "The name and SendRule connection string of the event hub for azureEventHub logger.\nInstrumentation key for applicationInsights logger.", :example {:connectionString "Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...", :name "apim"}, :type "object"}, :description {:description "Logger description.", :maxLength 256, :type "string"}, :isBuffered {:description "Whether records are buffered in the logger before publishing. Default is assumed to be true.", :type "boolean"}, :loggerType {:description "Logger type.", :enum ["azureEventHub" "applicationInsights"], :type "string", :x-ms-enum {:modelAsString true, :name "LoggerType", :values [{:description "Azure Event Hub as log destination.", :value "azureEventHub"} {:description "Azure Application Insights as log destination.", :value "applicationInsights"}]}}, :sampling #:reference{:definitions "LoggerSamplingContract"}}, :required ["loggerType" "credentials"]}, :LoggerSamplingContract {:description "Sampling settings contract.", :properties {:properties #:reference{:definitions "LoggerSamplingProperties"}}}, :LoggerSamplingProperties {:description "Sampling settings for an ApplicationInsights logger.", :properties {:percentageDecreaseTimeout {:description "Duration in ISO8601 format after which it's allowed to lower the sampling rate.", :format "duration", :maxLength 2000, :minLength 1, :type "string"}, :evaluationInterval {:description "Rate re-evaluation interval in ISO8601 format.", :format "duration", :maxLength 2000, :minLength 1, :type "string"}, :samplingType {:description "Sampling type.", :enum ["fixed" "adaptive"], :type "string", :x-ms-enum {:modelAsString true, :name "SamplingType", :values [{:description "Fixed-rate sampling.", :value "fixed"} {:description "Sampling with a dynamically adjustable rate.", :value "adaptive"}]}}, :percentage {:description "Rate of sampling for fixed-rate sampling.", :format "double", :type "number"}, :initialPercentage {:description "Initial sampling rate.", :format "double", :type "number"}, :percentageIncreaseTimeout {:description "Duration in ISO8601 format after which it's allowed to increase the sampling rate.", :format "duration", :maxLength 2000, :minLength 1, :type "string"}, :movingAverageRatio {:description "Moving average ration assigned to most recent value.", :format "double", :type "number"}, :minPercentage {:description "Minimum allowed rate of sampling.", :format "double", :type "number"}, :maxPercentage {:description "Maximum allowed rate of sampling.", :format "double", :type "number"}, :maxTelemetryItemsPerSecond {:description "Target rate of telemetry items per second.", :format "int32", :type "integer"}}}, :LoggerUpdateContract {:description "Logger update contract.", :properties {:properties #:reference{:definitions "LoggerUpdateParameters"}}}, :LoggerUpdateParameters {:description "Parameters supplied to the Update Logger operation.", :properties {:credentials {:additionalProperties {:type "string"}, :description "Logger credentials.", :type "object"}, :description {:description "Logger description.", :type "string"}, :isBuffered {:description "Whether records are buffered in the logger before publishing. Default is assumed to be true.", :type "boolean"}, :loggerType {:description "Logger type.", :enum ["azureEventHub" "applicationInsights"], :type "string", :x-ms-enum {:modelAsString true, :name "LoggerType", :values [{:description "Azure Event Hub as log destination.", :value "azureEventHub"} {:description "Azure Application Insights as log destination.", :value "applicationInsights"}]}}}}}}