{:scheme "https", :host "adminmanagement.local.azurestack.external", :info {:description "The Admin Storage Management Client.", :title "StorageManagementClient", :version "2015-12-01-preview"}, :ops {:TableServices_Get {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}", :description "Returns the table service.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The service type.", :enum ["default"], :in "path", :name "serviceType", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "ServiceType"}, :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :TableServices_ListMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}/metricdefinitions", :description "Returns a list of metric definitions for table service.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The service type.", :enum ["default"], :in "path", :name "serviceType", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "ServiceType"}, :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :TableServices_ListMetrics {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage.Admin/farms/{farmId}/tableservices/{serviceType}/metrics", :description "Returns a list of metrics for table service.", :parameters [{:description "Subscription Id.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Farm Id.", :in "path", :name "farmId", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The service type.", :enum ["default"], :in "path", :name "serviceType", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "ServiceType"}, :x-ms-parameter-location "method"} {:description "REST Api Version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}}, :parameters {}, :definitions {:TableService {:allOf [{:description "Base resource object.", :properties {:id {:description "Resource ID.", :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource Name.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "Table service.", :properties {:properties #:reference{:definitions "TableServiceProperties"}}, :type "object"}, :TableServiceProperties {:allOf [{:description "Storage service.", :properties {:healthStatus {:description "Current health status.", :enum ["Unknown" "Healthy" "Warning" "Critical"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "HealthStatus"}}, :version {:description "Storage service version.", :type "string"}}}], :description "Table service properties.", :properties {:settings {:allOf [{:description "Storage service settings.", :properties {:frontEndMinThreadPoolThreads {:description "Front end minimum number of threads in thread pool.", :format "int32", :type "integer"}, :frontEndCallbackThreadsCount {:description "Front end callback threads count.", :format "int32", :type "integer"}, :frontEndThreadPoolBasedKeepAliveIOCompletionThreshold {:description "Threshold of front end thread pool based keep-alive IO completion.", :format "int32", :type "integer"}, :frontEndMaxMillisecondsBetweenMemorySamples {:description "Maximum interval (in millisecond) between memory samples of front end.", :format "int32", :type "integer"}, :frontEndCpuBasedKeepAliveThrottlingPercentCpuThreshold {:description "Threshold (% percentage) of front end CPU based keep-alive throttling.", :format "float", :type "number"}, :frontEndMemoryThrottlingEnabled {:description "Switch of front end memory throttling.", :type "boolean"}, :frontEndThreadPoolBasedKeepAliveWorkerThreadThreshold {:description "Threshold of front end thread pool based keep-alive worker thread.", :format "int32", :type "integer"}, :frontEndThreadPoolBasedKeepAlivePercentage {:description "Percentage (%) of front end thread pool based keep-alive.", :format "float", :type "number"}, :frontEndCpuBasedKeepAliveThrottlingPercentRequestsToThrottle {:description "Threshold (% percentage) of requests to throttle in front end CPU based keep-alive throttling.", :format "float", :type "number"}, :frontEndCpuBasedKeepAliveThrottlingEnabled {:description "Switch of front end CPU based keep-alive throttling.", :type "boolean"}, :frontEndUseSlaTimeInAvailability {:description "Switch of whether front end uses SLA time in availability.", :type "boolean"}, :frontEndThreadPoolBasedKeepAliveMonitorIntervalInSeconds {:description "Monitor interval (in seconds) of front end thread pool based keep-alive monitor.", :format "int32", :type "integer"}, :frontEndCpuBasedKeepAliveThrottlingCpuMonitorIntervalInSeconds {:description "Interval (in second) of CPU monitor for front end CPU based keep-alive throttling.", :format "int32", :type "integer"}, :frontEndMemoryThrottleThresholdSettings {:description "Front end memory throttle threshold settings.", :type "string"}}, :type "object"}], :description "Settings of storage services.", :properties {:frontEndHttpListenPort {:description "The HTTP port of the storage service front end.", :format "int32", :type "integer"}, :frontEndHttpsListenPort {:description "The HTTPs port of the storage service front end.", :format "int32", :type "integer"}}, :type "object"}}, :type "object"}}}