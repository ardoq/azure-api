{:scheme "https", :host "management.azure.com", :info {:title "ContainerRegistryManagementClient", :version "2019-05-01"}, :ops {:Replications_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}", :description "Gets the properties of the specified replication.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ReplicationNameParameter"}], :verb :get}, :Registries_ImportImage {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importImage", :description "Copies an image to this container registry from the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} {:description "The parameters specifying the image to copy and the source container registry.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ImportImageParameters"}}], :verb :post}, :Webhooks_ListEvents {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/listEvents", :description "Lists recent events for the specified webhook.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"}], :verb :post}, :Replications_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}", :description "Creates a replication for a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ReplicationNameParameter"} {:description "The parameters for creating a replication.", :in "body", :name "replication", :required true, :schema #:reference{:definitions "Replication"}}], :verb :put}, :Registries_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", :description "Updates a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} {:description "The parameters for updating a container registry.", :in "body", :name "registryUpdateParameters", :required true, :schema #:reference{:definitions "RegistryUpdateParameters"}}], :verb :patch}, :Registries_ListCredentials {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listCredentials", :description "Lists the login credentials for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :post}, :Registries_ListUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listUsages", :description "Gets the quota usages for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :Webhooks_GetCallbackConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/getCallbackConfig", :description "Gets the configuration of service URI and custom headers for the webhook.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"}], :verb :post}, :Registries_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability", :description "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The object containing information for the availability request.", :in "body", :name "registryNameCheckRequest", :required true, :schema #:reference{:definitions "RegistryNameCheckRequest"}}], :verb :post}, :Registries_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries", :description "Lists all the container registries under the specified resource group.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"}], :verb :get}, :Webhooks_Ping {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping", :description "Triggers a ping event to be sent to the webhook.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"}], :verb :post}, :Webhooks_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}", :description "Updates a webhook with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"} {:description "The parameters for updating a webhook.", :in "body", :name "webhookUpdateParameters", :required true, :schema #:reference{:definitions "WebhookUpdateParameters"}}], :verb :patch}, :Replications_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}", :description "Updates a replication for a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ReplicationNameParameter"} {:description "The parameters for updating a replication.", :in "body", :name "replicationUpdateParameters", :required true, :schema #:reference{:definitions "ReplicationUpdateParameters"}}], :verb :patch}, :Registries_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", :description "Gets the properties of the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :Replications_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications", :description "Lists all the replications for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :Registries_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", :description "Creates a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} {:description "The parameters for creating a container registry.", :in "body", :name "registry", :required true, :schema #:reference{:definitions "Registry"}}], :verb :put}, :Registries_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", :description "Deletes a container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :delete}, :Replications_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}", :description "Deletes a replication from a container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ReplicationNameParameter"}], :verb :delete}, :Webhooks_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}", :description "Creates a webhook for a container registry with the specified parameters.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"} {:description "The parameters for creating a webhook.", :in "body", :name "webhookCreateParameters", :required true, :schema #:reference{:definitions "WebhookCreateParameters"}}], :verb :put}, :Webhooks_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}", :description "Gets the properties of the specified webhook.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"}], :verb :get}, :Registries_RegenerateCredential {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredential", :description "Regenerates one of the login credentials for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} {:description "Specifies name of the password which should be regenerated -- password or password2.", :in "body", :name "regenerateCredentialParameters", :required true, :schema #:reference{:definitions "RegenerateCredentialParameters"}}], :verb :post}, :Webhooks_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks", :description "Lists all the webhooks for the specified container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.ContainerRegistry/operations", :description "Lists all of the available Azure Container Registry REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Registries_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries", :description "Lists all the container registries under the specified subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Webhooks_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}", :description "Deletes a webhook from a container registry.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "WebhookNameParameter"}], :verb :delete}}, :parameters {:ApiVersionParameter {:description "The client API version.", :in "query", :name "api-version", :required true, :type "string"}, :RegistryNameParameter {:description "The name of the container registry.", :name "registryName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :ReplicationNameParameter {:description "The name of the replication.", :name "replicationName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :ResourceGroupParameter {:description "The name of the resource group to which the container registry belongs.", :in "path", :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The Microsoft Azure subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}, :WebhookNameParameter {:description "The name of the webhook.", :name "webhookName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}}, :definitions {:Target {:description "The target of the event.", :properties {:repository {:description "The repository name.", :type "string"}, :name {:description "The name of the artifact.", :type "string"}, :digest {:description "The digest of the content, as defined by the Registry V2 HTTP API Specification.", :type "string"}, :size {:description "The number of bytes of the content. Same as Length field.", :format "int64", :type "integer"}, :mediaType {:description "The MIME type of the referenced object.", :type "string"}, :url {:description "The direct URL to the content.", :type "string"}, :length {:description "The number of bytes of the content. Same as Size field.", :format "int64", :type "integer"}, :tag {:description "The tag name.", :type "string"}, :version {:description "The version of the artifact.", :type "string"}}, :type "object"}, :RegistryListCredentialsResult {:description "The response from the ListCredentials operation.", :properties {:passwords {:description "The list of passwords for a container registry.", :items #:reference{:definitions "RegistryPassword"}, :type "array"}, :username {:description "The username for a container registry.", :type "string"}}, :type "object"}, :OperationDisplayDefinition {:description "The display information for a container registry operation.", :properties {:description {:description "The description for the operation.", :type "string"}, :operation {:description "The operation that users can perform.", :type "string"}, :provider {:description "The resource provider name: Microsoft.ContainerRegistry.", :type "string"}, :resource {:description "The resource on which the operation is performed.", :type "string"}}, :type "object"}, :EventInfo {:description "The basic information of an event.", :properties {:id {:description "The event ID.", :type "string"}}, :type "object"}, :Webhook {:allOf [#:reference{:definitions "Resource"}], :description "An object that represents a webhook for a container registry.", :properties {:properties #:reference{:definitions "WebhookProperties"}}, :type "object"}, :WebhookProperties {:description "The properties of a webhook.", :properties {:actions {:description "The list of actions that trigger the webhook to post notifications.", :items {:enum ["push" "delete" "quarantine" "chart_push" "chart_delete"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookAction"}}, :type "array"}, :provisioningState {:description "The provisioning state of the webhook at the time the operation was called.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :scope {:description "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.", :type "string"}, :status {:description "The status of the webhook at the time the operation was called.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookStatus"}}}, :required ["actions"], :type "object"}, :TrustPolicy {:description "The content trust policy for a container registry.", :properties {:status {:default "disabled", :description "The value that indicates whether the policy is enabled or not.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "PolicyStatus"}}, :type {:default "Notary", :description "The type of trust policy.", :enum ["Notary"], :type "string", :x-ms-enum {:modelAsString true, :name "TrustPolicyType"}}}, :type "object"}, :ReplicationListResult {:description "The result of a request to list replications for a container registry.", :properties {:nextLink {:description "The URI that can be used to request the next list of replications.", :type "string"}, :value {:description "The list of replications. Since this list may be incomplete, the nextLink field should be used to request the next list of replications.", :items #:reference{:definitions "Replication"}, :type "array"}}, :type "object"}, :RegistryNameStatus {:description "The result of a request to check the availability of a container registry name.", :properties {:message {:description "If any, the error message that provides more detail for the reason that the name is not available.", :type "string"}, :nameAvailable {:description "The value that indicates whether the name is available.", :type "boolean"}, :reason {:description "If any, the reason that the name is not available.", :type "string"}}, :type "object"}, :ImportSource {:properties {:credentials #:reference{:definitions "ImportSourceCredentials"}, :registryUri {:description "The address of the source registry (e.g. 'mcr.microsoft.com').", :type "string"}, :resourceId {:description "The resource identifier of the source Azure Container Registry.", :type "string"}, :sourceImage {:description "Repository name of the source image.\r\nSpecify an image by repository ('hello-world'). This will use the 'latest' tag.\r\nSpecify an image by tag ('hello-world:latest').\r\nSpecify an image by sha256-based manifest digest ('hello-world@sha256:abc123').", :type "string"}}, :required ["sourceImage"], :type "object"}, :OperationListResult {:description "The result of a request to list container registry operations.", :properties {:nextLink {:description "The URI that can be used to request the next list of container registry operations.", :type "string"}, :value {:description "The list of container registry operations. Since this list may be incomplete, the nextLink field should be used to request the next list of operations.", :items #:reference{:definitions "OperationDefinition"}, :type "array"}}, :type "object"}, :OperationMetricSpecificationDefinition {:description "The definition of Azure Monitoring metric.", :properties {:aggregationType {:description "Metric aggregation type.", :type "string"}, :displayDescription {:description "Metric description.", :type "string"}, :displayName {:description "Metric display name.", :type "string"}, :internalMetricName {:description "Internal metric name.", :type "string"}, :name {:description "Metric name.", :type "string"}, :unit {:description "Metric unit.", :type "string"}}, :type "object"}, :OperationServiceSpecificationDefinition {:description "The definition of Azure Monitoring list.", :properties {:metricSpecifications {:description "A list of Azure Monitoring metrics definition.", :items #:reference{:definitions "OperationMetricSpecificationDefinition"}, :type "array"}}, :type "object"}, :RegistryUpdateParameters {:description "The parameters for updating a container registry.", :properties {:properties #:reference{:definitions "RegistryPropertiesUpdateParameters"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "The tags for the container registry.", :type "object"}}, :type "object"}, :RegistryUsage {:description "The quota usage for a container registry.", :properties {:currentValue {:description "The current value of the usage.", :format "int64", :type "integer"}, :limit {:description "The limit of the usage.", :format "int64", :type "integer"}, :name {:description "The name of the usage.", :type "string"}, :unit {:description "The unit of measurement.", :enum ["Count" "Bytes"], :type "string", :x-ms-enum {:modelAsString true, :name "RegistryUsageUnit"}}}, :type "object"}, :RegistryPropertiesUpdateParameters {:description "The parameters for updating the properties of a container registry.", :properties {:adminUserEnabled {:description "The value that indicates whether the admin user is enabled.", :type "boolean"}, :networkRuleSet #:reference{:definitions "NetworkRuleSet"}, :policies #:reference{:definitions "Policies"}}, :type "object"}, :QuarantinePolicy {:description "The quarantine policy for a container registry.", :properties {:status {:default "disabled", :description "The value that indicates whether the policy is enabled or not.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "PolicyStatus"}}}, :type "object"}, :EventListResult {:description "The result of a request to list events for a webhook.", :properties {:nextLink {:description "The URI that can be used to request the next list of events.", :type "string"}, :value {:description "The list of events. Since this list may be incomplete, the nextLink field should be used to request the next list of events.", :items #:reference{:definitions "Event"}, :type "array"}}, :type "object"}, :WebhookUpdateParameters {:description "The parameters for updating a webhook.", :properties {:properties #:reference{:definitions "WebhookPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The tags for the webhook.", :type "object"}}, :type "object"}, :Policies {:description "The policies for a container registry.", :properties {:quarantinePolicy #:reference{:definitions "QuarantinePolicy"}, :retentionPolicy #:reference{:definitions "RetentionPolicy"}, :trustPolicy #:reference{:definitions "TrustPolicy"}}, :type "object"}, :Request {:description "The request that generated the event.", :properties {:addr {:description "The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.", :type "string"}, :host {:description "The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.", :type "string"}, :id {:description "The ID of the request that initiated the event.", :type "string"}, :method {:description "The request method that generated the event.", :type "string"}, :useragent {:description "The user agent header of the request.", :type "string"}}, :type "object"}, :VirtualNetworkRule {:description "Virtual network rule.", :properties {:action {:default "Allow", :description "The action of virtual network rule.", :enum ["Allow"], :type "string", :x-ms-enum {:modelAsString true, :name "Action"}}, :id {:description "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.", :type "string", :x-ms-client-name "VirtualNetworkResourceId"}}, :required ["id"], :type "object"}, :NetworkRuleSet {:description "The network rule set for a container registry.", :properties {:defaultAction {:default "Allow", :description "The default action of allow or deny when no other rules match.", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "DefaultAction"}}, :ipRules {:description "The IP ACL rules.", :items #:reference{:definitions "IPRule"}, :type "array"}, :virtualNetworkRules {:description "The virtual network rules.", :items #:reference{:definitions "VirtualNetworkRule"}, :type "array"}}, :required ["defaultAction"], :type "object"}, :CallbackConfig {:description "The configuration of service URI and custom headers for the webhook.", :properties {:customHeaders {:additionalProperties {:type "string"}, :description "Custom headers that will be added to the webhook notifications.", :type "object"}, :serviceUri {:description "The service URI for the webhook to post notifications.", :type "string"}}, :required ["serviceUri"], :type "object"}, :ImportImageParameters {:properties {:mode {:default "NoForce", :description "When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins.", :enum ["NoForce" "Force"], :type "string", :x-ms-enum {:modelAsString true, :name "ImportMode"}}, :source #:reference{:definitions "ImportSource"}, :targetTags {:description "List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).", :items {:type "string"}, :type "array"}, :untaggedTargetRepositories {:description "List of strings of repository names to do a manifest only copy. No tag will be created.", :items {:type "string"}, :type "array"}}, :required ["source"], :type "object"}, :RegistryListResult {:description "The result of a request to list container registries.", :properties {:nextLink {:description "The URI that can be used to request the next list of container registries.", :type "string"}, :value {:description "The list of container registries. Since this list may be incomplete, the nextLink field should be used to request the next list of container registries.", :items #:reference{:definitions "Registry"}, :type "array"}}, :type "object"}, :Event {:allOf [#:reference{:definitions "EventInfo"}], :description "The event for a webhook.", :properties {:eventRequestMessage #:reference{:definitions "EventRequestMessage"}, :eventResponseMessage #:reference{:definitions "EventResponseMessage"}}, :type "object"}, :EventResponseMessage {:description "The event response message received from the service URI.", :properties {:content {:description "The content of the event response message.", :type "string"}, :headers {:additionalProperties {:type "string"}, :description "The headers of the event response message.", :type "object"}, :reasonPhrase {:description "The reason phrase of the event response message.", :type "string"}, :statusCode {:description "The status code of the event response message.", :type "string"}, :version {:description "The HTTP message version.", :type "string"}}, :type "object"}, :ReplicationProperties {:description "The properties of a replication.", :properties {:provisioningState {:description "The provisioning state of the replication at the time the operation was called.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :status #:reference{:definitions "Status"}}, :type "object"}, :WebhookListResult {:description "The result of a request to list webhooks for a container registry.", :properties {:nextLink {:description "The URI that can be used to request the next list of webhooks.", :type "string"}, :value {:description "The list of webhooks. Since this list may be incomplete, the nextLink field should be used to request the next list of webhooks.", :items #:reference{:definitions "Webhook"}, :type "array"}}, :type "object"}, :WebhookPropertiesUpdateParameters {:description "The parameters for updating the properties of a webhook.", :properties {:actions {:description "The list of actions that trigger the webhook to post notifications.", :items {:enum ["push" "delete" "quarantine" "chart_push" "chart_delete"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookAction"}}, :type "array"}, :customHeaders {:additionalProperties {:type "string"}, :description "Custom headers that will be added to the webhook notifications.", :type "object"}, :scope {:description "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.", :type "string"}, :serviceUri {:description "The service URI for the webhook to post notifications.", :type "string"}, :status {:description "The status of the webhook at the time the operation was called.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookStatus"}}}, :type "object"}, :IPRule {:description "IP rule with specific IP or IP range in CIDR format.", :properties {:action {:default "Allow", :description "The action of IP ACL rule.", :enum ["Allow"], :type "string", :x-ms-enum {:modelAsString true, :name "Action"}}, :value {:description "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.", :type "string", :x-ms-client-name "IPAddressOrRange"}}, :required ["value"], :type "object"}, :ReplicationUpdateParameters {:description "The parameters for updating a replication.", :properties {:tags {:additionalProperties {:type "string"}, :description "The tags for the replication.", :type "object"}}, :type "object"}, :RegistryProperties {:description "The properties of a container registry.", :properties {:adminUserEnabled {:default false, :description "The value that indicates whether the admin user is enabled.", :type "boolean"}, :creationDate {:description "The creation date of the container registry in ISO8601 format.", :format "date-time", :readOnly true, :type "string"}, :loginServer {:description "The URL that can be used to log into the container registry.", :readOnly true, :type "string"}, :networkRuleSet #:reference{:definitions "NetworkRuleSet"}, :policies #:reference{:definitions "Policies"}, :provisioningState {:description "The provisioning state of the container registry at the time the operation was called.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :status #:reference{:definitions "Status"}, :storageAccount #:reference{:definitions "StorageAccountProperties"}}, :type "object"}, :Registry {:allOf [#:reference{:definitions "Resource"}], :description "An object that represents a container registry.", :properties {:properties #:reference{:definitions "RegistryProperties"}, :sku #:reference{:definitions "Sku"}}, :required ["sku"], :type "object"}, :Replication {:allOf [#:reference{:definitions "Resource"}], :description "An object that represents a replication for a container registry.", :properties {:properties #:reference{:definitions "ReplicationProperties"}}, :type "object"}, :StorageAccountProperties {:description "The properties of a storage account for a container registry. Only applicable to Classic SKU.", :properties {:id {:description "The resource ID of the storage account.", :type "string"}}, :required ["id"], :type "object"}, :WebhookPropertiesCreateParameters {:description "The parameters for creating the properties of a webhook.", :properties {:actions {:description "The list of actions that trigger the webhook to post notifications.", :items {:enum ["push" "delete" "quarantine" "chart_push" "chart_delete"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookAction"}}, :type "array"}, :customHeaders {:additionalProperties {:type "string"}, :description "Custom headers that will be added to the webhook notifications.", :type "object"}, :scope {:description "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.", :type "string"}, :serviceUri {:description "The service URI for the webhook to post notifications.", :type "string"}, :status {:description "The status of the webhook at the time the operation was called.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "WebhookStatus"}}}, :required ["serviceUri" "actions"], :type "object"}, :Actor {:description "The agent that initiated the event. For most situations, this could be from the authorization context of the request.", :properties {:name {:description "The subject or username associated with the request context that generated the event.", :type "string"}}, :type "object"}, :OperationPropertiesDefinition {:description "The definition of Azure Monitoring properties.", :properties {:serviceSpecification #:reference{:definitions "OperationServiceSpecificationDefinition"}}, :type "object"}, :RegistryPassword {:description "The login password for the container registry.", :properties {:name {:description "The password name.", :enum ["password" "password2"], :type "string", :x-ms-enum {:modelAsString false, :name "PasswordName"}}, :value {:description "The password value.", :type "string"}}, :type "object"}, :Resource {:description "An Azure resource.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :location {:description "The location of the resource. This cannot be changed after the resource is created.", :type "string", :x-ms-mutability ["read" "create"]}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The tags of the resource.", :type "object"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :RetentionPolicy {:description "The retention policy for a container registry.", :properties {:days {:default 7, :description "The number of days to retain an untagged manifest after which it gets purged.", :format "int32", :type "integer"}, :lastUpdatedTime {:description "The timestamp when the policy was last updated.", :format "date-time", :readOnly true, :type "string"}, :status {:default "disabled", :description "The value that indicates whether the policy is enabled or not.", :enum ["enabled" "disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "PolicyStatus"}}}, :type "object"}, :RegistryUsageListResult {:description "The result of a request to get container registry quota usages.", :properties {:value {:description "The list of container registry quota usages.", :items #:reference{:definitions "RegistryUsage"}, :type "array"}}, :type "object"}, :RegenerateCredentialParameters {:description "The parameters used to regenerate the login credential.", :properties {:name {:description "Specifies name of the password which should be regenerated -- password or password2.", :enum ["password" "password2"], :type "string", :x-ms-enum {:modelAsString false, :name "PasswordName"}}}, :required ["name"], :type "object"}, :EventContent {:description "The content of the event request message.", :properties {:action {:description "The action that encompasses the provided event.", :type "string"}, :actor #:reference{:definitions "Actor"}, :id {:description "The event ID.", :type "string"}, :request #:reference{:definitions "Request"}, :source #:reference{:definitions "Source"}, :target #:reference{:definitions "Target"}, :timestamp {:description "The time at which the event occurred.", :format "date-time", :type "string"}}, :type "object"}, :Sku {:description "The SKU of a container registry.", :properties {:name {:description "The SKU name of the container registry. Required for registry creation.", :enum ["Classic" "Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}, :tier {:description "The SKU tier based on the SKU name.", :enum ["Classic" "Basic" "Standard" "Premium"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}, :required ["name"], :type "object"}, :Source {:description "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.", :properties {:addr {:description "The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.", :type "string"}, :instanceID {:description "The running instance of an application. Changes after each restart.", :type "string"}}, :type "object"}, :ImportSourceCredentials {:properties {:password {:description "The password used to authenticate with the source registry.", :type "string"}, :username {:description "The username to authenticate with the source registry.", :type "string"}}, :required ["password"], :type "object"}, :RegistryNameCheckRequest {:description "A request to check whether a container registry name is available.", :properties {:name {:description "The name of the container registry.", :maxLength 50, :minLength 5, :pattern "^[a-zA-Z0-9]*$", :type "string"}, :type {:description "The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'.", :enum ["Microsoft.ContainerRegistry/registries"], :type "string", :x-ms-enum {:modelAsString false, :name "ContainerRegistryResourceType"}}}, :required ["name" "type"], :type "object"}, :EventRequestMessage {:description "The event request message sent to the service URI.", :properties {:content #:reference{:definitions "EventContent"}, :headers {:additionalProperties {:type "string"}, :description "The headers of the event request message.", :type "object"}, :method {:description "The HTTP method used to send the event request message.", :type "string"}, :requestUri {:description "The URI used to send the event request message.", :type "string"}, :version {:description "The HTTP message version.", :type "string"}}, :type "object"}, :OperationDefinition {:description "The definition of a container registry operation.", :properties {:display #:reference{:definitions "OperationDisplayDefinition"}, :name {:description "Operation name: {provider}/{resource}/{operation}.", :type "string"}, :origin {:description "The origin information of the container registry operation.", :type "string"}, :properties #:reference{:definitions "OperationPropertiesDefinition"}}, :type "object"}, :WebhookCreateParameters {:description "The parameters for creating a webhook.", :properties {:location {:description "The location of the webhook. This cannot be changed after the resource is created.", :type "string"}, :properties #:reference{:definitions "WebhookPropertiesCreateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The tags for the webhook.", :type "object"}}, :required ["location"], :type "object"}, :Status {:description "The status of an Azure resource at the time the operation was called.", :properties {:displayStatus {:description "The short label for the status.", :readOnly true, :type "string"}, :message {:description "The detailed message for the status, including alerts and error messages.", :readOnly true, :type "string"}, :timestamp {:description "The timestamp when the status was changed to the current value.", :format "date-time", :readOnly true, :type "string"}}, :type "object"}}}