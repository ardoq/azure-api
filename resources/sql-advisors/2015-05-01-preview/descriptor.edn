{:scheme "https", :host "management.azure.com", :info {:description "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.", :title "SqlManagementClient", :version "2015-05-01-preview"}, :ops {:DatabaseRecommendedActions_ListByDatabaseAdvisor {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions", :description "Gets list of Database Recommended Actions.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The name of the Database Advisor.", :in "path", :name "advisorName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseAdvisors_ListByDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors", :description "Gets a list of database advisors.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseRecommendedActions_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}", :description "Gets a database recommended action.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The name of the Database Advisor.", :in "path", :name "advisorName", :required true, :type "string"} {:description "The name of Database Recommended Action.", :in "path", :name "recommendedActionName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ServerAdvisors_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors", :description "Gets a list of server advisors.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseRecommendedActions_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}", :description "Updates a database recommended action.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The name of the Database Advisor.", :in "path", :name "advisorName", :required true, :type "string"} {:description "The name of Database Recommended Action.", :in "path", :name "recommendedActionName", :required true, :type "string"} {:description "The requested recommended action resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RecommendedAction"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :ServerAdvisors_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}", :description "Gets a server advisor.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the Server Advisor.", :in "path", :name "advisorName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :DatabaseAdvisors_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}", :description "Updates a database advisor.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The name of the Database Advisor.", :in "path", :name "advisorName", :required true, :type "string"} {:description "The requested advisor resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Advisor"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :ServerAdvisors_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}", :description "Updates a server advisor.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the Server Advisor.", :in "path", :name "advisorName", :required true, :type "string"} {:description "The requested advisor resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Advisor"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :DatabaseAdvisors_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}", :description "Gets a database advisor.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The name of the Database Advisor.", :in "path", :name "advisorName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}}, :definitions {:AdvisorProperties {:description "Properties for a Database, Server or Elastic Pool Advisor.", :properties {:advisorStatus {:description "Gets the status of availability of this advisor to customers. Possible values are 'GA', 'PublicPreview', 'LimitedPublicPreview' and 'PrivatePreview'.", :enum ["GA" "PublicPreview" "LimitedPublicPreview" "PrivatePreview"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "AdvisorStatus"}}, :autoExecuteStatus {:description "Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'", :enum ["Enabled" "Disabled" "Default"], :type "string", :x-ms-enum {:modelAsString false, :name "AutoExecuteStatus"}}, :autoExecuteStatusInheritedFrom {:description "Gets the resource from which current value of auto-execute status is inherited. Auto-execute status can be set on (and inherited from) different levels in the resource hierarchy. Possible values are 'Subscription', 'Server', 'ElasticPool', 'Database' and 'Default' (when status is not explicitly set on any level).", :enum ["Default" "Subscription" "Server" "ElasticPool" "Database"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "AutoExecuteStatusInheritedFrom"}}, :lastChecked {:description "Gets the time when the current resource was analyzed for recommendations by this advisor.", :format "date-time", :readOnly true, :type "string"}, :recommendationsStatus {:description "Gets that status of recommendations for this advisor and reason for not having any recommendations. Possible values include, but are not limited to, 'Ok' (Recommendations available),LowActivity (not enough workload to analyze), 'DbSeemsTuned' (Database is doing well), etc.", :readOnly true, :type "string"}, :recommendedActions {:description "Gets the recommended actions for this advisor.", :items #:reference{:definitions "RecommendedAction"}, :readOnly true, :type "array"}}, :required ["autoExecuteStatus"], :type "object"}, :RecommendedActionErrorInfo {:description "Contains error information for an Azure SQL Database, Server or Elastic Pool Recommended Action.", :properties {:errorCode {:description "Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff, IndexAlreadyExists", :readOnly true, :type "string"}, :isRetryable {:description "Gets whether the error could be ignored and recommended action could be retried. Possible values are: Yes/No", :enum ["Yes" "No"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "IsRetryable"}}}, :type "object"}, :Advisor {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "Database, Server or Elastic Pool Advisor.", :properties {:kind {:description "Resource kind.", :readOnly true, :type "string"}, :location {:description "Resource location.", :readOnly true, :type "string"}, :properties #:reference{:definitions "AdvisorProperties"}}, :type "object"}, :RecommendedActionMetricInfo {:description "Contains time series of various impacted metrics for an Azure SQL Database, Server or Elastic Pool Recommended Action.", :properties {:metricName {:description "Gets the name of the metric. e.g., CPU, Number of Queries.", :readOnly true, :type "string"}, :startTime {:description "Gets the start time of time interval given by this MetricInfo.", :format "date-time", :readOnly true, :type "string"}, :timeGrain {:description "Gets the duration of time interval for the value given by this MetricInfo. e.g., PT1H (1 hour)", :readOnly true, :type "string"}, :unit {:description "Gets the unit in which metric is measured. e.g., DTU, Frequency", :readOnly true, :type "string"}, :value {:description "Gets the value of the metric in the time interval given by this MetricInfo.", :format "double", :readOnly true, :type "number"}}, :type "object"}, :RecommendedAction {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "Database, Server or Elastic Pool Recommended Action.", :properties {:kind {:description "Resource kind.", :readOnly true, :type "string"}, :location {:description "Resource location.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RecommendedActionProperties"}}, :type "object"}, :RecommendedActionProperties {:description "Properties for a Database, Server or Elastic Pool Recommended Action.", :properties {:timeSeries {:description "Gets the time series info of metrics for this recommended action e.g., CPU consumption time series", :items #:reference{:definitions "RecommendedActionMetricInfo"}, :readOnly true, :type "array"}, :validSince {:description "Gets the time since when this recommended action is valid.", :format "date-time", :readOnly true, :type "string"}, :revertActionDuration {:description "Gets the time taken for reverting changes of this recommended action on user resource. e.g., time taken for dropping the created index.", :readOnly true, :type "string"}, :implementationDetails #:reference{:definitions "RecommendedActionImplementationInfo"}, :executeActionInitiatedBy {:description "Gets if approval for applying this recommended action was given by user/system.", :enum ["User" "System"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "RecommendedActionInitiatedBy"}}, :isRevertableAction {:description "Gets if changes applied by this recommended action can be reverted by user", :readOnly true, :type "boolean"}, :revertActionInitiatedBy {:description "Gets if approval for reverting this recommended action was given by user/system.", :enum ["User" "System"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "RecommendedActionInitiatedBy"}}, :errorDetails #:reference{:definitions "RecommendedActionErrorInfo"}, :isExecutableAction {:description "Gets if this recommended action is actionable by user", :readOnly true, :type "boolean"}, :state #:reference{:definitions "RecommendedActionStateInfo"}, :recommendationReason {:description "Gets the reason for recommending this action. e.g., DuplicateIndex", :readOnly true, :type "string"}, :revertActionStartTime {:description "Gets the time when system started reverting changes of this recommended action on user resource. e.g., time when index drop is executed.", :format "date-time", :readOnly true, :type "string"}, :revertActionInitiatedTime {:description "Gets the time when this recommended action was approved for revert.", :format "date-time", :readOnly true, :type "string"}, :details {:additionalProperties {:type "object"}, :description "Gets additional details specific to this recommended action.", :readOnly true, :type "object"}, :executeActionStartTime {:description "Gets the time when system started applying this recommended action on the user resource. e.g., index creation start time", :format "date-time", :readOnly true, :type "string"}, :executeActionInitiatedTime {:description "Gets the time when this recommended action was approved for execution.", :format "date-time", :readOnly true, :type "string"}, :linkedObjects {:description "Gets the linked objects, if any.", :items {:type "string"}, :readOnly true, :type "array"}, :score {:description "Gets the impact of this recommended action. Possible values are 1 - Low impact, 2 - Medium Impact and 3 - High Impact", :format "int32", :readOnly true, :type "integer"}, :observedImpact {:description "Gets the observed/actual impact info for this recommended action e.g., Actual CPU gain, Actual Disk Space change", :items #:reference{:definitions "RecommendedActionImpactRecord"}, :readOnly true, :type "array"}, :lastRefresh {:description "Gets time when this recommended action was last refreshed.", :format "date-time", :readOnly true, :type "string"}, :isArchivedAction {:description "Gets if this recommended action was suggested some time ago but user chose to ignore this and system added a new recommended action again.", :readOnly true, :type "boolean"}, :estimatedImpact {:description "Gets the estimated impact info for this recommended action e.g., Estimated CPU gain, Estimated Disk Space change", :items #:reference{:definitions "RecommendedActionImpactRecord"}, :readOnly true, :type "array"}, :executeActionDuration {:description "Gets the time taken for applying this recommended action on user resource. e.g., time taken for index creation", :readOnly true, :type "string"}}, :required ["state"], :type "object"}, :RecommendedActionImpactRecord {:description "Contains information of estimated or observed impact on various metrics for an Azure SQL Database, Server or Elastic Pool Recommended Action.", :properties {:absoluteValue {:description "Gets the absolute value of this dimension if applicable. e.g., Number of Queries affected", :format "double", :readOnly true, :type "number"}, :changeValueAbsolute {:description "Gets the absolute change in the value of this dimension. e.g., Absolute Disk space change in Megabytes", :format "double", :readOnly true, :type "number"}, :changeValueRelative {:description "Gets the relative change in the value of this dimension. e.g., Relative Disk space change in Percentage", :format "double", :readOnly true, :type "number"}, :dimensionName {:description "Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange, NumberOfQueriesAffected.", :readOnly true, :type "string"}, :unit {:description "Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange, NumberOfQueriesAffected.", :readOnly true, :type "string"}}, :type "object"}, :RecommendedActionStateInfo {:description "Contains information of current state for an Azure SQL Database, Server or Elastic Pool Recommended Action.", :properties {:actionInitiatedBy {:description "Gets who initiated the execution of this recommended action. Possible Value are: User    -> When user explicitly notified system to apply the recommended action. System  -> When auto-execute status of this advisor was set to 'Enabled', in which case the system applied it.", :enum ["User" "System"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "RecommendedActionInitiatedBy"}}, :currentValue {:description "Current state the recommended action is in. Some commonly used states are: Active      -> recommended action is active and no action has been taken yet. Pending     -> recommended action is approved for and is awaiting execution. Executing   -> recommended action is being applied on the user database. Verifying   -> recommended action was applied and is being verified of its usefulness by the system. Success     -> recommended action was applied and improvement found during verification. Pending Revert  -> verification found little or no improvement so recommended action is queued for revert or user has manually reverted. Reverting   -> changes made while applying recommended action are being reverted on the user database. Reverted    -> successfully reverted the changes made by recommended action on user database. Ignored     -> user explicitly ignored/discarded the recommended action. ", :enum ["Active" "Pending" "Executing" "Verifying" "PendingRevert" "RevertCancelled" "Reverting" "Reverted" "Ignored" "Expired" "Monitoring" "Resolved" "Success" "Error"], :type "string", :x-ms-enum {:modelAsString true, :name "RecommendedActionCurrentState"}}, :lastModified {:description "Gets the time when the state was last modified", :format "date-time", :readOnly true, :type "string"}}, :required ["currentValue"], :type "object"}, :RecommendedActionImplementationInfo {:description "Contains information for manual implementation for an Azure SQL Database, Server or Elastic Pool Recommended Action.", :properties {:method {:description "Gets the method in which this recommended action can be manually implemented. e.g., TSql, AzurePowerShell.", :enum ["TSql" "AzurePowerShell"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "ImplementationMethod"}}, :script {:description "Gets the manual implementation script. e.g., T-SQL script that could be executed on the database.", :readOnly true, :type "string"}}, :type "object"}}}