{:scheme "https", :host "management.azure.com", :info {:title "DataBoxManagementClient", :version "2018-01-01"}, :ops {:Jobs_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs", :description "Lists all the jobs available under the subscription.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"} {:description "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :Jobs_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}", :description "Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Job details from request body.", :in "body", :name "jobResource", :required true, :schema #:reference{:definitions "JobResource"}}], :verb :put}, :Jobs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}", :description "Gets information about the specified job.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "$expand is supported on details parameter for job, which provides details on the job stages.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :Jobs_BookShipmentPickUp {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp", :description "Book shipment pick up.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Details of shipment pick up request.", :in "body", :name "shipmentPickUpRequest", :required true, :schema #:reference{:definitions "ShipmentPickUpRequest"}}], :verb :post}, :Jobs_Cancel {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel", :description "CancelJob.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Reason for cancellation.", :in "body", :name "cancellationReason", :required true, :schema #:reference{:definitions "CancellationReason"}}], :verb :post}, :Jobs_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}", :description "Updates the properties of an existing job.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Defines the If-Match condition. The patch will be performed only if the ETag of the job on the server matches this value.", :in "header", :name "If-Match", :type "string"} {:description "Job update parameters from request body.", :in "body", :name "jobResourceUpdateParameter", :required true, :schema #:reference{:definitions "JobResourceUpdateParameter"}}], :verb :patch}, :Service_ListAvailableSkus {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/availableSkus", :description "This method provides the list of available skus for the given subscription and location.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "locationParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Filters for showing the available skus.", :in "body", :name "availableSkuRequest", :required true, :schema #:reference{:definitions "AvailableSkuRequest"}}], :verb :post}, :Jobs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}", :description "Deletes a job.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Jobs_ListCredentials {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials", :description "This method gets the unencrypted secrets related to the job.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "jobNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Jobs_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs", :description "Lists all the jobs available under the given resource group.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.DataBox/operations", :description "This method gets all the operations.", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :Service_ValidateAddress {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress", :description "This method validates the customer shipping address and provide alternate addresses if any.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "locationParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Shipping address of the customer.", :in "body", :name "validateAddress", :required true, :schema #:reference{:definitions "ValidateAddress"}}], :verb :post}}, :parameters {:apiVersionParameter {:description "The API Version", :in "query", :name "api-version", :required true, :type "string"}, :jobNameParameter {:description "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only", :name "jobName", :type "string", :minLength 3, :x-ms-parameter-location "method", :maxLength 24, :required true, :in "path", :pattern "^[-\\w\\.]+$"}, :locationParameter {:description "The location of the resource", :in "path", :name "location", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "The Resource Group Name", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionIdParameter {:description "The Subscription Id", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:DataBoxHeavyJobDetails {:allOf [#:reference{:definitions "JobDetails"}], :description "DataBoxHeavy Device Job Details", :properties {:copyProgress {:description "Copy progress per account.", :items #:reference{:definitions "CopyProgress"}, :readOnly true, :type "array"}}, :required ["contactDetails" "shippingAddress" "destinationAccountDetails" "jobDetailsType"], :type "object", :x-ms-discriminator-value "DataBoxHeavy"}, :SkuInformation {:description "Information of the sku.", :properties {:enabled {:description "The sku is enabled or not.", :readOnly true, :type "boolean"}, :properties #:reference{:definitions "SkuProperties"}, :sku #:reference{:definitions "Sku"}}, :type "object"}, :ShipmentPickUpResponse {:description "Shipment pick up response.", :properties {:confirmationNumber {:description "Confirmation number for the pick up request.", :readOnly true, :type "string"}, :readyByTime {:description "Time by which shipment should be ready for pick up, this is in local time of pick up area.", :format "date-time", :readOnly true, :type "string"}}, :type "object"}, :UpdateJobDetails {:description "Job details for update.", :properties {:contactDetails #:reference{:definitions "ContactDetails"}, :shippingAddress #:reference{:definitions "ShippingAddress"}}, :type "object"}, :JobResourceUpdateParameter {:description "The JobResourceUpdateParameter.", :properties {:properties #:reference{:definitions "UpdateJobProperties"}, :tags {:additionalProperties {:type "string"}, :description "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).", :type "object"}}, :type "object"}, :DestinationManagedDiskDetails {:allOf [#:reference{:definitions "DestinationAccountDetails"}], :description "Details for the destination compute disks.", :properties {:resourceGroupId {:description "Destination Resource Group Id where the Compute disks should be created.", :type "string"}, :stagingStorageAccountId {:description "Arm Id of the storage account that can be used to copy the vhd for staging.", :type "string"}}, :required ["resourceGroupId" "stagingStorageAccountId" "dataDestinationType"], :type "object", :x-ms-discriminator-value "ManagedDisk"}, :DataBoxDiskCopyProgress {:description "DataBox Disk Copy Progress", :properties {:bytesCopied {:description "Bytes copied during the copy of disk.", :format "int64", :readOnly true, :type "integer"}, :percentComplete {:description "Indicates the percentage completed for the copy of the disk.", :format "int32", :readOnly true, :type "integer"}, :serialNumber {:description "The serial number of the disk", :readOnly true, :type "string"}, :status {:description "The Status of the copy", :enum ["NotStarted" "InProgress" "Completed" "CompletedWithErrors" "Failed" "NotReturned"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "CopyStatus", :values [{:description "Data copy hasn't started yet.", :value "NotStarted"} {:description "Data copy is in progress.", :value "InProgress"} {:description "Data copy completed.", :value "Completed"} {:description "Data copy completed with errors.", :value "CompletedWithErrors"} {:description "Data copy failed. No data was copied.", :value "Failed"} {:description "No copy triggered as device was not returned.", :value "NotReturned"}]}}}, :type "object"}, :UpdateJobProperties {:description "Job Properties for update", :properties {:destinationAccountDetails {:description "Destination account details.", :items #:reference{:definitions "DestinationAccountDetails"}, :type "array"}, :details #:reference{:definitions "UpdateJobDetails"}}, :type "object"}, :AddressValidationOutput {:description "Output of the address validation api.", :properties {:properties #:reference{:definitions "AddressValidationProperties"}}, :type "object"}, :ValidateAddress {:description "The requirements to validate customer address where the device needs to be shipped.", :properties {:deviceType {:description "Device type to be used for the job.", :enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "SkuName", :values [{:description "DataBox.", :value "DataBox"} {:description "DataBoxDisk.", :value "DataBoxDisk"} {:description "DataBoxHeavy.", :value "DataBoxHeavy"}]}}, :shippingAddress #:reference{:definitions "ShippingAddress"}}, :required ["shippingAddress" "deviceType"], :type "object"}, :AccountCredentialDetails {:description "Credential details of the account.", :properties {:accountConnectionString {:description "Connection string of the account endpoint to use the account as a storage endpoint on the device.", :readOnly true, :type "string"}, :accountName {:description "Name of the account.", :readOnly true, :type "string"}, :shareCredentialDetails {:description "Per share level unencrypted access credentials.", :items #:reference{:definitions "ShareCredentialDetails"}, :readOnly true, :type "array"}}, :type "object"}, :AvailableSkusResult {:description "The available skus operation response.", :properties {:nextLink {:description "Link for the next set of skus.", :type "string"}, :value {:description "List of available skus.", :items #:reference{:definitions "SkuInformation"}, :readOnly true, :type "array"}}, :type "object"}, :DataBoxSecret {:description "The secrets related to a DataBox.", :properties {:accountCredentialDetails {:description "Per account level access credentials.", :items #:reference{:definitions "AccountCredentialDetails"}, :readOnly true, :type "array"}, :devicePassword {:description "Password for out of the box experience on device.", :readOnly true, :type "string"}, :deviceSerialNumber {:description "Serial number of the assigned device.", :readOnly true, :type "string"}, :encodedValidationCertPubKey {:description "The base 64 encoded public key to authenticate with the device", :readOnly true, :type "string"}, :networkConfigurations {:description "Network configuration of the appliance.", :items #:reference{:definitions "ApplianceNetworkConfiguration"}, :readOnly true, :type "array"}}, :type "object"}, :Operation {:description "Operation entity.", :properties {:display #:reference{:definitions "OperationDisplay"}, :name {:description "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}", :readOnly true, :type "string"}, :origin {:description "Origin of the operation. Can be : user|system|user,system", :readOnly true, :type "string"}, :properties #:reference{:definitions "OperationProperties"}}, :type "object"}, :SkuCapacity {:description "Capacity of the sku.", :properties {:maximum {:description "Maximum capacity in TB.", :readOnly true, :type "string"}, :usable {:description "Usable capacity in TB.", :readOnly true, :type "string"}}, :type "object"}, :ShippingAddress {:description "Shipping address where customer wishes to receive the device.", :properties {:stateOrProvince {:description "Name of the State or Province.", :type "string"}, :streetAddress1 {:description "Street Address line 1.", :type "string"}, :city {:description "Name of the City.", :type "string"}, :zipExtendedCode {:description "Extended Zip Code.", :type "string"}, :postalCode {:description "Postal code.", :type "string"}, :streetAddress3 {:description "Street Address line 3.", :type "string"}, :streetAddress2 {:description "Street Address line 2.", :type "string"}, :companyName {:description "Name of the company.", :type "string"}, :country {:description "Name of the Country.", :type "string"}, :addressType {:description "Type of address.", :enum ["None" "Residential" "Commercial"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "AddressType", :values [{:description "Address type not known.", :value "None"} {:description "Residential Address.", :value "Residential"} {:description "Commercial Address.", :value "Commercial"}]}}}, :required ["streetAddress1" "country" "postalCode"], :type "object"}, :CopyProgress {:description "Copy progress.", :properties {:accountId {:description "Id of the account where the data needs to be uploaded.", :readOnly true, :type "string"}, :bytesSentToCloud {:description "Amount of data uploaded by the job as of now.", :format "int64", :readOnly true, :type "integer"}, :filesProcessed {:description "Number of files processed by the job as of now.", :format "int64", :readOnly true, :type "integer"}, :storageAccountName {:description "Name of the storage account where the data needs to be uploaded.", :readOnly true, :type "string"}, :totalBytesToProcess {:description "Total amount of data to be processed by the job.", :format "int64", :readOnly true, :type "integer"}, :totalFilesToProcess {:description "Total number of files to be processed by the job.", :format "int64", :readOnly true, :type "integer"}}, :type "object"}, :JobErrorDetails {:description "Job Error Details for providing the information and recommended action.", :properties {:errorCode {:description "Code for the error.", :format "int32", :readOnly true, :type "integer"}, :errorMessage {:description "Message for the error.", :readOnly true, :type "string"}, :exceptionMessage {:description "Contains the non localized exception message", :readOnly true, :type "string"}, :recommendedAction {:description "Recommended action for the error.", :readOnly true, :type "string"}}, :type "object"}, :SkuProperties {:description "Properties of the sku.", :properties {:apiVersions {:description "Api versions that support this Sku.", :items {:type "string"}, :readOnly true, :type "array"}, :capacity #:reference{:definitions "SkuCapacity"}, :costs {:description "Cost of the Sku.", :items #:reference{:definitions "SkuCost"}, :readOnly true, :type "array"}, :destinationToServiceLocationMap {:description "The map of destination location to service location.", :items #:reference{:definitions "DestinationToServiceLocationMap"}, :readOnly true, :type "array"}, :disabledReason {:description "Reason why the Sku is disabled.", :enum ["None" "Country" "Region" "Feature" "OfferType" "NoSubscriptionInfo"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "SkuDisabledReason", :values [{:description "SKU is not disabled.", :value "None"} {:description "SKU is not available in the requested country.", :value "Country"} {:description "SKU is not available to push data to the requested Azure region.", :value "Region"} {:description "Required features are not enabled for the SKU.", :value "Feature"} {:description "Subscription does not have required offer types for the SKU.", :value "OfferType"} {:description "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification.", :value "NoSubscriptionInfo"}]}}, :disabledReasonMessage {:description "Message for why the Sku is disabled.", :readOnly true, :type "string"}, :requiredFeature {:description "Required feature to access the sku.", :readOnly true, :type "string"}}, :type "object"}, :UnencryptedCredentialsList {:description "List of unencrypted credentials for accessing device.", :properties {:nextLink {:description "Link for the next set of unencrypted credentials.", :type "string"}, :value {:description "List of unencrypted credentials.", :items #:reference{:definitions "UnencryptedCredentials"}, :type "array"}}, :type "object"}, :JobResourceList {:description "Job Resource Collection", :properties {:nextLink {:description "Link for the next set of job resources.", :type "string"}, :value {:description "List of job resources.", :items #:reference{:definitions "JobResource"}, :type "array"}}, :type "object"}, :DataBoxDiskCopyLogDetails {:allOf [#:reference{:definitions "CopyLogDetails"}], :description "Copy Log Details for a disk", :properties {:diskSerialNumber {:description "Disk Serial Number.", :readOnly true, :type "string"}, :errorLogLink {:description "Link for copy error logs.", :readOnly true, :type "string"}, :verboseLogLink {:description "Link for copy verbose logs.", :readOnly true, :type "string"}}, :type "object", :x-ms-discriminator-value "DataBoxDisk"}, :DataboxJobSecrets {:allOf [#:reference{:definitions "JobSecrets"}], :description "The secrets related to a DataBox job.", :properties {:podSecrets {:description "Contains the list of secret objects for a job.", :items #:reference{:definitions "DataBoxSecret"}, :type "array"}}, :type "object", :x-ms-discriminator-value "DataBox"}, :AvailableSkuRequest {:description "The filters for showing the available skus.", :properties {:country {:description "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements", :type "string"}, :location {:description "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01", :type "string"}, :skuNames {:description "Sku Names to filter for available skus", :items {:enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "SkuName", :values [{:description "DataBox.", :value "DataBox"} {:description "DataBoxDisk.", :value "DataBoxDisk"} {:description "DataBoxHeavy.", :value "DataBoxHeavy"}]}}, :type "array"}, :transferType {:description "Type of the transfer.", :enum ["ImportToAzure"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "TransferType", :values [{:description "Import data to azure.", :value "ImportToAzure"}]}}}, :required ["transferType" "country" "location"], :type "object"}, :DataBoxAccountCopyLogDetails {:allOf [#:reference{:definitions "CopyLogDetails"}], :description "Copy log details for a storage account of a DataBox job", :properties {:accountName {:description "Destination account name.", :readOnly true, :type "string"}, :copyLogLink {:description "Link for copy logs.", :readOnly true, :type "string"}}, :type "object", :x-ms-discriminator-value "DataBox"}, :DataBoxJobDetails {:allOf [#:reference{:definitions "JobDetails"}], :description "DataBox Job Details", :properties {:copyProgress {:description "Copy progress per storage account.", :items #:reference{:definitions "CopyProgress"}, :readOnly true, :type "array"}}, :required ["contactDetails" "shippingAddress" "destinationAccountDetails" "jobDetailsType"], :type "object", :x-ms-discriminator-value "DataBox"}, :OperationList {:description "Operation Collection.", :properties {:nextLink {:description "Link for the next set of operations.", :type "string"}, :value {:description "List of operations.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}, :type "object"}, :PackageShippingDetails {:description "Shipping details.", :properties {:carrierName {:description "Name of the carrier.", :readOnly true, :type "string"}, :trackingId {:description "Tracking Id of shipment.", :readOnly true, :type "string"}, :trackingUrl {:description "Url where shipment can be tracked.", :readOnly true, :type "string"}}, :type "object"}, :DestinationAccountDetails {:description "Details of the destination of the data", :discriminator "dataDestinationType", :properties {:accountId {:description "Arm Id of the destination where the data has to be moved.", :type "string"}, :dataDestinationType {:description "Data Destination Type.", :enum ["UnknownType" "StorageAccount" "ManagedDisk"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "DataDestinationType", :values [{:description "Unknown type.", :value "UnknownType"} {:description "Storage Accounts .", :value "StorageAccount"} {:description "Azure Managed disk storage.", :value "ManagedDisk"}]}}}, :required ["dataDestinationType"], :type "object"}, :DestinationToServiceLocationMap {:description "Map of destination location to service location", :properties {:destinationLocation {:description "Location of the destination.", :readOnly true, :type "string"}, :serviceLocation {:description "Location of the service.", :readOnly true, :type "string"}}, :type "object"}, :DataBoxDiskJobSecrets {:allOf [#:reference{:definitions "JobSecrets"}], :description "The secrets related to disk job.", :properties {:diskSecrets {:description "Contains the list of secrets object for that device.", :items #:reference{:definitions "DiskSecret"}, :readOnly true, :type "array"}, :isPasskeyUserDefined {:description "Whether passkey was provided by user.", :readOnly true, :type "boolean"}, :passKey {:description "PassKey for the disk Job.", :readOnly true, :type "string"}}, :type "object", :x-ms-discriminator-value "DataBoxDisk"}, :DataBoxHeavyAccountCopyLogDetails {:allOf [#:reference{:definitions "CopyLogDetails"}], :description "Copy log details for a storage account for DataBoxHeavy", :properties {:accountName {:description "Destination account name.", :readOnly true, :type "string"}, :copyLogLink {:description "Link for copy logs.", :items {:type "string"}, :readOnly true, :type "array"}}, :type "object", :x-ms-discriminator-value "DataBoxHeavy"}, :JobStages {:description "Job stages.", :properties {:displayName {:description "Display name of the job stage.", :readOnly true, :type "string"}, :errorDetails {:description "Error details for the stage.", :items #:reference{:definitions "JobErrorDetails"}, :readOnly true, :type "array"}, :jobStageDetails {:description "Job Stage Details", :readOnly true, :type "object"}, :stageName {:description "Name of the job stage.", :enum ["DeviceOrdered" "DevicePrepared" "Dispatched" "Delivered" "PickedUp" "AtAzureDC" "DataCopy" "Completed" "CompletedWithErrors" "Cancelled" "Failed_IssueReportedAtCustomer" "Failed_IssueDetectedAtAzureDC" "Aborted"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "StageName", :values [{:description "An order has been created.", :value "DeviceOrdered"} {:description "A device has been prepared for the order.", :value "DevicePrepared"} {:description "Device has been dispatched to the user of the order.", :value "Dispatched"} {:description "Device has been delivered to the user of the order.", :value "Delivered"} {:description "Device has been picked up from user and in transit to azure datacenter.", :value "PickedUp"} {:description "Device has been received at azure datacenter from the user.", :value "AtAzureDC"} {:description "Data copy from the device at azure datacenter.", :value "DataCopy"} {:description "Order has completed.", :value "Completed"} {:description "Order has completed with errors.", :value "CompletedWithErrors"} {:description "Order has been cancelled.", :value "Cancelled"} {:description "Order has failed due to issue reported by user.", :value "Failed_IssueReportedAtCustomer"} {:description "Order has failed due to issue detected at azure datacenter.", :value "Failed_IssueDetectedAtAzureDC"} {:description "Order has been aborted.", :value "Aborted"}]}}, :stageStatus {:description "Status of the job stage.", :enum ["None" "InProgress" "Succeeded" "Failed" "Cancelled" "Cancelling" "SucceededWithErrors"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "StageStatus", :values [{:description "No status available yet.", :value "None"} {:description "Stage is in progress.", :value "InProgress"} {:description "Stage has succeeded.", :value "Succeeded"} {:description "Stage has failed.", :value "Failed"} {:description "Stage has been cancelled.", :value "Cancelled"} {:description "Stage is cancelling.", :value "Cancelling"} {:description "Stage has succeeded with errors.", :value "SucceededWithErrors"}]}}, :stageTime {:description "Time for the job stage in UTC ISO 8601 format.", :format "date-time", :readOnly true, :type "string"}}, :type "object"}, :DestinationStorageAccountDetails {:allOf [#:reference{:definitions "DestinationAccountDetails"}], :description "Details for the destination storage account.", :properties {:storageAccountId {:description "Destination Storage Account Arm Id.", :type "string"}}, :required ["storageAccountId" "dataDestinationType"], :type "object", :x-ms-discriminator-value "StorageAccount"}, :ArmBaseObject {:description "Base class for all objects under resource.", :properties {:id {:description "Id of the object.", :readOnly true, :type "string"}, :name {:description "Name of the object.", :readOnly true, :type "string"}, :type {:description "Type of the object.", :readOnly true, :type "string"}}, :type "object"}, :CancellationReason {:description "Reason for cancellation.", :properties {:reason {:description "Reason for cancellation.", :type "string"}}, :required ["reason"], :type "object"}, :AddressValidationProperties {:description "The address validation output.", :properties {:alternateAddresses {:description "List of alternate addresses.", :items #:reference{:definitions "ShippingAddress"}, :readOnly true, :type "array"}, :validationStatus {:description "The address validation status.", :enum ["Valid" "Invalid" "Ambiguous"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "AddressValidationStatus", :values [{:description "Address provided is valid.", :value "Valid"} {:description "Address provided is invalid or not supported.", :value "Invalid"} {:description "Address provided is ambiguous, please choose one of the alternate addresses returned.", :value "Ambiguous"}]}}}, :type "object"}, :ShipmentPickUpRequest {:description "Shipment pick up request details.", :properties {:endTime {:description "Maximum date before which the pick up should commence, this must be in local time of pick up area.", :format "date-time", :type "string"}, :shipmentLocation {:description "Shipment Location in the pickup place. Eg.front desk", :type "string"}, :startTime {:description "Minimum date after which the pick up should commence, this must be in local time of pick up area.", :format "date-time", :type "string"}}, :required ["startTime" "endTime" "shipmentLocation"], :type "object"}, :SkuCost {:description "Describes metadata for retrieving price info.", :properties {:meterId {:description "Meter id of the Sku.", :readOnly true, :type "string"}, :meterType {:description "The type of the meter.", :readOnly true, :type "string"}}, :type "object"}, :DataBoxDiskJobDetails {:allOf [#:reference{:definitions "JobDetails"}], :description "DataBox Disk Job Details.", :properties {:copyProgress {:description "Copy progress per disk.", :items #:reference{:definitions "DataBoxDiskCopyProgress"}, :readOnly true, :type "array"}, :disksAndSizeDetails {:additionalProperties {:format "int32", :type "integer"}, :description "Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.", :readOnly true, :type "object"}, :passkey {:description "User entered passkey for DataBox Disk job.", :type "string"}, :preferredDisks {:additionalProperties {:format "int32", :type "integer"}, :description "User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.", :type "object"}}, :required ["contactDetails" "shippingAddress" "destinationAccountDetails" "jobDetailsType"], :type "object", :x-ms-discriminator-value "DataBoxDisk"}, :ContactDetails {:description "Contact Details.", :properties {:contactName {:description "Contact name of the person.", :type "string"}, :emailList {:description "List of Email-ids to be notified about job progress.", :items {:type "string"}, :type "array"}, :mobile {:description "Mobile number of the contact person.", :type "string"}, :notificationPreference {:description "Notification preference for a job stage.", :items #:reference{:definitions "NotificationPreference"}, :type "array"}, :phone {:description "Phone number of the contact person.", :type "string"}, :phoneExtension {:description "Phone extension number of the contact person.", :type "string"}}, :required ["contactName" "phone" "emailList"], :type "object"}, :DataBoxHeavySecret {:description "The secrets related to a DataBoxHeavy.", :properties {:accountCredentialDetails {:description "Per account level access credentials.", :items #:reference{:definitions "AccountCredentialDetails"}, :readOnly true, :type "array"}, :devicePassword {:description "Password for out of the box experience on device.", :readOnly true, :type "string"}, :deviceSerialNumber {:description "Serial number of the assigned device.", :readOnly true, :type "string"}, :encodedValidationCertPubKey {:description "The base 64 encoded public key to authenticate with the device", :readOnly true, :type "string"}, :networkConfigurations {:description "Network configuration of the appliance.", :items #:reference{:definitions "ApplianceNetworkConfiguration"}, :readOnly true, :type "array"}}, :type "object"}, :DiskSecret {:description "Contains all the secrets of a Disk.", :properties {:bitLockerKey {:description "Bit Locker key of the disk which can be used to unlock the disk to copy data.", :readOnly true, :type "string"}, :diskSerialNumber {:description "Serial number of the assigned disk.", :readOnly true, :type "string"}}, :type "object"}, :Preferences {:description "Preferences related to the order", :properties {:preferredDataCenterRegion {:items {:type "string"}, :type "array"}}, :type "object"}, :UnencryptedCredentials {:description "Unencrypted credentials for accessing device.", :properties {:jobName {:description "Name of the job.", :readOnly true, :type "string"}, :jobSecrets #:reference{:definitions "JobSecrets"}}, :type "object"}, :JobDetails {:description "Job details.", :discriminator "jobDetailsType", :properties {:chainOfCustodySasKey {:description "Shared access key to download the chain of custody logs", :readOnly true, :type "string"}, :expectedDataSizeInTeraBytes {:description "The expected size of the data, which needs to be transferred in this job, in terabytes.", :format "int32", :type "integer"}, :returnPackage #:reference{:definitions "PackageShippingDetails"}, :jobDetailsType {:description "Indicates the type of job details.", :enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :type "string", :x-ms-enum {:modelAsExtensible false, :name "ClassDiscriminator", :values [{:description "DataBox orders.", :value "DataBox"} {:description "DataBoxDisk orders.", :value "DataBoxDisk"} {:description "DataBoxHeavy orders.", :value "DataBoxHeavy"}]}}, :errorDetails {:description "Error details for failure. This is optional.", :items #:reference{:definitions "JobErrorDetails"}, :readOnly true, :type "array"}, :preferences #:reference{:definitions "Preferences"}, :copyLogDetails {:description "List of copy log details.", :items #:reference{:definitions "CopyLogDetails"}, :readOnly true, :type "array"}, :contactDetails #:reference{:definitions "ContactDetails"}, :destinationAccountDetails {:description "Destination account details.", :items #:reference{:definitions "DestinationAccountDetails"}, :type "array"}, :shippingAddress #:reference{:definitions "ShippingAddress"}, :reverseShipmentLabelSasKey {:description "Shared access key to download the return shipment label", :readOnly true, :type "string"}, :deliveryPackage #:reference{:definitions "PackageShippingDetails"}, :jobStages {:description "List of stages that run in the job.", :items #:reference{:definitions "JobStages"}, :readOnly true, :type "array"}}, :required ["contactDetails" "shippingAddress" "destinationAccountDetails" "jobDetailsType"], :type "object"}, :OperationProperties {:description "Operation properties.", :properties {}, :type "object"}, :Resource {:description "Model of the Resource.", :properties {:location {:description "The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.", :type "string", :x-ms-mutability ["read" "create"]}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).", :type "object"}}, :required ["location" "sku"], :type "object", :x-ms-azure-resource true}, :CopyLogDetails {:description "Details for log generated during copy.", :discriminator "copyLogDetailsType", :properties {:copyLogDetailsType {:description "Indicates the type of job details.", :enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible false, :name "ClassDiscriminator", :values [{:description "DataBox orders.", :value "DataBox"} {:description "DataBoxDisk orders.", :value "DataBoxDisk"} {:description "DataBoxHeavy orders.", :value "DataBoxHeavy"}]}}}, :type "object"}, :OperationDisplay {:description "Operation display", :properties {:description {:description "Localized description of the operation for display purpose.", :type "string"}, :operation {:description "Localized name of the operation for display purpose.", :type "string"}, :provider {:description "Provider name.", :type "string"}, :resource {:description "Resource name.", :type "string"}}, :type "object"}, :ApplianceNetworkConfiguration {:description "The Network Adapter configuration of a DataBox.", :properties {:macAddress {:description "Mac Address.", :readOnly true, :type "string"}, :name {:description "Name of the network.", :readOnly true, :type "string"}}, :type "object"}, :ShareCredentialDetails {:description "Credential details of the shares in account.", :properties {:password {:description "Password for the share.", :readOnly true, :type "string"}, :shareName {:description "Name of the share.", :readOnly true, :type "string"}, :shareType {:description "Type of the share.", :enum ["UnknownType" "HCS" "BlockBlob" "PageBlob" "AzureFile" "ManagedDisk"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "ShareDestinationFormatType", :values [{:description "Unknown format.", :value "UnknownType"} {:description "StorSimple data format.", :value "HCS"} {:description "Azure storage block blob format.", :value "BlockBlob"} {:description "Azure storage page blob format.", :value "PageBlob"} {:description "Azure storage file format.", :value "AzureFile"} {:description "Azure Compute Disk.", :value "ManagedDisk"}]}}, :supportedAccessProtocols {:description "Access protocols supported on the device.", :items {:enum ["SMB" "NFS"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "AccessProtocol", :values [{:description "Server Message Block protocol(SMB).", :value "SMB"} {:description "Network File System protocol(NFS).", :value "NFS"}]}}, :readOnly true, :type "array"}, :userName {:description "User name for the share.", :readOnly true, :type "string"}}, :type "object"}, :Error {:description "Top level error for the job.", :properties {:code {:description "Error code that can be used to programmatically identify the error.", :readOnly true, :type "string"}, :message {:description "Describes the error in detail and provides debugging information.", :readOnly true, :type "string"}}, :type "object"}, :Sku {:description "The Sku.", :properties {:displayName {:description "The display name of the sku.", :type "string"}, :family {:description "The sku family.", :type "string"}, :name {:description "The sku name.", :enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "SkuName", :values [{:description "DataBox.", :value "DataBox"} {:description "DataBoxDisk.", :value "DataBoxDisk"} {:description "DataBoxHeavy.", :value "DataBoxHeavy"}]}}}, :required ["name"], :type "object"}, :DataBoxHeavyJobSecrets {:allOf [#:reference{:definitions "JobSecrets"}], :description "The secrets related to a DataBoxHeavy job.", :properties {:cabinetPodSecrets {:description "Contains the list of secret objects for a DataBoxHeavy job.", :items #:reference{:definitions "DataBoxHeavySecret"}, :readOnly true, :type "array"}}, :type "object", :x-ms-discriminator-value "DataBoxHeavy"}, :JobResource {:allOf [#:reference{:definitions "Resource"}], :description "Job Resource.", :properties {:id {:description "Id of the object.", :readOnly true, :type "string"}, :name {:description "Name of the object.", :readOnly true, :type "string"}, :properties #:reference{:definitions "JobProperties"}, :type {:description "Type of the object.", :readOnly true, :type "string"}}, :required ["properties"], :type "object"}, :NotificationPreference {:description "Notification preference for a job stage.", :properties {:sendNotification {:description "Notification is required or not.", :type "boolean"}, :stageName {:description "Name of the stage.", :enum ["DevicePrepared" "Dispatched" "Delivered" "PickedUp" "AtAzureDC" "DataCopy"], :type "string", :x-ms-enum {:modelAsExtensible true, :name "NotificationStageName", :values [{:description "Notification at device prepared stage.", :value "DevicePrepared"} {:description "Notification at device dispatched stage.", :value "Dispatched"} {:description "Notification at device delivered stage.", :value "Delivered"} {:description "Notification at device picked up from user stage.", :value "PickedUp"} {:description "Notification at device received at azure datacenter stage.", :value "AtAzureDC"} {:description "Notification at data copy started stage.", :value "DataCopy"}]}}}, :required ["stageName" "sendNotification"], :type "object"}, :JobProperties {:description "Job Properties", :properties {:cancellationReason {:description "Reason for cancellation.", :readOnly true, :type "string"}, :details #:reference{:definitions "JobDetails"}, :error #:reference{:definitions "Error"}, :isCancellable {:description "Describes whether the job is cancellable or not.", :readOnly true, :type "boolean"}, :isDeletable {:description "Describes whether the job is deletable or not.", :readOnly true, :type "boolean"}, :isShippingAddressEditable {:description "Describes whether the shipping address is editable or not.", :readOnly true, :type "boolean"}, :startTime {:description "Time at which the job was started in UTC ISO 8601 format.", :format "date-time", :readOnly true, :type "string"}, :status {:description "Name of the stage which is in progress.", :enum ["DeviceOrdered" "DevicePrepared" "Dispatched" "Delivered" "PickedUp" "AtAzureDC" "DataCopy" "Completed" "CompletedWithErrors" "Cancelled" "Failed_IssueReportedAtCustomer" "Failed_IssueDetectedAtAzureDC" "Aborted"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible true, :name "StageName", :values [{:description "An order has been created.", :value "DeviceOrdered"} {:description "A device has been prepared for the order.", :value "DevicePrepared"} {:description "Device has been dispatched to the user of the order.", :value "Dispatched"} {:description "Device has been delivered to the user of the order.", :value "Delivered"} {:description "Device has been picked up from user and in transit to azure datacenter.", :value "PickedUp"} {:description "Device has been received at azure datacenter from the user.", :value "AtAzureDC"} {:description "Data copy from the device at azure datacenter.", :value "DataCopy"} {:description "Order has completed.", :value "Completed"} {:description "Order has completed with errors.", :value "CompletedWithErrors"} {:description "Order has been cancelled.", :value "Cancelled"} {:description "Order has failed due to issue reported by user.", :value "Failed_IssueReportedAtCustomer"} {:description "Order has failed due to issue detected at azure datacenter.", :value "Failed_IssueDetectedAtAzureDC"} {:description "Order has been aborted.", :value "Aborted"}]}}}, :type "object"}, :JobSecrets {:description "The base class for the secrets", :discriminator "jobSecretsType", :properties {:jobSecretsType {:description "Used to indicate what type of job secrets object.", :enum ["DataBox" "DataBoxDisk" "DataBoxHeavy"], :readOnly true, :type "string", :x-ms-enum {:modelAsExtensible false, :name "ClassDiscriminator", :values [{:description "DataBox orders.", :value "DataBox"} {:description "DataBoxDisk orders.", :value "DataBoxDisk"} {:description "DataBoxHeavy orders.", :value "DataBoxHeavy"}]}}}, :type "object"}}}