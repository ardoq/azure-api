{:scheme "https", :host "azure.local", :info {:title "LUIS Programmatic", :version "v2.0"}, :ops {:Features_AddPhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists", :description "Creates a new phraselist feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true.", :in "body", :name "phraselistCreateObject", :required true, :schema #:reference{:definitions "PhraselistCreateObject"}}], :verb :post}, :Model_UpdateClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Updates the closed list model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The new entity name and words list.", :in "body", :name "closedListModelUpdateObject", :required true, :schema #:reference{:definitions "ClosedListModelUpdateObject"}}], :verb :put}, :Model_PatchClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Adds a batch of sublists to an existing closedlist.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "A words list batch.", :in "body", :name "closedListModelPatchObject", :required true, :schema #:reference{:definitions "ClosedListModelPatchObject"}}], :verb :patch}, :Examples_List {:path "/apps/{appId}/versions/{versionId}/examples", :description "Returns examples to be reviewed.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdateHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Updates the name and children of a hierarchical entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "Model containing names of the children of the hierarchical entity.", :in "body", :name "hierarchicalModelUpdateObject", :required true, :schema #:reference{:definitions "HierarchicalEntityModel"}}], :verb :put}, :Model_GetClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Gets information of a closed list model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"}], :verb :get}, :Model_DeleteCustomPrebuiltDomain {:path "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}", :description "Deletes a prebuilt domain's models from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "Domain name.", :in "path", :name "domainName", :required true, :type "string"}], :verb :delete}, :Model_GetPrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}", :description "Gets information about the prebuilt entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The prebuilt entity extractor ID.", :format "uuid", :in "path", :name "prebuiltId", :required true, :type "string"}], :verb :get}, :Features_List {:path "/apps/{appId}/versions/{versionId}/features", :description "Gets all the extraction features for the specified application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Apps_Update {:path "/apps/{appId}", :description "Updates the name or description of the application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing Name and Description of the application.", :in "body", :name "applicationUpdateObject", :required true, :schema #:reference{:definitions "ApplicationUpdateObject"}}], :verb :put}, :Apps_Import {:path "/apps/import", :description "Imports an application to LUIS, the application's structure should be included in in the request body.", :parameters [{:description "The application name to create. If not specified, the application name will be read from the imported object.", :in "query", :name "appName", :type "string"} {:description "A LUIS application structure.", :in "body", :name "luisApp", :required true, :schema #:reference{:definitions "LuisApp"}}], :verb :post}, :Apps_Add {:path "/apps/", :description "Creates a new LUIS app.", :parameters [{:description "A model containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is 0.1. Note: the culture cannot be changed after the app is created.", :in "body", :name "applicationCreateObject", :required true, :schema #:reference{:definitions "ApplicationCreateObject"}}], :verb :post}, :Features_ListPhraseLists {:path "/apps/{appId}/versions/{versionId}/phraselists", :description "Gets all the phraselist features.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Features_GetPhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Gets phraselist feature info.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be retrieved.", :in "path", :name "phraselistId", :required true, :type "integer"}], :verb :get}, :Permissions_Add {:path "/apps/{appId}/permissions", :description "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing the user's email address.", :in "body", :name "userToAdd", :required true, :schema #:reference{:definitions "UserCollaborator"}}], :verb :post}, :Apps_ListCortanaEndpoints {:path "/apps/assistants", :description "Gets the endpoint URLs for the prebuilt Cortana applications.", :parameters nil, :verb :get}, :Model_AddIntent {:path "/apps/{appId}/versions/{versionId}/intents", :description "Adds an intent classifier to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the new intent classifier.", :in "body", :name "intentCreateObject", :required true, :schema #:reference{:definitions "ModelCreateObject"}}], :verb :post}, :Model_AddSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists", :description "Adds a list to an existing closed list.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "Words list.", :in "body", :name "wordListCreateObject", :required true, :schema #:reference{:definitions "WordListObject"}}], :verb :post}, :Examples_Add {:path "/apps/{appId}/versions/{versionId}/example", :description "Adds a labeled example to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "An example label with the expected intent and entities.", :in "body", :name "exampleLabelObject", :required true, :schema #:reference{:definitions "ExampleLabelObject"}}], :verb :post}, :Model_AddPrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts", :description "Adds a list of prebuilt entity extractors to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "An array of prebuilt entity extractor names.", :in "body", :name "prebuiltExtractorNames", :required true, :schema #:reference{:definitions "PrebuiltExtractorNames"}}], :verb :post}, :Apps_ListUsageScenarios {:path "/apps/usagescenarios", :description "Gets the application available usage scenarios.", :parameters nil, :verb :get}, :Versions_Export {:path "/apps/{appId}/versions/{versionId}/export", :description "Exports a LUIS application to JSON format.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_ListCompositeEntities {:path "/apps/{appId}/versions/{versionId}/compositeentities", :description "Gets information about the composite entity models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}", :description "Deletes a closed list model from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list model ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"}], :verb :delete}, :Model_GetHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Gets information about the hierarchical entity child model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"}], :verb :get}, :Versions_Get {:path "/apps/{appId}/versions/{versionId}/", :description "Gets the version info.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Versions_Clone {:path "/apps/{appId}/versions/{versionId}/clone", :description "Creates a new version using the current snapshot of the selected application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the new version ID.", :in "body", :name "versionCloneObject", :schema #:reference{:definitions "TaskUpdateObject"}}], :verb :post}, :Apps_ListSupportedCultures {:path "/apps/cultures", :description "Gets the supported application cultures.", :parameters nil, :verb :get}, :Model_AddCustomPrebuiltIntent {:path "/apps/{appId}/versions/{versionId}/customprebuiltintents", :description "Adds a custom prebuilt intent model to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the custom prebuilt intent and the name of the domain to which this model belongs.", :in "body", :name "prebuiltDomainModelCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainModelCreateObject"}}], :verb :post}, :Features_CreatePatternFeature {:path "/apps/{appId}/versions/{versionId}/patterns", :description "[DEPRECATED NOTICE: This operation will soon be removed] Creates a new pattern feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The Name and Pattern of the feature.", :in "body", :name "patternCreateObject", :required true, :schema #:reference{:definitions "PatternCreateObject"}}], :verb :post}, :Train_GetStatus {:path "/apps/{appId}/versions/{versionId}/train", :description "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Versions_Update {:path "/apps/{appId}/versions/{versionId}/", :description "Updates the name or description of the application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing Name and Description of the application.", :in "body", :name "versionUpdateObject", :required true, :schema #:reference{:definitions "TaskUpdateObject"}}], :verb :put}, :Apps_ListAvailableCustomPrebuiltDomainsForCulture {:path "/apps/customprebuiltdomains/{culture}", :description "Gets all the available custom prebuilt domains for a specific culture.", :parameters [{:description "Culture.", :in "path", :name "culture", :required true, :type "string"}], :verb :get}, :Permissions_Delete {:path "/apps/{appId}/permissions", :description "Removes a user from the allowed list of users to access this LUIS application. Users are removed using their email address.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing the user's email address.", :in "body", :name "userToDelete", :required true, :schema #:reference{:definitions "UserCollaborator"}}], :verb :delete}, :Apps_AddCustomPrebuiltDomain {:path "/apps/customprebuiltdomains", :description "Adds a prebuilt domain along with its models as a new application.", :parameters [{:description "A prebuilt domain create object containing the name and culture of the domain.", :in "body", :name "prebuiltDomainCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainCreateObject"}}], :verb :post}, :Model_AddClosedList {:path "/apps/{appId}/versions/{versionId}/closedlists", :description "Adds a closed list model to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the name and words for the new closed list entity extractor.", :in "body", :name "closedListModelCreateObject", :required true, :schema #:reference{:definitions "ClosedListModelCreateObject"}}], :verb :post}, :Model_AddHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities", :description "Adds a hierarchical entity extractor to the application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the name and children of the new entity extractor.", :in "body", :name "hierarchicalModelCreateObject", :required true, :schema #:reference{:definitions "HierarchicalEntityModel"}}], :verb :post}, :Versions_Import {:path "/apps/{appId}/versions/import", :description "Imports a new version into a LUIS application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "The new versionId to import. If not specified, the versionId will be read from the imported object.", :in "query", :name "versionId", :type "string"} {:description "A LUIS application structure.", :in "body", :name "luisApp", :required true, :schema #:reference{:definitions "LuisApp"}}], :verb :post}, :Examples_Batch {:path "/apps/{appId}/versions/{versionId}/examples", :description "Adds a batch of labeled examples to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "Array of examples.", :in "body", :name "exampleLabelObjectArray", :required true, :schema #:reference{:definitions "ExampleLabelObjectArray"}}], :verb :post}, :Model_DeletePrebuilt {:path "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}", :description "Deletes a prebuilt entity extractor from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The prebuilt entity extractor ID.", :format "uuid", :in "path", :name "prebuiltId", :required true, :type "string"}], :verb :delete}, :Model_UpdateEntity {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Updates the name of an entity extractor.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} {:description "A model object containing the new entity extractor name.", :in "body", :name "modelUpdateObject", :required true, :schema #:reference{:definitions "ModelUpdateObject"}}], :verb :put}, :Permissions_List {:path "/apps/{appId}/permissions", :description "Gets the list of user emails that have permissions to access your application.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Examples_Delete {:path "/apps/{appId}/versions/{versionId}/examples/{exampleId}", :description "Deletes the labeled example with the specified ID.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The example ID.", :in "path", :name "exampleId", :required true, :type "integer"}], :verb :delete}, :Model_GetEntity {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Gets information about the entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :get}, :Model_ListIntents {:path "/apps/{appId}/versions/{versionId}/intents", :description "Gets information about the intent models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_UpdateHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Renames a single child in an existing hierarchical entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"} {:description "Model object containing new name of the hierarchical entity child.", :in "body", :name "hierarchicalChildModelUpdateObject", :required true, :schema {:properties {:name {:type "string"}}, :type "object"}}], :verb :put}, :Model_ListCustomPrebuiltEntities {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities", :description "Gets all custom prebuilt entities information of this application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Apps_Get {:path "/apps/{appId}", :description "Gets the application info.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Model_DeleteHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}", :description "Deletes a hierarchical entity extractor child from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "hChildId", :required true, :type "string"}], :verb :delete}, :Model_ListPrebuiltEntities {:path "/apps/{appId}/versions/{versionId}/listprebuilts", :description "Gets all the available prebuilt entity extractors for the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_DeleteIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Deletes an intent classifier from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:default false, :description "Also delete the intent's utterances (true). Or move the utterances to the None intent (false - the default value).", :in "query", :name "deleteUtterances", :type "boolean"}], :verb :delete}, :Apps_ListAvailableCustomPrebuiltDomains {:path "/apps/customprebuiltdomains", :description "Gets all the available custom prebuilt domains for all cultures.", :parameters nil, :verb :get}, :Apps_List {:path "/apps/", :description "Lists all of the user applications.", :parameters [#:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Apps_GetSettings {:path "/apps/{appId}/settings", :description "Get the application settings.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Apps_DownloadQueryLogs {:path "/apps/{appId}/querylogs", :description "Gets the query logs of the past month for the application.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Train_TrainVersion {:path "/apps/{appId}/versions/{versionId}/train", :description "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :post}, :Model_UpdateCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Updates the composite entity extractor.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "A model object containing the new entity extractor name and children.", :in "body", :name "compositeModelUpdateObject", :required true, :schema #:reference{:definitions "CompositeEntityModel"}}], :verb :put}, :Apps_UpdateSettings {:path "/apps/{appId}/settings", :description "Updates the application settings.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "An object containing the new application settings.", :in "body", :name "applicationSettingUpdateObject", :required true, :schema #:reference{:definitions "ApplicationSettingUpdateObject"}}], :verb :put}, :Features_UpdatePhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Updates the phrases, the state and the name of the phraselist feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be updated.", :in "path", :name "phraselistId", :required true, :type "integer"} {:description "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature.", :in "body", :name "phraselistUpdateObject", :schema #:reference{:definitions "PhraselistUpdateObject"}}], :verb :put}, :Model_AddCompositeEntityChild {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children", :description "Creates a single child in an existing composite entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "A model object containing the name of the new composite child model.", :in "body", :name "compositeChildModelCreateObject", :required true, :schema {:properties {:name {:type "string"}}, :type "object"}}], :verb :post}, :Features_DeletePhraseList {:path "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}", :description "Deletes a phraselist feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The ID of the feature to be deleted.", :in "path", :name "phraselistId", :required true, :type "integer"}], :verb :delete}, :Model_AddEntity {:path "/apps/{appId}/versions/{versionId}/entities", :description "Adds an entity extractor to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name for the new entity extractor.", :in "body", :name "modelCreateObject", :required true, :schema #:reference{:definitions "ModelCreateObject"}}], :verb :post}, :Model_ListEntities {:path "/apps/{appId}/versions/{versionId}/entities", :description "Gets information about the entity models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Features_GetPatternFeatureInfo {:path "/apps/{appId}/versions/{versionId}/patterns/{patternId}", :description "[DEPRECATED NOTICE: This operation will soon be removed] Gets the specified pattern feature's info.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern feature ID.", :in "path", :name "patternId", :required true, :type "integer"}], :verb :get}, :Model_GetHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Gets information about the hierarchical entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"}], :verb :get}, :Permissions_Update {:path "/apps/{appId}/permissions", :description "Replaces the current users access list with the one sent in the body. If an empty list is sent, all access to other users will be removed.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "A model containing a list of user's email addresses.", :in "body", :name "collaborators", :required true, :schema #:reference{:definitions "CollaboratorsArray"}}], :verb :put}, :Model_UpdateIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Updates the name of an intent classifier.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} {:description "A model object containing the new intent classifier name.", :in "body", :name "modelUpdateObject", :required true, :schema #:reference{:definitions "ModelUpdateObject"}}], :verb :put}, :Model_ListModels {:path "/apps/{appId}/versions/{versionId}/models", :description "Gets information about the application version models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Features_GetApplicationVersionPatternFeatures {:path "/apps/{appId}/versions/{versionId}/patterns", :description "[DEPRECATED NOTICE: This operation will soon be removed] Gets all the pattern features.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Deletes a composite entity extractor from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"}], :verb :delete}, :Apps_Delete {:path "/apps/{appId}", :description "Deletes an application.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :delete}, :Versions_Delete {:path "/apps/{appId}/versions/{versionId}/", :description "Deletes an application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :delete}, :Model_GetCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}", :description "Gets information about the composite entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"}], :verb :get}, :Apps_ListEndpoints {:path "/apps/{appId}/endpoints", :description "Returns the available endpoint deployment regions and URLs.", :parameters [#:reference{:parameters "AppIdInPath"}], :verb :get}, :Versions_List {:path "/apps/{appId}/versions", :description "Gets the application versions info.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_ListPrebuilts {:path "/apps/{appId}/versions/{versionId}/prebuilts", :description "Gets information about the prebuilt entity models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Versions_DeleteUnlabelledUtterance {:path "/apps/{appId}/versions/{versionId}/suggest", :description "Deleted an unlabelled utterance.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The utterance text to delete.", :in "body", :name "utterance", :required true, :schema {:type "string"}}], :verb :delete}, :Features_UpdatePatternFeature {:path "/apps/{appId}/versions/{versionId}/patterns/{patternId}", :description "[DEPRECATED NOTICE: This operation will soon be removed] Updates the pattern, the name and the state of the pattern feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern feature ID.", :in "path", :name "patternId", :required true, :type "integer"} {:description "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to update the feature.", :in "body", :name "patternUpdateObject", :required true, :schema #:reference{:definitions "PatternUpdateObject"}}], :verb :put}, :Model_AddCustomPrebuiltEntity {:path "/apps/{appId}/versions/{versionId}/customprebuiltentities", :description "Adds a custom prebuilt entity model to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.", :in "body", :name "prebuiltDomainModelCreateObject", :required true, :schema #:reference{:definitions "PrebuiltDomainModelCreateObject"}}], :verb :post}, :Apps_Publish {:path "/apps/{appId}/publish", :description "Publishes a specific version of the application.", :parameters [#:reference{:parameters "AppIdInPath"} {:description "The application publish object. The region is the target region that the application is published to.", :in "body", :name "applicationPublishObject", :required true, :schema #:reference{:definitions "ApplicationPublishObject"}}], :verb :post}, :Apps_ListDomains {:path "/apps/domains", :description "Gets the available application domains.", :parameters nil, :verb :get}, :Model_GetEntitySuggestions {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest", :description "Get suggestion examples that would improve the accuracy of the entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The target entity extractor model to enhance.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteHierarchicalEntity {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}", :description "Deletes a hierarchical entity extractor from the application version.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"}], :verb :delete}, :Model_ListClosedLists {:path "/apps/{appId}/versions/{versionId}/closedlists", :description "Gets information about the closedlist models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_DeleteSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}", :description "Deletes a sublist of a specific closed list model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The sublist ID.", :in "path", :name "subListId", :required true, :type "integer"}], :verb :delete}, :Model_AddHierarchicalEntityChild {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children", :description "Creates a single child in an existing hierarchical entity model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "HEntityIdInPath"} {:description "A model object containing the name of the new hierarchical child model.", :in "body", :name "hierarchicalChildModelCreateObject", :required true, :schema {:properties {:name {:type "string"}}, :type "object"}}], :verb :post}, :Model_DeleteCompositeEntityChild {:path "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}", :description "Deletes a composite entity extractor child from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "CEntityIdInPath"} {:description "The hierarchical entity extractor child ID.", :format "uuid", :in "path", :name "cChildId", :required true, :type "string"}], :verb :delete}, :Model_GetIntent {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}", :description "Gets information about the intent model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"}], :verb :get}, :Model_DeleteEntity {:path "/apps/{appId}/versions/{versionId}/entities/{entityId}", :description "Deletes an entity extractor from the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The entity extractor ID.", :format "uuid", :in "path", :name "entityId", :required true, :type "string"}], :verb :delete}, :Model_GetIntentSuggestions {:path "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest", :description "Suggests examples that would improve the accuracy of the intent model.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "IntentIdInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_ListCustomPrebuiltModels {:path "/apps/{appId}/versions/{versionId}/customprebuiltmodels", :description "Gets all custom prebuilt models information of this application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}, :Model_AddCompositeEntity {:path "/apps/{appId}/versions/{versionId}/compositeentities", :description "Adds a composite entity extractor to the application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A model containing the name and children of the new entity extractor.", :in "body", :name "compositeModelCreateObject", :required true, :schema #:reference{:definitions "CompositeEntityModel"}}], :verb :post}, :Model_ListHierarchicalEntities {:path "/apps/{appId}/versions/{versionId}/hierarchicalentities", :description "Gets information about the hierarchical entity models.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} #:reference{:parameters "SkipInPath"} #:reference{:parameters "TakeInPath"}], :verb :get}, :Model_AddCustomPrebuiltDomain {:path "/apps/{appId}/versions/{versionId}/customprebuiltdomains", :description "Adds a customizable prebuilt domain along with all of its models to this application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "A prebuilt domain create object containing the name of the domain.", :in "body", :name "prebuiltDomainObject", :required true, :schema #:reference{:definitions "PrebuiltDomainCreateBaseObject"}}], :verb :post}, :Model_UpdateSubList {:path "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}", :description "Updates one of the closed list's sublists.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The closed list entity extractor ID.", :format "uuid", :in "path", :name "clEntityId", :required true, :type "string"} {:description "The sublist ID.", :in "path", :name "subListId", :required true, :type "integer"} {:description "A sublist update object containing the new canonical form and the list of words.", :in "body", :name "wordListBaseUpdateObject", :required true, :schema #:reference{:definitions "WordListBaseUpdateObject"}}], :verb :put}, :Features_DeletePatternFeature {:path "/apps/{appId}/versions/{versionId}/patterns/{patternId}", :description "[DEPRECATED NOTICE: This operation will soon be removed] Deletes a pattern feature.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"} {:description "The pattern feature ID.", :in "path", :name "patternId", :required true, :type "integer"}], :verb :delete}, :Model_ListCustomPrebuiltIntents {:path "/apps/{appId}/versions/{versionId}/customprebuiltintents", :description "Gets custom prebuilt intents information of this application.", :parameters [#:reference{:parameters "AppIdInPath"} #:reference{:parameters "VersionIdInPath"}], :verb :get}}, :parameters {:AppIdInPath {:description "The application ID.", :format "uuid", :in "path", :name "appId", :required true, :type "string", :x-ms-parameter-location "method"}, :CEntityIdInPath {:description "The composite entity extractor ID.", :format "uuid", :in "path", :name "cEntityId", :required true, :type "string", :x-ms-parameter-location "method"}, :HEntityIdInPath {:description "The hierarchical entity extractor ID.", :format "uuid", :in "path", :name "hEntityId", :required true, :type "string", :x-ms-parameter-location "method"}, :IntentIdInPath {:description "The intent classifier ID.", :format "uuid", :in "path", :name "intentId", :required true, :type "string", :x-ms-parameter-location "method"}, :SkipInPath {:default 0, :description "The number of entries to skip. Default value is 0.", :in "query", :minimum 0, :name "skip", :type "integer", :x-ms-parameter-location "method"}, :TakeInPath {:default 100, :description "The number of entries to return. Maximum page size is 500. Default is 100.", :in "query", :maximum 500, :minimum 0, :name "take", :type "integer", :x-ms-parameter-location "method"}, :VersionIdInPath {:description "The version ID.", :in "path", :name "versionId", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:CustomPrebuiltModel {:allOf [#:reference{:definitions "ModelInfo"} #:reference{:definitions "IntentClassifier"} #:reference{:definitions "EntityExtractor"}], :description "A Custom Prebuilt model."}, :ClosedListEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"}], :description "Closed List Entity Extractor.", :properties {:subLists {:description "List of sub-lists.", :items #:reference{:definitions "SubClosedListResponse"}, :type "array"}}, :type "object", :x-ms-discriminator-value "Closed List Entity Extractor"}, :PersonalAssistantsResponse {:description "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.", :properties {:endpointKeys #:reference{:definitions "EndpointKeys"}, :endpointUrls #:reference{:definitions "PersonalAssistantUrls"}}, :type "object"}, :PhraseListFeatureInfo {:allOf [#:reference{:definitions "FeatureInfoObject"}], :description "Phraselist Feature.", :properties {:isExchangeable {:description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :phrases {:description "A list of comma-separated values.", :type "string"}}, :type "object"}, :OperationError {:description "Operation error details when invoking an operation on the API.", :properties {:code {:type "string"}, :message {:type "string"}}, :type "object"}, :ProductionOrStagingEndpointInfo {:allOf [#:reference{:definitions "EndpointInfo"}], :type "object"}, :AvailablePrebuiltEntityModels {:description "List of Available Prebuilt entity models.", :items #:reference{:definitions "AvailablePrebuiltEntityModel"}, :type "array"}, :SubClosedListResponse {:allOf [#:reference{:definitions "SubClosedList"}], :description "Sublist of items for a Closed list.", :properties {:id {:description "The sublist ID", :example "123456", :type "integer", :x-nullable false}}, :type "object"}, :ClosedListEntityExtractorsList {:description "List of Closed List Entity Extractors.", :items #:reference{:definitions "ClosedListEntityExtractor"}, :type "array"}, :HierarchicalEntityModel {:description "A Hierarchical Entity Extractor.", :example {:children ["Location::To"], :name "Reservation"}, :properties {:children {:description "Child entities.", :items {:type "string"}, :type "array"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :PrebuiltEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"}], :description "Prebuilt Entity Extractor.", :type "object", :x-ms-discriminator-value "Prebuilt Entity Extractor"}, :VersionResponse {:description "The new version ID returned by when importing a model version.", :example "0.1", :type "string"}, :FeatureInfoObject {:description "The base class Features-related response objects inherit from.", :properties {:id {:description "A six-digit ID used for Features.", :type "integer"}, :isActive {:description "Indicates if the feature is enabled.", :type "boolean"}, :name {:description "The name of the Feature.", :type "string"}}, :type "object"}, :ApplicationSettings {:description "The application settings.", :properties {:id {:description "The application ID.", :format "uuid", :type "string"}, :public {:description "Setting your application as public allows other people to use your application's endpoint using their own keys.", :type "boolean", :x-ms-client-name "isPublic", :x-nullable false}}, :required ["id" "public"], :type "object"}, :PatternFeatureInfo {:allOf [#:reference{:definitions "FeatureInfoObject"}], :description "Pattern feature.", :properties {:pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :JSONModelFeature {:description "Exported Model - Phraselist Model Feature.", :properties {:activated {:description "Indicates if the feature is enabled.", :type "boolean"}, :mode {:description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :words {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :ReadableType {:description "Full name of the entity type.", :enum ["Entity Extractor" "Hierarchical Entity Extractor" "Hierarchical Child Entity Extractor" "Composite Entity Extractor" "Closed List Entity Extractor" "Prebuilt Entity Extractor" "Intent Classifier"], :type "string"}, :AvailablePrebuiltEntityModel {:description "Available Prebuilt entity model for using in an application.", :properties {:description {:description "The entity description and usage information.", :type "string"}, :examples {:description "Usage examples.", :type "string"}, :name {:description "The entity name.", :type "string"}}, :type "object"}, :ModelsInfoResponseObject {:description "A list of application model infos.", :items #:reference{:definitions "ModelInfoResponse"}, :type "array"}, :ClosedList {:description "Exported Model - A Closed List.", :properties {:name {:description "Name of the closed list feature.", :type "string"}, :subLists {:description "Sublists for the feature.", :items #:reference{:definitions "SubClosedList"}, :type "array"}}, :type "object"}, :IntentClassifier {:allOf [#:reference{:definitions "ModelInfo"}], :description "Intent Classifier.", :properties {:customPrebuiltDomainName {:description "The domain name.", :type "string"}, :customPrebuiltModelName {:description "The intent name or entity name.", :type "string"}}, :type "object", :x-ms-discriminator-value "Intent Classifier"}, :LuisApp {:additionalProperties true, :description "Exported Model - An exported LUIS Application.", :example {:model_features [{:activated true, :mode true, :name "Near", :words "near,around,close,nearby"} {:activated true, :mode true, :name "Show", :words "show,find,look,search"}], :versionId "0.1", :intents [{:name "dateintent"} {:name "Help"} {:name "None"} {:name "SearchHotels"} {:name "ShowHotelsReviews"}], :desc "", :culture "en-us", :name "LuisBot", :bing_entities ["datetimeV2" "geography"], :entities [{:name "AirportCode"} {:name "Hotel"}], :luis_schema_version "2.1.0", :regex_features [{:activated true, :name "AirportCodeRegex", :pattern "[a-z]{3}"}], :closedLists [], :utterances [{:entities [], :intent "Help", :text "i need help"} {:entities [], :intent "Help", :text "help me"} {:entities [], :intent "dateintent", :text "tomorrow"} {:entities [], :intent "SearchHotels", :text "search for hotels in seattle"} {:entities [], :intent "Help", :text "what can i do?"} {:entities [], :intent "dateintent", :text "next monday"} {:entities [], :intent "dateintent", :text "next year"} {:entities [], :intent "SearchHotels", :text "look for hotels in miami"} {:entities [], :intent "SearchHotels", :text "show me hotels in california"} {:entities [{:endPos 44, :entity "Hotel", :startPos 23}], :intent "ShowHotelsReviews", :text "show me the reviews of the amazing bot resort"} {:entities [{:endPos 42, :entity "Hotel", :startPos 25}], :intent "ShowHotelsReviews", :text "can i see the reviews of extended bot hotel?"} {:entities [{:endPos 23, :entity "Hotel", :startPos 16}], :intent "ShowHotelsReviews", :text "find reviews of hotelxya"} {:entities [{:endPos 35, :entity "Hotel", :startPos 19}], :intent "ShowHotelsReviews", :text "show me reviews of the amazing hotel"} {:entities [], :intent "Help", :text "what are the available options?"} {:entities [], :intent "SearchHotels", :text "best hotels in seattle"} {:entities [], :intent "SearchHotels", :text "hotels in los angeles"} {:entities [], :intent "SearchHotels", :text "can you show me hotels from los angeles?"} {:entities [{:endPos 56, :entity "Hotel", :startPos 31}], :intent "ShowHotelsReviews", :text "can you show me the reviews of the amazing resort & hotel"} {:entities [{:endPos 46, :entity "Hotel", :startPos 24}], :intent "ShowHotelsReviews", :text "what are the reviews of the hotel bot framework?"} {:entities [{:endPos 19, :entity "AirportCode", :startPos 17}], :intent "SearchHotels", :text "find hotels near eze"} {:entities [{:endPos 24, :entity "AirportCode", :startPos 22}], :intent "SearchHotels", :text "where can i stay near nnn?"} {:entities [{:endPos 19, :entity "AirportCode", :startPos 17}], :intent "SearchHotels", :text "show hotels near att airport"} {:entities [{:endPos 19, :entity "AirportCode", :startPos 17}], :intent "SearchHotels", :text "find hotels near agl"} {:entities [{:endPos 21, :entity "AirportCode", :startPos 19}], :intent "SearchHotels", :text "find hotels around eze airport"} {:entities [], :intent "dateintent", :text "01/7"}], :composites []}, :properties {:model_features {:description "List of model features.", :items #:reference{:definitions "JSONModelFeature"}, :type "array"}, :versionId {:description "The version ID of the application that was exported.", :type "string"}, :intents {:description "List of intents.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :desc {:description "The description of the application.", :type "string"}, :culture {:description "The culture of the application. E.g.: en-us.", :type "string"}, :name {:description "The name of the application.", :type "string"}, :bing_entities {:description "List of prebuilt intents.", :items {:type "string"}, :type "array"}, :entities {:description "List of entities.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}, :regex_features {:description "List of pattern features.", :items #:reference{:definitions "JSONRegexFeature"}, :type "array"}, :closedLists {:description "List of closed lists.", :items #:reference{:definitions "ClosedList"}, :type "array"}, :utterances {:description "List of sample utterances.", :items #:reference{:definitions "JSONUtterance"}, :type "array"}, :composites {:description "List of composite entities.", :items #:reference{:definitions "HierarchicalModel"}, :type "array"}}, :type "object"}, :EntityPrediction {:description "A suggested entity.", :properties {:endTokenIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity's name", :type "string"}, :phrase {:description "The actual token(s) that comprise the entity.", :type "string"}, :startTokenIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startTokenIndex" "endTokenIndex" "phrase"], :type "object"}, :CompositeEntityModel {:description "A composite entity.", :example {:children ["Class" "Location"], :name "Reservation"}, :properties {:children {:description "Child entities.", :items {:type "string"}, :type "array"}, :name {:description "Entity name.", :type "string"}}, :type "object"}, :PrebuiltDomain {:description "Prebuilt Domain.", :properties {:culture {:type "string"}, :description {:type "string"}, :entities {:items #:reference{:definitions "PrebuiltDomainItem"}, :type "array"}, :examples {:type "string"}, :intents {:items #:reference{:definitions "PrebuiltDomainItem"}, :type "array"}, :name {:type "string"}}, :type "object"}, :IntentsSuggestionExamples {:description "List of predicted/suggested intents.", :items #:reference{:definitions "IntentsSuggestionExample"}, :type "array"}, :JSONEntity {:description "Exported Model - Extracted Entity from utterance.", :properties {:endPos {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entity {:description "The entity name.", :type "string"}, :startPos {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["startPos" "endPos" "entity"], :type "object"}, :PersonalAssistantUrls {:additionalProperties {:type "string"}, :description "Endpoint URLs for prebuilt Cortana applications.", :type "object"}, :AvailableCultures {:description "A list of available application cultures.", :items #:reference{:definitions "AvailableCulture"}, :type "array"}, :EntityLabel {:description "Defines the entity type and position of the extracted entity within the example.", :properties {:endTokenIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity type.", :type "string"}, :startTokenIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startTokenIndex" "endTokenIndex"], :type "object"}, :HierarchicalEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"}], :description "Hierarchical Entity Extractor.", :properties {:children {:description "List of child entities.", :items #:reference{:definitions "ChildEntity"}, :type "array"}}, :type "object", :x-ms-discriminator-value "Hierarchical Entity Extractor"}, :EntityLabelObject {:description "Defines the entity type and position of the extracted entity within the example.", :properties {:endCharIndex {:description "The index within the utterance where the extracted entity ends.", :type "integer"}, :entityName {:description "The entity type.", :type "string"}, :startCharIndex {:description "The index within the utterance where the extracted entity starts.", :type "integer"}}, :required ["entityName" "startCharIndex" "endCharIndex"], :type "object"}, :ClosedListModelCreateObject {:description "Object model for creating a closed list.", :example {:name "States", :subLists [{:canonicalForm "New York", :list ["NY" "New York"]} {:canonicalForm "Washington", :list ["Washington" "WA"]} {:canonicalForm "California", :list ["California" "CA" "Calif." "Cal."]}]}, :properties {:name {:description "Name of the closed list feature.", :type "string"}, :subLists {:description "Sublists for the feature.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :ModelTrainingDetails {:description "Model Training Details.", :properties {:exampleCount {:description "The count of examples used to train the model.", :type "integer"}, :failureReason {:description "Reason for the training failure.", :type "string"}, :status #:reference{:definitions "TrainingStatus"}, :statusId {:description "The train request status ID.", :type "integer"}, :trainingDateTime {:description "When the model was trained.", :format "date-time", :type "string"}}, :type "object"}, :TrainingStatus {:description "The Trainning status.", :enum ["Queued" "InProgress" "UpToDate" "Fail" "Success"], :type "string"}, :LabelExampleResponse {:description "Response when adding a labeled example.", :properties {:ExampleId {:description "The newly created sample ID.", :example -6830368, :type "integer"}, :UtteranceText {:description "The sample's utterance.", :example "book me a flight from cairo to redmond next thursday", :type "string"}}, :type "object"}, :ApplicationUsageScenarios {:description "A list of possible application usage scenarios.", :items {:type "string"}, :type "array"}, :EnqueueTrainingResponse {:description "Response model when requesting to train the model.", :properties {:status #:reference{:definitions "TrainingStatus"}, :statusId {:description "The train request status ID.", :type "integer"}}, :type "object"}, :WordListObject {:description "Sublist of items for a Closed list.", :example {:canonicalForm "California", :list ["California" "CA" "Calif." "Cal."]}, :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :ModelCreateObject {:description "Object model for creating a new entity extractor.", :example {:name "DayOfWeek"}, :properties {:name {:description "Name of the new entity extractor.", :type "string"}}, :type "object"}, :ApplicationsInfoList {:description "List of Application Infos.", :items #:reference{:definitions "ApplicationInfoResponse"}, :type "array"}, :EndpointInfo {:description "The base class \"ProductionOrStagingEndpointInfo\" inherits from.", :properties {:assignedEndpointKey {:description "The endpoint key.", :type "string"}, :endpointRegion {:description "The endpoint's region.", :type "string"}, :endpointUrl {:description "The Runtime endpoint URL for this model version.", :type "string"}, :isStaging {:description "Indicates if the staging slot should be used, instead of the Production one.", :type "boolean"}, :publishedDateTime {:description "Timestamp when was last published.", :type "string"}, :region {:description "The target region that the application is published to.", :type "string"}, :versionId {:description "The version ID to publish.", :type "string"}}, :type "object"}, :JSONRegexFeature {:description "Exported Model - A Pattern feature.", :properties {:activated {:description "Indicates if the Pattern feature is enabled.", :type "boolean"}, :name {:description "Name of the feature.", :type "string"}, :pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :PrebuiltDomainModelCreateObject {:description "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs.", :example {:domainName "Camera", :modelName "AppName"}, :properties {:domainName {:description "The domain name.", :type "string"}, :modelName {:description "The intent name or entity name.", :type "string"}}, :type "object"}, :JSONUtterance {:description "Exported Model - Utterance that was used to train the model.", :properties {:entities {:description "The matched entities.", :items #:reference{:definitions "JSONEntity"}, :type "array"}, :intent {:description "The matched intent.", :type "string"}, :text {:description "The utterance.", :type "string"}}, :type "object"}, :AvailableDomains {:description "A list of available application domains.", :items {:type "string"}, :type "array"}, :AvailableCulture {:description "Available culture for using in a new application.", :properties {:code {:description "The ISO value for the language.", :type "string"}, :name {:description "The language name.", :type "string"}}, :type "object"}, :BatchLabelExample {:description "Response when adding a batch of labeled examples.", :properties {:error #:reference{:definitions "OperationStatus"}, :hasError {:type "boolean"}, :value #:reference{:definitions "LabelExampleResponse"}}, :type "object"}, :AvailableEndpoints {:additionalProperties {:type "string"}, :description "Collection of endpoint URLs where the selected application is deployed to.", :type "object"}, :ClosedListModelUpdateObject {:description "Object model for updating a closed list.", :example {:name "States", :subLists [{:canonicalForm "new york", :list ["ny" "new york"]} {:canonicalForm "washington", :list ["washington" "wa"]} {:canonicalForm "california", :list ["california" "ca" "calif." "cal."]} {:canonicalForm "Texas", :list ["Texas" "TX"]}]}, :properties {:name {:description "The new name of the closed list feature.", :type "string"}, :subLists {:description "The new sublists for the feature.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :IntentPrediction {:description "A suggested intent.", :properties {:name {:description "The intent's name", :type "string"}, :score {:description "The intent's score, based on the prediction model.", :type "number"}}, :type "object"}, :VersionInfo {:description "Object model of an application version.", :properties {:endpointHitsCount {:description "Number of calls made to this endpoint.", :type "integer"}, :lastTrainedDateTime {:description "Timestamp of the last time the model was trained.", :format "date-time", :type "string"}, :intentsCount {:description "Number of intents in this model.", :type "integer"}, :endpointUrl {:description "The Runtime endpoint URL for this model version.", :type "string"}, :lastPublishedDateTime {:description "Timestamp when was last published.", :format "date-time", :type "string"}, :entitiesCount {:description "Number of entities in this model.", :type "integer"}, :trainingStatus {:description "The current training status.", :enum ["NeedsTraining" "InProgress" "Trained"], :type "string", :x-ms-enum {:name "TrainingStatus"}}, :lastModifiedDateTime {:description "Timestamp of the last update.", :format "date-time", :type "string"}, :assignedEndpointKey {:additionalProperties {:type "string"}, :description "The endpoint key.", :type "object"}, :externalApiKeys {:description "External keys.", :type "object"}, :createdDateTime {:description "The version's creation timestamp.", :format "date-time", :type "string"}, :version {:description "The version ID. E.g.: \"0.1\"", :type "string"}}, :required ["version" "trainingStatus"], :type "object"}, :BatchLabelExampleResponse {:description "Response when adding a batch of labeled examples.", :items #:reference{:definitions "BatchLabelExample"}, :type "array"}, :ApplicationUpdateObject {:description "Object model for updating the name or description of an application.", :example {:description "This is my first modified dummy description.", :name "MyFirstRenamedDummyAp"}, :properties {:description {:description "The application's new description.", :type "string"}, :name {:description "The application's new name.", :type "string"}}, :type "object"}, :ModelUpdateObject {:description "Object model for updating an intent classifier.", :example {:name "New Name"}, :properties {:name {:description "The entity's new name.", :type "string"}}, :type "object"}, :IntentsSuggestionExample {:description "Predicted/suggested intent.", :properties {:entityPredictions {:description "Predicted/suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :intentPredictions {:description "Predicted/suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. E.g.: what's the weather like in seattle?", :type "string"}, :tokenizedText {:description "The utterance tokenized.", :items {:type "string"}, :type "array"}}, :type "object"}, :UserCollaborator {:properties {:email {:description "The email address of the user.", :type "string"}}, :type "object"}, :PhraseListFeatureInfoList {:description "List of Phraselist Features.", :items #:reference{:definitions "PhraseListFeatureInfo"}, :type "array"}, :ApplicationPublishObject {:description "Object model for publishing a specific application version.", :example {:isStaging false, :region "westus", :versionId "0.1"}, :properties {:isStaging {:default false, :description "Indicates if the staging slot should be used, instead of the Production one.", :type "boolean"}, :region {:description "The target region that the application is published to.", :type "string"}, :versionId {:description "The version ID to publish.", :type "string"}}, :type "object"}, :PrebuiltDomainsList {:description "List of Prebuilt Domains.", :items #:reference{:definitions "PrebuiltDomain"}, :type "array"}, :GuidResponse {:description "The ID (GUID) returned by an operation.", :example "363187f1-c573-46b3-bc4c-ae01d686e68e", :format "uuid", :type "string"}, :ModelInfo {:description "Base type used in entity types.", :properties {:id {:description "The ID of the Entity Model.", :format "uuid", :type "string"}, :name {:description "Name of the Entity Model.", :type "string"}, :readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :required ["id" "readableType"], :type "object"}, :PatternUpdateObject {:description "Object model for updating an existing Pattern feature.", :example {:name "ModifiedEmailPattern", :pattern "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"}, :properties {:isActive {:default true, :description "Indicates if the Pattern feature is enabled.", :type "boolean"}, :name {:description "Name of the feature.", :type "string"}, :pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :TaskUpdateObject {:description "Object model for cloning an application's version.", :example {:version "1.0"}, :properties {:version {:description "The new version for the cloned model.", :type "string"}}, :type "object"}, :ModelTrainingInfoList {:description "List of Model Training Infos.", :items #:reference{:definitions "ModelTrainingInfo"}, :type "array"}, :EntityExtractorsList {:description "List of Entity Extractors.", :items #:reference{:definitions "EntityExtractor"}, :type "array"}, :HierarchicalChildEntity {:allOf [#:reference{:definitions "ChildEntity"}], :description "A Hierarchical Child Entity.", :properties {:readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :type "object"}, :OperationStatus {:description "Response of an Operation status.", :properties {:code {:description "Status Code.", :enum ["Failed" "FAILED" "Success"], :type "string", :x-ms-enum {:modelAsString true, :name "OperationStatusType"}}, :message {:description "Status details.", :type "string"}}, :type "object"}, :CustomPrebuiltModelList {:description "A List of Custom Prebuilt models.", :items #:reference{:definitions "CustomPrebuiltModel"}, :type "array"}, :PrebuiltDomainCreateBaseObject {:description "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.", :example {:domainName "Camera"}, :properties {:domainName {:description "The domain name.", :type "string"}}, :type "object"}, :ChildEntity {:description "The base child entity type.", :properties {:id {:description "The ID (GUID) belonging to a child entity.", :format "uuid", :type "string"}, :name {:description "The name of a child entity.", :type "string"}}, :required ["id"], :type "object"}, :PhraselistCreateObject {:description "Object model for creating a phraselist model.", :example {:isExchangeable false, :name "DaysOfWeek", :phrases "monday,tuesday,wednesday,thursday,friday,saturday,sunday"}, :properties {:isExchangeable {:default true, :description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :phrases {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :GuidList {:description "List of IDs (GUID)", :example ["2639049a-e41d-4285-a3c6-8a17ed299473" "200d6173-ecfa-4967-bf95-3c319902dc52" "f80aa9ba-64c8-4a36-8cc5-92010d0aadf1"], :items #:reference{:definitions "GuidResponse"}, :type "array"}, :HierarchicalModel {:properties {:children {:items {:type "string"}, :type "array"}, :name {:type "string"}}, :type "object"}, :FeaturesResponseObject {:description "Model Features, including Patterns and Phraselists.", :properties {:patternFeatures #:reference{:definitions "PatternFeatureInfoList"}, :phraselistFeatures #:reference{:definitions "PhraseListFeatureInfoList"}}, :type "object"}, :ApplicationCreateObject {:description "Properties for creating a new LUIS Application", :example {:culture "en-us", :description "This is my first dummy application.", :domain "Comics", :initialVersionId "1.0", :name "MyFirstDummyApp", :usageScenario "IoT"}, :properties {:culture {:description "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.", :type "string"}, :description {:description "Description of the new application. Optional.", :type "string"}, :domain {:description "The domain for the new application. Optional. E.g.: Comics.", :type "string"}, :initialVersionId {:description "The initial version ID. Optional. Default value is: \"0.1\"", :type "string"}, :name {:description "The name for the new application.", :type "string"}, :usageScenario {:description "Defines the scenario for the new application. Optional. E.g.: IoT.", :type "string"}}, :required ["culture" "name"], :type "object"}, :PhraselistUpdateObject {:description "Object model for updating a Phraselist.", :example {:name "DaysOfWeek", :phrases "monday,tuesday,wednesday,thursday,friday,saturday,sunday"}, :properties {:isActive {:default true, :description "Indicates if the Phraselist is enabled.", :type "boolean"}, :isExchangeable {:default true, :description "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.", :type "boolean"}, :name {:description "The Phraselist name.", :type "string"}, :phrases {:description "List of comma-separated phrases that represent the Phraselist.", :type "string"}}, :type "object"}, :IntentClassifiersList {:description "List of Intent Classifiers.", :items #:reference{:definitions "IntentClassifier"}, :type "array"}, :EntitiesSuggestionExamples {:description "List of predicted/suggested entities.", :items #:reference{:definitions "EntitiesSuggestionExample"}, :type "array"}, :EntitiesSuggestionExample {:description "Predicted/suggested entity.", :properties {:entityPredictions {:description "Predicted/suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :intentPredictions {:description "Predicted/suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. E.g.: what's the weather like in seattle?", :type "string"}, :tokenizedText {:description "The utterance tokenized.", :items {:type "string"}, :type "array"}}, :type "object"}, :ModelTrainingInfo {:description "Model Training Info.", :properties {:details #:reference{:definitions "ModelTrainingDetails"}, :modelId {:description "The ID (GUID) of the model.", :format "uuid", :type "string"}}, :type "object"}, :PrebuiltExtractorNames {:description "Objet model for adding a prebuilt entity to the application.", :example ["number" "ordinal"], :items {:type "string"}, :type "array"}, :LabeledUtterances {:description "A list of predictions and label pairs for every example in the application.", :items #:reference{:definitions "LabeledUtterance"}, :type "array"}, :PrebuiltEntityExtractorsList {:description "List of Prebuilt Entity Extractors.", :items #:reference{:definitions "PrebuiltEntityExtractor"}, :type "array"}, :ErrorResponse {:additionalProperties {:type "object"}, :description "Error response when invoking an operation on the API.", :properties {:errorType {:type "string"}}, :type "object"}, :CollaboratorsArray {:properties {:emails {:description "The email address of the users.", :items {:type "string"}, :type "array"}}, :type "object"}, :PatternCreateObject {:description "Object model for creating a Pattern feature.", :example {:name "EmailPattern", :pattern "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"}, :properties {:name {:description "Name of the feature.", :type "string"}, :pattern {:description "The Regular Expression to match.", :type "string"}}, :type "object"}, :CompositeEntityExtractor {:allOf [#:reference{:definitions "ModelInfo"}], :description "A Composite Entity Extractor.", :properties {:children {:description "List of child entities.", :items #:reference{:definitions "ChildEntity"}, :type "array"}}, :type "object", :x-ms-discriminator-value "Composite Entity Extractor"}, :ApplicationSettingUpdateObject {:description "Object model for updating an application's settings.", :example {:public true}, :properties {:public {:description "Setting your application as public allows other people to use your application's endpoint using their own keys.", :type "boolean", :x-nullable false}}, :type "object"}, :FeatureIDResponse {:description "The ID of the created feature.", :example 398102, :type "integer", :x-nullable false}, :PrebuiltDomainCreateObject {:description "A prebuilt domain create object containing the name and culture of the domain.", :example {:culture "en-US", :domainName "Web"}, :properties {:culture {:description "The culture of the new domain.", :type "string"}, :domainName {:description "The domain name.", :type "string"}}, :type "object"}, :ApplicationInfoResponse {:description "Response containing the Application Info.", :properties {:description {:description "The description of the application.", :type "string"}, :endpointHitsCount {:description "Number of calls made to this endpoint.", :type "integer"}, :culture {:description "The culture of the application. E.g.: en-us.", :type "string"}, :usageScenario {:description "Defines the scenario for the new application. Optional. E.g.: IoT.", :type "string"}, :name {:description "The name of the application.", :type "string"}, :endpoints {:description "The Runtime endpoint URL for this model version.", :type "object"}, :id {:description "The ID (GUID) of the application.", :format "uuid", :type "string"}, :versionsCount {:description "Amount of model versions within the application.", :type "integer"}, :domain {:description "The domain for the new application. Optional. E.g.: Comics.", :type "string"}, :createdDateTime {:description "The version's creation timestamp.", :type "string"}, :activeVersion {:description "The version ID currently marked as active.", :type "string"}}, :type "object"}, :ClosedListModelPatchObject {:description "Object model for adding a batch of sublists to an existing closedlist.", :example {:subLists [{:canonicalForm "Ohio", :list ["Ohio" "OH"]}]}, :properties {:subLists {:description "Sublists to add.", :items #:reference{:definitions "WordListObject"}, :type "array"}}, :type "object"}, :ExampleLabelObject {:description "A labeled example.", :example {:entityLabels [{:endCharIndex 34, :entityName "Place", :startCharIndex 21}], :intentName "WeatherInPlace", :text "whats the weather in buenos aires?"}, :properties {:entityLabels {:description "The idenfied entities within the utterance.", :items #:reference{:definitions "EntityLabelObject"}, :type "array"}, :intentName {:description "The idenfitied intent representing the utterance.", :type "string"}, :text {:description "The sample's utterance.", :type "string"}}, :type "object"}, :PrebuiltDomainItem {:properties {:description {:type "string"}, :examples {:type "string"}, :name {:type "string"}}, :type "object"}, :EndpointKeys {:description "An a array of GUIDs, comprised of Azure Endpoint Keys and the Programmatic API key.", :items {:format "uuid", :type "string"}, :type "array"}, :LabeledUtterance {:description "A prediction and label pair of an example.", :properties {:entityLabels {:description "The entities matching the example.", :items #:reference{:definitions "EntityLabel"}, :type "array"}, :entityPredictions {:description "List of suggested entities.", :items #:reference{:definitions "EntityPrediction"}, :type "array"}, :id {:description "ID of Labeled Utterance.", :type "integer"}, :intentLabel {:description "The intent matching the example.", :type "string"}, :intentPredictions {:description "List of suggested intents.", :items #:reference{:definitions "IntentPrediction"}, :type "array"}, :text {:description "The utterance. E.g.: what's the weather like in seattle?", :type "string"}, :tokenizedText {:description "The utterance tokenized.", :items {:type "string"}, :type "array"}}, :type "object"}, :PatternFeatureInfoList {:description "List of Pattern features.", :items #:reference{:definitions "PatternFeatureInfo"}, :type "array"}, :UserAccessList {:description "List of user permissions.", :properties {:emails {:items {:type "string"}, :type "array"}, :owner {:description "The email address of owner of the application.", :type "string"}}, :type "object"}, :SubClosedList {:description "Sublist of items for a Closed list.", :example {:canonicalForm "BankName", :list ["HSBC" "CitiBank"]}, :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :HierarchicalEntityExtractorsList {:description "List of Hierarchical Entity Extractors.", :items #:reference{:definitions "HierarchicalEntityExtractor"}, :type "array"}, :ExampleLabelObjectArray {:description "Object model for adding a batch of labeled examples.", :example [{:entityLabels [{:endCharIndex 26, :entityName "Location::From", :startCharIndex 22} {:endCharIndex 37, :entityName "Location::To", :startCharIndex 31}], :intentName "BookFlight", :text "Book me a flight from Cairo to Redmond next Thursday"} {:entityLabels [{:endCharIndex 33, :entityName "Location", :startCharIndex 27}], :intentName "GetWeather", :text "What's the weather like in Seattle?"}], :items #:reference{:definitions "ExampleLabelObject"}, :type "array"}, :ModelInfoResponse {:allOf [#:reference{:definitions "HierarchicalEntityExtractor"} #:reference{:definitions "CompositeEntityExtractor"} #:reference{:definitions "ClosedListEntityExtractor"} #:reference{:definitions "IntentClassifier"} #:reference{:definitions "EntityExtractor"}], :description "An application model info.", :properties {:id {:description "The ID of the Entity Model.", :format "uuid", :type "string"}, :name {:description "Name of the Entity Model.", :type "string"}, :readableType #:reference{:definitions "ReadableType"}, :typeId {:description "The type ID of the Entity Model.", :type "integer"}}, :required ["id" "readableType"], :type "object"}, :WordListBaseUpdateObject {:description "Object model for updating one of the closed list's sublists.", :example {:canonicalForm "California", :list ["California" "CA" "Calif." "Cal."]}, :properties {:canonicalForm {:description "The standard form that the list represents.", :type "string"}, :list {:description "List of synonym words.", :items {:type "string"}, :type "array"}}, :type "object"}, :EntityExtractor {:allOf [#:reference{:definitions "ModelInfo"}], :description "Entity Extractor.", :properties {:customPrebuiltDomainName {:description "The domain name.", :type "string"}, :customPrebuiltModelName {:description "The intent name or entity name.", :type "string"}}, :type "object", :x-ms-discriminator-value "Entity Extractor"}, :CompositeEntityExtractorsList {:description "List of Composite Entity Extractors.", :items #:reference{:definitions "CompositeEntityExtractor"}, :type "array"}}}