{:scheme "https", :host "management.azure.com", :info {:description "This Swagger was generated by the API Framework.", :title "Azure Media Services", :version "2018-07-01"}, :ops {:Assets_ListStreamingLocators {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listStreamingLocators", :description "Lists Streaming Locators which are associated with this asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}, :Assets_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}", :description "Updates an existing Asset in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Asset"}} #:reference{:parameters "ApiVersion"}], :verb :patch}, :AssetFilters_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}", :description "Creates or updates an Asset Filter associated with the specified Asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The Asset Filter name", :in "path", :name "filterName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AssetFilter"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :Assets_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}", :description "Deletes an Asset in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :Assets_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets", :description "List Assets in the Media Services account with optional filtering and ordering", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} #:reference{:parameters "ApiVersion"} {:description "Restricts the set of items returned.", :in "query", :name "$filter", :required false, :type "string"} {:description "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.", :in "query", :name "$top", :required false, :type "integer"} {:description "Specifies the key by which the result collection should be ordered.", :in "query", :name "$orderby", :required false, :type "string"}], :verb :get}, :Assets_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}", :description "Creates or updates an Asset in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Asset"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :Assets_GetEncryptionKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/getEncryptionKey", :description "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}, :Assets_ListContainerSas {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/listContainerSas", :description "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ListContainerSasInput"}} #:reference{:parameters "ApiVersion"}], :verb :post}, :AssetFilters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}", :description "Deletes an Asset Filter associated with the specified Asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The Asset Filter name", :in "path", :name "filterName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :AssetFilters_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters", :description "List Asset Filters associated with the specified Asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :AssetFilters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}", :description "Updates an existing Asset Filter associated with the specified Asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The Asset Filter name", :in "path", :name "filterName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AssetFilter"}} #:reference{:parameters "ApiVersion"}], :verb :patch}, :Assets_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}", :description "Get the details of an Asset in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :AssetFilters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}/assetFilters/{filterName}", :description "Get the details of an Asset Filter associated with the specified Asset.", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Asset name.", :in "path", :name "assetName", :required true, :type "string"} {:description "The Asset Filter name", :in "path", :name "filterName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}}, :parameters {:ApiVersion {:description "The Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :MediaServicesAccountName {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupName {:description "The name of the resource group within the Azure subscription.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionId {:description "The unique identifier for a Microsoft Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:AssetCollection {:description "A collection of Asset items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of Asset items.", :items #:reference{:definitions "Asset"}, :type "array"}}, :type "object"}, :ApiError {:description "The API error.", :properties {:error #:reference{:definitions "ODataError"}}, :type "object"}, :AssetFilterCollection {:description "A collection of AssetFilter items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of AssetFilter items.", :items #:reference{:definitions "AssetFilter"}, :type "array"}}, :type "object"}, :StorageEncryptedAssetDecryptionData {:description "Data needed to decrypt asset files encrypted with legacy storage encryption.", :properties {:assetFileEncryptionMetadata {:description "Asset File encryption metadata.", :items #:reference{:definitions "AssetFileEncryptionMetadata"}, :type "array"}, :key {:description "The Asset File storage encryption key.", :format "byte", :type "string"}}, :type "object"}, :AssetFileEncryptionMetadata {:description "The Asset File Storage encryption metadata.", :properties {:assetFileId {:description "The Asset File Id.", :format "uuid", :type "string"}, :assetFileName {:description "The Asset File name.", :type "string"}, :initializationVector {:description "The Asset File initialization vector.", :type "string"}}, :required ["assetFileId"], :type "object"}, :ListStreamingLocatorsResponse {:description "The Streaming Locators associated with this Asset.", :properties {:streamingLocators {:description "The list of Streaming Locators.", :items #:reference{:definitions "AssetStreamingLocator"}, :readOnly true, :type "array"}}, :type "object"}, :AssetFilter {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "An Asset Filter.", :properties {:properties #:reference{:definitions "MediaFilterProperties"}}, :type "object"}, :FilterTrackSelection {:description "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.", :properties {:trackSelections {:description "The track selections.", :items #:reference{:definitions "FilterTrackPropertyCondition"}, :type "array"}}, :required ["trackSelections"], :type "object"}, :AssetContainerSas {:description "The Asset Storage container SAS URLs.", :properties {:assetContainerSasUrls {:description "The list of Asset container SAS URLs.", :items {:type "string"}, :type "array"}}, :type "object"}, :ListContainerSasInput {:description "The parameters to the list SAS request.", :properties {:expiryTime {:description "The SAS URL expiration time.  This must be less than 24 hours from the current time.", :format "date-time", :type "string"}, :permissions {:description "The permissions to set on the SAS URL.", :enum ["Read" "ReadWrite" "ReadWriteDelete"], :type "string", :x-ms-enum {:modelAsString true, :name "AssetContainerPermission", :values [{:description "The SAS URL will allow read access to the container.", :value "Read"} {:description "The SAS URL will allow read and write access to the container.", :value "ReadWrite"} {:description "The SAS URL will allow read, write and delete access to the container.", :value "ReadWriteDelete"}]}}}, :type "object"}, :Asset {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "An Asset.", :properties {:properties #:reference{:definitions "AssetProperties"}}, :type "object"}, :ODataError {:description "Information about an error.", :properties {:code {:description "A language-independent error name.", :type "string"}, :details {:description "The error details.", :items #:reference{:definitions "ODataError"}, :type "array"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the error (for example, the name of the property in error).", :type "string"}}, :type "object"}, :AssetStreamingLocator {:description "Properties of the Streaming Locator.", :properties {:assetName {:description "Asset Name.", :readOnly true, :type "string"}, :created {:description "The creation time of the Streaming Locator.", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :defaultContentKeyPolicyName {:description "Name of the default ContentKeyPolicy used by this Streaming Locator.", :readOnly true, :type "string"}, :endTime {:description "The end time of the Streaming Locator.", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :name {:description "Streaming Locator name.", :readOnly true, :type "string"}, :startTime {:description "The start time of the Streaming Locator.", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :streamingLocatorId {:description "StreamingLocatorId of the Streaming Locator.", :format "uuid", :readOnly true, :type "string", :x-nullable false}, :streamingPolicyName {:description "Name of the Streaming Policy used by this Streaming Locator.", :readOnly true, :type "string"}}, :type "object"}, :FilterTrackPropertyCondition {:description "The class to specify one track property condition.", :properties {:operation {:description "The track property condition operation.", :enum ["Equal" "NotEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "FilterTrackPropertyCompareOperation", :values [{:description "The equal operation.", :value "Equal"} {:description "The not equal operation.", :value "NotEqual"}]}}, :property {:description "The track property type.", :enum ["Unknown" "Type" "Name" "Language" "FourCC" "Bitrate"], :type "string", :x-ms-enum {:modelAsString true, :name "FilterTrackPropertyType", :values [{:description "The unknown track property type.", :value "Unknown"} {:description "The type.", :value "Type"} {:description "The name.", :value "Name"} {:description "The language.", :value "Language"} {:description "The fourCC.", :value "FourCC"} {:description "The bitrate.", :value "Bitrate"}]}}, :value {:description "The track property value.", :type "string"}}, :required ["property" "value" "operation"], :type "object"}, :AssetProperties {:description "The Asset properties.", :properties {:alternateId {:description "The alternate ID of the Asset.", :type "string"}, :assetId {:description "The Asset ID.", :format "uuid", :readOnly true, :type "string", :x-nullable false}, :container {:description "The name of the asset blob container.", :type "string"}, :created {:description "The creation date of the Asset.", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :description {:description "The Asset description.", :type "string"}, :lastModified {:description "The last modified date of the Asset.", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :storageAccountName {:description "The name of the storage account.", :type "string"}, :storageEncryptionFormat {:description "The Asset encryption format. One of None or MediaStorageEncryption.", :enum ["None" "MediaStorageClientEncryption"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "AssetStorageEncryptionFormat", :values [{:description "The Asset does not use client-side storage encryption (this is the only allowed value for new Assets).", :value "None"} {:description "The Asset is encrypted with Media Services client-side encryption.", :value "MediaStorageClientEncryption"}]}, :x-nullable false}}, :type "object"}, :MediaFilterProperties {:description "The Media Filter properties.", :properties {:firstQuality #:reference{:definitions "FirstQuality"}, :presentationTimeRange #:reference{:definitions "PresentationTimeRange"}, :tracks {:description "The tracks selection conditions.", :items #:reference{:definitions "FilterTrackSelection"}, :type "array"}}, :type "object"}, :PresentationTimeRange {:description "The presentation time range, this is asset related and not recommended for Account Filter.", :properties {:endTimestamp {:description "The absolute end time boundary.", :format "int64", :type "integer"}, :forceEndTimestamp {:description "The indicator of forcing existing of end time stamp.", :type "boolean"}, :liveBackoffDuration {:description "The relative to end right edge.", :format "int64", :type "integer"}, :presentationWindowDuration {:description "The relative to end sliding window.", :format "int64", :type "integer"}, :startTimestamp {:description "The absolute start time boundary.", :format "int64", :type "integer"}, :timescale {:description "The time scale of time stamps.", :format "int64", :type "integer"}}, :type "object"}, :FirstQuality {:description "Filter First Quality", :properties {:bitrate {:description "The first quality bitrate.", :format "int32", :type "integer"}}, :required ["bitrate"], :type "object"}}}