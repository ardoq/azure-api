{:scheme "https", :host "management.azure.com", :info {:description "Azure Service Bus client", :title "ServiceBusManagementClient", :version "2014-09-01"}, :ops {:Queues_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}", :description "Deletes a queue from the specified namespace in a resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Topics_PostAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}", :description "Returns the specified authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Namespaces_PostAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Gets an authorization rule for a namespace by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Namespaces_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}", :description "Creates or updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "The namespace name.", :in "path", :name "namespaceName", :required true, :type "string"} {:description "Parameters supplied to create a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "NamespaceCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Topics_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}", :description "Creates an authorization rule for the specified topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} {:description "The shared access authorization rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SharedAccessAuthorizationRuleCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Queues_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues", :description "Gets the queues within a namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHub_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/eventhubs/{eventhubName}/authorizationRules", :description "Gets authorization rules for a eventhub.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} {:description "The eventhub name.", :in "path", :name "eventhubName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}", :description "Deletes an existing namespace. This operation also removes all associated resources under the namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Creates or updates an authorization rule for a namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} {:description "The shared access authorization rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SharedAccessAuthorizationRuleCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :MessagingPlan_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/messagingplan", :description "Gets a description for the specified namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}", :description "Gets a description for the specified namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Queues_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}", :description "Deletes a queue authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Topics_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics", :description "Gets all the topics in a namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Deletes a namespace authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHub_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/eventhubs/{eventhubName}/authorizationRules/{authorizationRuleName}", :description "Returns the specified authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} {:description "The eventhub name.", :in "path", :name "eventhubName", :required true, :type "string"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Queues_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}", :description "Returns a description for the specified queue.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Queues_PostAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}", :description "Gets an authorization rule for a queue by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Subscriptions_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}", :description "Returns a subscription description for the specified topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "subscriptionNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Topics_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}", :description "Returns the specified authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Queues_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}", :description "Creates an authorization rule for a queue.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} {:description "The shared access authorization rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SharedAccessAuthorizationRuleCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_CheckNameSpaceAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameSpaceAvailability", :description "Check the give namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters to check availability of the given namespace name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailability"}}], :verb :post}, :Subscriptions_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions", :description "List all the subscriptions under a specified topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability", :description "Check the give namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters to check availability of the given namespace name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailability"}}], :verb :post}, :Topics_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}", :description "Deletes a topic from the specified namespace and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :MessagingPlan_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/messagingplan", :description "Creates or updates a Messaging Plan for a namespace", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "The namespace name.", :in "path", :name "namespaceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters supplied to create a messaging plan.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "MessagingPlan"}}], :verb :put}, :Topics_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}", :description "Deletes a topic authorization rule.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Queues_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}", :description "Creates or updates a Service Bus queue. This operation is idempotent.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} {:description "Parameters supplied to create or update a queue resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "QueueCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces", :description "Gets the available namespaces within a resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Topics_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}", :description "Creates a topic in the specified namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} {:description "Parameters supplied to create a topic resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "TopicCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Gets an authorization rule for a namespace by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}", :description "Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} {:description "Parameters supplied to update a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "NamespaceUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Queues_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}", :description "Gets an authorization rule for a queue by rule name.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "authorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListPostAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules", :description "Gets the authorization rules for a namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Topics_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}", :description "Returns a description for the specified topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Queues_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules", :description "Gets all authorization rules for a queue.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "queueNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Topics_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules", :description "Gets authorization rules for a topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Subscriptions_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}", :description "Deletes a subscription from the specified topic.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "subscriptionNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules", :description "Gets the authorization rules for a namespace.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces", :description "Gets all the available namespaces within the subscription, irrespective of the resource groups.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.ServiceBus/operations", :description "Lists all of the available ServiceBus REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Subscriptions_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}", :description "Creates a topic subscription.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "namespaceNameParameter"} #:reference{:parameters "topicNameParameter"} #:reference{:parameters "subscriptionNameParameter"} {:description "Parameters supplied to create a subscription resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SubscriptionCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}}, :parameters {:ApiVersionParameter {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}, :authorizationRuleNameParameter {:description "The authorization rule name.", :in "path", :maxLength 50, :minLength 1, :name "authorizationRuleName", :required true, :type "string", :x-ms-parameter-location "method"}, :namespaceNameParameter {:description "The namespace name", :in "path", :maxLength 50, :minLength 6, :name "namespaceName", :required true, :type "string", :x-ms-parameter-location "method"}, :queueNameParameter {:description "The queue name.", :in "path", :maxLength 50, :minLength 1, :name "queueName", :required true, :type "string", :x-ms-parameter-location "method"}, :resourceGroupNameParameter {:description "Name of the Resource group within the Azure subscription.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionNameParameter {:description "The subscription name.", :in "path", :maxLength 50, :minLength 1, :name "subscriptionName", :required true, :type "string", :x-ms-parameter-location "method"}, :topicNameParameter {:description "The topic name.", :in "path", :maxLength 50, :minLength 1, :name "topicName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:SharedAccessAuthorizationRuleGetProperties {:description "SharedAccessAuthorizationRule properties.", :properties {:rights {:description "The rights associated with the rule.", :items {:enum ["Manage" "Send" "Listen"], :type "string", :x-ms-enum {:modelAsString false, :name "AccessRights"}}, :type "array"}}, :required ["rights"]}, :SubscriptionListResult {:description "The response to the List Subscriptions operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of subscriptions.", :type "string"}, :value {:description "Result of the List Subscriptions operation.", :items #:reference{:definitions "SubscriptionResource"}, :type "array"}}}, :NamespaceListResult {:description "The response of the List Namespace operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces.", :type "string"}, :value {:description "Result of the List Namespace operation.", :items #:reference{:definitions "NamespaceResource"}, :type "array"}}}, :QueueResource {:allOf [#:reference{:definitions "Resource"}], :description "Description of queue Resource.", :properties {:properties #:reference{:definitions "QueueProperties"}}}, :SubscriptionResource {:allOf [#:reference{:definitions "Resource"}], :description "Description of subscription resource.", :properties {:properties #:reference{:definitions "SubscriptionProperties"}}}, :OperationListResult {:description "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :TopicProperties {:description "The Topic Properties definition.", :properties {:isExpress {:description "", :type "boolean"}, :countDetails #:reference{:definitions "MessageCountDetails"}, :autoDeleteOnIdle {:description "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.", :type "string"}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}, :supportOrdering {:description "Value that indicates whether the topic supports ordering.", :type "boolean"}, :maxSizeInMegabytes {:description "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic.", :format "int64", :type "integer"}, :enablePartitioning {:description "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.", :type "boolean"}, :accessedAt {:description "Last time the message was sent, or a request was received, for this topic.", :format "date-time", :readOnly true, :type "string"}, :filteringMessagesBeforePublishing {:description "Whether messages should be filtered before publishing.", :type "boolean"}, :defaultMessageTimeToLive {:description "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.", :type "string"}, :enableBatchedOperations {:description "Value that indicates whether server-side batched operations are enabled.", :type "boolean"}, :sizeInBytes {:description "Size of the topic, in bytes.", :format "int64", :readOnly true, :type "integer"}, :createdAt {:description "Exact time the message was created.", :format "date-time", :readOnly true, :type "string"}, :requiresDuplicateDetection {:description "Value indicating if this topic requires duplicate detection.", :type "boolean"}, :subscriptionCount {:description "Number of subscriptions.", :format "int32", :readOnly true, :type "integer"}, :isAnonymousAccessible {:description "Value that indicates whether the message is accessible anonymously.", :type "boolean"}, :status #:reference{:definitions "EntityStatus"}, :enableExpress {:description "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.", :type "boolean"}, :entityAvailabilityStatus #:reference{:definitions "EntityAvailabilityStatus"}, :duplicateDetectionHistoryTimeWindow {:description "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.", :type "string"}}}, :QueueListResult {:description "The response to the List Queues operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of queues.", :type "string"}, :value {:description "Result of the List Queues operation.", :items #:reference{:definitions "QueueResource"}, :type "array"}}}, :Operation {:description "A ServiceBus REST API operation", :properties {:display {:description "The object that represents the operation.", :properties {:operation {:description "Operation type: Read, write, delete, etc.", :readOnly true, :type "string"}, :provider {:description "Service provider: Microsoft.ServiceBus", :readOnly true, :type "string"}, :resource {:description "Resource on which the operation is performed: Invoice, etc.", :readOnly true, :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :readOnly true, :type "string"}}, :type "object"}, :NamespaceUpdateParameters {:description "Parameters supplied to the Patch Namespace operation.", :properties {:sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}}, :NamespaceCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Namespace operation.", :properties {:location {:description "Namespace location.", :type "string"}, :properties #:reference{:definitions "NamespaceProperties"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Namespace tags.", :type "object"}}, :required ["location"]}, :SubscriptionCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Subscription operation.", :properties {:location {:description "Subscription data center location.", :type "string"}, :properties #:reference{:definitions "SubscriptionProperties"}, :type {:description "Resource manager type of the resource.", :type "string"}}, :required ["location"]}, :SharedAccessAuthorizationRuleGetResource {:allOf [#:reference{:definitions "Resource"}], :description "Description of a namespace authorization rule.", :properties {:properties #:reference{:definitions "SharedAccessAuthorizationRuleGetProperties"}}}, :UnavailableReason {:description "Specifies the reason for the unavailability of the service.", :enum ["None" "InvalidName" "SubscriptionIsDisabled" "NameInUse" "NameInLockdown" "TooManyNamespaceInCurrentSubscription"], :type "string", :x-ms-enum {:modelAsString true, :name "UnavailableReason"}}, :TopicCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Topic operation.", :properties {:location {:description "Location of the resource.", :type "string"}, :name {:description "Topic name.", :type "string"}, :properties #:reference{:definitions "TopicProperties"}}, :required ["location"]}, :SharedAccessAuthorizationRuleResource {:allOf [#:reference{:definitions "Resource"}], :description "Description of a namespace authorization rule.", :properties {:properties #:reference{:definitions "SharedAccessAuthorizationRuleProperties"}}}, :CheckNameAvailability {:description "Description of a Check Name availability request properties.", :properties {:name {:description "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.", :type "string"}}, :required ["name"]}, :EntityAvailabilityStatus {:description "Entity availability status.", :enum ["Available" "Limited" "Renaming" "Restoring" "Unknown"], :type "string", :x-ms-enum {:modelAsString false, :name "EntityAvailabilityStatus"}}, :SubscriptionProperties {:description "Description of Subscription Resource.", :properties {:countDetails #:reference{:definitions "MessageCountDetails"}, :autoDeleteOnIdle {:description "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.", :type "string"}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}, :lockDuration {:description "The lock duration time span for the subscription.", :type "string"}, :messageCount {:description "Number of messages.", :format "int64", :readOnly true, :type "integer"}, :accessedAt {:description "Last time there was a receive request to this subscription.", :format "date-time", :readOnly true, :type "string"}, :defaultMessageTimeToLive {:description "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.", :type "string"}, :enableBatchedOperations {:description "Value that indicates whether server-side batched operations are enabled.", :type "boolean"}, :createdAt {:description "Exact time the message was created.", :format "date-time", :readOnly true, :type "string"}, :requiresSession {:description "Value indicating if a subscription supports the concept of sessions.", :type "boolean"}, :deadLetteringOnMessageExpiration {:description "Value that indicates whether a subscription has dead letter support when a message expires.", :type "boolean"}, :maxDeliveryCount {:description "Number of maximum deliveries.", :format "int32", :type "integer"}, :status #:reference{:definitions "EntityStatus"}, :entityAvailabilityStatus #:reference{:definitions "EntityAvailabilityStatus"}, :deadLetteringOnFilterEvaluationExceptions {:description "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.", :type "boolean"}, :isReadOnly {:description "Value that indicates whether the entity description is read-only.", :type "boolean"}}}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "The Resource definition.", :properties {:location {:description "Resource location", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}}, :required ["location"]}, :CheckNameAvailabilityResult {:description "Description of a Check Name availability request properties.", :properties {:message {:description "The detailed info regarding the reason associated with the namespace.", :readOnly true, :type "string"}, :nameAvailable {:description "Value indicating namespace is availability, true if the namespace is available; otherwise, false.", :type "boolean"}, :reason #:reference{:definitions "UnavailableReason"}}}, :NamespaceProperties {:description "Properties of the namespace.", :properties {:createACSNamespace {:description "Indicates whether to create an ACS namespace.", :type "boolean"}, :createdAt {:description "The time the namespace was created.", :format "date-time", :readOnly true, :type "string"}, :enabled {:description "Specifies whether this instance is enabled.", :type "boolean"}, :provisioningState {:description "Provisioning state of the namespace.", :readOnly true, :type "string"}, :serviceBusEndpoint {:description "Endpoint you can use to perform Service Bus operations.", :readOnly true, :type "string"}, :status {:description "State of the namespace.", :enum ["Unknown" "Creating" "Created" "Activating" "Enabling" "Active" "Disabling" "Disabled" "SoftDeleting" "SoftDeleted" "Removing" "Removed" "Failed"], :type "string", :x-ms-enum {:modelAsString false, :name "NamespaceState"}}, :updatedAt {:description "The time the namespace was updated.", :format "date-time", :readOnly true, :type "string"}}}, :QueueCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Queue operation.", :properties {:location {:description "location of the resource.", :type "string"}, :name {:description "Queue name.", :type "string"}, :properties #:reference{:definitions "QueueProperties"}}, :required ["location"]}, :TopicResource {:allOf [#:reference{:definitions "Resource"}], :description "Description of topic resource.", :properties {:properties #:reference{:definitions "TopicProperties"}}}, :MessageCountDetails {:description "Message Count Details.", :properties {:activeMessageCount {:description "Number of active messages in the queue, topic, or subscription.", :format "int64", :readOnly true, :type "integer"}, :deadLetterMessageCount {:description "Number of messages that are dead lettered.", :format "int64", :readOnly true, :type "integer"}, :scheduledMessageCount {:description "Number of scheduled messages.", :format "int64", :readOnly true, :type "integer"}, :transferDeadLetterMessageCount {:description "Number of messages transferred into dead letters.", :format "int64", :readOnly true, :type "integer"}, :transferMessageCount {:description "Number of messages transferred to another queue, topic, or subscription.", :format "int64", :readOnly true, :type "integer"}}, :type "object"}, :MessagingPlanproperties {:description "Premium Messaging Region", :properties {:revision {:description "revision number", :format "int64", :type "integer"}, :selectedEventHubUnit {:description "Selected event hub unit", :format "int32", :type "integer"}, :sku {:description "Sku type", :format "int32", :type "integer"}, :updatedAt {:description "The exact time the messaging plan was updated.", :format "date-time", :readOnly true, :type "string"}}}, :EntityStatus {:description "Entity status.", :enum ["Active" "Creating" "Deleting" "Disabled" "ReceiveDisabled" "Renaming" "Restoring" "SendDisabled" "Unknown"], :type "string", :x-ms-enum {:modelAsString false, :name "EntityStatus"}}, :NamespaceResource {:allOf [#:reference{:definitions "TrackedResource"}], :description "Description of a namespace resource.", :properties {:properties #:reference{:definitions "NamespaceProperties"}, :sku #:reference{:definitions "Sku"}}}, :TopicListResult {:description "The response to the List Topics operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of topics.", :type "string"}, :value {:description "Result of the List Topics operation.", :items #:reference{:definitions "TopicResource"}, :type "array"}}}, :MessagingPlan {:allOf [#:reference{:definitions "TrackedResource"}], :description "Premium Messaging", :properties {:properties #:reference{:definitions "MessagingPlanproperties"}}, :type "object"}, :Resource {:description "The Resource definition for other than namespace.", :properties {:id {:description "Resource Id", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name", :readOnly true, :type "string"}, :type {:description "Resource type", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :SharedAccessAuthorizationRuleListResult {:description "The response to the List Namespace operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules.", :type "string"}, :value {:description "Result of the List Authorization Rules operation.", :items #:reference{:definitions "SharedAccessAuthorizationRuleResource"}, :type "array"}}}, :Sku {:description "SKU of the namespace.", :properties {:capacity {:description "The specified messaging units for the tier.", :format "int32", :type "integer"}, :name {:description "Name of this SKU.", :enum ["Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}, :tier {:description "The billing tier of this particular SKU.", :enum ["Basic" "Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}, :required ["tier"], :type "object"}, :SharedAccessAuthorizationRuleCreateOrUpdateParameters {:description "Parameters supplied to the Create Or Update Authorization Rules operation.", :properties {:location {:description "data center location.", :type "string"}, :name {:description "Name of the authorization rule.", :type "string"}, :properties #:reference{:definitions "SharedAccessAuthorizationRuleProperties"}}}, :QueueProperties {:description "The Queue Properties definition.", :properties {:countDetails #:reference{:definitions "MessageCountDetails"}, :autoDeleteOnIdle {:description "the TimeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.", :type "string"}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}, :supportOrdering {:description "A value that indicates whether the queue supports ordering.", :type "boolean"}, :maxSizeInMegabytes {:description "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.", :format "int64", :type "integer"}, :lockDuration {:description "The duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.", :type "string"}, :enablePartitioning {:description "A value that indicates whether the queue is to be partitioned across multiple message brokers.", :type "boolean"}, :messageCount {:description "The number of messages in the queue.", :format "int64", :readOnly true, :type "integer"}, :accessedAt {:description "Last time a message was sent, or the last time there was a receive request to this queue.", :format "date-time", :readOnly true, :type "string"}, :defaultMessageTimeToLive {:description "The default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.", :type "string"}, :enableBatchedOperations {:description "A value that indicates whether server-side batched operations are enabled.", :type "boolean"}, :sizeInBytes {:description "The size of the queue, in bytes.", :format "int64", :readOnly true, :type "integer"}, :createdAt {:description "The exact time the message was created.", :format "date-time", :readOnly true, :type "string"}, :requiresSession {:description "A value that indicates whether the queue supports the concept of sessions.", :type "boolean"}, :requiresDuplicateDetection {:description "A value indicating if this queue requires duplicate detection.", :type "boolean"}, :deadLetteringOnMessageExpiration {:description "A value that indicates whether this queue has dead letter support when a message expires.", :type "boolean"}, :maxDeliveryCount {:description "The maximum delivery count. A message is automatically deadlettered after this number of deliveries.", :format "int32", :type "integer"}, :isAnonymousAccessible {:description "A value that indicates whether the message is accessible anonymously.", :type "boolean"}, :status #:reference{:definitions "EntityStatus"}, :enableExpress {:description "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.", :type "boolean"}, :entityAvailabilityStatus #:reference{:definitions "EntityAvailabilityStatus"}, :duplicateDetectionHistoryTimeWindow {:description "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.", :type "string"}}}, :SharedAccessAuthorizationRuleProperties {:description "AuthorizationRule properties.", :properties {:claimType {:description "A string that describes Claim Type for authorization rule.", :type "string"}, :claimValue {:description "A string that describes Claim Value of authorization rule.", :type "string"}, :createdTime {:description "The time the namespace was created.", :format "date-time", :readOnly true, :type "string"}, :keyName {:description "A string that describes the Key Name of authorization rule.", :type "string"}, :modifiedTime {:description "The time the namespace was updated.", :format "date-time", :readOnly true, :type "string"}, :primaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :type "string"}, :rights {:description "The rights associated with the rule.", :items {:enum ["Manage" "Send" "Listen"], :type "string", :x-ms-enum {:modelAsString false, :name "AccessRights"}}, :type "array"}, :secondaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :type "string"}}, :required ["rights"]}}}