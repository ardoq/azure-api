{:scheme "https", :host "management.azure.com", :info {:description "Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.", :title "CdnManagementClient", :version "2019-12-31"}, :ops {:CustomDomains_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}", :description "Deletes an existing custom domain within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the custom domain within an endpoint.", :in "path", :name "customDomainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :ValidateProbe {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateProbe", :description "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration.", :parameters [{:description "Input to check.", :in "body", :name "validateProbeInput", :required true, :schema #:reference{:definitions "ValidateProbeInput"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Endpoints_PurgeContent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge", :description "Removes a content from CDN.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.", :in "body", :name "contentFilePaths", :required true, :schema #:reference{:definitions "PurgeParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CustomDomains_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}", :description "Creates a new custom domain within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the custom domain within an endpoint.", :in "path", :name "customDomainName", :required true, :type "string"} {:description "Properties required to create a new custom domain.", :in "body", :name "customDomainProperties", :required true, :schema #:reference{:definitions "CustomDomainParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Origins_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}", :description "Gets an existing origin within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin which is unique within the endpoint.", :in "path", :name "originName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :OriginGroups_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}", :description "Gets an existing origin group within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin group which is unique within the endpoint.", :in "path", :name "originGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Endpoints_Stop {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop", :description "Stops an existing running CDN endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Endpoints_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", :description "Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Endpoint properties", :in "body", :name "endpoint", :required true, :schema #:reference{:definitions "Endpoint"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :ResourceUsage_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkResourceUsage", :description "Check the quota and actual usage of the CDN profiles under the given subscription.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Profiles_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles", :description "Lists all of the CDN profiles within an Azure subscription.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CheckNameAvailabilityWithSubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkNameAvailability", :description "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.", :parameters [{:description "Input to check.", :in "body", :name "checkNameAvailabilityInput", :required true, :schema #:reference{:definitions "CheckNameAvailabilityInput"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Origins_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}", :description "Deletes an existing origin within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin which is unique within the endpoint.", :in "path", :name "originName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Endpoints_ValidateCustomDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain", :description "Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Custom domain to be validated.", :in "body", :name "customDomainProperties", :required true, :schema #:reference{:definitions "ValidateCustomDomainInput"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CustomDomains_EnableCustomHttps {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps", :description "Enable https delivery of the custom domain.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the custom domain within an endpoint.", :in "path", :name "customDomainName", :required true, :type "string"} {:description "The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default.", :in "body", :name "customDomainHttpsParameters", :required false, :schema #:reference{:definitions "CustomDomainHttpsParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :OriginGroups_ListByEndpoint {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups", :description "Lists all of the existing origin groups within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Profiles_GenerateSsoUri {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri", :description "Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Endpoints_ListByProfile {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints", :description "Lists existing CDN endpoints.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Endpoints_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", :description "Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Endpoint update properties", :in "body", :name "endpointUpdateProperties", :required true, :schema #:reference{:definitions "EndpointUpdateParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :CheckNameAvailability {:path "/providers/Microsoft.Cdn/checkNameAvailability", :description "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.", :parameters [{:description "Input to check.", :in "body", :name "checkNameAvailabilityInput", :required true, :schema #:reference{:definitions "CheckNameAvailabilityInput"}} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Profiles_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}", :description "Creates a new CDN profile with a profile name under the specified subscription and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Profile properties needed to create a new profile.", :in "body", :name "profile", :required true, :schema #:reference{:definitions "Profile"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Profiles_ListResourceUsage {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage", :description "Checks the quota and actual usage of endpoints under the given CDN profile.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Endpoints_Start {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start", :description "Starts an existing CDN endpoint that is on a stopped state.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CustomDomains_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}", :description "Gets an existing custom domain within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the custom domain within an endpoint.", :in "path", :name "customDomainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Profiles_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}", :description "Gets a CDN profile with the specified profile name under the specified subscription and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CustomDomains_DisableCustomHttps {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps", :description "Disable https delivery of the custom domain.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the custom domain within an endpoint.", :in "path", :name "customDomainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Endpoints_LoadContent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load", :description "Pre-loads a content to CDN. Available for Verizon Profiles.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file ", :in "body", :name "contentFilePaths", :required true, :schema #:reference{:definitions "LoadParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CustomDomains_ListByEndpoint {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains", :description "Lists all of the existing custom domains within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Profiles_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}", :description "Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Profiles_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles", :description "Lists all of the CDN profiles within a resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :EdgeNodes_List {:path "/providers/Microsoft.Cdn/edgenodes", :description "Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :Origins_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}", :description "Updates an existing origin within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin which is unique within the endpoint.", :in "path", :name "originName", :required true, :type "string"} {:description "Origin properties", :in "body", :name "originUpdateProperties", :required true, :schema #:reference{:definitions "OriginUpdateParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :OriginGroups_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}", :description "Updates an existing origin group within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin group which is unique within the endpoint.", :in "path", :name "originGroupName", :required true, :type "string"} {:description "Origin group properties", :in "body", :name "originGroupUpdateProperties", :required true, :schema #:reference{:definitions "OriginGroupUpdateParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Endpoints_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", :description "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Origins_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}", :description "Creates a new origin within the specified endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin that is unique within the endpoint.", :in "path", :name "originName", :required true, :type "string"} {:description "Origin properties", :in "body", :name "origin", :required true, :schema #:reference{:definitions "Origin"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Endpoints_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}", :description "Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Endpoints_ListResourceUsage {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/checkResourceUsage", :description "Checks the quota and usage of geo filters and custom domains under the given endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.Cdn/operations", :description "Lists all of the available CDN REST API operations.", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :Profiles_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}", :description "Updates an existing CDN profile with the specified profile name under the specified subscription and resource group.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Profile properties needed to update an existing profile.", :in "body", :name "profileUpdateParameters", :required true, :schema #:reference{:definitions "ProfileUpdateParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Profiles_ListSupportedOptimizationTypes {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes", :description "Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Origins_ListByEndpoint {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins", :description "Lists all of the existing origins within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :OriginGroups_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}", :description "Creates a new origin group within the specified endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin group which is unique within the endpoint.", :in "path", :name "originGroupName", :required true, :type "string"} {:description "Origin group properties", :in "body", :name "originGroup", :required true, :schema #:reference{:definitions "OriginGroup"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :OriginGroups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}", :description "Deletes an existing origin group within an endpoint.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} {:description "Name of the CDN profile which is unique within the resource group.", :in "path", :name "profileName", :required true, :type "string"} {:description "Name of the endpoint under the profile which is unique globally.", :in "path", :name "endpointName", :required true, :type "string"} {:description "Name of the origin group which is unique within the endpoint.", :in "path", :name "originGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}}, :parameters {:apiVersionParameter {:description "Version of the API to be used with the client request. Current version is 2017-04-02.", :in "query", :name "api-version", :required true, :type "string"}, :resourceGroupNameParameter {:description "Name of the Resource group within the Azure subscription.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"}, :subscriptionIdParameter {:description "Azure Subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ProfileListResult {:description "Result of the request to list profiles. It contains a list of profile objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of profile objects if there are any.", :type "string"}, :value {:description "List of CDN profiles within a resource group.", :items #:reference{:definitions "Profile"}, :readOnly true, :type "array"}}}, :GeoFilter {:description "Rules defining user's geo access within a CDN endpoint.", :properties {:action {:description "Action of the geo filter, i.e. allow or block access.", :enum ["Block" "Allow"], :type "string", :x-ms-enum {:modelAsString false, :name "GeoFilterActions"}}, :countryCodes {:description "Two letter country codes defining user country access in a geo filter, e.g. AU, MX, US.", :items {:type "string"}, :type "array"}, :relativePath {:description "Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)", :type "string"}}, :required ["relativePath" "action" "countryCodes"], :type "object"}, :OriginGroupUpdatePropertiesParameters {:description "The JSON object that contains the properties of the origin group.", :properties {:healthProbeSettings #:reference{:definitions "HealthProbeParameters"}, :origins {:description "The source of the content being delivered via CDN within given origin group.", :items #:reference{:definitions "ResourceReference"}, :type "array"}, :responseBasedOriginErrorDetectionSettings #:reference{:definitions "ResponseBasedOriginErrorDetectionParameters"}, :trafficRestorationTimeToHealedOrNewEndpointsInMinutes {:description "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.", :maximum 50, :minimum 0, :type "integer"}}}, :DeliveryRuleRequestMethodCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RequestMethod condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RequestMethodMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RequestMethod"}, :OriginProperties {:allOf [#:reference{:definitions "OriginUpdatePropertiesParameters"}], :description "The JSON object that contains the properties of the origin.", :properties {:provisioningState {:description "Provisioning status of the origin.", :readOnly true, :type "string"}, :resourceState {:description "Resource status of the origin.", :enum ["Creating" "Active" "Deleting"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "OriginResourceState"}}}, :required ["hostName"]}, :ResourceType {:description "Type of CDN resource used in CheckNameAvailability.", :enum ["Microsoft.Cdn/Profiles/Endpoints"], :type "string", :x-ms-enum {:modelAsString false, :name "ResourceType"}}, :CacheKeyQueryStringActionParameters {:description "Defines the parameters for the cache-key query string action.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"], :type "string"}, :queryParameters {:description "query parameters to include or exclude (comma separated).", :type "string", :x-nullable true}, :queryStringBehavior {:description "Caching behavior for the requests", :enum ["Include" "IncludeAll" "Exclude" "ExcludeAll"], :type "string", :x-ms-enum {:modelAsString true, :name "queryStringBehavior"}}}, :required ["queryStringBehavior" "@odata.type"]}, :DeepCreatedOriginGroup {:description "The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.", :properties {:name {:description "Origin group name which must be unique within the endpoint.", :type "string"}, :properties #:reference{:definitions "DeepCreatedOriginGroupProperties"}}, :required ["name"], :type "object", :x-ms-azure-resource true}, :DeliveryRuleAction {:description "An action for the delivery rule.", :discriminator "name", :properties {:name {:description "The name of the action for the delivery rule.", :enum ["CacheExpiration" "CacheKeyQueryString" "ModifyRequestHeader" "ModifyResponseHeader" "UrlRedirect" "UrlRewrite"], :type "string", :x-ms-enum {:modelAsString true, :name "DeliveryRuleAction"}}}, :required ["name"]}, :DeliveryRuleHttpVersionCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the HttpVersion condition for the delivery rule.", :properties {:parameters #:reference{:definitions "HttpVersionMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "HttpVersion"}, :OriginListResult {:description "Result of the request to list origins. It contains a list of origin objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of origin objects if there are any.", :type "string"}, :value {:description "List of CDN origins within an endpoint", :items #:reference{:definitions "Origin"}, :readOnly true, :type "array"}}}, :ProfileUpdateParameters {:description "Properties required to update a profile.", :properties {:tags {:additionalProperties {:type "string"}, :description "Profile tags", :type "object"}}, :type "object", :x-ms-azure-resource true}, :DeliveryRuleResponseHeaderAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the response header action for the delivery rule.", :properties {:parameters #:reference{:definitions "HeaderActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "ModifyResponseHeader"}, :transform {:description "Describes what transforms are applied before matching", :enum ["Lowercase" "Uppercase"], :type "string", :x-ms-enum {:modelAsString true, :name "transform"}}, :DeliveryRuleRemoteAddressCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RemoteAddress condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RemoteAddressMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RemoteAddress"}, :CustomDomain {:allOf [#:reference{:definitions "ProxyResource"}], :description "Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.", :properties {:properties #:reference{:definitions "CustomDomainProperties"}}, :type "object"}, :DeliveryRuleCacheKeyQueryStringAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the cache-key query string action for the delivery rule.", :properties {:parameters #:reference{:definitions "CacheKeyQueryStringActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "CacheKeyQueryString"}, :Endpoint {:allOf [#:reference{:definitions "TrackedResource"}], :description "CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.", :properties {:properties #:reference{:definitions "EndpointProperties"}}, :type "object"}, :DeliveryRuleRequestSchemeCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RequestScheme condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RequestSchemeMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RequestScheme"}, :Operation {:description "CDN REST API operation", :properties {:display {:description "The object that represents the operation.", :properties {:operation {:description "Operation type: Read, write, delete, etc.", :readOnly true, :type "string"}, :provider {:description "Service provider: Microsoft.Cdn", :readOnly true, :type "string"}, :resource {:description "Resource on which the operation is performed: Profile, endpoint, etc.", :readOnly true, :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :readOnly true, :type "string"}}, :type "object"}, :ValidateCustomDomainInput {:description "Input of the custom domain to be validated for DNS mapping.", :properties {:hostName {:description "The host name of the custom domain. Must be a domain name.", :type "string"}}, :required ["hostName"], :type "object"}, :DeliveryRuleUrlFileExtensionCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the UrlFileExtension condition for the delivery rule.", :properties {:parameters #:reference{:definitions "UrlFileExtensionMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "UrlFileExtension"}, :KeyVaultCertificateSourceParameters {:description "Describes the parameters for using a user's KeyVault certificate for securing custom domain.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.KeyVaultCertificateSourceParameters"], :type "string"}, :deleteRule {:description "Describes the action that shall be taken when the certificate is removed from Key Vault.", :enum ["NoAction"], :type "string", :x-ms-enum {:modelAsString true, :name "DeleteRule"}}, :resourceGroupName {:description "Resource group of the user's Key Vault containing the SSL certificate", :type "string"}, :secretName {:description "The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.", :type "string"}, :secretVersion {:description "The version(GUID) of Key Vault Secret in Key Vault.", :type "string"}, :subscriptionId {:description "Subscription Id of the user's Key Vault containing the SSL certificate", :type "string"}, :updateRule {:description "Describes the action that shall be taken when the certificate is updated in Key Vault.", :enum ["NoAction"], :type "string", :x-ms-enum {:modelAsString true, :name "UpdateRule"}}, :vaultName {:description "The name of the user's Key Vault containing the SSL certificate", :type "string"}}, :required ["@odata.type" "subscriptionId" "resourceGroupName" "vaultName" "secretName" "secretVersion" "updateRule" "deleteRule"]}, :ValidateCustomDomainOutput {:description "Output of custom domain validation.", :properties {:customDomainValidated {:description "Indicates whether the custom domain is valid or not.", :readOnly true, :type "boolean"}, :message {:description "Error message describing why the custom domain is not valid.", :readOnly true, :type "string"}, :reason {:description "The reason why the custom domain is not valid.", :readOnly true, :type "string"}}, :type "object"}, :Profile {:allOf [#:reference{:definitions "TrackedResource"}], :description "CDN profile is a logical grouping of endpoints that share the same settings, such as CDN provider and pricing tier.", :properties {:properties #:reference{:definitions "ProfileProperties"}, :sku #:reference{:definitions "Sku"}}, :required ["sku"], :type "object"}, :CheckNameAvailabilityInput {:description "Input of CheckNameAvailability API.", :properties {:name {:description "The resource name to validate.", :type "string"}, :type #:reference{:definitions "ResourceType"}}, :required ["name" "type"], :type "object"}, :PostArgsMatchConditionParameters {:description "Defines the parameters for PostArgs match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRulePostArgsConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "PostArgsOperator"}}, :selector {:description "Name of PostArg to be matched", :type "string"}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "selector" "@odata.type"]}, :PurgeParameters {:description "Parameters required for content purge.", :properties {:contentPaths {:description "The path to the content to be purged. Can describe a file path or a wild card directory.", :items {:type "string"}, :type "array"}}, :required ["contentPaths"], :type "object"}, :UrlFileExtensionMatchConditionParameters {:description "Defines the parameters for UrlFileExtension match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlFileExtensionMatchConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "UrlFileExtensionOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :QueryStringCachingBehavior {:description "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.", :enum ["IgnoreQueryString" "BypassCaching" "UseQueryString" "NotSet"], :type "string", :x-ms-enum {:modelAsString false, :name "QueryStringCachingBehavior"}}, :CookiesMatchConditionParameters {:description "Defines the parameters for Cookies match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleCookiesConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "CookiesOperator"}}, :selector {:description "Name of Cookies to be matched", :type "string"}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "selector" "@odata.type"]}, :DeliveryRuleQueryStringCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the QueryString condition for the delivery rule.", :properties {:parameters #:reference{:definitions "QueryStringMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "QueryString"}, :OriginUpdatePropertiesParameters {:description "The JSON object that contains the properties of the origin.", :properties {:enabled {:description "Origin is enabled for load balancing or not", :type "boolean"}, :hostName {:description "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint.", :type "string"}, :httpPort {:description "The value of the HTTP port. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :httpsPort {:description "The value of the HTTPS port. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :originHostHeader {:description "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint", :type "string"}, :priority {:description "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5", :maximum 5, :minimum 1, :type "integer"}, :weight {:description "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000", :maximum 1000, :minimum 1, :type "integer"}}}, :CacheExpirationActionParameters {:description "Defines the parameters for the cache expiration action.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleCacheExpirationActionParameters"], :type "string"}, :cacheBehavior {:description "Caching behavior for the requests", :enum ["BypassCache" "Override" "SetIfMissing"], :type "string", :x-ms-enum {:modelAsString true, :name "cacheBehavior"}}, :cacheDuration {:description "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss", :type "string", :x-nullable true}, :cacheType {:description "The level at which the content needs to be cached.", :enum ["All"], :type "string", :x-ms-enum {:modelAsString true, :name "CacheType"}}}, :required ["cacheBehavior" "cacheType" "@odata.type"]}, :OriginGroup {:allOf [#:reference{:definitions "ProxyResource"}], :description "Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.", :properties {:properties #:reference{:definitions "OriginGroupProperties"}}, :type "object"}, :QueryStringMatchConditionParameters {:description "Defines the parameters for QueryString match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleQueryStringConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "QueryStringOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :DeliveryRuleCookiesCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the Cookies condition for the delivery rule.", :properties {:parameters #:reference{:definitions "CookiesMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "Cookies"}, :HttpErrorRangeParameters {:description "The JSON object that represents the range for http status codes", :properties {:begin {:description "The inclusive start of the http status code range.", :maximum 999, :minimum 100, :type "integer"}, :end {:description "The inclusive end of the http status code range.", :maximum 999, :minimum 100, :type "integer"}}}, :EndpointListResult {:description "Result of the request to list endpoints. It contains a list of endpoint objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of endpoint objects if there is any.", :type "string"}, :value {:description "List of CDN endpoints within a profile", :items #:reference{:definitions "Endpoint"}, :readOnly true, :type "array"}}}, :DeepCreatedOriginProperties {:description "Properties of the origin created on the CDN endpoint.", :properties {:enabled {:description "Origin is enabled for load balancing or not. By default, origin is always enabled.", :type "boolean"}, :hostName {:description "The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint.", :type "string"}, :httpPort {:description "The value of the HTTP port. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :httpsPort {:description "The value of the HTTPS port. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :originHostHeader {:description "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.", :type "string"}, :priority {:description "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.", :maximum 5, :minimum 1, :type "integer"}, :weight {:description "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000", :maximum 1000, :minimum 1, :type "integer"}}, :required ["hostName"], :type "object", :x-ms-azure-resource true}, :LoadParameters {:description "Parameters required for content load.", :properties {:contentPaths {:description "The path to the content to be loaded. Path should be a relative file URL of the origin.", :items {:type "string"}, :type "array"}}, :required ["contentPaths"], :type "object"}, :Origin {:allOf [#:reference{:definitions "TrackedResource"}], :description "CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.", :properties {:properties #:reference{:definitions "OriginProperties"}}, :type "object"}, :EndpointUpdateParameters {:description "Properties required to create or update an endpoint.", :properties {:properties #:reference{:definitions "EndpointPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "Endpoint tags.", :type "object"}}, :type "object", :x-ms-azure-resource true}, :ResourceUsage {:description "Output of check resource usage API.", :properties {:currentValue {:description "Actual value of usage on the specified resource type.", :readOnly true, :type "integer"}, :limit {:description "Quota of the specified resource type.", :readOnly true, :type "integer"}, :resourceType {:description "Resource type for which the usage is provided.", :readOnly true, :type "string"}, :unit {:description "Unit of the usage. e.g. Count.", :readOnly true, :type "string"}}, :type "object"}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "The resource model definition for a ARM tracked top level resource.", :properties {:location {:description "Resource location.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}, :cidrIpAddress {:description "CIDR Ip address", :properties {:baseIpAddress {:description "Ip address itself.", :type "string"}, :prefixLength {:description "The length of the prefix of the ip address.", :type "integer"}}, :type "object"}, :IsDeviceMatchConditionParameters {:description "Defines the parameters for IsDevice match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleIsDeviceConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:enum ["Mobile" "Desktop"], :type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Equal"], :type "string", :x-ms-enum {:modelAsString true, :name "IsDeviceOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :ValidateProbeInput {:description "Input of the validate probe API.", :properties {:probeURL {:description "The probe URL to validate.", :type "string"}}, :required ["probeURL"], :type "object"}, :CustomDomainProperties {:description "The JSON object that contains the properties of the custom domain to create.", :properties {:customHttpsProvisioningState {:description "Provisioning status of Custom Https of the custom domain.", :enum ["Enabling" "Enabled" "Disabling" "Disabled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CustomHttpsProvisioningState"}}, :customHttpsProvisioningSubstate {:description "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.", :enum ["SubmittingDomainControlValidationRequest" "PendingDomainControlValidationREquestApproval" "DomainControlValidationRequestApproved" "DomainControlValidationRequestRejected" "DomainControlValidationRequestTimedOut" "IssuingCertificate" "DeployingCertificate" "CertificateDeployed" "DeletingCertificate" "CertificateDeleted"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CustomHttpsProvisioningSubstate"}}, :hostName {:description "The host name of the custom domain. Must be a domain name.", :type "string"}, :provisioningState {:description "Provisioning status of the custom domain.", :readOnly true, :type "string"}, :resourceState {:description "Resource status of the custom domain.", :enum ["Creating" "Active" "Deleting"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CustomDomainResourceState"}}, :validationData {:description "Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China.", :type "string"}}, :required ["hostName"]}, :IpAddressGroup {:description "CDN Ip address group", :properties {:deliveryRegion {:description "The delivery region of the ip address group", :type "string"}, :ipv4Addresses {:description "The list of ip v4 addresses.", :items #:reference{:definitions "cidrIpAddress"}, :type "array"}, :ipv6Addresses {:description "The list of ip v6 addresses.", :items #:reference{:definitions "cidrIpAddress"}, :type "array"}}, :type "object"}, :UrlRewriteAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the url rewrite action for the delivery rule.", :properties {:parameters #:reference{:definitions "UrlRewriteActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "UrlRewrite"}, :ProfileProperties {:description "The JSON object that contains the properties required to create a profile.", :properties {:provisioningState {:description "Provisioning status of the profile.", :readOnly true, :type "string"}, :resourceState {:description "Resource status of the profile.", :enum ["Creating" "Active" "Deleting" "Disabled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProfileResourceState"}}}}, :OriginUpdateParameters {:description "Origin properties needed for origin update.", :properties {:properties #:reference{:definitions "OriginUpdatePropertiesParameters"}, :tags {:additionalProperties {:type "string"}, :description "Origin tags.", :type "object"}}, :type "object", :x-ms-azure-resource true}, :UrlFileNameMatchConditionParameters {:description "Defines the parameters for UrlFilename match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlFilenameConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "UrlFileNameOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :CdnCertificateSourceParameters {:description "Defines the parameters for using CDN managed certificate for securing custom domain.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.CdnCertificateSourceParameters"], :type "string"}, :certificateType {:description "Type of certificate used", :enum ["Shared" "Dedicated"], :type "string", :x-ms-enum {:modelAsString true, :name "CertificateType"}}}, :required ["@odata.type" "certificateType"]}, :CustomDomainParameters {:description "The customDomain JSON object required for custom domain creation or update.", :properties {:properties #:reference{:definitions "CustomDomainPropertiesParameters"}}, :type "object"}, :CustomDomainHttpsParameters {:description "The JSON object that contains the properties to secure a custom domain.", :discriminator "certificateSource", :properties {:certificateSource {:description "Defines the source of the SSL certificate.", :enum ["AzureKeyVault" "Cdn"], :type "string", :x-ms-enum {:modelAsString true, :name "CertificateSource"}}, :minimumTlsVersion {:description "TLS protocol version that will be used for Https", :enum ["None" "TLS10" "TLS12"], :type "string", :x-ms-enum {:modelAsString false, :name "MinimumTlsVersion"}}, :protocolType {:description "Defines the TLS extension protocol that is used for secure delivery.", :enum ["ServerNameIndication" "IPBased"], :type "string", :x-ms-enum {:modelAsString true, :name "ProtocolType"}}}, :required ["certificateSource" "protocolType"]}, :DeliveryRuleCondition {:description "A condition for the delivery rule.", :discriminator "name", :properties {:name {:description "The name of the condition for the delivery rule.", :enum ["RemoteAddress" "RequestMethod" "QueryString" "PostArgs" "RequestUri" "RequestHeader" "RequestBody" "RequestScheme" "UrlPath" "UrlFileExtension" "UrlFileName" "HttpVersion" "Cookies" "IsDevice"], :type "string", :x-ms-enum {:modelAsString true, :name "MatchVariable"}}}, :required ["name"]}, :ResourceReference {:description "Reference to another resource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :EndpointProperties {:allOf [#:reference{:definitions "EndpointPropertiesUpdateParameters"}], :description "The JSON object that contains the properties required to create an endpoint.", :properties {:hostName {:description "The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net", :readOnly true, :type "string"}, :originGroups {:description "The origin groups comprising of origins that are used for load balancing the traffic based on availability.", :items #:reference{:definitions "DeepCreatedOriginGroup"}, :type "array"}, :origins {:description "The source of the content being delivered via CDN.", :items #:reference{:definitions "DeepCreatedOrigin"}, :type "array"}, :provisioningState {:description "Provisioning status of the endpoint.", :readOnly true, :type "string"}, :resourceState {:description "Resource status of the endpoint.", :enum ["Creating" "Deleting" "Running" "Starting" "Stopped" "Stopping"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "EndpointResourceState"}}}, :required ["origins"]}, :DeliveryRulePostArgsCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the PostArgs condition for the delivery rule.", :properties {:parameters #:reference{:definitions "PostArgsMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "PostArgs"}, :OptimizationType {:description "Specifies what scenario the customer wants this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.", :enum ["GeneralWebDelivery" "GeneralMediaStreaming" "VideoOnDemandMediaStreaming" "LargeFileDownload" "DynamicSiteAcceleration"], :type "string", :x-ms-enum {:modelAsString true, :name "OptimizationType"}}, :HeaderActionParameters {:description "Defines the parameters for the request header action.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleHeaderActionParameters"], :type "string"}, :headerAction {:description "Action to perform", :enum ["Append" "Overwrite" "Delete"], :type "string", :x-ms-enum {:modelAsString true, :name "HeaderAction"}}, :headerName {:description "Name of the header to modify", :type "string"}, :value {:description "Value for the specified action", :type "string"}}, :required ["headerAction" "headerName" "@odata.type"]}, :DeepCreatedOriginGroupProperties {:description "Properties of the origin group created on the CDN endpoint.", :properties {:healthProbeSettings #:reference{:definitions "HealthProbeParameters"}, :origins {:description "The source of the content being delivered via CDN within given origin group.", :items #:reference{:definitions "ResourceReference"}, :type "array"}, :responseBasedOriginErrorDetectionSettings #:reference{:definitions "ResponseBasedOriginErrorDetectionParameters"}, :trafficRestorationTimeToHealedOrNewEndpointsInMinutes {:description "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.", :maximum 50, :minimum 0, :type "integer"}}, :required ["origins"], :type "object", :x-ms-azure-resource true}, :UrlRedirectActionParameters {:description "Defines the parameters for the url redirect action.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRedirectActionParameters"], :type "string"}, :customFragment {:description "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.", :type "string"}, :customHostname {:description "Host to redirect. Leave empty to use the incoming host as the destination host.", :type "string"}, :customPath {:description "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.", :type "string"}, :customQueryString {:description "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.", :type "string"}, :destinationProtocol {:description "Protocol to use for the redirect. The default value is MatchRequest", :enum ["MatchRequest" "Http" "Https"], :type "string", :x-ms-enum {:modelAsString true, :name "DestinationProtocol"}}, :redirectType {:description "The redirect type the rule will use when redirecting traffic.", :enum ["Moved" "Found" "TemporaryRedirect" "PermanentRedirect"], :type "string", :x-ms-enum {:modelAsString true, :name "RedirectType"}}}, :required ["redirectType" "@odata.type"]}, :RemoteAddressMatchConditionParameters {:description "Defines the parameters for RemoteAddress match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRemoteAddressConditionParameters"], :type "string"}, :matchValues {:description "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "IPMatch" "GeoMatch"], :type "string", :x-ms-enum {:modelAsString true, :name "RemoteAddressOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :RequestBodyMatchConditionParameters {:description "Defines the parameters for RequestBody match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestBodyConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "RequestBodyOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :DeepCreatedOrigin {:description "The main origin of CDN content which is added when creating a CDN endpoint.", :properties {:name {:description "Origin name which must be unique within the endpoint. ", :type "string"}, :properties #:reference{:definitions "DeepCreatedOriginProperties"}}, :required ["name"], :type "object", :x-ms-azure-resource true}, :HealthProbeParameters {:description "The JSON object that contains the properties to send health probes to origin.", :properties {:probeIntervalInSeconds {:description "The number of seconds between health probes.Default is 240sec.", :maximum 255, :minimum 1, :type "integer"}, :probePath {:description "The path relative to the origin that is used to determine the health of the origin.", :type "string"}, :probeProtocol {:description "Protocol to use for health probe.", :enum ["NotSet" "Http" "Https"], :type "string", :x-ms-enum {:modelAsString false, :name "ProbeProtocol"}}, :probeRequestType {:description "The type of health probe request that is made.", :enum ["NotSet" "GET" "HEAD"], :type "string", :x-ms-enum {:modelAsString false, :name "HealthProbeRequestType"}}}}, :CustomDomainPropertiesParameters {:description "The JSON object that contains the properties of the custom domain to create.", :properties {:hostName {:description "The host name of the custom domain. Must be a domain name.", :type "string"}}, :required ["hostName"]}, :ResourceUsageListResult {:description "Output of check resource usage API.", :properties {:nextLink {:description "URL to get the next set of custom domain objects if there are any.", :type "string"}, :value {:description "List of resource usages.", :items #:reference{:definitions "ResourceUsage"}, :readOnly true, :type "array"}}}, :CheckNameAvailabilityOutput {:description "Output of check name availability API.", :properties {:message {:description "The detailed error message describing why the name is not available.", :readOnly true, :type "string"}, :nameAvailable {:description "Indicates whether the name is available.", :readOnly true, :type "boolean"}, :reason {:description "The reason why the name is not available.", :readOnly true, :type "string"}}, :type "object"}, :DeliveryRuleCacheExpirationAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the cache expiration action for the delivery rule.", :properties {:parameters #:reference{:definitions "CacheExpirationActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "CacheExpiration"}, :ValidateProbeOutput {:description "Output of the validate probe API.", :properties {:errorCode {:description "Specifies the error code when the probe url is not accepted.", :readOnly true, :type "string"}, :isValid {:description "Indicates whether the probe URL is accepted or not.", :readOnly true, :type "boolean"}, :message {:description "The detailed error message describing why the probe URL is not accepted.", :readOnly true, :type "string"}}, :type "object"}, :DeliveryRuleRequestUriCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RequestUri condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RequestUriMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RequestUri"}, :DeliveryRuleRequestBodyCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RequestBody condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RequestBodyMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RequestBody"}, :DeliveryRule {:description "A rule that specifies a set of actions and conditions", :properties {:actions {:description "A list of actions that are executed when all the conditions of a rule are satisfied.", :items #:reference{:definitions "DeliveryRuleAction"}, :type "array"}, :conditions {:description "A list of conditions that must be matched for the actions to be executed", :items #:reference{:definitions "DeliveryRuleCondition"}, :type "array"}, :name {:description "Name of the rule", :type "string"}, :order {:description "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.", :type "integer"}}, :required ["order" "actions"], :type "object"}, :HttpVersionMatchConditionParameters {:description "Defines the parameters for HttpVersion match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleHttpVersionConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Equal"], :type "string", :x-ms-enum {:modelAsString true, :name "HttpVersionOperator"}}}, :required ["operator" "matchValues" "@odata.type"]}, :SupportedOptimizationTypesListResult {:description "The result of the GetSupportedOptimizationTypes API", :properties {:supportedOptimizationTypes {:description "Supported optimization types for a profile.", :items #:reference{:definitions "OptimizationType"}, :readOnly true, :type "array"}}, :type "object"}, :CdnManagedHttpsParameters {:allOf [#:reference{:definitions "CustomDomainHttpsParameters"}], :description "Defines the certificate source parameters using CDN managed certificate for enabling SSL.", :properties {:certificateSourceParameters #:reference{:definitions "CdnCertificateSourceParameters"}}, :required ["certificateSourceParameters"], :x-ms-discriminator-value "Cdn"}, :Resource {:description "The core properties of ARM resources", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :OriginGroupListResult {:description "Result of the request to list origin groups. It contains a list of origin groups objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of origin objects if there are any.", :type "string"}, :value {:description "List of CDN origin groups within an endpoint", :items #:reference{:definitions "OriginGroup"}, :readOnly true, :type "array"}}}, :EdgeNodeProperties {:description "The JSON object that contains the properties required to create an edgenode.", :properties {:ipAddressGroups {:description "List of ip address groups.", :items #:reference{:definitions "IpAddressGroup"}, :type "array"}}, :required ["ipAddressGroups"]}, :ErrorResponse {:description "Error response indicates CDN service is not able to process the incoming request. The reason is provided in the error message.", :properties {:code {:description "Error code.", :readOnly true, :type "string"}, :message {:description "Error message indicating why the operation failed.", :readOnly true, :type "string"}}, :type "object"}, :Sku {:description "The pricing tier (defines a CDN provider, feature list and rate) of the CDN profile.", :properties {:name {:description "Name of the pricing tier.", :enum ["Standard_Verizon" "Premium_Verizon" "Custom_Verizon" "Standard_Akamai" "Standard_ChinaCdn" "Standard_Microsoft" "Premium_ChinaCdn"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}}, :type "object"}, :CustomDomainListResult {:description "Result of the request to list custom domains. It contains a list of custom domain objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of custom domain objects if there are any.", :type "string"}, :value {:description "List of CDN CustomDomains within an endpoint.", :items #:reference{:definitions "CustomDomain"}, :readOnly true, :type "array"}}}, :EdgenodeResult {:description "Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of edgenode list results if there are any.", :type "string"}, :value {:description "Edge node of CDN service.", :items #:reference{:definitions "EdgeNode"}, :readOnly true, :type "array"}}}, :DeliveryRuleRequestHeaderAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the request header action for the delivery rule.", :properties {:parameters #:reference{:definitions "HeaderActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "ModifyRequestHeader"}, :DeliveryRuleRequestHeaderCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the RequestHeader condition for the delivery rule.", :properties {:parameters #:reference{:definitions "RequestHeaderMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "RequestHeader"}, :RequestHeaderMatchConditionParameters {:description "Defines the parameters for RequestHeader match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestHeaderConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "RequestHeaderOperator"}}, :selector {:description "Name of Header to be matched", :type "string"}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "selector" "@odata.type"]}, :RequestUriMatchConditionParameters {:description "Defines the parameters for RequestUri match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestUriConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual"], :type "string", :x-ms-enum {:modelAsString true, :name "RequestUriOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :SsoUri {:description "The URI required to login to the supplemental portal from the Azure portal.", :properties {:ssoUriValue {:description "The URI used to login to the supplemental portal.", :readOnly true, :type "string"}}, :type "object"}, :DeliveryRuleIsDeviceCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the IsDevice condition for the delivery rule.", :properties {:parameters #:reference{:definitions "IsDeviceMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "IsDevice"}, :DeliveryRuleUrlFileNameCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the UrlFileName condition for the delivery rule.", :properties {:parameters #:reference{:definitions "UrlFileNameMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "UrlFileName"}, :UrlPathMatchConditionParameters {:description "Defines the parameters for UrlPath match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlPathMatchConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Any" "Equal" "Contains" "BeginsWith" "EndsWith" "LessThan" "LessThanOrEqual" "GreaterThan" "GreaterThanOrEqual" "Wildcard"], :type "string", :x-ms-enum {:modelAsString true, :name "UrlPathOperator"}}, :transforms {:description "List of transforms", :items #:reference{:definitions "transform"}, :type "array"}}, :required ["operator" "matchValues" "@odata.type"]}, :UrlRewriteActionParameters {:description "Defines the parameters for the url rewrite action.", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleUrlRewriteActionParameters"], :type "string"}, :destination {:description "Define the relative URL to which the above requests will be rewritten by.", :type "string"}, :preserveUnmatchedPath {:description "Whether to preserve unmatched path. Default value is true.", :type "boolean"}, :sourcePattern {:description "define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.", :type "string"}}, :required ["sourcePattern" "destination" "@odata.type"]}, :EndpointPropertiesUpdateParameters {:description "The JSON object containing endpoint update parameters.", :properties {:isHttpAllowed {:description "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.", :type "boolean"}, :contentTypesToCompress {:description "List of content types on which compression applies. The value should be a valid MIME type.", :items {:type "string"}, :type "array"}, :probePath {:description "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin.", :type "string"}, :geoFilters {:description "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/", :items #:reference{:definitions "GeoFilter"}, :type "array"}, :defaultOriginGroup #:reference{:definitions "ResourceReference"}, :originPath {:description "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath.", :type "string"}, :queryStringCachingBehavior #:reference{:definitions "QueryStringCachingBehavior"}, :deliveryPolicy {:description "A policy that specifies the delivery rules to be used for an endpoint.", :properties {:description {:description "User-friendly description of the policy.", :type "string"}, :rules {:description "A list of the delivery rules.", :items #:reference{:definitions "DeliveryRule"}, :type "array"}}, :required ["rules"], :type "object"}, :originHostHeader {:description "The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default.", :type "string"}, :isHttpsAllowed {:description "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed.", :type "boolean"}, :optimizationType #:reference{:definitions "OptimizationType"}, :isCompressionEnabled {:description "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB.", :type "boolean"}}}, :ResponseBasedOriginErrorDetectionParameters {:description "The JSON object that contains the properties to determine origin health using real requests/responses.", :properties {:httpErrorRanges {:description "The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.", :items #:reference{:definitions "HttpErrorRangeParameters"}, :type "array"}, :responseBasedDetectedErrorTypes {:description "Type of response errors for real user requests for which origin will be deemed unhealthy", :enum ["None" "TcpErrorsOnly" "TcpAndHttpErrors"], :type "string", :x-ms-enum {:modelAsString false, :name "ResponseBasedDetectedErrorTypes"}}, :responseBasedFailoverThresholdPercentage {:description "The percentage of failed requests in the sample where failover should trigger.", :maximum 100, :minimum 0, :type "integer"}}}, :DeliveryRuleUrlPathCondition {:allOf [#:reference{:definitions "DeliveryRuleCondition"}], :description "Defines the UrlPath condition for the delivery rule.", :properties {:parameters #:reference{:definitions "UrlPathMatchConditionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "UrlPath"}, :EdgeNode {:allOf [#:reference{:definitions "ProxyResource"}], :description "Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users.", :properties {:properties #:reference{:definitions "EdgeNodeProperties"}}, :type "object"}, :ProxyResource {:allOf [#:reference{:definitions "Resource"}], :description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags"}, :UrlRedirectAction {:allOf [#:reference{:definitions "DeliveryRuleAction"}], :description "Defines the url redirect action for the delivery rule.", :properties {:parameters #:reference{:definitions "UrlRedirectActionParameters"}}, :required ["parameters"], :x-ms-discriminator-value "UrlRedirect"}, :OriginGroupUpdateParameters {:description "Origin group properties needed for origin group creation or update.", :properties {:properties #:reference{:definitions "OriginGroupUpdatePropertiesParameters"}}, :type "object", :x-ms-azure-resource true}, :UserManagedHttpsParameters {:allOf [#:reference{:definitions "CustomDomainHttpsParameters"}], :description "Defines the certificate source parameters using user's keyvault certificate for enabling SSL.", :properties {:certificateSourceParameters #:reference{:definitions "KeyVaultCertificateSourceParameters"}}, :required ["certificateSourceParameters"], :x-ms-discriminator-value "AzureKeyVault"}, :OperationsListResult {:description "Result of the request to list CDN operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :type "string"}, :value {:description "List of CDN operations supported by the CDN resource provider.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :RequestMethodMatchConditionParameters {:description "Defines the parameters for RequestMethod match conditions", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestMethodConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:enum ["GET" "HEAD" "POST" "PUT" "DELETE" "OPTIONS" "TRACE"], :type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Equal"], :type "string", :x-ms-enum {:modelAsString true, :name "RequestMethodOperator"}}}, :required ["operator" "matchValues" "@odata.type"]}, :RequestSchemeMatchConditionParameters {:description "Defines the parameters for RequestScheme match conditions ", :properties {"@odata.type" {:enum ["#Microsoft.Azure.Cdn.Models.DeliveryRuleRequestSchemeConditionParameters"], :type "string"}, :matchValues {:description "The match value for the condition of the delivery rule", :items {:enum ["HTTP" "HTTPS"], :type "string"}, :type "array"}, :negateCondition {:description "Describes if this is negate condition or not", :type "boolean"}, :operator {:description "Describes operator to be matched", :enum ["Equal"], :type "string"}}, :required ["operator" "matchValues" "@odata.type"]}, :OriginGroupProperties {:allOf [#:reference{:definitions "OriginGroupUpdatePropertiesParameters"}], :description "The JSON object that contains the properties of the origin group.", :properties {:provisioningState {:description "Provisioning status of the origin group.", :readOnly true, :type "string"}, :resourceState {:description "Resource status of the origin group.", :enum ["Creating" "Active" "Deleting"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "OriginGroupResourceState"}}}, :required ["origins"], :type "object"}}}