{:scheme "https", :host "management.azure.com", :info {:description "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.", :title "NetworkManagementClient", :version "2018-02-01"}, :ops {:ExpressRouteCircuitAuthorizations_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations", :description "Gets all authorizations in an express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the circuit.", :in "path", :name "circuitName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits", :description "Gets all the express route circuits in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_ListArpTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}", :description "Gets the currently advertised ARP table associated with the express route circuit in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The path of the device.", :in "path", :name "devicePath", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ExpressRouteCircuits_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", :description "Deletes the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ExpressRouteCircuitPeerings_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings", :description "Gets all peerings in a specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_ListAll {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits", :description "Gets all the express route circuits in a subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuitPeerings_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}", :description "Creates or updates a peering in the specified express route circuits.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "Parameters supplied to the create or update express route circuit peering operation.", :in "body", :name "peeringParameters", :required true, :schema #:reference{:definitions "ExpressRouteCircuitPeering"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ExpressRouteServiceProviders_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders", :description "Gets all the available express route service providers.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuitAuthorizations_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}", :description "Creates or updates an authorization in the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the authorization.", :in "path", :name "authorizationName", :required true, :type "string"} {:description "Parameters supplied to the create or update express route circuit authorization operation.", :in "body", :name "authorizationParameters", :required true, :schema #:reference{:definitions "ExpressRouteCircuitAuthorization"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ExpressRouteCircuits_GetStats {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats", :description "Gets all the stats from an express route circuit in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_GetPeeringStats {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats", :description "Gets all stats from an express route circuit in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_ListRoutesTableSummary {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}", :description "Gets the currently advertised routes table summary associated with the express route circuit in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The path of the device.", :in "path", :name "devicePath", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ExpressRouteCircuits_ListRoutesTable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}", :description "Gets the currently advertised routes table associated with the express route circuit in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The path of the device.", :in "path", :name "devicePath", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ExpressRouteCircuitConnections_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}", :description "Deletes the specified Express Route Circuit Connection from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The name of the express route circuit connection.", :in "path", :name "connectionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ExpressRouteCircuits_UpdateTags {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", :description "Updates an express route circuit tags.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "Parameters supplied to update express route circuit tags.", :in "body", :name "parameters", :required true, :schema {:description "Tags object for patch operations.", :properties {:tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :ExpressRouteCircuitPeerings_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}", :description "Gets the specified authorization from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuitConnections_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}", :description "Creates or updates a Express Route Circuit Connection in the specified express route circuits.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The name of the express route circuit connection.", :in "path", :name "connectionName", :required true, :type "string"} {:description "Parameters supplied to the create or update express route circuit connection operation.", :in "body", :name "expressRouteCircuitConnectionParameters", :required true, :schema #:reference{:definitions "ExpressRouteCircuitConnection"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ExpressRouteCircuits_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", :description "Gets information about the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuitAuthorizations_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}", :description "Gets the specified authorization from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the authorization.", :in "path", :name "authorizationName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuitConnections_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}", :description "Gets the specified Express Route Circuit Connection from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} {:description "The name of the express route circuit connection.", :in "path", :name "connectionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ExpressRouteCircuits_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", :description "Creates or updates an express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "Parameters supplied to the create or update express route circuit operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ExpressRouteCircuit"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ExpressRouteCircuitPeerings_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}", :description "Deletes the specified peering from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the peering.", :in "path", :name "peeringName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ExpressRouteCircuitAuthorizations_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}", :description "Deletes the specified authorization from the specified express route circuit.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the express route circuit.", :in "path", :name "circuitName", :required true, :type "string"} {:description "The name of the authorization.", :in "path", :name "authorizationName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}}, :parameters {:ApiVersionParameter {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ExpressRouteCircuitServiceProviderProperties {:description "Contains ServiceProviderProperties in an ExpressRouteCircuit.", :properties {:bandwidthInMbps {:description "The BandwidthInMbps.", :format "int32", :type "integer"}, :peeringLocation {:description "The peering location.", :type "string"}, :serviceProviderName {:description "The serviceProviderName.", :type "string"}}}, :ExpressRouteCircuitStats {:description "Contains stats associated with the peering.", :properties {:primarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :primarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}, :secondarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :secondarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}}}, :ExpressRouteCircuitRoutesTable {:description "The routes table associated with the ExpressRouteCircuit", :properties {:locPrf {:description "locPrf", :type "string"}, :network {:description "network", :type "string"}, :nextHop {:description "nextHop", :type "string"}, :path {:description "path", :type "string"}, :weight {:description "weight.", :format "int32", :type "integer"}}}, :ExpressRouteCircuitPeeringListResult {:description "Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "The peerings in an express route circuit.", :items #:reference{:definitions "ExpressRouteCircuitPeering"}, :type "array"}}}, :ExpressRouteCircuitListResult {:description "Response for ListExpressRouteCircuit API service call.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "A list of ExpressRouteCircuits in a resource group.", :items #:reference{:definitions "ExpressRouteCircuit"}, :type "array"}}}, :Ipv6ExpressRouteCircuitPeeringConfig {:description "Contains IPv6 peering config.", :properties {:microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :routeFilter nil, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :state {:description "The state of peering. Possible values are: 'Disabled' and 'Enabled'", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringState"}}}}, :AuthorizationListResult {:description "Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "The authorizations in an ExpressRoute Circuit.", :items #:reference{:definitions "ExpressRouteCircuitAuthorization"}, :type "array"}}}, :ExpressRouteCircuitPeeringPropertiesFormat {:properties {:secondaryAzurePort {:description "The secondary port.", :type "string"}, :vlanId {:description "The VLAN ID.", :format "int32", :type "integer"}, :lastModifiedBy {:description "Gets whether the provider or the customer last modified the peering.", :type "string"}, :provisioningState {:description "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.", :type "string"}, :peerASN {:description "The peer ASN.", :format "int64", :maximum 4294967295, :minimum 1, :type "integer"}, :routeFilter nil, :primaryAzurePort {:description "The primary port.", :type "string"}, :state {:description "The state of peering. Possible values are: 'Disabled' and 'Enabled'", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringState"}}, :ipv6PeeringConfig #:reference{:definitions "Ipv6ExpressRouteCircuitPeeringConfig"}, :microsoftPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :azureASN {:description "The Azure ASN.", :format "int32", :type "integer"}, :secondaryPeerAddressPrefix {:description "The secondary address prefix.", :type "string"}, :peeringType {:description "The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.", :enum ["AzurePublicPeering" "AzurePrivatePeering" "MicrosoftPeering"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringType"}}, :sharedKey {:description "The shared key.", :type "string"}, :gatewayManagerEtag {:description "The GatewayManager Etag.", :type "string"}, :connections {:description "The list of circuit connections associated with Azure Private Peering for this circuit.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authorizationKey {:description "The authorization key.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "circuitConnectionStatus"}}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}}}, :type "array"}, :primaryPeerAddressPrefix {:description "The primary address prefix.", :type "string"}, :stats {:description "Contains stats associated with the peering.", :properties {:primarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :primarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}, :secondarybytesIn {:description "Gets BytesIn of the peering.", :format "int64", :type "integer"}, :secondarybytesOut {:description "Gets BytesOut of the peering.", :format "int64", :type "integer"}}}}}, :ExpressRouteCircuitsRoutesTableSummaryListResult {:description "Response for ListRoutesTable associated with the Express Route Circuits API.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "A list of the routes table.", :items #:reference{:definitions "ExpressRouteCircuitRoutesTableSummary"}, :type "array"}}}, :ExpressRoutePeeringState {:description "The state of peering. Possible values are: 'Disabled' and 'Enabled'", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringState"}}, :ExpressRouteServiceProviderListResult {:description "Response for the ListExpressRouteServiceProvider API service call.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "A list of ExpressRouteResourceProvider resources.", :items #:reference{:definitions "ExpressRouteServiceProvider"}, :type "array"}}}, :ExpressRouteServiceProviderBandwidthsOffered {:description "Contains bandwidths offered in ExpressRouteServiceProvider resources.", :properties {:offerName {:description "The OfferName.", :type "string"}, :valueInMbps {:description "The ValueInMbps.", :format "int32", :type "integer"}}}, :ExpressRouteCircuitConnection {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authorizationKey {:description "The authorization key.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "circuitConnectionStatus"}}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}}}, :ExpressRouteCircuitArpTable {:description "The ARP table associated with the ExpressRouteCircuit.", :properties {:age {:description "Age", :format "int32", :type "integer"}, :interface {:description "Interface", :type "string"}, :ipAddress {:description "The IP address.", :type "string"}, :macAddress {:description "The MAC address.", :type "string"}}}, :ExpressRouteCircuitsArpTableListResult {:description "Response for ListArpTable associated with the Express Route Circuits API.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "Gets list of the ARP table.", :items #:reference{:definitions "ExpressRouteCircuitArpTable"}, :type "array"}}}, :AuthorizationPropertiesFormat {:properties {:authorizationKey {:description "The authorization key.", :type "string"}, :authorizationUseStatus {:description "AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.", :enum ["Available" "InUse"], :type "string", :x-ms-enum {:modelAsString true, :name "AuthorizationUseStatus"}}, :provisioningState {:description "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.", :type "string"}}}, :ExpressRouteCircuitPropertiesFormat {:description "Properties of ExpressRouteCircuit.", :properties {:peerings {:description "The list of peerings.", :items #:reference{:definitions "ExpressRouteCircuitPeering"}, :type "array"}, :serviceProviderProvisioningState {:description "The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.", :enum ["NotProvisioned" "Provisioning" "Provisioned" "Deprovisioning"], :type "string", :x-ms-enum {:modelAsString true, :name "ServiceProviderProvisioningState"}}, :provisioningState {:description "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.", :type "string"}, :authorizations {:description "The list of authorizations.", :items #:reference{:definitions "ExpressRouteCircuitAuthorization"}, :type "array"}, :serviceKey {:description "The ServiceKey.", :type "string"}, :serviceProviderNotes {:description "The ServiceProviderNotes.", :type "string"}, :allowClassicOperations {:description "Allow classic operations", :type "boolean"}, :gatewayManagerEtag {:description "The GatewayManager Etag.", :type "string"}, :circuitProvisioningState {:description "The CircuitProvisioningState state of the resource.", :type "string"}, :serviceProviderProperties #:reference{:definitions "ExpressRouteCircuitServiceProviderProperties"}}}, :ExpressRouteServiceProvider {:allOf [{:description "Common resource representation.", :properties {:id {:description "Resource ID.", :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "A ExpressRouteResourceProvider object.", :properties {:properties #:reference{:definitions "ExpressRouteServiceProviderPropertiesFormat"}}}, :ExpressRouteCircuitAuthorization {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Authorization in an ExpressRouteCircuit resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties #:reference{:definitions "AuthorizationPropertiesFormat"}}}, :ExpressRouteCircuitConnectionPropertiesFormat {:properties {:addressPrefix {:description "/29 IP address space to carve out Customer addresses for tunnels.", :type "string"}, :authorizationKey {:description "The authorization key.", :type "string"}, :circuitConnectionStatus {:description "Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.", :enum ["Connected" "Connecting" "Disconnected"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "circuitConnectionStatus"}}, :expressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :peerExpressRouteCircuitPeering {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :provisioningState {:description "Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.", :readOnly true, :type "string"}}}, :ExpressRouteCircuitsRoutesTableListResult {:description "Response for ListRoutesTable associated with the Express Route Circuits API.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "The list of routes table.", :items #:reference{:definitions "ExpressRouteCircuitRoutesTable"}, :type "array"}}}, :ExpressRouteCircuitPeering {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Peering in an ExpressRouteCircuit resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties #:reference{:definitions "ExpressRouteCircuitPeeringPropertiesFormat"}}}, :ExpressRouteServiceProviderPropertiesFormat {:description "Properties of ExpressRouteServiceProvider.", :properties {:bandwidthsOffered {:description "Gets bandwidths offered.", :items #:reference{:definitions "ExpressRouteServiceProviderBandwidthsOffered"}, :type "array"}, :peeringLocations {:description "Get a list of peering locations.", :items {:type "string"}, :type "array"}, :provisioningState {:description "Gets the provisioning state of the resource.", :type "string"}}}, :ExpressRouteCircuitSku {:description "Contains SKU in an ExpressRouteCircuit.", :properties {:family {:description "The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.", :enum ["UnlimitedData" "MeteredData"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitSkuFamily"}}, :name {:description "The name of the SKU.", :type "string"}, :tier {:description "The tier of the SKU. Possible values are 'Standard' and 'Premium'.", :enum ["Standard" "Premium"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitSkuTier"}}}}, :ExpressRouteCircuitPeeringConfig {:description "Specifies the peering configuration.", :properties {:advertisedCommunities {:description "The communities of bgp peering. Specified for microsoft peering", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixes {:description "The reference of AdvertisedPublicPrefixes.", :items {:type "string"}, :type "array"}, :advertisedPublicPrefixesState {:description "AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.", :enum ["NotConfigured" "Configuring" "Configured" "ValidationNeeded"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"}}, :customerASN {:description "The CustomerASN of the peering.", :format "int32", :type "integer"}, :legacyMode {:description "The legacy mode of the peering.", :format "int32", :type "integer"}, :routingRegistryName {:description "The RoutingRegistryName of the configuration.", :type "string"}}}, :ExpressRouteCircuit {:allOf [{:description "Common resource representation.", :properties {:id {:description "Resource ID.", :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "ExpressRouteCircuit resource", :properties {:etag {:description "Gets a unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :properties #:reference{:definitions "ExpressRouteCircuitPropertiesFormat"}, :sku #:reference{:definitions "ExpressRouteCircuitSku"}}}, :ExpressRoutePeeringType {:description "The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.", :enum ["AzurePublicPeering" "AzurePrivatePeering" "MicrosoftPeering"], :type "string", :x-ms-enum {:modelAsString true, :name "ExpressRoutePeeringType"}}, :ExpressRouteCircuitRoutesTableSummary {:description "The routes table associated with the ExpressRouteCircuit.", :properties {:as {:description "Autonomous system number.", :format "int32", :type "integer"}, :neighbor {:description "Neighbor", :type "string"}, :statePfxRcd {:description "Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group.", :type "string"}, :upDown {:description "The length of time that the BGP session has been in the Established state, or the current status if not in the Established state.", :type "string"}, :v {:description "BGP version number spoken to the neighbor.", :format "int32", :type "integer"}}}}}