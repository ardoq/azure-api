{:scheme "https", :host "management.azure.com", :info {:description "Azure Bot Service is a platform for creating smart conversational agents.", :title "Azure Bot Service", :version "2017-12-01"}, :ops {:Channels_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels", :description "Returns all the Channel registrations of a particular BotService resource", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :BotConnection_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}", :description "Get a Connection Setting registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "connectionNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :Bots_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices", :description "Returns all the resources of a particular type belonging to a subscription.", :parameters [#:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :Bots_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}", :description "Deletes a Bot Service from the resource group. ", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :delete}, :BotConnection_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}", :description "Updates a Connection Setting registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "connectionNameParameter"} {:description "The parameters to provide for updating the Connection Setting.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ConnectionSetting"}} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :patch}, :BotConnection_ListByBotService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections", :description "Returns all the Connection Settings registered to a particular BotService resource", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Bots_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}", :description "Creates a Bot Service. Bot Service is a resource group wide resource type.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} {:description "The parameters to provide for the created bot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Bot"}} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :put}, :BotConnection_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}", :description "Register a new Auth Connection for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "connectionNameParameter"} {:description "The parameters to provide for creating the Connection Setting.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ConnectionSetting"}} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :put}, :Channels_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}", :description "Deletes a Channel registration from a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} {:description "The name of the Bot resource.", :in "path", :maxLength 64, :minLength 2, :name "channelName", :pattern "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$", :required true, :type "string"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :delete}, :Channels_ListWithKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys", :description "Lists a Channel registration for a Bot Service including secrets", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "channelNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :post}, :Bots_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}", :description "Updates a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} {:description "The parameters to provide for the created bot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Bot"}, :x-ms-client-flatten true} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :patch}, :Bots_GetCheckNameAvailability {:path "/providers/Microsoft.BotService/botServices/checkNameAvailability", :description "Check whether a bot name is available.", :parameters [{:description "The request body parameters to provide for the check name availability request", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityRequestBody"}} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Channels_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}", :description "Returns a BotService Channel registration specified by the parameters.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} {:description "The name of the Bot resource.", :in "path", :maxLength 64, :minLength 2, :name "channelName", :pattern "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$", :required true, :type "string"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :Channels_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}", :description "Creates a Channel registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "channelNameParameter"} {:description "The parameters to provide for the created bot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BotChannel"}} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :put}, :BotConnection_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}", :description "Deletes a Connection Setting registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "connectionNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :delete}, :BotConnection_ListServiceProviders {:path "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders", :description "Lists the available Service Providers for creating Connection Settings", :parameters [#:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :post}, :Bots_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}", :description "Returns a BotService specified by the parameters.", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :get}, :Bots_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices", :description "Returns all the resources of a particular type belonging to a resource group", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.BotService/operations", :description "Lists all the available BotService operations.", :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :BotConnection_ListWithSecrets {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}/listWithSecrets", :description "Get a Connection Setting registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "connectionNameParameter"} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :post}, :Channels_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}", :description "Updates a Channel registration for a Bot Service", :parameters [#:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "resourceNameParameter"} #:reference{:parameters "channelNameParameter"} {:description "The parameters to provide for the created bot.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BotChannel"}, :x-ms-client-flatten true} #:reference{:parameters "apiVersionParameter"} #:reference{:parameters "subscriptionIdParameter"}], :verb :patch}}, :parameters {:apiVersionParameter {:description "Version of the API to be used with the client request. Current version is 2017-12-01", :in "query", :name "api-version", :required true, :type "string"}, :channelNameParameter {:description "The name of the Channel resource.", :enum ["FacebookChannel" "EmailChannel" "KikChannel" "TelegramChannel" "SlackChannel" "MsTeamsChannel" "SkypeChannel" "WebChatChannel" "DirectLineChannel" "SmsChannel"], :in "path", :name "channelName", :required true, :type "string", :x-ms-enum {:modelAsString false, :name "channelName", :values [{:value "FacebookChannel"} {:value "EmailChannel"} {:value "KikChannel"} {:value "TelegramChannel"} {:value "SlackChannel"} {:value "MsTeamsChannel"} {:value "SkypeChannel"} {:value "WebChatChannel"} {:value "DirectLineChannel"} {:value "SmsChannel"}]}, :x-ms-parameter-location "method"}, :connectionNameParameter {:description "The name of the Bot Service Connection Setting resource", :name "connectionName", :type "string", :minLength 2, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"}, :resourceGroupNameParameter {:description "The name of the Bot resource group in the user subscription.", :name "resourceGroupName", :type "string", :minLength 2, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"}, :resourceNameParameter {:description "The name of the Bot resource.", :name "resourceName", :type "string", :minLength 2, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"}, :subscriptionIdParameter {:description "Azure Subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:DirectLineChannelProperties {:description "The parameters to provide for the Direct Line channel.", :properties {:sites {:description "The list of Direct Line sites", :items #:reference{:definitions "DirectLineSite"}, :type "array"}}}, :Bot {:allOf [#:reference{:definitions "Resource"}], :description "Bot resource definition", :properties {:properties #:reference{:definitions "BotProperties"}}, :type "object"}, :CheckNameAvailabilityRequestBody {:description "The request body for a request to Bot Service Management to check availability of a bot name.", :properties {:name {:description "the name of the bot for which availability needs to be checked.", :type "string"}, :type {:description "the type of the bot for which availability needs to be checked", :type "string"}}, :type "object"}, :ConnectionSettingProperties {:description "Properties for a Connection Setting Item", :properties {:clientId {:description "Client Id associated with the Connection Setting.", :type "string"}, :clientSecret {:description "Client Secret associated with the Connection Setting", :type "string"}, :parameters {:description "Service Provider Parameters associated with the Connection Setting", :items #:reference{:definitions "ConnectionSettingParameter"}, :type "array"}, :scopes {:description "Scopes associated with the Connection Setting", :type "string"}, :serviceProviderDisplayName {:description "Service Provider Display Name associated with the Connection Setting", :type "string"}, :serviceProviderId {:description "Service Provider Id associated with the Connection Setting", :type "string"}, :settingId {:description "Setting Id set by the service for the Connection Setting.", :readOnly true, :type "string"}}}, :SmsChannel {:allOf [#:reference{:definitions "Channel"}], :description "Sms channel definition", :properties {:properties #:reference{:definitions "SmsChannelProperties"}}, :type "object", :x-ms-discriminator-value "SmsChannel"}, :ConnectionSetting {:allOf [#:reference{:definitions "Resource"}], :description "Bot channel resource definition", :properties {:properties #:reference{:definitions "ConnectionSettingProperties"}}, :type "object"}, :TelegramChannelProperties {:description "The parameters to provide for the Telegram channel.", :properties {:accessToken {:description "The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :isValidated {:description "Whether this channel is validated for the bot", :type "boolean"}}, :required ["accessToken" "isEnabled"]}, :WebChatSite {:description "A site for the Webchat channel", :properties {:enablePreview {:description "Whether this site is enabled for preview versions of Webchat", :type "boolean"}, :isEnabled {:description "Whether this site is enabled for DirectLine channel", :type "boolean"}, :key {:description "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :key2 {:description "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :siteId {:description "Site Id", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :siteName {:description "Site name", :type "string"}}, :required ["siteName" "isEnabled" "enablePreview"]}, :SkypeChannelProperties {:description "The parameters to provide for the Microsoft Teams channel.", :properties {:enableMediaCards {:description "Enable media cards for Skype channel", :type "boolean"}, :groupsMode {:description "Group mode for Skype channel", :type "string"}, :enableVideo {:description "Enable video for Skype channel", :type "boolean"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :callingWebHook {:description "Calling web hook for Skype channel", :type "string"}, :enableMessaging {:description "Enable messaging for Skype channel", :type "boolean"}, :enableGroups {:description "Enable groups for Skype channel", :type "boolean"}, :enableScreenSharing {:description "Enable screen sharing for Skype channel", :type "boolean"}, :enableCalling {:description "Enable calling for Skype channel", :type "boolean"}}, :required ["isEnabled"]}, :ServiceProviderProperties {:description "The Object used to describe a Service Provider supported by Bot Service", :properties {:devPortalUrl {:description "Display Name of the Service Provider", :readOnly true, :type "string"}, :displayName {:description "Display Name of the Service Provider", :readOnly true, :type "string"}, :iconUrl {:description "Display Name of the Service Provider", :readOnly true, :type "string"}, :id {:description "Id for Service Provider", :readOnly true, :type "string"}, :parameters {:description "The list of parameters for the Service Provider", :items #:reference{:definitions "ServiceProviderParameter"}, :type "array"}, :serviceProviderName {:description "Display Name of the Service Provider", :readOnly true, :type "string"}}}, :ServiceProviderResponseList {:description "The list of bot service providers response.", :properties {:nextLink {:description "The link used to get the next page of bot service providers.", :type "string"}, :value {:description "Gets the list of bot service providers and their properties.", :items #:reference{:definitions "ServiceProvider"}, :readOnly true, :type "array"}}}, :DirectLineChannel {:allOf [#:reference{:definitions "Channel"}], :description "Direct Line channel definition", :properties {:properties #:reference{:definitions "DirectLineChannelProperties"}}, :type "object", :x-ms-discriminator-value "DirectLineChannel"}, :ErrorBody {:description "Bot Service error body.", :properties {:code {:description "error code", :type "string"}, :message {:description "error message", :type "string"}}, :required ["code" "message"]}, :EmailChannel {:allOf [#:reference{:definitions "Channel"}], :description "Email channel definition", :properties {:properties #:reference{:definitions "EmailChannelProperties"}}, :type "object", :x-ms-discriminator-value "EmailChannel"}, :SkypeChannel {:allOf [#:reference{:definitions "Channel"}], :description "Skype channel definition", :properties {:properties #:reference{:definitions "SkypeChannelProperties"}}, :type "object", :x-ms-discriminator-value "SkypeChannel"}, :MsTeamsChannelProperties {:description "The parameters to provide for the Microsoft Teams channel.", :properties {:callMode {:description "Enable messaging for Microsoft Teams channel", :type "string"}, :enableCalling {:description "Enable calling for Microsoft Teams channel", :type "boolean"}, :enableMediaCards {:description "Enable media cards for Microsoft Teams channel", :type "boolean"}, :enableMessaging {:description "Enable messaging for Microsoft Teams channel", :type "boolean"}, :enableVideo {:description "Enable video for Microsoft Teams channel", :type "boolean"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}}, :required ["isEnabled"]}, :WebChatChannel {:allOf [#:reference{:definitions "Channel"}], :description "Web Chat channel definition", :properties {:properties #:reference{:definitions "WebChatChannelProperties"}}, :type "object", :x-ms-discriminator-value "WebChatChannel"}, :ConnectionSettingResponseList {:description "The list of bot service connection settings response.", :properties {:nextLink {:description "The link used to get the next page of bot service connection setting resources.", :type "string"}, :value {:description "Gets the list of bot service connection settings and their properties.", :items #:reference{:definitions "ConnectionSetting"}, :readOnly true, :type "array"}}}, :SkuName {:description "The name of SKU.", :enum ["F0" "S1"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}, :Channel {:description "Channel definition", :discriminator "channelName", :properties {:channelName {:description "The channel name", :type "string"}}, :required ["channelName"], :type "object"}, :BotChannel {:allOf [#:reference{:definitions "Resource"}], :description "Bot channel resource definition", :properties {:properties #:reference{:definitions "Channel"}}, :type "object"}, :BotResponseList {:description "The list of  bot service operation response.", :properties {:nextLink {:description "The link used to get the next page of bot service resources.", :type "string"}, :value {:description "Gets the list of bot service results and their properties.", :items #:reference{:definitions "Bot"}, :readOnly true, :type "array"}}}, :OperationEntityListResult {:description "The list of bot service operation response.", :properties {:nextLink {:description "The link used to get the next page of operations.", :type "string"}, :value {:description "The list of operations.", :items #:reference{:definitions "OperationEntity"}, :type "array"}}, :type "object"}, :OperationEntity {:description "The operations supported by Bot Service Management.", :properties {:display #:reference{:definitions "OperationDisplayInfo"}, :name {:description "Operation name: {provider}/{resource}/{operation}.", :type "string"}, :origin {:description "The origin of the operation.", :type "string"}, :properties {:description "Additional properties.", :type "object"}}, :type "object"}, :ConnectionSettingParameter {:description "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties", :properties {:key {:description "Key for the Connection Setting Parameter.", :type "string"}, :value {:description "Value associated with the Connection Setting Parameter.", :type "string"}}}, :DirectLineSite {:description "A site for the Direct Line channel", :properties {:isEnabled {:description "Whether this site is enabled for DirectLine channel", :type "boolean"}, :isV1Enabled {:description "Whether this site is enabled for Bot Framework V1 protocol", :type "boolean"}, :isV3Enabled {:description "Whether this site is enabled for Bot Framework V1 protocol", :type "boolean"}, :key {:description "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :key2 {:description "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :siteId {:description "Site Id", :readOnly true, :type "string", :x-ms-mutability ["read"]}, :siteName {:description "Site name", :type "string"}}, :required ["isV1Enabled" "isV3Enabled" "isEnabled" "siteName"]}, :BotProperties {:description "The parameters to provide for the Bot.", :properties {:description {:description "The description of the bot", :type "string"}, :developerAppInsightsApplicationId {:description "The Application Insights App Id", :type "string"}, :endpointVersion {:description "The bot's endpoint version", :readOnly true, :type "string"}, :displayName {:description "The Name of the bot", :type "string"}, :developerAppInsightsApiKey {:description "The Application Insights Api Key", :type "string"}, :configuredChannels {:description "Collection of channels for which the bot is configured", :items {:type "string"}, :readOnly true, :type "array"}, :developerAppInsightKey {:description "The Application Insights key", :type "string"}, :iconUrl {:description "The Icon Url of the bot", :type "string"}, :luisAppIds {:description "Collection of LUIS App Ids", :items {:type "string"}, :type "array"}, :msaAppId {:description "Microsoft App Id for the bot", :type "string"}, :enabledChannels {:description "Collection of channels for which the bot is enabled", :items {:type "string"}, :readOnly true, :type "array"}, :luisKey {:description "The LUIS Key", :type "string"}, :endpoint {:description "The bot's endpoint", :type "string"}}, :required ["displayName" "endpoint" "msaAppId"]}, :MsTeamsChannel {:allOf [#:reference{:definitions "Channel"}], :description "Microsoft Teams channel definition", :properties {:properties #:reference{:definitions "MsTeamsChannelProperties"}}, :type "object", :x-ms-discriminator-value "MsTeamsChannel"}, :ConnectionItemName {:description "The display name of a connection Item Setting registered with the Bot", :properties {:name {:description "Connection Item name that has been added in the API", :readOnly true, :type "string"}}}, :FacebookChannelProperties {:description "The parameters to provide for the Facebook channel.", :properties {:appId {:description "Facebook application id", :type "string"}, :appSecret {:description "Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :callbackUrl {:description "Callback Url", :readOnly true, :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :pages {:description "The list of Facebook pages", :items #:reference{:definitions "FacebookPage"}, :type "array"}, :verifyToken {:description "Verify token. Value only returned through POST to the action Channel List API, otherwise empty.", :readOnly true, :type "string"}}, :required ["appId" "appSecret" "isEnabled"]}, :ServiceProvider {:description "Service Provider Definition", :properties {:properties #:reference{:definitions "ServiceProviderProperties"}}, :type "object"}, :KikChannelProperties {:description "The parameters to provide for the Kik channel.", :properties {:apiKey {:description "Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :isValidated {:description "Whether this channel is validated for the bot", :type "boolean"}, :userName {:description "The Kik user name", :type "string"}}, :required ["userName" "apiKey" "isEnabled"]}, :OperationDisplayInfo {:description "The operation supported by Bot Service Management.", :properties {:description {:description "The description of the operation.", :type "string"}, :operation {:description "The action that users can perform, based on their permission level.", :type "string"}, :provider {:description "Service provider: Microsoft Bot Service.", :type "string"}, :resource {:description "Resource on which the operation is performed.", :type "string"}}, :type "object"}, :ChannelResponseList {:description "The list of bot service channel operation response.", :properties {:nextLink {:description "The link used to get the next page of bot service channel resources.", :type "string"}, :value {:description "Gets the list of bot service channel results and their properties.", :items #:reference{:definitions "BotChannel"}, :readOnly true, :type "array"}}}, :Kind {:description "Indicates the type of bot service", :enum ["sdk" "designer" "bot" "function"], :type "string", :x-ms-enum {:modelAsString true, :name "Kind"}}, :ServiceProviderParameter {:description "Extra Parameters specific to each Service Provider", :properties {:default {:description "Default Name for the Service Provider", :readOnly true, :type "string"}, :description {:description "Description of the Service Provider", :readOnly true, :type "string"}, :displayName {:description "Display Name of the Service Provider", :readOnly true, :type "string"}, :helpUrl {:description "Help Url for the  Service Provider", :readOnly true, :type "string"}, :name {:description "Name of the Service Provider", :readOnly true, :type "string"}, :type {:description "Type of the Service Provider", :readOnly true, :type "string"}}}, :FacebookChannel {:allOf [#:reference{:definitions "Channel"}], :description "Facebook channel definition", :properties {:properties #:reference{:definitions "FacebookChannelProperties"}}, :type "object", :x-ms-discriminator-value "FacebookChannel"}, :SmsChannelProperties {:description "The parameters to provide for the Sms channel.", :properties {:accountSID {:description "The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :authToken {:description "The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :isValidated {:description "Whether this channel is validated for the bot", :type "boolean"}, :phone {:description "The Sms phone", :type "string"}}, :required ["phone" "accountSID" "authToken" "isEnabled"]}, :Resource {:description "Azure resource", :properties {:etag {:description "Entity Tag", :type "string"}, :id {:description "Specifies the resource ID.", :readOnly true, :type "string"}, :kind #:reference{:definitions "Kind"}, :location {:description "Specifies the location of the resource.", :type "string"}, :name {:description "Specifies the name of the resource.", :readOnly true, :type "string"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Contains resource tags defined as key/value pairs.", :type "object"}, :type {:description "Specifies the type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :KikChannel {:allOf [#:reference{:definitions "Channel"}], :description "Kik channel definition", :properties {:properties #:reference{:definitions "KikChannelProperties"}}, :type "object", :x-ms-discriminator-value "KikChannel"}, :Error {:description "Bot Service error object.", :properties {:error #:reference{:definitions "ErrorBody"}}}, :Sku {:description "The SKU of the cognitive services account.", :properties {:name #:reference{:definitions "SkuName"}, :tier {:description "Gets the sku tier. This is based on the SKU name.", :enum ["Free" "Standard"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}, :required ["name"]}, :TelegramChannel {:allOf [#:reference{:definitions "Channel"}], :description "Telegram channel definition", :properties {:properties #:reference{:definitions "TelegramChannelProperties"}}, :type "object", :x-ms-discriminator-value "TelegramChannel"}, :EmailChannelProperties {:description "The parameters to provide for the Email channel.", :properties {:emailAddress {:description "The email address", :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :password {:description "The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}}, :required ["emailAddress" "password" "isEnabled"]}, :SlackChannelProperties {:description "The parameters to provide for the Slack channel.", :properties {:isValidated {:description "Whether this channel is validated for the bot", :readOnly true, :type "boolean"}, :clientId {:description "The Slack client id", :type "string"}, :landingPageUrl {:description "The Slack landing page Url", :type "string"}, :isEnabled {:description "Whether this channel is enabled for the bot", :type "boolean"}, :redirectAction {:description "The Slack redirect action", :readOnly true, :type "string"}, :registerBeforeOAuthFlow {:description "Whether to register the settings before OAuth validation is performed. Recommended to True.", :readOnly true, :type "boolean"}, :lastSubmissionId {:description "The Sms auth token", :readOnly true, :type "string"}, :verificationToken {:description "The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :clientSecret {:description "The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}}, :required ["clientId" "clientSecret" "verificationToken" "isEnabled"]}, :FacebookPage {:description "A Facebook page for Facebook channel registration", :properties {:accessToken {:description "Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.", :type "string"}, :id {:description "Page id", :type "string"}}, :required ["id" "accessToken"]}, :WebChatChannelProperties {:description "The parameters to provide for the Web Chat channel.", :properties {:sites {:description "The list of Web Chat sites", :items #:reference{:definitions "WebChatSite"}, :type "array"}, :webChatEmbedCode {:description "Web chat control embed code", :readOnly true, :type "string", :x-ms-mutability ["read"]}}}, :CheckNameAvailabilityResponseBody {:description "The response body returned for a request to Bot Service Management to check availability of a bot name.", :properties {:message {:description "additional message from the bot management api showing why a bot name is not available", :type "string"}, :valid {:description "indicates if the bot name is valid.", :type "boolean"}}, :type "object"}, :SlackChannel {:allOf [#:reference{:definitions "Channel"}], :description "Slack channel definition", :properties {:properties #:reference{:definitions "SlackChannelProperties"}}, :type "object", :x-ms-discriminator-value "SlackChannel"}}}