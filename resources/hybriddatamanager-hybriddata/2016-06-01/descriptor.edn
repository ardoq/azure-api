{:scheme "https", :host "management.azure.com", :info {:title "HybridDataManagementClient", :version "2016-06-01"}, :ops {:JobDefinitions_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}", :description "This method deletes the given job definition.", :parameters [{:description "The data service type of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The job definition name to be deleted.", :in "path", :name "jobDefinitionName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DataStores_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores", :description "Gets all the data stores/repositories in the given resource.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :DataManagers_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}", :description "Creates a new data manager resource with the specified parameters. Existing resources cannot be updated with this API\r\nand should instead be updated with the Update data manager resource API.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Data manager resource details from request body.", :in "body", :name "dataManager", :required true, :schema #:reference{:definitions "DataManager"}}], :verb :put}, :Jobs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}", :description "This method gets a data manager job given the jobId.", :parameters [{:description "The name of the data service of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The name of the job definition of the job.", :in "path", :name "jobDefinitionName", :required true, :type "string"} {:description "The job id of the job queried.", :in "path", :name "jobId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "$expand is supported on details parameter for job, which provides details on the job stages.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :Jobs_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobs", :description "This method gets all the jobs at the data manager resource level.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :JobDefinitions_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}", :description "This method gets job definition object by name.", :parameters [{:description "The data service name of the job definition", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The job definition name that is being queried.", :in "path", :name "jobDefinitionName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DataStores_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}", :description "This method deletes the given data store/repository.", :parameters [{:description "The data store/repository name to be deleted.", :in "path", :name "dataStoreName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DataServices_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}", :description "Gets the data service that match the data service name given.", :parameters [{:description "The name of the data service that is being queried.", :in "path", :name "dataServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Jobs_Cancel {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/cancel", :description "Cancels the given job.", :parameters [{:description "The name of the data service of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The name of the job definition of the job.", :in "path", :name "jobDefinitionName", :required true, :type "string"} {:description "The job id of the job queried.", :in "path", :name "jobId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :JobDefinitions_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}", :description "Creates or updates a job definition.", :parameters [{:description "The data service type of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The job definition name to be created or updated.", :in "path", :name "jobDefinitionName", :required true, :type "string"} {:description "Job Definition object to be created or updated.", :in "body", :name "jobDefinition", :required true, :schema #:reference{:definitions "JobDefinition"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :JobDefinitions_Run {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/run", :description "This method runs a job instance of the given job definition.", :parameters [{:description "The data service type of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "Name of the job definition.", :in "path", :name "jobDefinitionName", :required true, :type "string"} {:description "Run time parameters for the job definition.", :in "body", :name "runParameters", :required true, :schema #:reference{:definitions "RunParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :DataManagers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}", :description "Deletes a data manager resource in Microsoft Azure.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :DataStores_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}", :description "Creates or updates the data store/repository in the data manager.", :parameters [{:description "The data store/repository name to be created or updated.", :in "path", :name "dataStoreName", :required true, :type "string"} {:description "The data store/repository object to be created or updated.", :in "body", :name "dataStore", :required true, :schema #:reference{:definitions "DataStore"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :PublicKeys_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys", :description "This method gets the list view of public keys, however it will only have one element.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Jobs_Resume {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/resume", :description "Resumes the given job.", :parameters [{:description "The name of the data service of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The name of the job definition of the job.", :in "path", :name "jobDefinitionName", :required true, :type "string"} {:description "The job id of the job queried.", :in "path", :name "jobId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Jobs_ListByJobDefinition {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs", :description "This method gets all the jobs of a given job definition.", :parameters [{:description "The name of the data service of the job definition.", :in "path", :name "dataServiceName", :required true, :type "string"} {:description "The name of the job definition for which jobs are needed.", :in "path", :name "jobDefinitionName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :DataManagers_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.HybridData/dataManagers", :description "Lists all the data manager resources available under the subscription.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DataManagers_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers", :description "Lists all the data manager resources available under the given resource group.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DataManagers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}", :description "Gets information about the specified data manager resource.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :JobDefinitions_ListByDataService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions", :description "This method gets all the job definitions of the given data service name.", :parameters [{:description "The data service type of interest.", :in "path", :name "dataServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :DataStoreTypes_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/{dataStoreTypeName}", :description "Gets the data store/repository type given its name.", :parameters [{:description "The data store/repository type name for which details are needed.", :in "path", :name "dataStoreTypeName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :DataStoreTypes_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes", :description "Gets all the data store/repository types that the resource supports.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :JobDefinitions_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobDefinitions", :description "This method gets all the job definitions of the given data manager resource.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :DataStores_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}", :description "This method gets the data store/repository by name.", :parameters [{:description "The data store/repository name queried.", :in "path", :name "dataStoreName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Operations_List {:path "/providers/Microsoft.HybridData/operations", :description nil, :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :DataManagers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}", :description "Updates the properties of an existing data manager resource.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "Defines the If-Match condition. The patch will be performed only if the ETag of the data manager resource on the server matches this value.", :in "header", :name "If-Match", :type "string"} {:description "Data manager resource details from request body.", :in "body", :name "dataManagerUpdateParameter", :required true, :schema #:reference{:definitions "DataManagerUpdateParameter"}}], :verb :patch}, :Jobs_ListByDataService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobs", :description "This method gets all the jobs of a data service type in a given resource.", :parameters [{:description "The name of the data service of interest.", :in "path", :name "dataServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"} {:description "OData Filter options", :in "query", :name "$filter", :required false, :type "string"}], :verb :get}, :DataServices_ListByDataManager {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices", :description "This method gets all the data services.", :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :PublicKeys_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/{publicKeyName}", :description "This method gets the public keys.", :parameters [{:description "Name of the public key.", :in "path", :name "publicKeyName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "dataManagerNameParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}}, :parameters {:apiVersionParameter {:description "The API Version", :in "query", :name "api-version", :required true, :type "string"}, :dataManagerNameParameter {:description "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only", :name "dataManagerName", :type "string", :minLength 3, :x-ms-parameter-location "method", :maxLength 24, :required true, :in "path", :pattern "^[-\\w\\.]+$"}, :resourceGroupNameParameter {:description "The Resource Group Name", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionIdParameter {:description "The Subscription Id", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:JobDefinitionFilter {:description "Contains the supported job definition filters.", :properties {:dataSource {:description "The data source associated with the job definition", :type "string"}, :lastModified {:description "The last modified date time of the data source.", :format "date-time", :type "string"}, :state {:description "The state of the job definition.", :enum ["Disabled" "Enabled" "Supported"], :type "string", :x-ms-enum {:modelAsString false, :name "State"}}}, :required ["state"], :type "object"}, :DataStore {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Data store.", :properties {:properties #:reference{:definitions "DataStoreProperties"}}, :required ["properties"], :type "object"}, :AvailableProviderOperationProperties {:description "Class represents Properties in AvailableProviderOperations", :properties {}, :type "object"}, :DataServiceList {:description "Data Service Collection.", :properties {:nextLink {:description "Link for the next set of data services.", :type "string"}, :value {:description "List of data services.", :items #:reference{:definitions "DataService"}, :type "array"}}, :type "object"}, :DmsBaseObject {:description "Base class for all objects under DataManager Service", :properties {:id {:description "Id of the object.", :readOnly true, :type "string"}, :name {:description "Name of the object.", :readOnly true, :type "string"}, :type {:description "Type of the object.", :readOnly true, :type "string"}}, :type "object"}, :Schedule {:description "Schedule for the job run.", :properties {:name {:description "Name of the schedule.", :type "string"}, :policyList {:description "A list of repetition intervals in ISO 8601 format.", :items {:type "string"}, :type "array"}}, :type "object"}, :DataStoreTypeProperties {:description "Data Store Type properties.", :properties {:repositoryType {:description "Arm type for the manager resource to which the data source type is associated. This is optional.", :type "string"}, :state {:description "State of the data store type.", :enum ["Disabled" "Enabled" "Supported"], :type "string", :x-ms-enum {:modelAsString false, :name "State"}}, :supportedDataServicesAsSink {:description "Supported data services where it can be used as a sink.", :items {:type "string"}, :type "array"}, :supportedDataServicesAsSource {:description "Supported data services where it can be used as a source.", :items {:type "string"}, :type "array"}}, :required ["state"], :type "object"}, :Key {:description "Encryption Key.", :properties {:encryptionChunkSizeInBytes {:description "The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.", :format "int32", :type "integer"}, :keyExponent {:description "Exponent of the encryption key.", :type "string"}, :keyModulus {:description "Modulus of the encryption key.", :type "string"}}, :required ["keyModulus" "keyExponent" "encryptionChunkSizeInBytes"], :type "object"}, :DataManagerUpdateParameter {:description "The DataManagerUpdateParameter.", :properties {:sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups).", :type "object"}}, :type "object"}, :JobDefinitionProperties {:description "Job Definition", :properties {:userConfirmation {:default "NotRequired", :description "Enum to detect if user confirmation is required. If not passed will default to NotRequired.", :enum ["NotRequired" "Required"], :type "string", :x-ms-enum {:modelAsString false, :name "UserConfirmation"}}, :customerSecrets {:description "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.", :items #:reference{:definitions "CustomerSecret"}, :type "array"}, :dataSinkId {:description "Data Sink Id associated to the job definition.", :type "string"}, :dataServiceInput {:description "A generic json used differently by each data service type.", :type "object"}, :state {:description "State of the job definition.", :enum ["Disabled" "Enabled" "Supported"], :type "string", :x-ms-enum {:modelAsString false, :name "State"}}, :lastModifiedTime {:description "Last modified time of the job definition.", :format "date-time", :type "string"}, :dataSourceId {:description "Data Source Id associated to the job definition.", :type "string"}, :schedules {:description "Schedule for running the job definition", :items #:reference{:definitions "Schedule"}, :type "array"}, :runLocation {:description "This is the preferred geo location for the job to run.", :enum ["none" "australiaeast" "australiasoutheast" "brazilsouth" "canadacentral" "canadaeast" "centralindia" "centralus" "eastasia" "eastus" "eastus2" "japaneast" "japanwest" "koreacentral" "koreasouth" "southeastasia" "southcentralus" "southindia" "northcentralus" "northeurope" "uksouth" "ukwest" "westcentralus" "westeurope" "westindia" "westus" "westus2"], :type "string", :x-ms-enum {:modelAsString false, :name "RunLocation"}}}, :required ["dataSourceId" "dataSinkId" "state"], :type "object"}, :AvailableProviderOperations {:description "Class for set of operations used for discovery of available provider operations.", :properties {:nextLink {:description "Link for the next set of operations.", :type "string"}, :value {:description "List of operations.", :items #:reference{:definitions "AvailableProviderOperation"}, :type "array"}}, :type "object"}, :ErrorDetails {:description "Error Details", :properties {:errorCode {:description "Error code.", :format "int32", :type "integer"}, :errorMessage {:description "Error message.", :type "string"}, :exceptionMessage {:description "Contains the non localized exception message", :type "string"}, :recommendedAction {:description "Recommended action for the error.", :type "string"}}, :type "object"}, :JobDefinitionList {:description "Job Definition Collection.", :properties {:nextLink {:description "Link for the next set of job definitions.", :type "string"}, :value {:description "List of job definitions.", :items #:reference{:definitions "JobDefinition"}, :type "array"}}, :type "object"}, :JobFilter {:description "Contains the information about the filters for the job.", :properties {:startTime {:description "The start time of the job.", :format "date-time", :type "string"}, :status {:description "The status of the job.", :enum ["None" "InProgress" "Succeeded" "WaitingForAction" "Failed" "Cancelled" "Cancelling"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["status"], :type "object"}, :JobStages {:description "Job stages.", :properties {:errorDetails {:description "Error details for the stage. This is optional", :items #:reference{:definitions "ErrorDetails"}, :type "array"}, :jobStageDetails {:description "Job Stage Details", :type "object"}, :stageName {:description "Name of the job stage.", :type "string"}, :stageStatus {:description "Status of the job stage.", :enum ["None" "InProgress" "Succeeded" "WaitingForAction" "Failed" "Cancelled" "Cancelling"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["stageStatus"], :type "object"}, :JobDefinition {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Job Definition.", :properties {:properties #:reference{:definitions "JobDefinitionProperties"}}, :required ["properties"], :type "object"}, :PublicKeyProperties {:description "PublicKey Properties", :properties {:dataServiceLevel1Key #:reference{:definitions "Key"}, :dataServiceLevel2Key #:reference{:definitions "Key"}}, :required ["dataServiceLevel1Key" "dataServiceLevel2Key"], :type "object"}, :DataStoreProperties {:description "Data Store for sources and sinks", :properties {:customerSecrets {:description "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.", :items #:reference{:definitions "CustomerSecret"}, :type "array"}, :dataStoreTypeId {:description "The arm id of the data store type.", :type "string"}, :extendedProperties {:description "A generic json used differently by each data source type.", :type "object"}, :repositoryId {:description "Arm Id for the manager resource to which the data source is associated. This is optional.", :type "string"}, :state {:description "State of the data source.", :enum ["Disabled" "Enabled" "Supported"], :type "string", :x-ms-enum {:modelAsString false, :name "State"}}}, :required ["state" "dataStoreTypeId"], :type "object"}, :DataStoreList {:description "Data Store Collection.", :properties {:nextLink {:description "Link for the next set of data stores.", :type "string"}, :value {:description "List of data stores.", :items #:reference{:definitions "DataStore"}, :type "array"}}, :type "object"}, :PublicKey {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Public key", :properties {:properties #:reference{:definitions "PublicKeyProperties"}}, :required ["properties"], :type "object"}, :Job {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Data service job.", :properties {:endTime {:description "Time at which the job ended in UTC ISO 8601 format.", :format "date-time", :type "string"}, :error #:reference{:definitions "Error"}, :properties #:reference{:definitions "JobProperties"}, :startTime {:description "Time at which the job was started in UTC ISO 8601 format.", :format "date-time", :type "string"}, :status {:description "Status of the job.", :enum ["None" "InProgress" "Succeeded" "WaitingForAction" "Failed" "Cancelled" "Cancelling"], :type "string", :x-ms-enum {:modelAsString false, :name "JobStatus"}}}, :required ["status" "startTime" "properties"], :type "object"}, :DataStoreTypeList {:description "Data Store Type Collection.", :properties {:nextLink {:description "Link for the next set of data store types.", :type "string"}, :value {:description "List of DataStoreType.", :items #:reference{:definitions "DataStoreType"}, :type "array"}}, :type "object"}, :DataManagerList {:description "DataManager resources Collection.", :properties {:nextLink {:description "Link for the next set of data stores.", :type "string"}, :value {:description "List of data manager resources.", :items #:reference{:definitions "DataManager"}, :type "array"}}, :type "object"}, :JobDetails {:description "Job details.", :properties {:errorDetails {:description "Error details for failure. This is optional.", :items #:reference{:definitions "ErrorDetails"}, :type "array"}, :itemDetailsLink {:description "Item Details Link to download files or see details", :type "string"}, :jobDefinition #:reference{:definitions "JobDefinition"}, :jobStages {:description "List of stages that ran in the job", :items #:reference{:definitions "JobStages"}, :type "array"}}, :type "object"}, :PublicKeyList {:description "PublicKey Collection", :properties {:nextLink {:description "Link for the next set of public keys.", :type "string"}, :value {:description "List of public keys.", :items #:reference{:definitions "PublicKey"}, :type "array"}}, :type "object"}, :AvailableProviderOperation {:description "Class represents provider operation", :properties {:display #:reference{:definitions "AvailableProviderOperationDisplay"}, :name {:description "Gets or Sets Name of the operations", :type "string"}, :origin {:description "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”", :type "string"}, :properties #:reference{:definitions "AvailableProviderOperationProperties"}}, :required ["name"], :type "object"}, :DataServiceProperties {:description "Data Service properties.", :properties {:state {:description "State of the data service.", :enum ["Disabled" "Enabled" "Supported"], :type "string", :x-ms-enum {:modelAsString false, :name "State"}}, :supportedDataSinkTypes {:description "Supported data store types which can be used as a sink.", :items {:type "string"}, :type "array"}, :supportedDataSourceTypes {:description "Supported data store types which can be used as a source.", :items {:type "string"}, :type "array"}}, :required ["state"], :type "object"}, :DataStoreType {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Data Store Type.", :properties {:properties #:reference{:definitions "DataStoreTypeProperties"}}, :required ["properties"], :type "object"}, :Resource {:description "Model of the Resource.", :properties {:id {:description "The Resource Id.", :readOnly true, :type "string"}, :location {:description "The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\r\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\r\nregion is specified on update the request will succeed.", :type "string", :x-ms-mutability ["read" "create"]}, :name {:description "The Resource Name.", :readOnly true, :type "string"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups).", :type "object"}, :type {:description "The Resource type.", :readOnly true, :type "string"}}, :required ["location"], :type "object", :x-ms-azure-resource true}, :JobList {:description "Job Collection.", :properties {:nextLink {:description "Link for the next set of jobs.", :type "string"}, :value {:description "List of jobs.", :items #:reference{:definitions "Job"}, :type "array"}}, :type "object"}, :DataService {:allOf [#:reference{:definitions "DmsBaseObject"}], :description "Data Service.", :properties {:properties #:reference{:definitions "DataServiceProperties"}}, :required ["properties"], :type "object"}, :Error {:description "Top level error for the job.", :properties {:code {:description "Error code that can be used to programmatically identify the error.", :type "string"}, :message {:description "Describes the error in detail and provides debugging information.", :type "string"}}, :required ["code"], :type "object"}, :CustomerSecret {:description "The pair of customer secret.", :properties {:algorithm {:description "The encryption algorithm used to encrypt data.", :enum ["None" "RSA1_5" "RSA_OAEP" "PlainText"], :type "string", :x-ms-enum {:modelAsString false, :name "SupportedAlgorithm"}}, :keyIdentifier {:description "The identifier to the data service input object which this secret corresponds to.", :type "string"}, :keyValue {:description "It contains the encrypted customer secret.", :type "string"}}, :required ["keyIdentifier" "keyValue" "algorithm"], :type "object"}, :Sku {:description "The sku type.", :properties {:name {:description "The sku name. Required for data manager creation, optional for update.", :type "string"}, :tier {:description "The sku tier. This is based on the SKU name.", :type "string"}}, :type "object"}, :DataManager {:allOf [#:reference{:definitions "Resource"}], :description "The DataManager resource.", :properties {:etag {:description "Etag of the Resource.", :type "string"}}, :type "object"}, :DataStoreFilter {:description "Contains the information about the filters for the DataStore.", :properties {:dataStoreTypeId {:description "The data store type id.", :type "string"}}, :type "object"}, :RunParameters {:description "Run parameters for a job.", :properties {:customerSecrets {:description "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.", :items #:reference{:definitions "CustomerSecret"}, :type "array"}, :dataServiceInput {:description "A generic json used differently by each data service type.", :type "object"}, :userConfirmation {:default "NotRequired", :description "Enum to detect if user confirmation is required. If not passed will default to NotRequired.", :enum ["NotRequired" "Required"], :type "string", :x-ms-enum {:modelAsString false, :name "UserConfirmation"}}}, :type "object"}, :AvailableProviderOperationDisplay {:description "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations.", :properties {:description {:description "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views.", :type "string"}, :operation {:description "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.", :type "string"}, :provider {:description "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services.", :type "string"}, :resource {:description "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section.", :type "string"}}, :type "object"}, :JobProperties {:description "Job Properties", :properties {:bytesProcessed {:description "Number of bytes processed by the job as of now.", :format "int64", :type "integer"}, :dataSinkName {:description "Name of the data sink on which the job was triggered.", :type "string"}, :dataSourceName {:description "Name of the data source on which the job was triggered.", :type "string"}, :details #:reference{:definitions "JobDetails"}, :isCancellable {:description "Describes whether the job is cancellable.", :enum ["NotCancellable" "Cancellable"], :type "string", :x-ms-enum {:modelAsString false, :name "IsJobCancellable"}}, :itemsProcessed {:description "Number of items processed by the job as of now", :format "int64", :type "integer"}, :totalBytesToProcess {:description "Number of bytes to be processed by the job in total.", :format "int64", :type "integer"}, :totalItemsToProcess {:description "Number of items to be processed by the job in total", :format "int64", :type "integer"}}, :required ["isCancellable"], :type "object"}}}