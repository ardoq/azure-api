{:scheme "https", :host "management.azure.com", :info {:description "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations allow you to manage role definitions. A role definition describes the set of actions that can be performed on resources.", :title "AuthorizationManagementClient", :version "2018-01-01-preview"}, :ops {:Permissions_ListForResourceGroup {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions", :description "Gets all permissions the caller has for a resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Permissions_ListForResource {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions", :description "Gets all permissions the caller has for a resource.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ResourceProviderNamespaceParameter"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to get the permissions for.", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RoleDefinitions_List {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions", :description "Get all role definitions that are applicable at scope and above.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleDefinitions_Delete {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Deletes a role definition.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition to delete.", :in "path", :name "roleDefinitionId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :RoleDefinitions_Get {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Get role definition by name (GUID).", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition.", :in "path", :name "roleDefinitionId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleDefinitions_CreateOrUpdate {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Creates or updates a role definition.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition.", :in "path", :name "roleDefinitionId", :required true, :type "string"} {:description "The values for the role definition.", :in "body", :name "roleDefinition", :required true, :schema #:reference{:definitions "RoleDefinition"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}}, :parameters {:ApiVersionParameter {:description "The API version to use for this operation.", :in "query", :name "api-version", :required true, :type "string"}, :FilterParameter {:description "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.", :in "query", :name "$filter", :required false, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupNameParameter {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceProviderNamespaceParameter {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The ID of the target subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:Permission {:description "Role definition permissions.", :properties {:actions {:description "Allowed actions.", :items {:type "string"}, :type "array"}, :dataActions {:description "Allowed Data actions.", :items {:type "string"}, :type "array"}, :notActions {:description "Denied actions.", :items {:type "string"}, :type "array"}, :notDataActions {:description "Denied Data actions.", :items {:type "string"}, :type "array"}}}, :PermissionGetResult {:description "Permissions information.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "An array of permissions.", :items #:reference{:definitions "Permission"}, :type "array"}}}, :RoleDefinition {:description "Role definition.", :properties {:id {:description "The role definition ID.", :readOnly true, :type "string"}, :name {:description "The role definition name.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RoleDefinitionProperties"}, :type {:description "The role definition type.", :readOnly true, :type "string"}}}, :RoleDefinitionFilter {:description "Role Definitions filter", :properties {:roleName {:description "Returns role definition with the specific name.", :type "string"}, :type {:description "Returns role definition with the specific type.", :type "string"}}}, :RoleDefinitionListResult {:description "Role definition list operation result.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "Role definition list.", :items #:reference{:definitions "RoleDefinition"}, :type "array"}}}, :RoleDefinitionProperties {:description "Role definition properties.", :properties {:assignableScopes {:description "Role definition assignable scopes.", :items {:type "string"}, :type "array"}, :description {:description "The role definition description.", :type "string"}, :permissions {:description "Role definition permissions.", :items #:reference{:definitions "Permission"}, :type "array"}, :roleName {:description "The role name.", :type "string"}, :type {:description "The role type.", :type "string", :x-ms-client-name "roleType"}}}}}