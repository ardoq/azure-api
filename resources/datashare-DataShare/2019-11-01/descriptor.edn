{:scheme "https", :host "management.azure.com", :info {:description "Creates a Microsoft.DataShare management client.", :title "DataShareManagementClient", :version "2019-11-01"}, :ops {:Triggers_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}", :description "Create a Trigger ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription which will hold the data set sink.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the trigger.", :in "path", :name "triggerName", :required true, :type "string"} {:description "Trigger details.", :in "body", :name "trigger", :required true, :schema #:reference{:definitions "Trigger"}} #:reference{:parameters "api-version"}], :verb :put}, :SynchronizationSettings_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}", :description "Get a synchronizationSetting in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the synchronizationSetting.", :in "path", :name "synchronizationSettingName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :DataSetMappings_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}", :description "Get a DataSetMapping in a shareSubscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the dataSetMapping.", :in "path", :name "dataSetMappingName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :ShareSubscriptions_Synchronize {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/Synchronize", :description "Initiate a copy", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of share subscription", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "Synchronize payload", :in "body", :name "synchronize", :required true, :schema #:reference{:definitions "Synchronize"}} #:reference{:parameters "api-version"}], :verb :post}, :SynchronizationSettings_ListByShare {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings", :description "List synchronizationSettings in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ProviderShareSubscriptions_ListByShare {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions", :description "List share subscriptions in a provider share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation Token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ShareSubscriptions_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}", :description "Create a shareSubscription in an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "create parameters for shareSubscription", :in "body", :name "shareSubscription", :required true, :schema #:reference{:definitions "ShareSubscription"}} #:reference{:parameters "api-version"}], :verb :put}, :SynchronizationSettings_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}", :description "Create or update a synchronizationSetting ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share to add the synchronization setting to.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the synchronizationSetting.", :in "path", :name "synchronizationSettingName", :required true, :type "string"} {:description "The new synchronization setting information.", :in "body", :name "synchronizationSetting", :required true, :schema #:reference{:definitions "SynchronizationSetting"}} #:reference{:parameters "api-version"}], :verb :put}, :Shares_ListByAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares", :description "List shares in an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} #:reference{:parameters "api-version"} {:description "Continuation Token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :DataSetMappings_ListByShareSubscription {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings", :description "List DataSetMappings in a share subscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ConsumerInvitations_ListInvitations {:path "/providers/Microsoft.DataShare/ListInvitations", :description "Lists invitations", :parameters [#:reference{:parameters "api-version"} {:description "The continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ProviderShareSubscriptions_Reinstate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/reinstate", :description "Reinstate share subscription in a provider share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "To locate shareSubscription", :in "path", :name "providerShareSubscriptionId", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :Accounts_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts", :description "List Accounts in ResourceGroup", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :Shares_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}", :description "Delete a share ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :Accounts_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}", :description "Get an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} #:reference{:parameters "api-version"}], :verb :get}, :ConsumerInvitations_Get {:path "/providers/Microsoft.DataShare/locations/{location}/consumerInvitations/{invitationId}", :description "Get an invitation", :parameters [{:description "Location of the invitation", :in "path", :name "location", :required true, :type "string"} {:description "An invitation id", :in "path", :name "invitationId", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :ShareSubscriptions_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}", :description "Get a shareSubscription in an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :Invitations_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}", :description "Delete an invitation in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the invitation.", :in "path", :name "invitationName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :ProviderShareSubscriptions_Revoke {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/revoke", :description "Revoke share subscription in a provider share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "To locate shareSubscription", :in "path", :name "providerShareSubscriptionId", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :Accounts_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}", :description "Create an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The account payload.", :in "body", :name "account", :required true, :schema #:reference{:definitions "Account"}} #:reference{:parameters "api-version"}], :verb :put}, :Invitations_ListByShare {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations", :description "List invitations in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "The continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ShareSubscriptions_ListSynchronizations {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations", :description "List synchronizations of a share subscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :post}, :SynchronizationSettings_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}", :description "Delete a synchronizationSetting in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the synchronizationSetting .", :in "path", :name "synchronizationSettingName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :Accounts_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}", :description "Patch an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The account update parameters.", :in "body", :name "accountUpdateParameters", :required true, :schema #:reference{:definitions "AccountUpdateParameters"}} #:reference{:parameters "api-version"}], :verb :patch}, :ShareSubscriptions_CancelSynchronization {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization", :description "Request to cancel a synchronization.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "Share Subscription Synchronization payload.", :in "body", :name "shareSubscriptionSynchronization", :required true, :schema #:reference{:definitions "ShareSubscriptionSynchronization"}} #:reference{:parameters "api-version"}], :verb :post}, :Triggers_ListByShareSubscription {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers", :description "List Triggers in a share subscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :DataSetMappings_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}", :description "Delete a DataSetMapping in a shareSubscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the dataSetMapping.", :in "path", :name "dataSetMappingName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :Accounts_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}", :description "DeleteAccount", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} #:reference{:parameters "api-version"}], :verb :delete}, :Triggers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}", :description "Delete a Trigger in a shareSubscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the trigger.", :in "path", :name "triggerName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :Shares_ListSynchronizationDetails {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails", :description "List synchronization details", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "Share Synchronization payload.", :in "body", :name "shareSynchronization", :required true, :schema #:reference{:definitions "ShareSynchronization"}} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :post}, :ProviderShareSubscriptions_GetByShare {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}", :description "Get share subscription in a provider share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "To locate shareSubscription", :in "path", :name "providerShareSubscriptionId", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :ShareSubscriptions_ListByAccount {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions", :description "List share subscriptions in an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} #:reference{:parameters "api-version"} {:description "Continuation Token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :DataSets_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}", :description "Get a DataSet in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the dataSet.", :in "path", :name "dataSetName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :Shares_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}", :description "Create a share ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The share payload", :in "body", :name "share", :required true, :schema #:reference{:definitions "Share"}} #:reference{:parameters "api-version"}], :verb :put}, :DataSets_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}", :description "Create a DataSet ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share to add the data set to.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the dataSet.", :in "path", :name "dataSetName", :required true, :type "string"} {:description "The new data set information.", :in "body", :name "dataSet", :required true, :schema #:reference{:definitions "DataSet"}} #:reference{:parameters "api-version"}], :verb :put}, :DataSetMappings_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}", :description "Create a DataSetMapping ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription which will hold the data set sink.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the data set mapping to be created.", :in "path", :name "dataSetMappingName", :required true, :type "string"} {:description "Destination data set configuration details.", :in "body", :name "dataSetMapping", :required true, :schema #:reference{:definitions "DataSetMapping"}} #:reference{:parameters "api-version"}], :verb :put}, :ShareSubscriptions_ListSynchronizationDetails {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails", :description "List synchronization details", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share subscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "Share Subscription Synchronization payload.", :in "body", :name "shareSubscriptionSynchronization", :required true, :schema #:reference{:definitions "ShareSubscriptionSynchronization"}} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :post}, :Accounts_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DataShare/accounts", :description "List Accounts in Subscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :ShareSubscriptions_ListSourceShareSynchronizationSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings", :description "Get synchronization settings set on a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :post}, :Invitations_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}", :description "Create an invitation ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share to send the invitation for.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the invitation.", :in "path", :name "invitationName", :required true, :type "string"} {:description "Invitation details.", :in "body", :name "invitation", :required true, :schema #:reference{:definitions "Invitation"}} #:reference{:parameters "api-version"}], :verb :put}, :ConsumerInvitations_RejectInvitation {:path "/providers/Microsoft.DataShare/locations/{location}/RejectInvitation", :description "Reject an invitation", :parameters [{:description "Location of the invitation", :in "path", :name "location", :required true, :type "string"} {:description "An invitation payload", :in "body", :name "invitation", :required true, :schema #:reference{:definitions "ConsumerInvitation"}} #:reference{:parameters "api-version"}], :verb :post}, :DataSets_ListByShare {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets", :description "List DataSets in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :Invitations_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}", :description "Get an invitation in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the invitation.", :in "path", :name "invitationName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :ShareSubscriptions_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}", :description "Delete a shareSubscription in an account", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :Triggers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}", :description "Get a Trigger in a shareSubscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} {:description "The name of the trigger.", :in "path", :name "triggerName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :Shares_ListSynchronizations {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations", :description "List synchronizations of a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.DataShare/operations", :description "List of available operations", :parameters [#:reference{:parameters "api-version"}], :verb :get}, :Shares_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}", :description "Get a share ", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share to retrieve.", :in "path", :name "shareName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :ConsumerSourceDataSets_ListByShareSubscription {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/ConsumerSourceDataSets", :description "Get source dataSets of a shareSubscription", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the shareSubscription.", :in "path", :name "shareSubscriptionName", :required true, :type "string"} #:reference{:parameters "api-version"} {:description "Continuation token", :in "query", :name "$skipToken", :required false, :type "string"}], :verb :get}, :DataSets_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}", :description "Delete a DataSet in a share", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "accountName"} {:description "The name of the share.", :in "path", :name "shareName", :required true, :type "string"} {:description "The name of the dataSet.", :in "path", :name "dataSetName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}}, :parameters {:accountName {:description "The name of the share account.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :api-version {:description "The api version to use.", :in "query", :name "api-version", :required true, :type "string"}, :resourceGroupName {:description "The resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionId {:description "The subscription identifier", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:SqlDBTableDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A SQL DB Table data set mapping.", :properties {:properties #:reference{:definitions "SqlDBTableDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "SqlDBTable"}, :BlobFolderDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A Blob folder data set mapping.", :properties {:properties #:reference{:definitions "BlobFolderMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "BlobFolder"}, :ShareSubscriptionProperties {:description "Share subscription property bag.", :properties {:shareKind {:description "Kind of share", :enum ["CopyBased" "InPlace"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "shareKind"}}, :provisioningState {:description "Provisioning state of the share subscription", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :providerEmail {:description "Email of the provider who created the resource", :readOnly true, :type "string"}, :providerTenantName {:description "Tenant name of the provider who created the resource", :readOnly true, :type "string"}, :sourceShareLocation {:description "Source share location.", :type "string"}, :shareSubscriptionStatus {:description "Gets the current status of share subscription.", :enum ["Active" "Revoked" "SourceDeleted" "Revoking"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "shareSubscriptionStatus"}}, :shareName {:description "Name of the share", :readOnly true, :type "string"}, :createdAt {:description "Time at which the share subscription was created.", :format "date-time", :readOnly true, :type "string"}, :providerName {:description "Name of the provider who created the resource", :readOnly true, :type "string"}, :invitationId {:description "The invitation id.", :type "string"}, :shareTerms {:description "Terms of a share", :readOnly true, :type "string"}, :shareDescription {:description "Description of share", :readOnly true, :type "string"}, :userName {:description "Name of the user who created the resource", :readOnly true, :type "string"}, :userEmail {:description "Email of the user who created the resource", :readOnly true, :type "string"}}, :required ["invitationId" "sourceShareLocation"], :type "object"}, :ShareSubscriptionSynchronizationList {:description "A consumer side list of share subscription synchronizations", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ShareSubscriptionSynchronization"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :KustoClusterDataSetMappingProperties {:description "Properties of the Kusto cluster data set mapping", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :kustoClusterResourceId {:description "Resource id of the sink kusto cluster.", :type "string"}, :location {:description "Location of the sink kusto cluster.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}}, :required ["kustoClusterResourceId" "dataSetId"], :type "object"}, :ADLSGen1FileDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An ADLS Gen 1 file data set.", :properties {:properties #:reference{:definitions "ADLSGen1FileProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen1File"}, :ScheduledTrigger {:allOf [#:reference{:definitions "Trigger"}], :description "A type of trigger based on schedule", :properties {:properties #:reference{:definitions "ScheduledTriggerProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "ScheduleBased"}, :ScheduledSourceShareSynchronizationSettingProperties {:description "A Scheduled source synchronization setting data transfer object.", :properties {:recurrenceInterval {:description "Recurrence Interval", :enum ["Hour" "Day"], :type "string", :x-ms-enum {:modelAsString true, :name "recurrenceInterval"}}, :synchronizationTime {:description "Synchronization time", :format "date-time", :type "string"}}, :type "object"}, :BlobDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A Blob data set mapping.", :properties {:properties #:reference{:definitions "BlobMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "Blob"}, :SqlDBTableDataSetMappingProperties {:description "Properties of the SQL DB table data set mapping.", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :databaseName {:description "DatabaseName name of the sink data set", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :schemaName {:description "Schema of the table. Default value is dbo.", :type "string"}, :sqlServerResourceId {:description "Resource id of SQL server", :type "string"}, :tableName {:description "SQL DB table name.", :type "string"}}, :required ["databaseName" "tableName" "schemaName" "sqlServerResourceId" "dataSetId"], :type "object"}, :SynchronizationSettingList {:description "List response for get Synchronization settings", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "SynchronizationSetting"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ProviderShareSubscriptionList {:description "List response for get ShareSubscription.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ProviderShareSubscription"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ADLSGen2FolderDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An ADLS Gen 2 folder data set.", :properties {:properties #:reference{:definitions "ADLSGen2FolderProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2Folder"}, :Identity {:description "Identity of resource", :properties {:principalId {:description "service principal Id", :readOnly true, :type "string"}, :tenantId {:description "Tenant Id", :readOnly true, :type "string"}, :type {:description "Identity Type", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString true, :name "type"}}}, :type "object"}, :ADLSGen2FolderDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "An ADLS Gen2 folder data set mapping.", :properties {:properties #:reference{:definitions "ADLSGen2FolderDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2Folder"}, :SourceShareSynchronizationSetting {:description "A view of synchronization setting added by the provider", :discriminator "kind", :properties {:kind {:description "Kind of synchronization", :enum ["ScheduleBased"], :type "string", :x-ms-enum {:modelAsString true, :name "kind"}}}, :required ["kind"], :type "object"}, :BlobDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An Azure storage blob data set.", :properties {:properties #:reference{:definitions "BlobProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "Blob"}, :ConsumerSourceDataSet {:allOf [#:reference{:definitions "ProxyDto"}], :description "A consumer side dataSet data transfer object.", :properties {:properties #:reference{:definitions "ConsumerSourceDataSetProperties"}}, :type "object"}, :SqlDWTableDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A SQL DW Table data set mapping.", :properties {:properties #:reference{:definitions "SqlDWTableDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "SqlDWTable"}, :SynchronizationDetails {:description "Synchronization details at data set level", :properties {:filesWritten {:description "The number of files written into the sink data set", :format "int64", :readOnly true, :type "integer"}, :rowsRead {:description "The number of rows read from the source data set.", :format "int64", :readOnly true, :type "integer"}, :dataSetType {:description "Type of the data set", :enum ["Blob" "Container" "BlobFolder" "AdlsGen2FileSystem" "AdlsGen2Folder" "AdlsGen2File" "AdlsGen1Folder" "AdlsGen1File" "KustoCluster" "KustoDatabase" "SqlDBTable" "SqlDWTable"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetType"}}, :startTime {:description "Start time of data set level copy", :format "date-time", :readOnly true, :type "string"}, :name {:description "Name of the data set", :readOnly true, :type "string"}, :endTime {:description "End time of data set level copy", :format "date-time", :readOnly true, :type "string"}, :dataSetId {:description "Id of data set", :readOnly true, :type "string"}, :rowsCopied {:description "The number of files copied into the sink data set", :format "int64", :readOnly true, :type "integer"}, :sizeWritten {:description "The size of the data written into the sink data set in bytes", :format "int64", :readOnly true, :type "integer"}, :vCore {:description "The vCore units consumed for the data set synchronization", :format "int64", :readOnly true, :type "integer"}, :status {:description "Raw Status", :readOnly true, :type "string"}, :durationMs {:description "Duration of data set level copy", :format "int32", :readOnly true, :type "integer"}, :filesRead {:description "The number of files read from the source data set", :format "int64", :readOnly true, :type "integer"}, :sizeRead {:description "The size of the data read from the source data set in bytes", :format "int64", :readOnly true, :type "integer"}, :message {:description "Error message if any", :readOnly true, :type "string"}}, :type "object"}, :KustoDatabaseDataSetMappingProperties {:description "Properties of the Kusto database data set mapping", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :kustoClusterResourceId {:description "Resource id of the sink kusto cluster.", :type "string"}, :location {:description "Location of the sink kusto cluster.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}}, :required ["kustoClusterResourceId" "dataSetId"], :type "object"}, :Invitation {:allOf [#:reference{:definitions "ProxyDto"}], :description "A Invitation data transfer object.", :properties {:properties #:reference{:definitions "InvitationProperties"}}, :type "object"}, :DataShareErrorInfo {:description "The data share error body model.", :properties {:code {:description "Code of the error", :type "string"}, :details {:description "Nested details of the error model", :items #:reference{:definitions "DataShareErrorInfo"}, :type "array", :uniqueItems false}, :message {:description "Message of the error", :type "string"}, :target {:description "Target of the error", :type "string"}}, :required ["code" "message"], :type "object"}, :ADLSGen2FileDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "An ADLS Gen2 file data set mapping.", :properties {:properties #:reference{:definitions "ADLSGen2FileDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2File"}, :DataSet {:allOf [#:reference{:definitions "ProxyDto"}], :description "A DataSet data transfer object.", :discriminator "kind", :properties {:kind {:description "Kind of data set.", :enum ["Blob" "Container" "BlobFolder" "AdlsGen2FileSystem" "AdlsGen2Folder" "AdlsGen2File" "AdlsGen1Folder" "AdlsGen1File" "KustoCluster" "KustoDatabase" "SqlDBTable" "SqlDWTable"], :type "string", :x-ms-enum {:modelAsString true, :name "kind"}}}, :required ["kind"], :type "object"}, :BlobFolderProperties {:description "Properties of the blob folder data set.", :properties {:containerName {:description "Container that has the file path.", :type "string"}, :dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :prefix {:description "Prefix for blob folder", :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["containerName" "prefix" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :ADLSGen1FolderProperties {:description "Properties of the ADLS Gen1 folder data set.", :properties {:accountName {:description "The ADLS account name.", :type "string"}, :dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :folderPath {:description "The folder path within the ADLS account.", :type "string"}, :resourceGroup {:description "Resource group of ADLS account.", :type "string"}, :subscriptionId {:description "Subscription id of ADLS account.", :type "string"}}, :required ["subscriptionId" "resourceGroup" "accountName" "folderPath"], :type "object"}, :InvitationProperties {:description "Invitation property bag.", :properties {:respondedAt {:description "The time the recipient responded to the invitation.", :format "date-time", :readOnly true, :type "string"}, :invitationId {:description "unique invitation id", :readOnly true, :type "string"}, :sentAt {:description "Gets the time at which the invitation was sent.", :format "date-time", :readOnly true, :type "string"}, :targetObjectId {:description "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant.", :type "string"}, :invitationStatus {:description "The status of the invitation.", :enum ["Pending" "Accepted" "Rejected" "Withdrawn"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "invitationStatus"}}, :userName {:description "Name of the user who created the resource", :readOnly true, :type "string"}, :targetActiveDirectoryId {:description "The target Azure AD Id. Can't be combined with email.", :type "string"}, :userEmail {:description "Email of the user who created the resource", :readOnly true, :type "string"}, :targetEmail {:description "The email the invitation is directed to.", :type "string"}}, :type "object"}, :BlobContainerProperties {:description "Properties of the BLOB container data set.", :properties {:containerName {:description "BLOB Container name.", :type "string"}, :dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["containerName" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :ADLSGen2FileSystemDataSetMappingProperties {:description "ADLS Gen 2 file system data set mapping property bag.", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :fileSystem {:description "The file system name.", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["fileSystem" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :OperationResponse {:description "Response for long running operation", :properties {:endTime {:description "start time", :format "date-time", :type "string"}, :error #:reference{:definitions "DataShareErrorInfo"}, :startTime {:description "start time", :format "date-time", :type "string"}, :status {:description "Operation state of the long running operation.", :enum ["Accepted" "InProgress" "TransientFailure" "Succeeded" "Failed" "Canceled"], :type "string", :x-ms-enum {:modelAsString true, :name "status"}}}, :required ["status"], :type "object"}, :ScheduledSynchronizationSettingProperties {:description "A Scheduled synchronization setting data transfer object.", :properties {:createdAt {:description "Time at which the synchronization setting was created.", :format "date-time", :readOnly true, :type "string"}, :provisioningState {:description "Gets or sets the provisioning state", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :recurrenceInterval {:description "Recurrence Interval", :enum ["Hour" "Day"], :type "string", :x-ms-enum {:modelAsString true, :name "recurrenceInterval"}}, :synchronizationTime {:description "Synchronization time", :format "date-time", :type "string"}, :userName {:description "Name of the user who created the synchronization setting.", :readOnly true, :type "string"}}, :required ["recurrenceInterval" "synchronizationTime"], :type "object"}, :Synchronize {:description "Payload for the synchronizing the data.", :properties {:synchronizationMode {:description "Mode of synchronization used in triggers and snapshot sync. Incremental by default", :enum ["Incremental" "FullSync"], :type "string", :x-ms-enum {:modelAsString true, :name "synchronizationMode"}}}, :type "object"}, :ShareSynchronization {:description "A ShareSynchronization data transfer object.", :properties {:consumerEmail {:description "Email of the user who created the synchronization", :type "string"}, :startTime {:description "start time of synchronization", :format "date-time", :type "string"}, :endTime {:description "End time of synchronization", :format "date-time", :type "string"}, :synchronizationId {:description "Synchronization id", :type "string"}, :consumerTenantName {:description "Tenant name of the consumer who created the synchronization", :type "string"}, :status {:description "Raw Status", :type "string"}, :durationMs {:description "synchronization duration", :format "int32", :type "integer"}, :synchronizationMode {:description "Synchronization mode", :enum ["Incremental" "FullSync"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "synchronizationMode"}}, :consumerName {:description "Name of the user who created the synchronization", :type "string"}, :message {:description "message of synchronization", :type "string"}}, :type "object"}, :OperationList {:description "List response for get operations.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "OperationModel"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ScheduledSourceSynchronizationSetting {:allOf [#:reference{:definitions "SourceShareSynchronizationSetting"}], :description "A type of synchronization setting based on schedule", :properties {:properties #:reference{:definitions "ScheduledSourceShareSynchronizationSettingProperties"}}, :required ["kind"], :type "object", :x-ms-discriminator-value "ScheduleBased"}, :ADLSGen2FolderProperties {:description "Properties of the ADLS Gen2 folder data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :fileSystem {:description "File system to which the folder belongs.", :type "string"}, :folderPath {:description "Folder path within the file system.", :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["fileSystem" "folderPath" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :KustoDatabaseDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A Kusto database data set mapping", :properties {:properties #:reference{:definitions "KustoDatabaseDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "KustoDatabase"}, :ADLSGen2FileDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An ADLS Gen 2 file data set.", :properties {:properties #:reference{:definitions "ADLSGen2FileProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2File"}, :ConsumerSourceDataSetProperties {:description "Properties of consumer source dataSet", :properties {:dataSetId {:description "DataSet Id", :readOnly true, :type "string"}, :dataSetLocation {:description "Location of the data set.", :readOnly true, :type "string"}, :dataSetName {:description "DataSet name", :readOnly true, :type "string"}, :dataSetPath {:description "DataSet path", :readOnly true, :type "string"}, :dataSetType {:description "Type of data set", :enum ["Blob" "Container" "BlobFolder" "AdlsGen2FileSystem" "AdlsGen2Folder" "AdlsGen2File" "AdlsGen1Folder" "AdlsGen1File" "KustoCluster" "KustoDatabase" "SqlDBTable" "SqlDWTable"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetType"}}}, :type "object"}, :ConsumerInvitationList {:description "List response for get InvitationList", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ConsumerInvitation"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :InvitationList {:description "List response for get InvitationList", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "Invitation"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ScheduledSynchronizationSetting {:allOf [#:reference{:definitions "SynchronizationSetting"}], :description "A type of synchronization setting based on schedule", :properties {:properties #:reference{:definitions "ScheduledSynchronizationSettingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "ScheduleBased"}, :OperationMetaPropertyInfo {:description "properties on meta info", :properties {:serviceSpecification #:reference{:definitions "OperationMetaServiceSpecification"}}, :type "object"}, :DefaultDto {:description "Base data transfer object implementation for default resources.", :properties {:id {:description "The resource id of the azure resource", :readOnly true, :type "string"}, :location {:description "Location of the azure resource.", :type "string"}, :name {:description "Name of the azure resource", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Tags on the azure resource.", :type "object"}, :type {:description "Type of the azure resource", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :AccountList {:description "List response for get Accounts.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "Account"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ADLSGen2FileSystemDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An ADLS Gen 2 file system data set.", :properties {:properties #:reference{:definitions "ADLSGen2FileSystemProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2FileSystem"}, :BlobContainerDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An Azure storage blob container data set.", :properties {:properties #:reference{:definitions "BlobContainerProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "Container"}, :SqlDBTableProperties {:description "Properties of the SQL DB table data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :databaseName {:description "Database name of the source data set", :type "string"}, :schemaName {:description "Schema of the table. Default value is dbo.", :type "string"}, :sqlServerResourceId {:description "Resource id of SQL server", :type "string"}, :tableName {:description "SQL DB table name.", :type "string"}}, :required ["databaseName" "tableName" "schemaName" "sqlServerResourceId"], :type "object"}, :ConsumerInvitationProperties {:description "Properties of consumer invitation", :properties {:description {:description "Description shared when the invitation was created", :readOnly true, :type "string"}, :respondedAt {:description "The time the recipient responded to the invitation.", :format "date-time", :readOnly true, :type "string"}, :providerEmail {:description "Email of the provider who created the resource", :readOnly true, :type "string"}, :termsOfUse {:description "Terms of use shared when the invitation was created", :readOnly true, :type "string"}, :providerTenantName {:description "Tenant name of the provider who created the resource", :readOnly true, :type "string"}, :shareName {:description "Gets the source share Name.", :readOnly true, :type "string"}, :providerName {:description "Name of the provider who created the resource", :readOnly true, :type "string"}, :invitationId {:description "Unique id of the invitation.", :type "string"}, :sentAt {:description "Gets the time at which the invitation was sent.", :format "date-time", :readOnly true, :type "string"}, :dataSetCount {:description "Number of data sets in a share", :format "int32", :readOnly true, :type "integer"}, :invitationStatus {:description "The status of the invitation.", :enum ["Pending" "Accepted" "Rejected" "Withdrawn"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "invitationStatus"}}, :location {:description "invitation location", :readOnly true, :type "string"}, :userName {:description "Name of the user who created the resource", :readOnly true, :type "string"}, :userEmail {:description "Email of the user who created the resource", :readOnly true, :type "string"}}, :required ["invitationId"], :type "object"}, :BlobFolderDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An Azure storage blob folder data set.", :properties {:properties #:reference{:definitions "BlobFolderProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "BlobFolder"}, :OperationModel {:description "The response model for get operations", :properties {:display #:reference{:definitions "OperationModelProperties"}, :name {:description "Operation name for display purposes", :type "string"}, :origin {:description "origin of the operation", :type "string"}, :properties #:reference{:definitions "OperationMetaPropertyInfo"}}, :type "object"}, :ShareSynchronizationList {:description "List response for get ShareSynchronization.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ShareSynchronization"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ConsumerInvitation {:allOf [#:reference{:definitions "ProxyDto"}], :description "A consumer Invitation data transfer object.", :properties {:properties #:reference{:definitions "ConsumerInvitationProperties"}}, :required ["properties"], :type "object"}, :ADLSGen2FileDataSetMappingProperties {:description "ADLS Gen 2 file data set mapping property bag.", :properties {:storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :dataSetId {:description "The id of the source data set.", :type "string"}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :filePath {:description "File path within the file system.", :type "string"}, :fileSystem {:description "File system to which the file belongs.", :type "string"}, :outputType {:description "Type of output file", :enum ["Csv" "Parquet"], :type "string", :x-ms-enum {:modelAsString true, :name "outputType"}}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["fileSystem" "filePath" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :ProviderShareSubscription {:allOf [#:reference{:definitions "ProxyDto"}], :description "A provider side share subscription data transfer object.", :properties {:properties #:reference{:definitions "ProviderShareSubscriptionProperties"}}, :type "object"}, :DataSetMapping {:allOf [#:reference{:definitions "ProxyDto"}], :description "A data set mapping data transfer object.", :discriminator "kind", :properties {:kind {:description "Kind of data set mapping.", :enum ["Blob" "Container" "BlobFolder" "AdlsGen2FileSystem" "AdlsGen2Folder" "AdlsGen2File" "KustoCluster" "KustoDatabase" "SqlDBTable" "SqlDWTable"], :type "string", :x-ms-enum {:modelAsString true, :name "kind"}}}, :required ["kind"], :type "object"}, :SynchronizationDetailsList {:description "details of synchronization", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "SynchronizationDetails"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :KustoDatabaseDataSetProperties {:description "Properties of the kusto database data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :kustoDatabaseResourceId {:description "Resource id of the kusto database.", :type "string"}, :location {:description "Location of the kusto cluster.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the kusto database data set.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}}, :required ["kustoDatabaseResourceId"], :type "object"}, :OperationMetaLogSpecification {:description "log specifications for operation api", :properties {:blobDuration {:description "blob duration of the log", :type "string"}, :displayName {:description "localized name of the log category", :type "string"}, :name {:description "name of the log category", :type "string"}}, :type "object"}, :ConsumerSourceDataSetList {:description "A consumer side list of source dataSets", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ConsumerSourceDataSet"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :Trigger {:allOf [#:reference{:definitions "ProxyDto"}], :description "A Trigger data transfer object.", :discriminator "kind", :properties {:kind {:description "Kind of synchronization", :enum ["ScheduleBased"], :type "string", :x-ms-enum {:modelAsString true, :name "kind"}}}, :required ["kind"], :type "object"}, :ShareList {:description "List response for get Shares.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "Share"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :KustoClusterDataSetProperties {:description "Properties of the kusto cluster data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :kustoClusterResourceId {:description "Resource id of the kusto cluster.", :type "string"}, :location {:description "Location of the kusto cluster.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the kusto cluster data set.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}}, :required ["kustoClusterResourceId"], :type "object"}, :KustoClusterDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A Kusto cluster data set mapping", :properties {:properties #:reference{:definitions "KustoClusterDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "KustoCluster"}, :BlobContainerMappingProperties {:description "Azure storage Blob container data set mapping property bag.", :properties {:containerName {:description "BLOB Container name.", :type "string"}, :dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["containerName" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :ADLSGen2FileSystemDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "An ADLS Gen2 file system data set mapping.", :properties {:properties #:reference{:definitions "ADLSGen2FileSystemDataSetMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen2FileSystem"}, :ADLSGen1FolderDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "An ADLS Gen 1 folder data set.", :properties {:properties #:reference{:definitions "ADLSGen1FolderProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "AdlsGen1Folder"}, :ScheduledTriggerProperties {:description "A Scheduled trigger data transfer object.", :properties {:createdAt {:description "Time at which the trigger was created.", :format "date-time", :readOnly true, :type "string"}, :provisioningState {:description "Gets the provisioning state", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :recurrenceInterval {:description "Recurrence Interval", :enum ["Hour" "Day"], :type "string", :x-ms-enum {:modelAsString true, :name "recurrenceInterval"}}, :synchronizationMode {:description "Synchronization mode", :enum ["Incremental" "FullSync"], :type "string", :x-ms-enum {:modelAsString true, :name "synchronizationMode"}}, :synchronizationTime {:description "Synchronization time", :format "date-time", :type "string"}, :triggerStatus {:description "Gets the trigger state", :enum ["Active" "Inactive" "SourceSynchronizationSettingDeleted"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "triggerStatus"}}, :userName {:description "Name of the user who created the trigger.", :readOnly true, :type "string"}}, :required ["recurrenceInterval" "synchronizationTime"], :type "object"}, :BlobProperties {:description "Properties of the blob data set.", :properties {:containerName {:description "Container that has the file path.", :type "string"}, :dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :filePath {:description "File path within the source data set", :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["containerName" "filePath" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :SqlDWTableDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "A SQL DW table data set.", :properties {:properties #:reference{:definitions "SqlDWTableProperties"}}, :required ["kind"], :type "object", :x-ms-discriminator-value "SqlDWTable"}, :Account {:allOf [#:reference{:definitions "DefaultDto"}], :description "An account data transfer object.", :properties {:identity #:reference{:definitions "Identity"}, :properties #:reference{:definitions "AccountProperties"}}, :required ["identity"], :type "object"}, :ADLSGen2FileSystemProperties {:description "Properties of the ADLS Gen2 file system data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :fileSystem {:description "The file system name.", :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["fileSystem" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :ProxyDto {:description "Base data transfer object implementation for proxy resources.", :properties {:id {:description "The resource id of the azure resource", :readOnly true, :type "string"}, :name {:description "Name of the azure resource", :readOnly true, :type "string"}, :type {:description "Type of the azure resource", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :DimensionProperties {:description "properties for dimension", :properties {:displayName {:description "localized display name of the dimension to customer", :type "string"}, :name {:description "dimension name", :type "string"}}, :type "object"}, :ADLSGen2FileProperties {:description "Properties of the ADLS Gen2 file data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :filePath {:description "File path within the file system.", :type "string"}, :fileSystem {:description "File system to which the file belongs.", :type "string"}, :resourceGroup {:description "Resource group of storage account", :type "string"}, :storageAccountName {:description "Storage account name of the source data set", :type "string"}, :subscriptionId {:description "Subscription id of storage account", :type "string"}}, :required ["fileSystem" "filePath" "subscriptionId" "resourceGroup" "storageAccountName"], :type "object"}, :SqlDBTableDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "A SQL DB table data set.", :properties {:properties #:reference{:definitions "SqlDBTableProperties"}}, :required ["kind"], :type "object", :x-ms-discriminator-value "SqlDBTable"}, :KustoClusterDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "A kusto cluster data set.", :properties {:properties #:reference{:definitions "KustoClusterDataSetProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "KustoCluster"}, :ShareSubscription {:allOf [#:reference{:definitions "ProxyDto"}], :description "A share subscription data transfer object.", :properties {:properties #:reference{:definitions "ShareSubscriptionProperties"}}, :required ["properties"], :type "object"}, :AccountProperties {:description "Account property bag.", :properties {:createdAt {:description "Time at which the account was created.", :format "date-time", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the Account", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :userEmail {:description "Email of the user who created the resource", :readOnly true, :type "string"}, :userName {:description "Name of the user who created the resource", :readOnly true, :type "string"}}, :type "object"}, :ShareSubscriptionList {:description "List response for get ShareSubscription.", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "ShareSubscription"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :OperationMetaServiceSpecification {:description "The operation meta service specification", :properties {:logSpecifications {:description "log specifications for the operation", :items #:reference{:definitions "OperationMetaLogSpecification"}, :type "array", :uniqueItems false}, :metricSpecifications {:description "metric specifications for the operation", :items #:reference{:definitions "OperationMetaMetricSpecification"}, :type "array", :uniqueItems false}}, :type "object"}, :DataSetMappingList {:description "List response for get DataSetMappings", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "DataSetMapping"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :DataSetList {:description "List response for get DataSets", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "DataSet"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :OperationModelProperties {:description "Properties on operations", :properties {:description {:description "Description of the operation for display purposes", :type "string"}, :operation {:description "Name of the operation for display purposes", :type "string"}, :provider {:description "Name of the provider for display purposes", :type "string"}, :resource {:description "Name of the resource type for display purposes", :type "string"}}, :type "object"}, :SqlDWTableDataSetMappingProperties {:description "Properties of the SQL DW table data set mapping.", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :dataWarehouseName {:description "DataWarehouse name of the source data set", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :schemaName {:description "Schema of the table. Default value is dbo.", :type "string"}, :sqlServerResourceId {:description "Resource id of SQL server", :type "string"}, :tableName {:description "SQL DW table name.", :type "string"}}, :required ["dataWarehouseName" "tableName" "schemaName" "sqlServerResourceId" "dataSetId"], :type "object"}, :AccountUpdateParameters {:description "Update parameters for accounts", :properties {:tags {:additionalProperties {:type "string"}, :description "Tags on the azure resource.", :type "object"}}, :type "object"}, :KustoDatabaseDataSet {:allOf [#:reference{:definitions "DataSet"}], :description "A kusto database data set.", :properties {:properties #:reference{:definitions "KustoDatabaseDataSetProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "KustoDatabase"}, :SourceShareSynchronizationSettingList {:description "List response for get source share Synchronization settings", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "SourceShareSynchronizationSetting"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :ShareProperties {:description "Share property bag.", :properties {:createdAt {:description "Time at which the share was created.", :format "date-time", :readOnly true, :type "string"}, :description {:description "Share description.", :type "string"}, :provisioningState {:description "Gets or sets the provisioning state", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :shareKind {:description "Share kind.", :enum ["CopyBased" "InPlace"], :type "string", :x-ms-enum {:modelAsString true, :name "shareKind"}}, :terms {:description "Share terms.", :type "string"}, :userEmail {:description "Email of the user who created the resource", :readOnly true, :type "string"}, :userName {:description "Name of the user who created the resource", :readOnly true, :type "string"}}, :type "object"}, :ADLSGen2FolderDataSetMappingProperties {:description "ADLS Gen 2 folder data set mapping property bag.", :properties {:dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :fileSystem {:description "File system to which the folder belongs.", :type "string"}, :folderPath {:description "Folder path within the file system.", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["fileSystem" "folderPath" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :TriggerList {:description "List response for get triggers", :properties {:nextLink {:description "The Url of next result page.", :type "string"}, :value {:description "Collection of items of type DataTransferObjects.", :items #:reference{:definitions "Trigger"}, :type "array", :uniqueItems false}}, :required ["value"], :type "object"}, :OperationMetaMetricSpecification {:description "metric specifications for the operation", :properties {:displayDescription {:description "description of the metric", :type "string"}, :unit {:description "units for the metric", :type "string"}, :displayName {:description "localized name of the metric", :type "string"}, :name {:description "name of the metric", :type "string"}, :resourceIdDimensionNameOverride {:description "dimension name use to replace resource id if specified", :type "string"}, :dimensions {:description "properties for dimension", :items #:reference{:definitions "DimensionProperties"}, :type "array", :uniqueItems false}, :internalMetricName {:description "internal metric name", :type "string"}, :supportedAggregationTypes {:description "supported aggregation types", :items {:type "string"}, :type "array", :uniqueItems false}, :supportedTimeGrainTypes {:description "supported time grain types", :items {:type "string"}, :type "array", :uniqueItems false}, :aggregationType {:description "aggregation type of metric", :type "string"}, :enableRegionalMdmAccount {:description "enable regional mdm account", :type "string"}}, :type "object"}, :BlobContainerDataSetMapping {:allOf [#:reference{:definitions "DataSetMapping"}], :description "A Blob container data set mapping.", :properties {:properties #:reference{:definitions "BlobContainerMappingProperties"}}, :required ["properties" "kind"], :type "object", :x-ms-discriminator-value "Container"}, :BlobMappingProperties {:description "Azure storage Blob data set mapping property bag.", :properties {:storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :dataSetId {:description "The id of the source data set.", :type "string"}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :filePath {:description "File path within the source data set", :type "string"}, :outputType {:description "File output type", :enum ["Csv" "Parquet"], :type "string", :x-ms-enum {:modelAsString true, :name "outputType"}}, :containerName {:description "Container that has the file path.", :type "string"}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["containerName" "filePath" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :SynchronizationSetting {:allOf [#:reference{:definitions "ProxyDto"}], :description "A Synchronization Setting data transfer object.", :discriminator "kind", :properties {:kind {:description "Kind of synchronization", :enum ["ScheduleBased"], :type "string", :x-ms-enum {:modelAsString true, :name "kind"}}}, :required ["kind"], :type "object"}, :ProviderShareSubscriptionProperties {:description "Provider share subscription properties", :properties {:sharedAt {:description "Shared at", :format "date-time", :readOnly true, :type "string"}, :consumerEmail {:description "Email of the consumer who created the share subscription", :readOnly true, :type "string"}, :providerEmail {:description "Email of the provider who created the share", :readOnly true, :type "string"}, :shareSubscriptionStatus {:description "Gets the status of share subscription", :enum ["Active" "Revoked" "SourceDeleted" "Revoking"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "shareSubscriptionStatus"}}, :createdAt {:description "created at", :format "date-time", :readOnly true, :type "string"}, :providerName {:description "Name of the provider who created the share", :readOnly true, :type "string"}, :consumerTenantName {:description "Tenant name of the consumer who created the share subscription", :readOnly true, :type "string"}, :shareSubscriptionObjectId {:description "share Subscription Object Id", :readOnly true, :type "string"}, :consumerName {:description "Name of the consumer who created the share subscription", :readOnly true, :type "string"}}, :type "object"}, :DataShareError {:description "The data share error model.", :properties {:error #:reference{:definitions "DataShareErrorInfo"}}, :required ["error"], :type "object"}, :BlobFolderMappingProperties {:description "Azure storage Blob folder data set mapping property bag.", :properties {:containerName {:description "Container that has the file path.", :type "string"}, :dataSetId {:description "The id of the source data set.", :type "string"}, :dataSetMappingStatus {:description "Gets the status of the data set mapping.", :enum ["Ok" "Broken"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "dataSetMappingStatus"}}, :prefix {:description "Prefix for blob folder", :type "string"}, :provisioningState {:description "Provisioning state of the data set mapping.", :enum ["Succeeded" "Creating" "Deleting" "Moving" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "provisioningState"}}, :resourceGroup {:description "Resource group of storage account.", :type "string"}, :storageAccountName {:description "Storage account name of the source data set.", :type "string"}, :subscriptionId {:description "Subscription id of storage account.", :type "string"}}, :required ["containerName" "prefix" "subscriptionId" "resourceGroup" "storageAccountName" "dataSetId"], :type "object"}, :SqlDWTableProperties {:description "Properties of the SQL DW table data set.", :properties {:dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :dataWarehouseName {:description "DataWarehouse name of the source data set", :type "string"}, :schemaName {:description "Schema of the table. Default value is dbo.", :type "string"}, :sqlServerResourceId {:description "Resource id of SQL server", :type "string"}, :tableName {:description "SQL DW table name.", :type "string"}}, :required ["dataWarehouseName" "tableName" "schemaName" "sqlServerResourceId"], :type "object"}, :Share {:allOf [#:reference{:definitions "ProxyDto"}], :description "A share data transfer object.", :properties {:properties #:reference{:definitions "ShareProperties"}}, :type "object"}, :ShareSubscriptionSynchronization {:description "A ShareSubscriptionSynchronization data transfer object.", :properties {:durationMs {:description "Synchronization duration", :format "int32", :readOnly true, :type "integer"}, :endTime {:description "End time of synchronization", :format "date-time", :readOnly true, :type "string"}, :message {:description "message of Synchronization", :readOnly true, :type "string"}, :startTime {:description "start time of synchronization", :format "date-time", :readOnly true, :type "string"}, :status {:description "Raw Status", :readOnly true, :type "string"}, :synchronizationId {:description "Synchronization id", :type "string"}, :synchronizationMode {:description "Synchronization Mode", :enum ["Incremental" "FullSync"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "synchronizationMode"}}}, :required ["synchronizationId"], :type "object"}, :ADLSGen1FileProperties {:description "Properties of the ADLS Gen1 file data set.", :properties {:accountName {:description "The ADLS account name.", :type "string"}, :dataSetId {:description "Unique id for identifying a data set resource", :readOnly true, :type "string"}, :fileName {:description "The file name in the ADLS account.", :type "string"}, :folderPath {:description "The folder path within the ADLS account.", :type "string"}, :resourceGroup {:description "Resource group of ADLS account.", :type "string"}, :subscriptionId {:description "Subscription id of ADLS account.", :type "string"}}, :required ["subscriptionId" "resourceGroup" "accountName" "folderPath" "fileName"], :type "object"}}}