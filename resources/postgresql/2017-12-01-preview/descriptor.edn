{:scheme "https", :host "management.azure.com", :info {:description "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.", :title "PostgreSQLManagementClient", :version "2017-12-01-preview"}, :ops {:ServerSecurityAlertPolicies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}", :description "Creates or updates a threat detection policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the threat detection policy.", :enum ["Default"], :in "path", :name "securityAlertPolicyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "SecurityAlertPolicyName"}} {:description "The server security alert policy.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ServerSecurityAlertPolicy"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Configurations_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/configurations", :description "List all the configurations in a given server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :Databases_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases", :description "List all the databases in a given server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :Databases_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases/{databaseName}", :description "Deletes a database.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"}], :verb :delete}, :Servers_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/servers", :description "List all the servers in a given subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Servers_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers", :description "List all the servers in a given resource group.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"}], :verb :get}, :Servers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}", :description "Deletes a server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :delete}, :Servers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}", :description "Gets information about a server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :Servers_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}", :description "Creates a new server, or will overwrite an existing server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The required parameters for creating or updating a server.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ServerForCreate"}}], :verb :put}, :Replicas_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/Replicas", :description "List all the replicas for a given server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :LocationBasedPerformanceTier_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/performanceTiers", :description "List all the performance tiers at specified location in a given subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "LocationNameParameter"}], :verb :get}, :ServerAdministrators_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/Administrators/activeDirectory", :description "Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The required parameters for creating or updating an AAD server administrator.", :in "body", :name "properties", :required true, :schema #:reference{:definitions "ServerAdministratorResource"}}], :verb :put}, :ServerAdministrators_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/Administrators/activeDirectory", :description "Gets information about a AAD server administrator.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :Servers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}", :description "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The required parameters for updating a server.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ServerUpdateParameters"}}], :verb :patch}, :VirtualNetworkRules_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules", :description "Gets a list of virtual network rules in a server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LogFiles_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/logFiles", :description "List all the log files in a given server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :ServerSecurityAlertPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}", :description "Get a server's security alert policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} {:description "The name of the security alert policy.", :enum ["Default"], :in "path", :name "securityAlertPolicyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "SecurityAlertPolicyName"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases/{databaseName}", :description "Gets information about a database.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"}], :verb :get}, :FirewallRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules/{firewallRuleName}", :description "Deletes a server firewall rule.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "FirewallRuleNameParameter"}], :verb :delete}, :Configurations_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/configurations/{configurationName}", :description "Gets information about a configuration of server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "ConfigurationNameParameter"}], :verb :get}, :FirewallRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules/{firewallRuleName}", :description "Gets information about a server firewall rule.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "FirewallRuleNameParameter"}], :verb :get}, :VirtualNetworkRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Deletes the virtual network rule with the given name.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "virtualNetworkRuleNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :VirtualNetworkRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Gets a virtual network rule.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "virtualNetworkRuleNameParameter"}], :verb :get}, :ServerAdministrators_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators", :description "Returns a list of server Administrators.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :ServerAdministrators_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/Administrators/activeDirectory", :description "Deletes AAD Administrator.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :delete}, :Servers_Restart {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/restart", :description "Restarts a server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :post}, :FirewallRules_ListByServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules", :description "List all the firewall rules in a given server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"}], :verb :get}, :VirtualNetworkRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}", :description "Creates or updates an existing virtual network rule.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "virtualNetworkRuleNameParameter"} {:description "The requested virtual Network Rule Resource state.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "VirtualNetworkRule"}}], :verb :put}, :FirewallRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules/{firewallRuleName}", :description "Creates a new firewall rule or updates an existing firewall rule.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "FirewallRuleNameParameter"} {:description "The required parameters for creating or updating a firewall rule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "FirewallRule"}}], :verb :put}, :CheckNameAvailability_Execute {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability", :description "Check the availability of name for resource", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The required parameters for checking if resource name is available.", :in "body", :name "nameAvailabilityRequest", :required true, :schema #:reference{:definitions "NameAvailabilityRequest"}}], :verb :post}, :Configurations_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/configurations/{configurationName}", :description "Updates a configuration of a server.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "ConfigurationNameParameter"} {:description "The required parameters for updating a server configuration.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Configuration"}}], :verb :put}, :Operations_List {:path "/providers/Microsoft.DBforPostgreSQL/operations", :description "Lists all of the available REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Databases_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases/{databaseName}", :description "Creates a new database or updates an existing database.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The required parameters for creating or updating a database.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Database"}}], :verb :put}}, :parameters {:DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}, :LocationNameParameter {:description "The name of the location.", :in "path", :name "locationName", :required true, :type "string", :x-ms-parameter-location "method"}, :ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SecurityAlertPolicyNameParameter {:description "The name of the security alert policy.", :enum ["default"], :in "path", :name "securityAlertPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :ConfigurationNameParameter {:description "The name of the server configuration.", :in "path", :name "configurationName", :required true, :type "string", :x-ms-parameter-location "method"}, :FirewallRuleNameParameter {:description "The name of the server firewall rule.", :in "path", :name "firewallRuleName", :required true, :type "string", :x-ms-parameter-location "method"}, :virtualNetworkRuleNameParameter {:description "The name of the virtual network rule.", :in "path", :name "virtualNetworkRuleName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:FirewallRule {:allOf [#:reference{:definitions "ProxyResource"}], :description "Represents a server firewall rule.", :properties {:properties #:reference{:definitions "FirewallRuleProperties"}}, :required ["properties"]}, :PerformanceTierProperties {:description "Performance tier properties", :properties {:id {:description "ID of the performance tier.", :type "string"}, :serviceLevelObjectives {:description "Service level objectives associated with the performance tier", :items #:reference{:definitions "PerformanceTierServiceLevelObjectives"}, :type "array"}}}, :DatabaseProperties {:description "The properties of a database.", :properties {:charset {:description "The charset of the database.", :type "string"}, :collation {:description "The collation of the database.", :type "string"}}}, :ServerAdministratorResourceListResult {:description "The response to a list Active Directory Administrators request.", :properties {:value {:description "The list of server Active Directory Administrators for the server.", :items #:reference{:definitions "ServerAdministratorResource"}, :type "array"}}}, :OperationListResult {:description "A list of resource provider operations.", :properties {:value {:description "The list of resource provider operations.", :items #:reference{:definitions "Operation"}, :type "array"}}}, :Server {:allOf [#:reference{:definitions "TrackedResource"}], :description "Represents a server.", :properties {:identity #:reference{:definitions "ResourceIdentity"}, :properties #:reference{:definitions "ServerProperties"}, :sku #:reference{:definitions "Sku"}}}, :LogFileProperties {:description "The properties of a log file.", :properties {:createdTime {:description "Creation timestamp of the log file.", :format "date-time", :readOnly true, :type "string"}, :lastModifiedTime {:description "Last modified timestamp of the log file.", :format "date-time", :readOnly true, :type "string"}, :sizeInKB {:description "Size of the log file.", :format "int64", :type "integer"}, :type {:description "Type of the log file.", :type "string"}, :url {:description "The url to download the log file from.", :type "string"}}}, :Operation {:description "REST API operation definition.", :properties {:display #:reference{:definitions "OperationDisplay"}, :name {:description "The name of the operation being performed on this particular object.", :readOnly true, :type "string"}, :origin {:description "The intended executor of the operation.", :enum ["NotSpecified" "user" "system"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "OperationOrigin"}}, :properties {:additionalProperties {:type "object"}, :description "Additional descriptions for the operation.", :readOnly true, :type "object", :x-ms-client-flatten false}}}, :ServerAdministratorProperties {:description "The properties of an server Administrator.", :properties {:administratorType {:description "The type of administrator.", :enum ["ActiveDirectory"], :type "string", :x-ms-enum {:name "AdministratorType"}}, :login {:description "The server administrator login value.", :type "string"}, :sid {:description "The server administrator Sid (Secure ID).", :format "uuid", :type "string"}, :tenantId {:description "The server Active Directory Administrator tenant id.", :format "uuid", :type "string"}}, :required ["tenantId" "administratorType" "login" "sid"]}, :FirewallRuleListResult {:description "A list of firewall rules.", :properties {:value {:description "The list of firewall rules in a server.", :items #:reference{:definitions "FirewallRule"}, :type "array"}}}, :SslEnforcement {:description "Enable ssl enforcement or not when connect to server.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "SslEnforcementEnum"}}, :ServerPropertiesForDefaultCreate {:allOf [#:reference{:definitions "ServerPropertiesForCreate"}], :description "The properties used to create a new server.", :properties {:administratorLogin {:description "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).", :type "string"}, :administratorLoginPassword {:description "The password of the administrator login.", :format "password", :type "string"}}, :required ["administratorLogin" "administratorLoginPassword"], :x-ms-discriminator-value "Default"}, :VirtualNetworkRule {:allOf [#:reference{:definitions "ProxyResource"}], :description "A virtual network rule.", :properties {:properties #:reference{:definitions "VirtualNetworkRuleProperties"}}, :type "object"}, :PerformanceTierServiceLevelObjectives {:description "Service level objectives for performance tier.", :properties {:edition {:description "Edition of the performance tier.", :type "string"}, :hardwareGeneration {:description "Hardware generation associated with the service level objective", :type "string"}, :id {:description "ID for the service level objective.", :type "string"}, :maxBackupRetentionDays {:description "Maximum Backup retention in days for the performance tier edition", :type "integer"}, :maxStorageMB {:description "Max storage allowed for a server.", :format "int32", :type "integer"}, :minBackupRetentionDays {:description "Minimum Backup retention in days for the performance tier edition", :type "integer"}, :minStorageMB {:description "Max storage allowed for a server.", :format "int32", :type "integer"}, :vCore {:description "vCore associated with the service level objective", :type "integer"}}}, :TrackedResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "Resource properties including location and tags for track resources.", :properties {:location {:description "The location the resource resides in.", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Application-specific metadata in the form of key-value pairs.", :type "object"}}, :required ["location"]}, :Database {:allOf [#:reference{:definitions "ProxyResource"}], :description "Represents a Database.", :properties {:properties #:reference{:definitions "DatabaseProperties"}}}, :StorageProfile {:description "Storage Profile properties of a server", :properties {:backupRetentionDays {:description "Backup retention days for the server.", :type "integer"}, :geoRedundantBackup {:description "Enable Geo-redundant or not for server backup.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "GeoRedundantBackup"}}, :storageAutogrow {:description "Enable Storage Auto Grow.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "StorageAutogrow"}}, :storageMB {:description "Max storage allowed for a server.", :format "int32", :type "integer"}}}, :CloudError {:description "An error response from the Batch service.", :properties {:error #:reference{:definitions "CloudErrorBody"}}, :x-ms-external true}, :FirewallRuleProperties {:description "The properties of a server firewall rule.", :properties {:endIpAddress {:description "The end IP address of the server firewall rule. Must be IPv4 format.", :pattern "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", :type "string"}, :startIpAddress {:description "The start IP address of the server firewall rule. Must be IPv4 format.", :pattern "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", :type "string"}}, :required ["startIpAddress" "endIpAddress"]}, :ConfigurationProperties {:description "The properties of a configuration.", :properties {:allowedValues {:description "Allowed values of the configuration.", :readOnly true, :type "string"}, :dataType {:description "Data type of the configuration.", :readOnly true, :type "string"}, :defaultValue {:description "Default value of the configuration.", :readOnly true, :type "string"}, :description {:description "Description of the configuration.", :readOnly true, :type "string"}, :source {:description "Source of the configuration.", :type "string"}, :value {:description "Value of the configuration.", :type "string"}}}, :ServerPropertiesForRestore {:allOf [#:reference{:definitions "ServerPropertiesForCreate"}], :description "The properties used to create a new server by restoring from a backup.", :properties {:restorePointInTime {:description "Restore point creation time (ISO8601 format), specifying the time to restore from.", :format "date-time", :type "string"}, :sourceServerId {:description "The source server id to restore from.", :type "string"}}, :required ["sourceServerId" "restorePointInTime"], :x-ms-discriminator-value "PointInTimeRestore"}, :DatabaseListResult {:description "A List of databases.", :properties {:value {:description "The list of databases housed in a server", :items #:reference{:definitions "Database"}, :type "array"}}}, :ServerAdministratorResource {:allOf [#:reference{:definitions "ProxyResource"}], :description "Represents a and external administrator to be created.", :properties {:properties #:reference{:definitions "ServerAdministratorProperties"}}}, :ConfigurationListResult {:description "A list of server configurations.", :properties {:value {:description "The list of server configurations.", :items #:reference{:definitions "Configuration"}, :type "array"}}}, :ServerPropertiesForGeoRestore {:allOf [#:reference{:definitions "ServerPropertiesForCreate"}], :description "The properties used to create a new server by restoring to a different region from a geo replicated backup.", :properties {:sourceServerId {:description "The source server id to restore from.", :type "string"}}, :required ["sourceServerId"], :x-ms-discriminator-value "GeoRestore"}, :ServerUpdateParameters {:description "Parameters allowed to update for a server.", :properties {:properties {:description "The properties that can be updated for a server.", :properties {:administratorLoginPassword {:description "The password of the administrator login.", :format "password", :type "string"}, :replicationRole {:description "The replication role of the server.", :type "string"}, :sslEnforcement #:reference{:definitions "SslEnforcement"}, :storageProfile #:reference{:definitions "StorageProfile"}, :version #:reference{:definitions "ServerVersion"}}, :x-ms-client-flatten true}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Application-specific metadata in the form of key-value pairs.", :type "object"}}}, :VirtualNetworkRuleProperties {:description "Properties of a virtual network rule.", :properties {:ignoreMissingVnetServiceEndpoint {:description "Create firewall rule before the virtual network has vnet service endpoint enabled.", :type "boolean"}, :state {:description "Virtual Network Rule State", :enum ["Initializing" "InProgress" "Ready" "Deleting" "Unknown"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "VirtualNetworkRuleState"}}, :virtualNetworkSubnetId {:description "The ARM resource id of the virtual network subnet.", :type "string"}}, :required ["virtualNetworkSubnetId"], :type "object"}, :ServerProperties {:description "The properties of a server.", :properties {:sslEnforcement #:reference{:definitions "SslEnforcement"}, :replicationRole {:description "The replication role of the server.", :type "string"}, :masterServerId {:description "The master server id of a replica server.", :type "string"}, :storageProfile #:reference{:definitions "StorageProfile"}, :fullyQualifiedDomainName {:description "The fully qualified domain name of a server.", :type "string"}, :earliestRestoreDate {:description "Earliest restore point creation time (ISO8601 format)", :format "date-time", :type "string"}, :replicaCapacity {:description "The maximum number of replicas that a master server can have.", :format "int32", :minimum 0, :type "integer"}, :version #:reference{:definitions "ServerVersion"}, :userVisibleState {:description "A state of a server that is visible to user.", :enum ["Ready" "Dropping" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "ServerState"}}, :administratorLogin {:description "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).", :type "string"}}}, :ServerForCreate {:description "Represents a server to be created.", :properties {:location {:description "The location the resource resides in.", :type "string"}, :properties #:reference{:definitions "ServerPropertiesForCreate"}, :sku #:reference{:definitions "Sku"}, :tags {:additionalProperties {:type "string"}, :description "Application-specific metadata in the form of key-value pairs.", :type "object"}}, :required ["properties" "location"]}, :NameAvailabilityRequest {:description "Request from client to check resource name availability.", :properties {:name {:description "Resource name to verify.", :type "string"}, :type {:description "Resource type used for verification.", :type "string"}}, :required ["name"]}, :ServerPropertiesForCreate {:description "The properties used to create a new server.", :discriminator "createMode", :properties {:createMode {:description "The mode to create a new server.", :enum ["Default" "PointInTimeRestore" "GeoRestore" "Replica"], :type "string", :x-ms-enum {:modelAsString true, :name "CreateMode"}}, :sslEnforcement #:reference{:definitions "SslEnforcement"}, :storageProfile #:reference{:definitions "StorageProfile"}, :version #:reference{:definitions "ServerVersion"}}, :required ["createMode"]}, :ServerVersion {:description "The version of a server.", :enum ["9.5" "9.6" "10" "10.0" "10.2" "11"], :type "string", :x-ms-enum {:modelAsString true, :name "ServerVersion"}}, :ServerSecurityAlertPolicy {:allOf [#:reference{:definitions "ProxyResource"}], :description "A server security alert policy.", :properties {:properties #:reference{:definitions "SecurityAlertPolicyProperties"}}, :type "object"}, :OperationDisplay {:description "Display metadata associated with the operation.", :properties {:description {:description "Operation description.", :readOnly true, :type "string"}, :operation {:description "Localized friendly name for the operation.", :readOnly true, :type "string"}, :provider {:description "Operation resource provider name.", :readOnly true, :type "string"}, :resource {:description "Resource on which the operation is performed.", :readOnly true, :type "string"}}}, :VirtualNetworkRuleListResult {:description "A list of virtual network rules.", :properties {:nextLink {:description "Link to retrieve next page of results.", :readOnly true, :type "string"}, :value {:description "Array of results.", :items #:reference{:definitions "VirtualNetworkRule"}, :readOnly true, :type "array"}}, :type "object"}, :ServerPropertiesForReplica {:allOf [#:reference{:definitions "ServerPropertiesForCreate"}], :description "The properties to create a new replica.", :properties {:sourceServerId {:description "The master server id to create replica from.", :type "string"}}, :required ["sourceServerId"], :x-ms-discriminator-value "Replica"}, :Sku {:description "Billing information related properties of a server.", :properties {:capacity {:description "The scale up/out capacity, representing server's compute units.", :format "int32", :minimum 0, :type "integer"}, :family {:description "The family of hardware.", :type "string"}, :name {:description "The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.", :type "string"}, :size {:description "The size code, to be interpreted by resource as appropriate.", :type "string"}, :tier {:description "The tier of the particular SKU, e.g. Basic.", :enum ["Basic" "GeneralPurpose" "MemoryOptimized"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}}, :LogFileListResult {:description "A list of log files.", :properties {:value {:description "The list of log files.", :items #:reference{:definitions "LogFile"}, :type "array"}}}, :Configuration {:allOf [#:reference{:definitions "ProxyResource"}], :description "Represents a Configuration.", :properties {:properties #:reference{:definitions "ConfigurationProperties"}}}, :CloudErrorBody {:description "An error response from the Batch service.", :properties {:code {:description "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.", :type "string"}, :details {:description "A list of additional details about the error.", :items #:reference{:definitions "CloudErrorBody"}, :type "array"}, :message {:description "A message describing the error, intended to be suitable for display in a user interface.", :type "string"}, :target {:description "The target of the particular error. For example, the name of the property in error.", :type "string"}}, :x-ms-external true}, :ServerListResult {:description "A list of servers.", :properties {:value {:description "The list of servers", :items #:reference{:definitions "Server"}, :type "array"}}}, :SecurityAlertPolicyProperties {:description "Properties of a security alert policy.", :properties {:disabledAlerts {:description "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly", :items {:type "string"}, :type "array"}, :emailAccountAdmins {:description "Specifies that the alert is sent to the account administrators.", :type "boolean"}, :emailAddresses {:description "Specifies an array of e-mail addresses to which the alert is sent.", :items {:type "string"}, :type "array"}, :retentionDays {:description "Specifies the number of days to keep in the Threat Detection audit logs.", :format "int32", :type "integer"}, :state {:description "Specifies the state of the policy, whether it is enabled or disabled.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString false, :name "ServerSecurityAlertPolicyState"}}, :storageAccountAccessKey {:description "Specifies the identifier key of the Threat Detection audit storage account.", :type "string"}, :storageEndpoint {:description "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.", :type "string"}}, :required ["state"], :type "object"}, :NameAvailability {:description "Represents a resource name availability.", :properties {:message {:description "Error Message.", :type "string"}, :nameAvailable {:description "Indicates whether the resource name is available.", :type "boolean"}, :reason {:description "Reason for name being unavailable.", :type "string"}}}, :PerformanceTierListResult {:description "A list of performance tiers.", :properties {:value {:description "The list of performance tiers", :items #:reference{:definitions "PerformanceTierProperties"}, :type "array"}}}, :LogFile {:allOf [#:reference{:definitions "ProxyResource"}], :description "Represents a log file.", :properties {:name {:description "The name of the log file.", :type "string"}, :properties #:reference{:definitions "LogFileProperties"}}}, :ProxyResource {:description "Resource properties.", :properties {:id {:description "Resource ID", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :ResourceIdentity {:description "Azure Active Directory identity configuration for a resource.", :properties {:principalId {:description "The Azure Active Directory principal id.", :format "uuid", :readOnly true, :type "string"}, :tenantId {:description "The Azure Active Directory tenant id.", :format "uuid", :readOnly true, :type "string"}, :type {:description "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.", :enum ["SystemAssigned"], :type "string", :x-ms-enum {:modelAsString true, :name "IdentityType"}}}, :type "object"}}}