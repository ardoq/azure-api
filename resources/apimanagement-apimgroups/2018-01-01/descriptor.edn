{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group.", :title "ApiManagementClient", :version "2018-01-01"}, :ops {:Group_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Updates the details of the group specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GroupUpdateParameters"}} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :GroupUser_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}", :description "Remove existing user from existing group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "User identifier. Must be unique in the current API Management service instance.", :name "uid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 80, :required true, :in "path", :pattern "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :Group_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Deletes specific group of the API Management service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :GroupUser_CheckEntityExists {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}", :description "Checks that user entity specified by identifier is associated with the group entity.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "User identifier. Must be unique in the current API Management service instance.", :name "uid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 80, :required true, :in "path", :pattern "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :head}, :Group_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Creates or Updates a group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GroupCreateParameters"}} {:description "ETag of the Entity. Not required when creating an entity, but required when updating an entity.", :in "header", :name "If-Match", :required false, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :GroupUser_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}", :description "Adds a user to the specified group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "User identifier. Must be unique in the current API Management service instance.", :name "uid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 80, :required true, :in "path", :pattern "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}, :GroupUser_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users", :description "Lists a collection of the members of the group, specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Group_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups", :description "Lists a collection of groups defined within a service instance.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Group_GetEntityTag {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Gets the entity state (Etag) version of the group specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :head}, :Group_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Gets the details of the group specified by its identifier.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "GroupIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :get}}, :parameters {:GroupIdParameter {:description "Group identifier. Must be unique in the current API Management service instance.", :name "groupId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 80, :required true, :in "path", :pattern "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"}}, :definitions {:GroupCollection {:description "Paged Group list representation.", :properties {:nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "GroupContract"}, :type "array"}}}, :GroupContract {:allOf [{:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type for API Management resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Contract details.", :properties {:properties #:reference{:definitions "GroupContractProperties"}}}, :GroupContractProperties {:description "Group contract Properties.", :properties {:builtIn {:description "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.", :readOnly true, :type "boolean"}, :description {:description "Group description. Can contain HTML formatting tags.", :maxLength 1000, :type "string"}, :displayName {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :externalId {:description "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.", :type "string"}, :type {:description "Group type.", :enum ["custom" "system" "external"], :type "string", :x-ms-enum {:modelAsString false, :name "GroupType"}}}, :required ["displayName"]}, :GroupCreateParameters {:description "Parameters supplied to the Create Group operation.", :properties {:properties #:reference{:definitions "GroupCreateParametersProperties"}}}, :GroupCreateParametersProperties {:description "Parameters supplied to the Create Group operation.", :properties {:description {:description "Group description.", :type "string"}, :displayName {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :externalId {:description "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.", :type "string"}, :type {:description "Group type.", :enum ["custom" "system" "external"], :type "string", :x-ms-enum {:modelAsString false, :name "GroupType"}}}, :required ["displayName"]}, :GroupUpdateParameters {:description "Parameters supplied to the Update Group operation.", :properties {:properties #:reference{:definitions "GroupUpdateParametersProperties"}}}, :GroupUpdateParametersProperties {:description "Parameters supplied to the Update Group operation.", :properties {:description {:description "Group description.", :type "string"}, :displayName {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :externalId {:description "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory aad://<tenant>.onmicrosoft.com/groups/<group object id>; otherwise the value is null.", :type "string"}, :type {:description "Group type.", :enum ["custom" "system" "external"], :type "string", :x-ms-enum {:modelAsString false, :name "GroupType"}}}}}}