{:scheme "https", :host "management.azure.com", :info {:description "Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.", :title "FrontDoorManagementClient", :version "2019-04-01"}, :ops {:Endpoints_PurgeContent {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/purge", :description "Removes a content from Front Door.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.", :in "body", :name "contentFilePaths", :required true, :schema #:reference{:definitions "PurgeParameters"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :FrontDoors_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors", :description "Lists all of the Front Doors within a resource group under a subscription.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :FrontendEndpoints_ListByFrontDoor {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints", :description "Lists all of the frontend endpoints within a Front Door.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :FrontDoors_ValidateCustomDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/validateCustomDomain", :description "Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"} {:description "Custom domain to be validated.", :in "body", :name "customDomainProperties", :required true, :schema #:reference{:definitions "ValidateCustomDomainInput"}}], :verb :post}, :FrontendEndpoints_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}", :description "Gets a Frontend endpoint with the specified name within the specified Front Door.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} #:reference{:parameters "frontendEndpointNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :FrontendEndpoints_EnableHttps {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/enableHttps", :description "Enables a frontendEndpoint for HTTPS traffic", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} #:reference{:parameters "frontendEndpointNameParameter"} {:description "The configuration specifying how to enable HTTPS", :in "body", :name "customHttpsConfiguration", :required true, :schema #:reference{:definitions "CustomHttpsConfiguration"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :FrontendEndpoints_DisableHttps {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/disableHttps", :description "Disables a frontendEndpoint for HTTPS traffic", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} #:reference{:parameters "frontendEndpointNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :FrontDoors_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}", :description "Gets a Front Door with the specified Front Door name under the specified subscription and resource group.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :FrontDoors_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}", :description "Deletes an existing Front Door with the specified parameters.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :FrontDoors_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}", :description "Creates a new Front Door with a Front Door name under the specified subscription and resource group.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} #:reference{:parameters "resourceGroupNameParameter"} #:reference{:parameters "frontDoorNameParameter"} {:description "Front Door properties needed to create a new Front Door.", :in "body", :name "frontDoorParameters", :required true, :schema #:reference{:definitions "FrontDoor"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :put}, :CheckFrontDoorNameAvailability {:path "/providers/Microsoft.Network/checkFrontDoorNameAvailability", :description "Check the availability of a Front Door resource name.", :parameters [{:description "Input to check.", :in "body", :name "checkFrontDoorNameAvailabilityInput", :required true, :schema #:reference{:definitions "CheckNameAvailabilityInput"}} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}, :FrontDoors_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoors", :description "Lists all of the Front Doors within an Azure subscription.", :parameters [{:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :CheckFrontDoorNameAvailabilityWithSubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability", :description "Check the availability of a Front Door subdomain.", :parameters [{:description "Input to check.", :in "body", :name "checkFrontDoorNameAvailabilityInput", :required true, :schema #:reference{:definitions "CheckNameAvailabilityInput"}} {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}], :verb :post}}, :parameters {:backendPoolNameParameter {:description "Name of the Backend Pool which is unique within the Front Door.", :x-previous-pattern "^[-\\w\\d\\._]+$", :name "backendPoolName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"}, :frontDoorNameParameter {:description "Name of the Front Door which is globally unique.", :name "frontDoorName", :type "string", :minLength 5, :x-new-pattern "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$", :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"}, :frontendEndpointNameParameter {:description "Name of the Frontend endpoint which is unique within the Front Door.", :x-previous-pattern "^[-\\w\\d\\._]+$", :name "frontendEndpointName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 255, :required true, :in "path", :pattern "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"}, :healthProbeSettingsNameParameter {:description "Name of the health probe settings which is unique within the Front Door.", :x-previous-pattern "^[-\\w\\d\\._]+$", :name "healthProbeSettingsName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"}, :loadBalancingSettingsNameParameter {:description "Name of the load balancing settings which is unique within the Front Door.", :x-previous-pattern "^[-\\w\\d\\._]+$", :name "loadBalancingSettingsName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"}, :resourceGroupNameParameter {:description "Name of the Resource group within the Azure subscription.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 80, :required true, :in "path", :pattern "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$"}, :routingRuleNameParameter {:description "Name of the Routing Rule which is unique within the Front Door.", :x-previous-pattern "^[-\\w\\d\\._]+$", :name "routingRuleName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"}}, :definitions {:ResourceState {:enum ["Creating" "Enabling" "Enabled" "Disabling" "Disabled" "Deleting"], :readOnly true, :title "Resource status of the Front Door or Front Door SubResource.", :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorResourceState"}}, :RoutingRuleListResult {:description "Result of the request to list Routing Rules. It contains a list of Routing Rule objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of RoutingRule objects if there are any.", :type "string"}, :value {:description "List of Routing Rules within a Front Door.", :items #:reference{:definitions "RoutingRule"}, :readOnly true, :type "array"}}}, :ResourceType {:description "Type of Front Door resource used in CheckNameAvailability.", :enum ["Microsoft.Network/frontDoors" "Microsoft.Network/frontDoors/frontendEndpoints"], :type "string", :x-ms-enum {:modelAsString false, :name "ResourceType"}}, :RoutingRule {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.", :properties {:name {:description "Resource name.", :type "string"}, :properties #:reference{:definitions "RoutingRuleProperties"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :BackendPoolUpdateParameters {:description "A collection of backends that can be routed to.", :properties {:backends {:description "The set of backends for this pool", :items #:reference{:definitions "Backend"}, :type "array"}, :healthProbeSettings {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :loadBalancingSettings {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}}, :type "object"}, :HealthProbeSettingsProperties {:allOf [#:reference{:definitions "HealthProbeSettingsUpdateParameters"}], :description "The JSON object that contains the properties required to create a health probe settings.", :properties {:resourceState #:reference{:definitions "ResourceState"}}}, :ValidateCustomDomainInput {:description "Input of the custom domain to be validated for DNS mapping.", :properties {:hostName {:description "The host name of the custom domain. Must be a domain name.", :type "string"}}, :required ["hostName"], :type "object"}, :KeyVaultCertificateSourceParameters {:description "Parameters required for bring-your-own-certification via Key Vault", :properties {:secretName {:description "The name of the Key Vault secret representing the full certificate PFX", :type "string"}, :secretVersion {:description "The version of the Key Vault secret representing the full certificate PFX", :type "string"}, :vault {:description "The Key Vault containing the SSL certificate", :properties {:id {:description "Resource ID.", :type "string"}}, :type "object"}}, :type "object"}, :ValidateCustomDomainOutput {:description "Output of custom domain validation.", :properties {:customDomainValidated {:description "Indicates whether the custom domain is valid or not.", :readOnly true, :type "boolean"}, :message {:description "Error message describing why the custom domain is not valid.", :readOnly true, :type "string"}, :reason {:description "The reason why the custom domain is not valid.", :readOnly true, :type "string"}}, :type "object"}, :BackendPool {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "A backend pool is a collection of backends that can be routed to.", :properties {:name {:description "Resource name.", :type "string"}, :properties #:reference{:definitions "BackendPoolProperties"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :CheckNameAvailabilityInput {:description "Input of CheckNameAvailability API.", :properties {:name {:description "The resource name to validate.", :type "string"}, :type #:reference{:definitions "ResourceType"}}, :required ["name" "type"], :type "object"}, :PurgeParameters {:description "Parameters required for content purge.", :properties {:contentPaths {:description "The path to the content to be purged. Can describe a file path or a wild card directory.", :items {:type "string"}, :type "array"}}, :required ["contentPaths"], :type "object"}, :LoadBalancingSettingsListResult {:description "Result of the request to list load balancing settings. It contains a list of load balancing settings objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of LoadBalancingSettings objects if there are any.", :type "string"}, :value {:description "List of Backend Pools within a Front Door.", :items #:reference{:definitions "LoadBalancingSettingsModel"}, :readOnly true, :type "array"}}}, :FrontDoorListResult {:description "Result of the request to list Front Doors. It contains a list of Front Door objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of Front Door objects if there are any.", :type "string"}, :value {:description "List of Front Doors within a resource group.", :items #:reference{:definitions "FrontDoor"}, :readOnly true, :type "array"}}}, :FrontendEndpoint {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "A frontend endpoint used for routing.", :properties {:name {:description "Resource name.", :type "string"}, :properties #:reference{:definitions "FrontendEndpointProperties"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :FrontendEndpointUpdateParameters {:description "Frontend endpoint used in routing rule", :properties {:hostName {:description "The host name of the frontendEndpoint. Must be a domain name.", :type "string"}, :sessionAffinityEnabledState {:description "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "SessionAffinityEnabledState"}}, :sessionAffinityTtlSeconds {:description "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.", :type "integer"}, :webApplicationFirewallPolicyLink {:description "Defines the Web Application Firewall policy for each host (if applicable)", :properties {:id {:description "Resource ID.", :type "string"}}, :type "object"}}, :type "object"}, :FrontDoorProperties {:allOf [#:reference{:definitions "FrontDoorUpdateParameters"}], :description "The JSON object that contains the properties required to create an endpoint.", :properties {:cname {:description "The host that each frontendEndpoint must CNAME to.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the Front Door.", :readOnly true, :type "string"}, :resourceState #:reference{:definitions "ResourceState"}}}, :Backend {:description "Backend address of a frontDoor load balancer.", :properties {:address {:description "Location of the backend (IP address or FQDN)", :type "string"}, :backendHostHeader {:description "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.", :type "string"}, :enabledState {:description "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "backendEnabledState"}}, :httpPort {:description "The HTTP TCP port number. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :httpsPort {:description "The HTTPS TCP port number. Must be between 1 and 65535.", :exclusiveMaximum false, :exclusiveMinimum false, :maximum 65535, :minimum 1, :type "integer"}, :priority {:description "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.", :maximum 5, :minimum 1, :type "integer"}, :weight {:description "Weight of this endpoint for load balancing purposes.", :maximum 1000, :minimum 1, :type "integer"}}, :type "object"}, :BackendPoolProperties {:allOf [#:reference{:definitions "BackendPoolUpdateParameters"}], :description "The JSON object that contains the properties required to create a routing rule.", :properties {:resourceState #:reference{:definitions "ResourceState"}}}, :BackendPoolListResult {:description "Result of the request to list Backend Pools. It contains a list of Backend Pools objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of BackendPool objects if there are any.", :type "string"}, :value {:description "List of Backend Pools within a Front Door.", :items #:reference{:definitions "BackendPool"}, :readOnly true, :type "array"}}}, :FrontDoor {:allOf [{:description "Common resource representation.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.", :properties {:properties #:reference{:definitions "FrontDoorProperties"}}}, :RoutingRuleUpdateParameters {:description "Routing rules to apply to an endpoint", :properties {:acceptedProtocols {:description "Protocol schemes to match for this rule", :items {:description "Accepted protocol schemes.", :enum ["Http" "Https"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorProtocol"}}, :type "array"}, :enabledState {:description "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "routingRuleEnabledState"}}, :frontendEndpoints {:description "Frontend endpoints associated with this rule", :items {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :type "array"}, :patternsToMatch {:description "The route patterns of the rule.", :items {:description "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.", :type "string"}, :type "array"}, :routeConfiguration #:reference{:definitions "RouteConfiguration"}}, :type "object"}, :CacheConfiguration {:description "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.", :properties {:dynamicCompression {:description "Whether to use dynamic compression for cached content", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "DynamicCompressionEnabled"}}, :queryParameterStripDirective {:description "Treatment of URL query terms when forming the cache key.", :enum ["StripNone" "StripAll"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorQuery"}}}, :type "object"}, :CheckNameAvailabilityOutput {:description "Output of check name availability API.", :properties {:message {:description "The detailed error message describing why the name is not available.", :readOnly true, :type "string"}, :nameAvailability {:description "Indicates whether the name is available.", :enum ["Available" "Unavailable"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "Availability"}}, :reason {:description "The reason why the name is not available.", :readOnly true, :type "string"}}, :type "object"}, :RouteConfiguration {:description "Base class for all types of Route.", :discriminator "@odata.type", :properties {"@odata.type" {:type "string"}}, :required ["@odata.type"]}, :BackendPoolsSettings {:description "Settings that apply to all backend pools.", :properties {:enforceCertificateNameCheck {:default "Enabled", :description "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "enforceCertificateNameCheckEnabledState"}}}, :type "object"}, :LoadBalancingSettingsProperties {:allOf [#:reference{:definitions "LoadBalancingSettingsUpdateParameters"}], :description "The JSON object that contains the properties required to create load balancing settings", :properties {:resourceState #:reference{:definitions "ResourceState"}}}, :FrontDoorCertificateSourceParameters {:description "Parameters required for enabling SSL with Front Door-managed certificates", :properties {:certificateType {:description "Defines the type of the certificate used for secure connections to a frontendEndpoint", :enum ["Dedicated"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorCertificateType"}}}, :type "object"}, :LoadBalancingSettingsModel {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Load balancing settings for a backend pool", :properties {:name {:description "Resource name.", :type "string"}, :properties #:reference{:definitions "LoadBalancingSettingsProperties"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :ErrorResponse {:description "Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.", :properties {:code {:description "Error code.", :readOnly true, :type "string"}, :message {:description "Error message indicating why the operation failed.", :readOnly true, :type "string"}}, :type "object"}, :HealthProbeSettingsUpdateParameters {:description "L7 health probe settings for a backend pool", :properties {:intervalInSeconds {:description "The number of seconds between health probes.", :type "integer"}, :path {:description "The path to use for the health probe. Default is /", :type "string"}, :protocol {:description "Protocol scheme to use for this probe", :enum ["Http" "Https"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorProtocol"}}}, :type "object"}, :HealthProbeSettingsModel {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Load balancing settings for a backend pool", :properties {:name {:description "Resource name.", :type "string"}, :properties #:reference{:definitions "HealthProbeSettingsProperties"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :RoutingRuleProperties {:allOf [#:reference{:definitions "RoutingRuleUpdateParameters"}], :description "The JSON object that contains the properties required to create a routing rule.", :properties {:resourceState #:reference{:definitions "ResourceState"}}}, :ForwardingConfiguration {:allOf [#:reference{:definitions "RouteConfiguration"}], :description "Describes Forwarding Route.", :properties {:backendPool {:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}, :cacheConfiguration #:reference{:definitions "CacheConfiguration"}, :customForwardingPath {:description "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.", :type "string"}, :forwardingProtocol {:description "Protocol this rule will use when forwarding traffic to backends.", :enum ["HttpOnly" "HttpsOnly" "MatchRequest"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorForwardingProtocol"}}}, :x-ms-discriminator-value "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"}, :HealthProbeSettingsListResult {:description "Result of the request to list HealthProbeSettings. It contains a list of HealthProbeSettings objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of HealthProbeSettings objects if there are any.", :type "string"}, :value {:description "List of HealthProbeSettings within a Front Door.", :items #:reference{:definitions "HealthProbeSettingsModel"}, :readOnly true, :type "array"}}}, :FrontendEndpointProperties {:allOf [#:reference{:definitions "FrontendEndpointUpdateParameters"}], :description "The JSON object that contains the properties required to create a frontend endpoint.", :properties {:customHttpsConfiguration #:reference{:definitions "CustomHttpsConfiguration"}, :customHttpsProvisioningState {:description "Provisioning status of Custom Https of the frontendEndpoint.", :enum ["Enabling" "Enabled" "Disabling" "Disabled" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CustomHttpsProvisioningState"}}, :customHttpsProvisioningSubstate {:description "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.", :enum ["SubmittingDomainControlValidationRequest" "PendingDomainControlValidationREquestApproval" "DomainControlValidationRequestApproved" "DomainControlValidationRequestRejected" "DomainControlValidationRequestTimedOut" "IssuingCertificate" "DeployingCertificate" "CertificateDeployed" "DeletingCertificate" "CertificateDeleted"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "CustomHttpsProvisioningSubstate"}}, :resourceState #:reference{:definitions "ResourceState"}}}, :RedirectConfiguration {:allOf [#:reference{:definitions "RouteConfiguration"}], :description "Describes Redirect Route.", :properties {:customFragment {:description "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.", :type "string"}, :customHost {:description "Host to redirect. Leave empty to use the incoming host as the destination host.", :type "string"}, :customPath {:description "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.", :type "string"}, :customQueryString {:description "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.", :type "string"}, :redirectProtocol {:description "The protocol of the destination to where the traffic is redirected", :enum ["HttpOnly" "HttpsOnly" "MatchRequest"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorRedirectProtocol"}}, :redirectType {:description "The redirect type the rule will use when redirecting traffic.", :enum ["Moved" "Found" "TemporaryRedirect" "PermanentRedirect"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorRedirectType"}}}, :x-ms-discriminator-value "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration"}, :LoadBalancingSettingsUpdateParameters {:description "Round-Robin load balancing settings for a backend pool", :properties {:additionalLatencyMilliseconds {:description "The additional latency in milliseconds for probes to fall into the lowest latency bucket", :type "integer"}, :sampleSize {:description "The number of samples to consider for load balancing decisions", :type "integer"}, :successfulSamplesRequired {:description "The number of samples within the sample period that must succeed", :type "integer"}}, :type "object"}, :CustomHttpsConfiguration {:description "Https settings for a domain", :properties {:certificateSource {:description "Defines the source of the SSL certificate", :enum ["AzureKeyVault" "FrontDoor"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorCertificateSource"}}, :frontDoorCertificateSourceParameters #:reference{:definitions "FrontDoorCertificateSourceParameters"}, :keyVaultCertificateSourceParameters #:reference{:definitions "KeyVaultCertificateSourceParameters"}, :protocolType {:description "Defines the TLS extension protocol that is used for secure delivery", :enum ["ServerNameIndication"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorTlsProtocolType"}}}, :type "object"}, :FrontendEndpointsListResult {:description "Result of the request to list frontend endpoints. It contains a list of Frontend endpoint objects and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of frontend endpoints if there are any.", :type "string"}, :value {:description "List of Frontend endpoints within a Front Door.", :items #:reference{:definitions "FrontendEndpoint"}, :readOnly true, :type "array"}}}, :FrontDoorUpdateParameters {:description "The properties needed to update a Front Door", :properties {:backendPools {:description "Backend pools available to routing rules.", :items #:reference{:definitions "BackendPool"}, :type "array"}, :backendPoolsSettings #:reference{:definitions "BackendPoolsSettings"}, :enabledState {:description "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'", :enum ["Enabled" "Disabled"], :type "string", :x-ms-enum {:modelAsString true, :name "FrontDoorEnabledState"}}, :friendlyName {:description "A friendly name for the frontDoor", :type "string"}, :frontendEndpoints {:description "Frontend endpoints available to routing rules.", :items #:reference{:definitions "FrontendEndpoint"}, :type "array"}, :healthProbeSettings {:description "Health probe settings associated with this Front Door instance.", :items #:reference{:definitions "HealthProbeSettingsModel"}, :type "array"}, :loadBalancingSettings {:description "Load balancing settings associated with this Front Door instance.", :items #:reference{:definitions "LoadBalancingSettingsModel"}, :type "array"}, :routingRules {:description "Routing rules associated with this Front Door.", :items #:reference{:definitions "RoutingRule"}, :type "array"}}}}}