{:scheme "https", :host "management.azure.com", :info {:description "The Azure BatchAI Management API.", :title "BatchAI", :version "2017-09-01-preview"}, :ops {:Jobs_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/jobs", :description "Gets information about the jobs associated with the subscription.", :parameters [#:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Jobs_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}", :description "Adds a Job that gets executed on a cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} {:description "The parameters to provide for job creation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "JobCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Clusters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}", :description "Gets information about the specified Cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ClusterNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Jobs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}", :description "Gets information about the specified Batch AI job.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Clusters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}", :description "Deletes a Cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ClusterNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Jobs_ListOutputFiles {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/listOutputFiles", :description "List all files inside the given output directory (Only if the output directory is on Azure File Share or Azure Storage container).", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} #:reference{:parameters "OutputDirectoryIdParameter"} #:reference{:parameters "DownloadLinkExpiryParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Clusters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}", :description "Update the properties of a given cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ClusterNameParameter"} {:description "Additional parameters for cluster update.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ClusterUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Clusters_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/clusters", :description "Gets information about the Clusters associated with the subscription.", :parameters [#:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :FileServers_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers", :description "Gets a formatted list of file servers and their properties associated within the specified resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :FileServers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}", :description "Delete a file Server.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FileServerNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Jobs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}", :description "Deletes the specified Batch AI job.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :FileServers_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/fileServers", :description "To list all the file servers available under the given subscription (and across all resource groups within that subscription)", :parameters [#:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Clusters_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters", :description "Gets information about the Clusters associated within the specified resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Clusters_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}", :description "Adds a cluster. A cluster is a collection of compute nodes. Multiple jobs can be run on the same cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ClusterNameParameter"} {:description "The parameters to provide for cluster creation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ClusterCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Jobs_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs", :description "Gets information about the Batch AI jobs associated within the specified resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FilterParameter"} #:reference{:parameters "SelectParameter"} #:reference{:parameters "MaxResultsParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :FileServers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}", :description "Gets information about the specified Cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FileServerNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Clusters_ListRemoteLoginInformation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/clusters/{clusterName}/listRemoteLoginInformation", :description "Get the IP address, port of all the compute nodes in the cluster.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ClusterNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Jobs_ListRemoteLoginInformation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/listRemoteLoginInformation", :description "Gets the IP address and port information of all the compute nodes which are used for job execution.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.BatchAI/operations", :description "Lists available operations for the Microsoft.BatchAI provider.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :FileServers_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/fileServers/{fileServerName}", :description "Creates a file server.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "FileServerNameParameter"} {:description "The parameters to provide for file server creation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "FileServerCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Jobs_Terminate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/terminate", :description "Terminates a job.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "JobNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}}, :parameters {:SubscriptionIdParameter {:description "The subscriptionID for the Azure user.", :in "path", :name "subscriptionId", :required true, :type "string"}, :DownloadLinkExpiryParameter {:description "The number of minutes after which the download link will expire.", :format "int32", :default 60, :name "linkexpiryinminutes", :maximum 600, :type "integer", :x-ms-parameter-location "method", :minimum 5, :x-ms-parameter-grouping {:postfix "Options"}, :required false, :in "query"}, :OutputDirectoryIdParameter {:description "Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job.", :in "query", :name "outputdirectoryid", :required true, :type "string", :x-ms-parameter-grouping {:postfix "Options"}, :x-ms-parameter-location "method"}, :ApiVersionParameter {:description "Specifies the version of API used for this request.", :in "query", :name "api-version", :required true, :type "string"}, :ClusterNameParameter {:description "The name of the cluster within the specified resource group. Cluster names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.", :name "clusterName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[-\\w\\._]+$"}, :JobNameParameter {:description "The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.", :name "jobName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[-\\w\\._]+$"}, :ResourceGroupNameParameter {:description "Name of the resource group to which the resource belongs.", :in "path", :name "resourceGroupName", :pattern "^[-\\w\\._]+$", :required true, :type "string", :x-ms-parameter-location "method"}, :FilterParameter {:description "An OData $filter clause. Used to filter results that are returned in the GET response.", :in "query", :name "$filter", :required false, :type "string", :x-ms-parameter-grouping {:postfix "Options"}, :x-ms-parameter-location "method"}, :SelectParameter {:description "An OData $select clause. Used to select the properties to be returned in the GET response.", :in "query", :name "$select", :required false, :type "string", :x-ms-parameter-grouping {:postfix "Options"}, :x-ms-parameter-location "method"}, :FileServerNameParameter {:description "The name of the file server within the specified resource group. File server names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.", :name "fileServerName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 64, :required true, :in "path", :pattern "^[-\\w\\._]+$"}, :MaxResultsParameter {:description "The maximum number of items to return in the response. A maximum of 1000 files can be returned.", :format "int32", :default 1000, :name "maxresults", :maximum 1000, :x-ms-client-name "maxResults", :type "integer", :x-ms-parameter-location "method", :minimum 1, :x-ms-parameter-grouping {:postfix "Options"}, :required false, :in "query"}}, :definitions {:ImageReference {:description "The image reference.", :properties {:offer {:title "Offer of the image.", :type "string"}, :publisher {:title "Publisher of the image.", :type "string"}, :sku {:title "SKU of the image.", :type "string"}, :version {:title "Version of the image", :type "string"}}, :required ["publisher" "offer" "sku"]}, :NameValuePair {:description "Represents a name-value pair.", :properties {:name {:title "The name in the name-value pair.", :type "string"}, :value {:title "The value in the name-value pair.", :type "string"}}}, :OutputDirectory {:description "Output directory for the job.", :properties {:createNew {:default true, :description "Default is true. If false, then the directory is not created and can be any directory path that the user specifies.", :title "True to create new directory.", :type "boolean"}, :id {:description "It will be available for the job as an environment variable under AZ_BATCHAI_OUTPUT_id.", :title "The name for the output directory.", :type "string"}, :pathPrefix {:description "NOTE: This is an absolute path to prefix. E.g. $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs.", :title "The prefix path where the output directory will be created.", :type "string"}, :pathSuffix {:description "The suffix path where the output directory will be created.", :title "The suffix path where the output directory will be created.", :type "string"}, :type {:default "custom", :description "Default value is Custom. The possible values are Model, Logs, Summary, and Custom. Users can use multiple enums for a single directory. Eg. outPutType='Model,Logs, Summary'", :enum ["model" "logs" "summary" "custom"], :title "An enumeration, which specifies the type of job output directory.", :type "string", :x-ms-enum {:modelAsString true, :name "OutputType"}}}, :required ["id" "pathPrefix"]}, :MountSettings {:description "Details of the File Server.", :properties {:fileServerInternalIP {:title "Internal subnet IP which can be used to access the file Server from within the subnet.", :type "string"}, :fileServerPublicIP {:title "Public IP of the File Server VM.", :type "string"}, :fileServerType {:enum ["nfs" "glusterfs"], :title "Type of the fileserver e.g. nfs, glusterfs etc.", :type "string", :x-ms-enum {:modelAsString true, :name "FileServerType"}}, :mountPoint {:title "Path where the NFS is mounted on the Server.", :type "string"}}}, :MountVolumes {:description "Details of volumes to mount on the cluster.", :properties {:azureBlobFileSystems {:description "References to Azure Blob FUSE that are to be mounted to the cluster nodes.", :items #:reference{:definitions "AzureBlobFileSystemReference"}, :title "Azure Blob FileSystem setup configuration.", :type "array"}, :azureFileShares {:description "References to Azure File Shares that are to be mounted to the cluster nodes.", :items #:reference{:definitions "AzureFileShareReference"}, :title "Azure File Share setup configuration.", :type "array"}, :fileServers {:items #:reference{:definitions "FileServerReference"}, :title "References to a list of file servers that are mounted to the cluster node.", :type "array"}, :unmanagedFileSystems {:items #:reference{:definitions "UnmanagedFileSystemReference"}, :title "References to a list of file servers that are mounted to the cluster node.", :type "array"}}}, :FileServerBaseProperties {:description "The properties of a file server.", :properties {:dataDisks #:reference{:definitions "DataDisks"}, :sshConfiguration #:reference{:definitions "SshConfiguration"}, :subnet #:reference{:definitions "ResourceId"}, :vmSize {:description "For information about available VM sizes for fileservers from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).", :title "The size of the virtual machine of the file server.", :type "string"}}, :required ["vmSize" "sshConfiguration" "dataDisks"]}, :OperationListResult {:description "Contains the list of all operations supported by BatchAI resource provider", :properties {:nextLink {:title "The URL to get the next set of operation list results if there are any.", :type "string"}, :value {:items #:reference{:definitions "Operation"}, :title "The list of operations supported by the resource provider.", :type "array"}}, :title "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results."}, :NodeStateCounts {:description "Counts of various compute node states on the cluster.", :properties {:idleNodeCount {:format "int32", :title "Number of compute nodes in idle state.", :type "integer"}, :leavingNodeCount {:format "int32", :title "Number of compute nodes which are leaving the cluster.", :type "integer"}, :preparingNodeCount {:format "int32", :title "Number of compute nodes which are being prepared.", :type "integer"}, :runningNodeCount {:format "int32", :title "Number of compute nodes which are running jobs.", :type "integer"}, :unusableNodeCount {:format "int32", :title "Number of compute nodes which are unusable.", :type "integer"}}, :required ["idleNodeCount" "runningNodeCount" "preparingNodeCount" "unusableNodeCount" "leavingNodeCount"]}, :JobListResult {:description "Values returned by the List operation.", :properties {:nextLink {:description "The continuation token.", :type "string"}, :value {:description "The collection of jobs.", :items #:reference{:definitions "Job"}, :type "array"}}}, :ClusterUpdateParameters {:description "Parameters supplied to the Update operation.", :properties {:properties #:reference{:definitions "ClusterUpdateProperties"}, :tags {:additionalProperties {:type "string"}, :description "The user specified tags associated with the Cluster.", :type "object"}}}, :RemoteLoginInformation {:description "Contains remote login details to SSH/RDP to a compute node in cluster.", :properties {:ipAddress {:description "ip address", :type "string"}, :nodeId {:description "Id of the compute node", :type "string"}, :port {:format "int32", :title "port number", :type "number"}}, :required ["nodeId" "ipAddress" "port"]}, :FileServerReference {:description "Provides required information, for the service to be able to mount Azure FileShare on the cluster nodes.", :properties {:fileServer #:reference{:definitions "ResourceId"}, :mountOptions {:title "Specifies the mount options for File Server.", :type "string"}, :relativeMountPath {:description "Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.", :title "Specifies the relative path on the compute node where the File Server will be mounted.", :type "string"}, :sourceDirectory {:description "If this property is not specified, the entire File Server will be mounted.", :title "Specifies the source directory in File Server that needs to be mounted.", :type "string"}}, :required ["fileServer" "relativeMountPath"]}, :AzureStorageCredentialsInfo {:description "Credentials to access Azure File Share.", :properties {:accountKey {:description "One of accountKey or accountKeySecretReference must be specified.", :title "Storage account key.", :type "string"}, :accountKeySecretReference #:reference{:definitions "KeyVaultSecretReference"}}}, :Operation {:description "Details of a REST API operation", :properties {:display {:description "The object that describes the operation.", :properties {:description {:title "The friendly name of the operation", :type "string"}, :operation {:description "For example: read, write, delete, or listKeys/action", :title "The operation type.", :type "string"}, :provider {:title "Friendly name of the resource provider.", :type "string"}, :resource {:title "The resource type on which the operation is performed.", :type "string"}}}, :name {:description "This is of the format {provider}/{resource}/{operation}", :title "The operation name.", :type "string"}, :origin {:title "The intended executor of the operation.", :type "string"}, :properties {:title "Properties of the operation.", :type "object", :x-ms-client-flatten true}}, :title "A REST API operation", :type "object"}, :CustomToolkitSettings {:description "Specifies the settings for a custom tool kit job.", :properties {:commandLine {:title "The command line to execute the custom toolkit Job.", :type "string"}}}, :ChainerSettings {:description "Specifies the settings for Chainer job.", :properties {:commandLineArgs {:title "Command line arguments that needs to be passed to the python script", :type "string"}, :processCount {:description "The default value for this property is equal to nodeCount property", :format "int32", :title "Number of processes parameter that is passed to MPI runtime.", :type "integer"}, :pythonInterpreterPath {:title "The path to python interpreter.", :type "string"}, :pythonScriptFilePath {:title "The path and file name of the python script to execute the job.", :type "string"}}, :required ["pythonScriptFilePath"]}, :InputDirectory {:description "Input directory for the job.", :properties {:id {:description "It will be available for the job as an environment variable under AZ_BATCHAI_INPUT_id. The service will also provide the following  environment variable: AZ_BATCHAI_PREV_OUTPUT_Name. The value of the variable will be populated if the job is being retried after a previous failure, otherwise it will be set to nothing.", :title "The id for the input directory.", :type "string"}, :path {:title "The path to the input directory.", :type "string"}}, :required ["id" "path"]}, :DataDisks {:description "Settings for the data disk which would be created for the File Server.", :properties {:cachingType {:default "none", :enum ["none" "readonly" "readwrite"], :readOnly true, :title "None, ReadOnly, ReadWrite. Default value is None. This property is not patchable.", :type "string", :x-ms-enum {:modelAsString false, :name "CachingType"}}, :diskCount {:format "int32", :readOnly false, :title "Number of data disks to be attached to the VM. RAID level 0 will be applied in the case of multiple disks.", :type "integer"}, :diskSizeInGB {:format "int32", :readOnly false, :title "Initial disk size in GB for blank data disks, and the new desired size for resizing existing data disks.", :type "integer"}, :storageAccountType {:enum ["Standard_LRS" "Premium_LRS"], :readOnly false, :title "Specifies the type of storage account to be used on the disk. Possible values are: Standard_LRS or Premium_LRS.", :type "string", :x-ms-enum {:modelAsString true, :name "StorageAccountType"}}}, :required ["diskSizeInGB" "diskCount" "storageAccountType"]}, :ScaleSettings {:description "At least one of manual or autoScale settings must be specified. Only one of manual or autoScale settings can be specified. If autoScale settings are specified, the system automatically scales the cluster up and down (within the supplied limits) based on the pending jobs on the cluster.", :properties {:autoScale #:reference{:definitions "AutoScaleSettings"}, :manual #:reference{:definitions "ManualScaleSettings"}}}, :ContainerSettings {:description "Settings for the container to be downloaded.", :properties {:imageSourceRegistry #:reference{:definitions "ImageSourceRegistry"}}, :required ["imageSourceRegistry"]}, :ResourceId {:description "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.", :properties {:id {:description "The ID of the resource", :type "string"}}, :required ["id"], :x-ms-azure-resource true}, :FileServerListResult {:description "Values returned by the List operation.", :properties {:nextLink {:description "The continuation token.", :type "string"}, :value {:description "The collection of File Servers.", :items #:reference{:definitions "FileServer"}, :type "array"}}}, :SetupTask {:description "Specifies a setup task which can be used to customize the compute nodes of the cluster.", :properties {:commandLine {:title "Command Line to start Setup process.", :type "string"}, :environmentVariables {:items #:reference{:definitions "EnvironmentSetting"}, :title "Collection of environment settings.", :type "array"}, :runElevated {:default false, :title "Specifies whether to run the setup task in elevated mode. The default value is false.", :type "boolean"}, :stdOutErrPathPrefix {:description "The path where the Batch AI service will upload the stdout and stderror of setup task.", :type "string"}}, :required ["commandLine" "stdOutErrPathPrefix"]}, :KeyVaultKeyReference {:description "Describes a reference to Key Vault Key.", :properties {:keyUrl {:title "The URL referencing a key in a Key Vault.", :type "string"}, :sourceVault #:reference{:definitions "ResourceId"}}, :required ["sourceVault" "keyUrl"]}, :KeyVaultSecretReference {:description "Describes a reference to Key Vault Secret.", :properties {:secretUrl {:title "The URL referencing a secret in a Key Vault.", :type "string"}, :sourceVault #:reference{:definitions "ResourceId"}}, :required ["sourceVault" "secretUrl"]}, :JobCreateParameters {:description "Parameters supplied to the Create operation.", :properties {:location {:description "The region in which to create the job.", :type "string"}, :properties #:reference{:definitions "JobBaseProperties"}, :tags {:additionalProperties {:type "string"}, :description "The user specified tags associated with the job.", :type "object"}}, :required ["location"]}, :File {:description "Properties of the file.", :properties {:downloadUrl {:description "This will be returned only if the model has been archived. During job run, this won't be returned and customers can use SSH tunneling to download. Users can use Get Remote Login Information API to get the IP address and port information of all the compute nodes running the job.", :title "file download url, example: https://mystg.blob.core.windows.net/mycontainer/myModel_1.dnn", :type "string"}, :name {:description "file name", :type "string"}, :properties #:reference{:definitions "FileProperties"}}, :required ["name" "downloadUrl"]}, :PrivateRegistryCredentials {:description "Credentials to access a container image in a private repository.", :properties {:password {:description "One of password or passwordSecretReference must be specified.", :title "Password to login.", :type "string"}, :passwordSecretReference #:reference{:definitions "KeyVaultSecretReference"}, :username {:title "User name to login.", :type "string"}}, :required ["username"]}, :ImageSourceRegistry {:description "Details of the container image such as name, URL and credentials.", :properties {:credentials #:reference{:definitions "PrivateRegistryCredentials"}, :image {:title "The name of the image in image repository.", :type "string"}, :serverUrl {:title "URL for image repository.", :type "string"}}, :required ["image"]}, :CloudError {:description "An error response from the Batch AI service.", :properties {:error #:reference{:definitions "CloudErrorBody"}}, :x-ms-external true}, :AzureFileShareReference {:description "Details of the Azure File Share to mount on the cluster.", :properties {:accountName {:title "Name of the storage account.", :type "string"}, :azureFileUrl {:title "URL to access the Azure File.", :type "string"}, :credentials #:reference{:definitions "AzureStorageCredentialsInfo"}, :directoryMode {:default "0777", :description "Default value is 0777. Valid only if OS is linux.", :title "Specifies the directory Mode.", :type "string"}, :fileMode {:default "0777", :description "Default value is 0777. Valid only if OS is linux.", :title "Specifies the file mode.", :type "string"}, :relativeMountPath {:description "Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.", :title "Specifies the relative path on the compute node where the Azure file share will be mounted.", :type "string"}}, :required ["accountName" "azureFileUrl" "credentials" "relativeMountPath"]}, :ManualScaleSettings {:description "Manual scale settings for the cluster.", :properties {:nodeDeallocationOption #:reference{:definitions "DeallocationOption"}, :targetNodeCount {:default 0, :description "Default is 0. If autoScaleSettings are not specified, then the Cluster starts with this target.", :format "int32", :title "The desired number of compute nodes in the Cluster.", :type "integer"}}, :required ["targetNodeCount"]}, :ToolType {:description "The toolkit type of this job.", :enum ["cntk" "tensorflow" "caffe" "caffe2" "chainer" "custom"], :type "string", :x-ms-enum {:modelAsString true, :name "ToolType"}}, :ClusterListResult {:description "Values returned by the List Clusters operation.", :properties {:nextLink {:description "The continuation token.", :type "string"}, :value {:description "The collection of returned Clusters.", :items #:reference{:definitions "Cluster"}, :type "array"}}}, :CNTKsettings {:description "Specifies the settings for CNTK (aka Microsoft Cognitive Toolkit) job.", :properties {:commandLineArgs {:title "Command line arguments that needs to be passed to the python script or CNTK.exe.", :type "string"}, :configFilePath {:description "This property can be specified only if the languageType is 'BrainScript'.", :title "Specifies the path of the config file.", :type "string"}, :languageType {:description "Valid values are 'BrainScript' or 'Python'.", :title "Specifies the language type to use for launching CNTK (aka Microsoft Cognitive Toolkit) job.", :type "string"}, :processCount {:description "The default value for this property is equal to nodeCount property", :format "int32", :title "Number of processes parameter that is passed to MPI runtime.", :type "integer"}, :pythonInterpreterPath {:description "This property can be specified only if the languageType is 'Python'.", :title "The path to python interpreter.", :type "string"}, :pythonScriptFilePath {:description "This property can be specified only if the languageType is 'Python'.", :title "The path and file name of the python script to execute the job.", :type "string"}}}, :Job {:allOf [#:reference{:definitions "Resource"}], :description "Contains information about the job.", :properties {:properties #:reference{:definitions "JobProperties"}}}, :EnvironmentSetting {:description "A collection of environment variables to set.", :properties {:name {:title "The name of the environment variable.", :type "string"}, :value {:title "The value of the environment variable.", :type "string"}}, :required ["name"]}, :AzureBlobFileSystemReference {:description "Provides required information, for the service to be able to mount Azure Blob Storage container on the cluster nodes.", :properties {:accountName {:title "Name of the Azure Blob Storage account.", :type "string"}, :containerName {:title "Name of the Azure Blob Storage container to mount on the cluster.", :type "string"}, :credentials #:reference{:definitions "AzureStorageCredentialsInfo"}, :mountOptions {:title "Specifies the various mount options that can be used to configure Blob file system.", :type "string"}, :relativeMountPath {:description "Note that all blob file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.", :title "Specifies the relative path on the compute node where the Azure Blob file system will be mounted.", :type "string"}}, :required ["accountName" "containerName" "credentials" "relativeMountPath"]}, :BatchAIError {:description "An error response from the Batch AI service.", :properties {:code {:description "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.", :type "string"}, :details {:description "A list of additional details about the error.", :items #:reference{:definitions "NameValuePair"}, :type "array"}, :message {:description "A message describing the error, intended to be suitable for display in a user interface.", :type "string"}}}, :UserAccountSettings {:description "Settings for user account that gets created on each on the nodes of a cluster.", :properties {:adminUserName {:title "Specifies the name of the administrator account.", :type "string"}, :adminUserPassword {:title "Admin user Password (linux only). This does not get returned in a GET response body.", :type "string"}, :adminUserSshPublicKey {:title "SSH public keys used to authenticate with linux based VMs. This does not get returned in a GET response body.", :type "string"}}, :required ["adminUserName"]}, :Caffe2Settings {:description "Specifies the settings for Caffe2 job.", :properties {:commandLineArgs {:title "Command line arguments that needs to be passed to the python script", :type "string"}, :pythonInterpreterPath {:title "The path to python interpreter.", :type "string"}, :pythonScriptFilePath {:title "The path and file name of the python script to execute the job.", :type "string"}}, :required ["pythonScriptFilePath"]}, :FileListResult {:description "Values returned by the List operation.", :properties {:nextLink {:description "The continuation token.", :type "string"}, :value {:description "The collection of returned job files.", :items #:reference{:definitions "File"}, :readOnly true, :type "array"}}}, :AutoScaleSettings {:description "The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the pending and running jobs on the cluster.", :properties {:initialNodeCount {:default 0, :format "int32", :title "Specifies the number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation.", :type "integer"}, :maximumNodeCount {:format "int32", :title "Specifies the maximum number of compute nodes the cluster can have.", :type "integer"}, :minimumNodeCount {:format "int32", :title "Specifies the minimum number of compute nodes the cluster can have.", :type "integer"}}, :required ["minimumNodeCount" "maximumNodeCount"]}, :FileServerProperties {:description "File server specific properties.", :properties {:creationTime {:format "date-time", :readOnly true, :title "Time when the FileServer was created.", :type "string"}, :dataDisks #:reference{:definitions "DataDisks"}, :mountSettings #:reference{:definitions "MountSettings"}, :provisioningState {:description "Possible values: creating - The File Server is getting created. updating - The File Server creation has been accepted and it is getting updated. deleting - The user has requested that the File Server be deleted, and it is in the process of being deleted. failed - The File Server creation has failed with the specified errorCode. Details about the error code are specified in the message field. succeeded - The File Server creation has succeeded.", :enum ["creating" "updating" "deleting" "succeeded" "failed"], :readOnly true, :title "Specifies the provisioning state of the File Server.", :type "string", :x-ms-enum {:modelAsString false, :name "FileServerProvisioningState"}, :x-nullable false}, :provisioningStateTransitionTime {:format "date-time", :readOnly true, :title "Time when the status was changed.", :type "string"}, :sshConfiguration #:reference{:definitions "SshConfiguration"}, :subnet #:reference{:definitions "ResourceId"}, :vmSize {:description "For information about available VM sizes for File Server from the Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux).", :title "The size of the virtual machine of the File Server.", :type "string"}}}, :DeallocationOption {:default "requeue", :description "Possible values are: requeue - Terminate running jobs and requeue them. The jobs will run again. Remove compute nodes as soon as jobs have been terminated. terminate - Terminate running jobs. The jobs will not run again. Remove compute nodes as soon as jobs have been terminated. jobcompletion - Allow currently running jobs to complete. Schedule no new jobs while waiting. Remove compute nodes when all jobs have completed. The default value is requeue.", :enum ["requeue" "terminate" "waitforjobcompletion" "unknown"], :title "Specifies when compute nodes may be removed from the cluster, if the cluster size is decreasing.", :type "string", :x-ms-enum {:modelAsString false, :name "DeallocationOption"}}, :UnmanagedFileSystemReference {:description "Details of the file system to mount on the compute cluster nodes.", :properties {:mountCommand {:title "Command used to mount the unmanaged file system.", :type "string"}, :relativeMountPath {:description "Note that all file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location.", :title "Specifies the relative path on the compute cluster node where the file system will be mounted.", :type "string"}}, :required ["mountCommand" "relativeMountPath"]}, :RemoteLoginInformationListResult {:description "Values returned by the List operation.", :properties {:nextLink {:description "The continuation token.", :type "string"}, :value {:description "The collection of returned remote login details.", :items #:reference{:definitions "RemoteLoginInformation"}, :type "array"}}}, :Cluster {:allOf [#:reference{:definitions "Resource"}], :description "Contains information about a Cluster.", :properties {:properties #:reference{:definitions "ClusterProperties"}}}, :LocalDataVolume {:description "Represents mapping of host directories to directories in the container.", :properties {:hostPath {:title "The path on the host that is to be mounted as a directory in the container.", :type "string"}, :localPath {:title "The container local path where the host directory is mounted.", :type "string"}}, :required ["hostPath" "localPath"]}, :JobBaseProperties {:description "The properties of a Batch AI job.", :properties {:constraints {:description "Constraints associated with the Job.", :properties {:maxWallClockTime {:default "7.00:00:00", :description "Default Value = 1 week.", :format "duration", :title "Max time the job can run.", :type "string"}}}, :caffeSettings #:reference{:definitions "CaffeSettings"}, :experimentName {:description "Describe the experiment information of the job", :type "string"}, :cluster #:reference{:definitions "ResourceId"}, :chainerSettings #:reference{:definitions "ChainerSettings"}, :environmentVariables {:description "Batch AI service sets the following environment variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id, AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs, following additional environment variables are set by the Batch AI Service: AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS", :items #:reference{:definitions "EnvironmentSetting"}, :title "Additional environment variables to set on the job.", :type "array"}, :stdOutErrPathPrefix {:description "The path where the Batch AI service will upload stdout and stderror of the job.", :type "string"}, :caffe2Settings #:reference{:definitions "Caffe2Settings"}, :tensorFlowSettings #:reference{:definitions "TensorFlowSettings"}, :customToolkitSettings #:reference{:definitions "CustomToolkitSettings"}, :outputDirectories {:items #:reference{:definitions "OutputDirectory"}, :title "Specifies the list of output directories where the models will be created. .", :type "array"}, :priority {:default 0, :description "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.", :format "int32", :title "Priority associated with the job.", :type "integer"}, :cntkSettings #:reference{:definitions "CNTKsettings"}, :nodeCount {:description "The job will be gang scheduled on that many compute nodes", :format "int32", :title "Number of compute nodes to run the job on.", :type "integer"}, :jobPreparation #:reference{:definitions "JobPreparation"}, :containerSettings #:reference{:definitions "ContainerSettings"}, :inputDirectories {:items #:reference{:definitions "InputDirectory"}, :title "Specifies the list of input directories for the Job.", :type "array"}}, :required ["cluster" "nodeCount" "stdOutErrPathPrefix"]}, :ClusterCreateParameters {:description "Parameters supplied to the Create operation.", :properties {:location {:description "The region in which to create the cluster.", :type "string"}, :properties #:reference{:definitions "ClusterBaseProperties"}, :tags {:additionalProperties {:type "string"}, :description "The user specified tags associated with the Cluster.", :type "object"}}, :required ["location"]}, :FileServer {:allOf [#:reference{:definitions "Resource"}], :description "Contains information about the File Server.", :properties {:properties #:reference{:definitions "FileServerProperties"}}}, :SshConfiguration {:description "SSH configuration settings for the VM", :properties {:publicIPsToAllow {:description "Default value is '*' can be used to match all source IPs. Maximum number of publicIPs that can be specified are 400.", :items {:type "string"}, :title "List of source IP ranges to allow SSH connection to VM.", :type "array"}, :userAccountSettings #:reference{:definitions "UserAccountSettings"}}, :required ["userAccountSettings"]}, :Resource {:description "A definition of an Azure resource.", :properties {:id {:description "The ID of the resource", :readOnly true, :type "string"}, :location {:description "The location of the resource", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The tags of the resource", :readOnly true, :type "object"}, :type {:description "The type of the resource", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :TensorFlowSettings {:description "Specifies the settings for TensorFlow job.", :properties {:masterCommandLineArgs {:title "Specifies the command line arguments for the master task.", :type "string"}, :parameterServerCommandLineArgs {:description "This property is optional for single machine training.", :title "Specifies the command line arguments for the parameter server task.", :type "string"}, :parameterServerCount {:description "If specified, the value must be less than or equal to nodeCount. If not specified, the default value is equal to 1 for distributed TensorFlow training (This property is not applicable for single machine training). This property can be specified only for distributed TensorFlow training.", :format "int32", :title "The number of parameter server tasks.", :type "integer"}, :pythonInterpreterPath {:title "The path to python interpreter.", :type "string"}, :pythonScriptFilePath {:title "The path and file name of the python script to execute the job.", :type "string"}, :workerCommandLineArgs {:description "This property is optional for single machine training.", :title "Specifies the command line arguments for the worker task.", :type "string"}, :workerCount {:description "If specified, the value must be less than or equal to (nodeCount * numberOfGPUs per VM). If not specified, the default value is equal to nodeCount. This property can be specified only for distributed TensorFlow training", :format "int32", :title "The number of worker tasks.", :type "integer"}}, :required ["pythonScriptFilePath" "masterCommandLineArgs"]}, :FileServerCreateParameters {:description "Parameters supplied to the Create operation.", :properties {:location {:description "The region in which to create the File Server.", :type "string"}, :properties #:reference{:definitions "FileServerBaseProperties"}, :tags {:additionalProperties {:type "string"}, :description "The user specified tags associated with the File Server.", :type "object"}}, :required ["location"]}, :CaffeSettings {:description "Specifies the settings for Caffe job.", :properties {:commandLineArgs {:title "Command line arguments that needs to be passed to the Caffe job.", :type "string"}, :configFilePath {:description "This property cannot be specified if pythonScriptFilePath is specified.", :title "Specifies the path of the config file.", :type "string"}, :processCount {:description "The default value for this property is equal to nodeCount property", :format "int32", :title "Number of processes parameter that is passed to MPI runtime.", :type "integer"}, :pythonInterpreterPath {:description "This property can be specified only if the pythonScriptFilePath is specified.", :title "The path to python interpreter.", :type "string"}, :pythonScriptFilePath {:description "This property cannot be specified if configFilePath is specified.", :title "The path and file name of the python script to execute the job.", :type "string"}}}, :FileProperties {:description "File specific properties.", :properties {:contentLength {:description "The file size.", :format "int64", :title "The file size.", :type "integer"}, :lastModified {:description "The time at which the file was last modified.", :format "date-time", :title "The time at which the file was last modified.", :type "string"}}}, :ClusterBaseProperties {:description "The properties of a Cluster.", :properties {:nodeSetup #:reference{:definitions "NodeSetup"}, :scaleSettings #:reference{:definitions "ScaleSettings"}, :subnet #:reference{:definitions "ResourceId"}, :userAccountSettings #:reference{:definitions "UserAccountSettings"}, :virtualMachineConfiguration #:reference{:definitions "VirtualMachineConfiguration"}, :vmPriority {:default "dedicated", :description "Default is dedicated.", :enum ["dedicated" "lowpriority"], :title "dedicated or lowpriority.", :type "string", :x-ms-enum {:modelAsString false, :name "VmPriority"}}, :vmSize {:description "All virtual machines in a cluster are the same size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or Sizes for Virtual Machines (Windows). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).", :title "The size of the virtual machines in the cluster.", :type "string"}}, :required ["vmSize" "userAccountSettings"]}, :CloudErrorBody {:description "An error response from the Batch AI service.", :properties {:code {:description "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.", :type "string"}, :details {:description "A list of additional details about the error.", :items #:reference{:definitions "CloudErrorBody"}, :type "array"}, :message {:description "A message describing the error, intended to be suitable for display in a user interface.", :type "string"}, :target {:description "The target of the particular error. For example, the name of the property in error.", :type "string"}}, :x-ms-external true}, :ClusterProperties {:description "Job specific properties.", :properties {:creationTime {:format "date-time", :readOnly true, :title "The creation time of the cluster.", :type "string"}, :currentNodeCount {:format "int32", :readOnly true, :title "The number of compute nodes currently assigned to the cluster.", :type "integer"}, :errors {:description "This element contains all the errors encountered by various compute nodes during node setup.", :items #:reference{:definitions "BatchAIError"}, :title "Contains details of various errors on the cluster including resize and node setup task", :type "array"}, :allocationState {:description "Possible values are: steady and resizing. steady state indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing state indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster.", :enum ["steady" "resizing"], :readOnly true, :title "Indicates whether the cluster is resizing.", :type "string", :x-ms-enum {:modelAsString false, :name "AllocationState"}}, :scaleSettings #:reference{:definitions "ScaleSettings"}, :virtualMachineConfiguration #:reference{:definitions "VirtualMachineConfiguration"}, :provisioningState {:description "Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted.", :enum ["creating" "succeeded" "failed" "deleting"], :readOnly true, :title "Specifies the provisioning state of the cluster.", :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}, :x-nullable false}, :nodeSetup #:reference{:definitions "NodeSetup"}, :userAccountSettings #:reference{:definitions "UserAccountSettings"}, :provisioningStateTransitionTime {:format "date-time", :readOnly true, :title "The provisioning state transition time of the cluster.", :type "string"}, :allocationStateTransitionTime {:format "date-time", :readOnly true, :title "The time at which the cluster entered its current allocation state.", :type "string"}, :vmPriority {:default "dedicated", :description "The default value is dedicated. The node can get preempted while the task is running if lowpriority is chosen. This is best suited if the workload is checkpointing and can be restarted.", :enum ["dedicated" "lowpriority"], :title "dedicated or lowpriority.", :type "string", :x-ms-enum {:modelAsString false, :name "VmPriority"}}, :vmSize {:description "All virtual machines in a cluster are the same size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or Sizes for Virtual Machines (Windows). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).", :title "The size of the virtual machines in the cluster.", :type "string"}, :subnet #:reference{:definitions "ResourceId"}, :nodeStateCounts #:reference{:definitions "NodeStateCounts"}}}, :JobPreparation {:description "Specifies the settings for job preparation.", :properties {:commandLine {:description "If containerSettings is specified on the job, this commandLine will be executed in the same container as job. Otherwise it will be executed on the node.", :title "The command line to execute.", :type "string"}}, :required ["commandLine"]}, :ClusterUpdateProperties {:description "The properties of a Cluster that need to be updated.", :properties {:scaleSettings #:reference{:definitions "ScaleSettings"}}}, :JobProperties {:description "Job specific properties.", :properties {:creationTime {:description "The creation time of the job.", :format "date-time", :readOnly true, :title "The job creation time.", :type "string"}, :constraints {:description "Constraints associated with the Job.", :properties {:maxWallClockTime {:default "7.00:00:00", :description "Default Value = 1 week.", :format "duration", :title "Max time the job can run.", :type "string"}}}, :caffeSettings #:reference{:definitions "CaffeSettings"}, :executionInfo {:description "Contains information about the execution of a job in the Azure Batch service.", :properties {:endTime {:description "This property is only returned if the job is in completed state.", :format "date-time", :title "The time at which the job completed.", :type "string"}, :errors {:items #:reference{:definitions "BatchAIError"}, :title "Contains details of various errors encountered by the service during job execution", :type "array"}, :exitCode {:description "This property is only returned if the job is in completed state.", :format "int32", :title "The exit code of the job.", :type "integer"}, :startTime {:description "'Running' corresponds to the running state. If the job has been restarted or retried, this is the most recent time at which the job started running. This property is present only for job that are in the running or completed state.", :format "date-time", :title "The time at which the job started running.", :type "string"}}, :required ["startTime"]}, :experimentName {:description "Describe the experiment information of the job", :type "string"}, :provisioningState {:description "The provisioned state of the Batch AI job", :enum ["creating" "deleting" "succeeded" "failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}, :x-nullable false}, :cluster #:reference{:definitions "ResourceId"}, :chainerSettings #:reference{:definitions "ChainerSettings"}, :executionStateTransitionTime {:description "The time at which the job entered its current execution state.", :format "date-time", :readOnly true, :title "The time at which the job entered its current execution state.", :type "string"}, :environmentVariables {:description "Batch AI services sets the following environment variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id, AZ_BATCHAI_NUM_GPUS_PER_NODE, For distributed TensorFlow jobs, following additional environment variables are set by the Batch AI Service: AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS.", :items #:reference{:definitions "EnvironmentSetting"}, :title "Additional environment variables to be passed to the job.", :type "array"}, :stdOutErrPathPrefix {:description "The path where the Batch AI service will upload stdout and stderror of the job.", :type "string"}, :provisioningStateTransitionTime {:description "The time at which the job entered its current provisioning state.", :format "date-time", :readOnly true, :title "The time at which the job entered its current provisioning state.", :type "string"}, :tensorFlowSettings #:reference{:definitions "TensorFlowSettings"}, :customToolkitSettings #:reference{:definitions "CustomToolkitSettings"}, :executionState {:description "The current state of the job. Possible values are: queued - The job is queued and able to run. A job enters this state when it is created, or when it is awaiting a retry after a failed run. running - The job is running on a compute cluster. This includes job-level preparation such as downloading resource files or set up container specified on the job - it does not necessarily mean that the job command line has started executing. terminating - The job is terminated by the user, the terminate operation is in progress. succeeded - The job has completed running successfully and exited with exit code 0. failed - The job has finished unsuccessfully (failed with a non-zero exit code) and has exhausted its retry limit. A job is also marked as failed if an error occurred launching the job.", :enum ["queued" "running" "terminating" "succeeded" "failed"], :title "The current state of the job.", :type "string", :x-ms-enum {:modelAsString false, :name "ExecutionState"}}, :outputDirectories {:items #:reference{:definitions "OutputDirectory"}, :title "Specifies the list of output directories where the models will be created. .", :type "array"}, :priority {:default 0, :description "Priority associated with the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. The default value is 0.", :format "int32", :title "Priority associated with the job.", :type "integer"}, :cntkSettings #:reference{:definitions "CNTKsettings"}, :nodeCount {:description "The job will be gang scheduled on that many compute nodes", :format "int32", :title "Number of compute nodes to run the job on.", :type "integer"}, :jobPreparation #:reference{:definitions "JobPreparation"}, :containerSettings #:reference{:definitions "ContainerSettings"}, :inputDirectories {:items #:reference{:definitions "InputDirectory"}, :title "Specifies the list of input directories for the Job.", :type "array"}, :toolType #:reference{:definitions "ToolType"}}}, :NodeSetup {:description "Use this to prepare the VM. NOTE: The volumes specified in mountVolumes are mounted first and then the setupTask is run. Therefore the setup task can use local mountPaths in its execution.", :properties {:mountVolumes #:reference{:definitions "MountVolumes"}, :setupTask #:reference{:definitions "SetupTask"}}}, :VirtualMachineConfiguration {:description "Settings for OS image.", :properties {:imageReference #:reference{:definitions "ImageReference"}}}}}