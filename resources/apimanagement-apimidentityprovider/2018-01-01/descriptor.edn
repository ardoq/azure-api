{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on Identity Provider entity associated with your Azure API Management deployment. Setting up an external Identity Provider for authentication can help you manage the developer portal logins using the OAuth2 flow.", :title "ApiManagementClient", :version "2018-01-01"}, :ops {:IdentityProvider_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders", :description "Lists a collection of Identity Provider configured in the specified service instance.", :parameters [{:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :IdentityProvider_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Deletes the specified identity provider configuration.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :IdentityProvider_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Gets the configuration details of the identity Provider configured in specified service instance.", :parameters [{:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :IdentityProvider_GetEntityTag {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Gets the entity state (Etag) version of the identityProvider specified by its identifier.", :parameters [{:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"} {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :head}, :IdentityProvider_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Updates an existing IdentityProvider configuration.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "IdentityProviderUpdateParameters"}} {:description "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :patch}, :IdentityProvider_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Creates or Updates the IdentityProvider configuration.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"} {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "IdentityProviderContract"}} {:description "ETag of the Entity. Not required when creating an entity, but required when updating an entity.", :in "header", :name "If-Match", :required false, :type "string", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}], :verb :put}}, :parameters {:IdentityProviderNameParameter {:description "Identity Provider Type identifier.", :enum ["facebook" "google" "microsoft" "twitter" "aad" "aadB2C"], :in "path", :name "identityProviderName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "IdentityProviderType", :values [{:description "Facebook as Identity provider.", :value "facebook"} {:description "Google as Identity provider.", :value "google"} {:description "Microsoft Live as Identity provider.", :value "microsoft"} {:description "Twitter as Identity provider.", :value "twitter"} {:description "Azure Active Directory as Identity provider.", :value "aad"} {:description "Azure Active Directory B2C as Identity provider.", :value "aadB2C"}]}, :x-ms-parameter-location "method"}}, :definitions {:IdentityProviderBaseParameters {:description "Identity Provider Base Parameter Properties.", :properties {:allowedTenants {:description "List of Allowed Tenants when configuring Azure Active Directory login.", :items {:type "string"}, :maxItems 32, :type "array"}, :passwordResetPolicyName {:description "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.", :minLength 1, :type "string"}, :profileEditingPolicyName {:description "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.", :minLength 1, :type "string"}, :signinPolicyName {:description "Signin Policy Name. Only applies to AAD B2C Identity Provider.", :minLength 1, :type "string"}, :signupPolicyName {:description "Signup Policy Name. Only applies to AAD B2C Identity Provider.", :minLength 1, :type "string"}, :type {:description "Identity Provider Type identifier.", :enum ["facebook" "google" "microsoft" "twitter" "aad" "aadB2C"], :type "string", :x-ms-enum {:modelAsString true, :name "IdentityProviderType", :values [{:description "Facebook as Identity provider.", :value "facebook"} {:description "Google as Identity provider.", :value "google"} {:description "Microsoft Live as Identity provider.", :value "microsoft"} {:description "Twitter as Identity provider.", :value "twitter"} {:description "Azure Active Directory as Identity provider.", :value "aad"} {:description "Azure Active Directory B2C as Identity provider.", :value "aadB2C"}]}}}}, :IdentityProviderContract {:allOf [{:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type for API Management resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Identity Provider details.", :properties {:properties #:reference{:definitions "IdentityProviderContractProperties"}}}, :IdentityProviderContractProperties {:allOf [#:reference{:definitions "IdentityProviderBaseParameters"}], :description "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.", :properties {:clientId {:description "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.", :minLength 1, :type "string"}, :clientSecret {:description "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.", :minLength 1, :type "string"}}, :required ["clientId" "clientSecret"]}, :IdentityProviderList {:description "List of all the Identity Providers configured on the service instance.", :properties {:nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Identity Provider configuration values.", :items #:reference{:definitions "IdentityProviderContract"}, :type "array"}}}, :IdentityProviderUpdateParameters {:description "Parameters supplied to update Identity Provider", :properties {:properties #:reference{:definitions "IdentityProviderUpdateProperties"}}}, :IdentityProviderUpdateProperties {:allOf [#:reference{:definitions "IdentityProviderBaseParameters"}], :description "Parameters supplied to the Update Identity Provider operation.", :properties {:clientId {:description "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.", :minLength 1, :type "string"}, :clientSecret {:description "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.", :minLength 1, :type "string"}}}}}