{:scheme "https", :host "azure.local", :info {:description "Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.", :title "Azure IoT Central", :version "preview"}, :ops {:ApiTokens_List {:path "/apiTokens", :description nil, :parameters nil, :verb :get}, :ContinuousDataExports_List {:path "/continuousDataExports", :description nil, :parameters nil, :verb :get}, :DeviceTemplates_Remove {:path "/deviceTemplates/{device_template_id}", :description "Delete an existing device template by device ID.", :parameters [#:reference{:parameters "DeviceTemplateId"}], :verb :delete}, :Devices_GetProperties {:path "/devices/{device_id}/properties", :description "Get all property values of a device by device ID.", :parameters [#:reference{:parameters "DeviceId"}], :verb :get}, :ContinuousDataExports_Remove {:path "/continuousDataExports/{export_id}", :description nil, :parameters [{:description "Unique ID for the continuous data export.", :in "path", :name "export_id", :required true, :type "string"}], :verb :delete}, :Roles_List {:path "/roles", :description nil, :parameters nil, :verb :get}, :Roles_Get {:path "/roles/{role_id}", :description nil, :parameters [{:description "Unique ID for the role.", :in "path", :name "role_id", :required true, :type "string"}], :verb :get}, :Devices_GetCommandHistory {:path "/devices/{device_id}/components/{component_name}/commands/{command_name}", :description nil, :parameters [#:reference{:parameters "DeviceId"} #:reference{:parameters "ComponentName"} {:description "Name of this device command.", :in "path", :name "command_name", :required true, :type "string", :x-ms-parameter-location "method"}], :verb :get}, :DeviceTemplates_Get {:path "/deviceTemplates/{device_template_id}", :description nil, :parameters [#:reference{:parameters "DeviceTemplateId"}], :verb :get}, :Devices_GetTelemetryValue {:path "/devices/{device_id}/components/{component_name}/telemetry/{telemetry_name}", :description nil, :parameters [#:reference{:parameters "DeviceId"} #:reference{:parameters "ComponentName"} {:description "Name of this device telemetry.", :in "path", :name "telemetry_name", :required true, :type "string", :x-ms-parameter-location "method"}], :verb :get}, :ApiTokens_Remove {:path "/apiTokens/{token_id}", :description nil, :parameters [{:description "Unique ID for the API token.", :in "path", :name "token_id", :required true, :type "string"}], :verb :delete}, :ContinuousDataExports_Get {:path "/continuousDataExports/{export_id}", :description nil, :parameters [{:description "Unique ID for the continuous data export.", :in "path", :name "export_id", :required true, :type "string"}], :verb :get}, :DeviceTemplates_List {:path "/deviceTemplates", :description nil, :parameters nil, :verb :get}, :Devices_Get {:path "/devices/{device_id}", :description "Get details about an existing device by device ID.", :parameters [#:reference{:parameters "DeviceId"}], :verb :get}, :Devices_List {:path "/devices", :description nil, :parameters nil, :verb :get}, :Devices_GetCloudProperties {:path "/devices/{device_id}/cloudProperties", :description "Get all cloud property values of a device by device ID.", :parameters [#:reference{:parameters "DeviceId"}], :verb :get}, :ContinuousDataExports_Set {:path "/continuousDataExports/{export_id}", :description nil, :parameters [{:description "Unique ID for the continuous data export.", :in "path", :name "export_id", :required true, :type "string"} {:description "Data export body.", :in "body", :name "body", :required true, :schema #:reference{:definitions "ContinuousDataExport"}}], :verb :put}, :Devices_UpdateCloudProperties {:path "/devices/{device_id}/cloudProperties", :description "Update all cloud property values of a device by device ID.", :parameters [#:reference{:parameters "DeviceId"} {:description "Device properties.", :in "body", :name "body", :required true, :schema #:reference{:definitions "DeviceCloudProperties"}}], :verb :put}, :Devices_GetComponentProperties {:path "/devices/{device_id}/components/{component_name}/properties", :description nil, :parameters [#:reference{:parameters "DeviceId"} #:reference{:parameters "ComponentName"}], :verb :get}, :DeviceTemplates_Set {:path "/deviceTemplates/{device_template_id}", :description nil, :parameters [#:reference{:parameters "DeviceTemplateId"} {:description "Device template body.", :in "body", :name "body", :required true, :schema #:reference{:definitions "DeviceTemplate"}}], :verb :put}, :Devices_UpdateProperties {:path "/devices/{device_id}/properties", :description "Update all property values of a device by device ID.", :parameters [#:reference{:parameters "DeviceId"} {:description "Device properties.", :in "body", :name "body", :required true, :schema #:reference{:definitions "DeviceProperties"}}], :verb :put}, :Devices_Set {:path "/devices/{device_id}", :description "Create a new device or update an existing one by device ID.", :parameters [#:reference{:parameters "DeviceId"} {:description "Device body.", :in "body", :name "body", :required true, :schema #:reference{:definitions "Device"}}], :verb :put}, :DeviceTemplates_GetMerged {:path "/deviceTemplates/{device_template_id}/merged", :description nil, :parameters [#:reference{:parameters "DeviceTemplateId"}], :verb :get}, :DeviceTemplates_ListDevices {:path "/deviceTemplates/{device_template_id}/devices", :description nil, :parameters [#:reference{:parameters "DeviceTemplateId"}], :verb :get}, :Devices_ExecuteCommand {:path "/devices/{device_id}/components/{component_name}/commands/{command_name}", :description "Execute a command on a device.", :parameters [#:reference{:parameters "DeviceId"} #:reference{:parameters "ComponentName"} {:description "Name of this device command.", :in "path", :name "command_name", :required true, :type "string", :x-ms-parameter-location "method"} {:description "Device command body.", :in "body", :name "body", :required true, :schema #:reference{:definitions "DeviceCommand"}}], :verb :post}, :ApiTokens_Set {:path "/apiTokens/{token_id}", :description nil, :parameters [{:description "Unique ID for the API token.", :in "path", :name "token_id", :required true, :type "string"} {:description "API token body.", :in "body", :name "body", :required true, :schema #:reference{:definitions "ApiToken"}}], :verb :put}, :Devices_GetCredentials {:path "/devices/{device_id}/credentials", :description nil, :parameters [#:reference{:parameters "DeviceId"}], :verb :get}, :ApiTokens_Get {:path "/apiTokens/{token_id}", :description nil, :parameters [{:description "Unique ID for the API token.", :in "path", :name "token_id", :required true, :type "string"}], :verb :get}, :Devices_Remove {:path "/devices/{device_id}", :description "Delete an existing device by device ID.", :parameters [#:reference{:parameters "DeviceId"}], :verb :delete}, :Devices_UpdateComponentProperties {:path "/devices/{device_id}/components/{component_name}/properties", :description nil, :parameters [#:reference{:parameters "DeviceId"} #:reference{:parameters "ComponentName"} {:description "Device properties.", :in "body", :name "body", :required true, :schema #:reference{:definitions "DeviceProperties"}}], :verb :put}}, :parameters {:CentralDnsSuffixInPath {:default "azureiotcentral.com", :description "The DNS suffix used as the base for all Azure IoT Central service requests.", :in "path", :name "centralDnsSuffixInPath", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}, :ComponentName {:description "Name of the device component.", :in "path", :name "component_name", :required true, :type "string", :x-ms-parameter-location "method"}, :DeviceId {:description "Unique ID of the device.", :in "path", :name "device_id", :required true, :type "string", :x-ms-parameter-location "method"}, :DeviceTemplateId {:description "Unique ID of the device template.", :in "path", :name "device_template_id", :required true, :type "string", :x-ms-parameter-location "method"}, :Subdomain {:description "Application subdomain.", :in "path", :name "subdomain", :required true, :type "string", :x-ms-parameter-location "client"}}, :definitions {:ServiceBusQueueEndpoint {:allOf [#:reference{:definitions "Endpoint"}]}, :Override {:allOf [#:reference{:definitions "Entity"} {:properties {:capability #:reference{:definitions "CapabilityReference"}, :displayUnit {:description "The overridden display unit.", :type "string"}, :semanticType {:description "The overridden semantic type.", :type "string"}, :unit {:description "The overridden unit.", :type "string"}, :valueDetail #:reference{:definitions "ValueDetail"}}}], :type "object"}, :DeviceTemplate {:properties {:capabilityModel #:reference{:definitions "CapabilityModel"}, :description {:description "Detailed description of the device template.", :type "string"}, :displayName {:description "Display name of the device template.", :type "string"}, :etag {:description "ETag used to prevent conflict in device template updates.", :type "string"}, :id {:description "Unique ID of the device template.", :readOnly true, :type "string"}, :solutionModel #:reference{:definitions "SolutionModel"}, :types {:description "The types of device to which this template applies.", :items {:type "string"}, :type "array"}}, :required ["types" "capabilityModel"], :type "object"}, :InitialValue {:allOf [#:reference{:definitions "Entity"} {:properties {:capability #:reference{:definitions "CapabilityReference"}, :value {:description "The initial value of the capability."}}}], :type "object"}, :Endpoint {:discriminator "type", :properties {:connectionString {:description "Information for connecting to the endpoint.", :type "string"}, :name {:description "Name of the entity to send data to.", :type "string"}, :type {:description "Type of the endpoint.", :type "string"}}, :required ["type" "connectionString" "name"], :type "object"}, :ContinuousDataExportCollection {:properties {:nextLink {:description "URL to get the next page of continuous data exports.", :type "string"}, :value {:description "The collection of continuous data exports.", :items #:reference{:definitions "ContinuousDataExport"}, :type "array"}}, :required ["value"], :type "object"}, :CapabilityModel {:allOf [#:reference{:definitions "Entity"} {:properties {:contents {:description "The relationships contained by the capability model.", :items #:reference{:definitions "NamedEntity"}, :type "array"}, :implements {:description "The component implemented by the capability model.", :items #:reference{:definitions "Component"}, :type "array"}}}], :type "object"}, :ApiToken {:allOf [#:reference{:definitions "Permission"} {:properties {:expiry {:description "String-formatted date representing the time when the token expires", :format "date-time", :type "string"}, :id {:description "Unique ID of the api token.", :readOnly true, :type "string"}, :token {:description "Value of the api token.", :readOnly true, :type "string"}}}], :type "object"}, :Permission {:properties {:roles {:description "Roles that the permission has been granted permission to.", :items {:type "string"}, :maxItems 1, :minItems 1, :type "array"}}, :required ["roles"], :type "object"}, :Interface {:allOf [#:reference{:definitions "Entity"} {:properties {:contents {:description "The data definitions contained by the interface.", :items #:reference{:definitions "Capability"}, :type "array"}}}], :type "object"}, :SolutionModel {:allOf [#:reference{:definitions "Entity"} {:properties {:cloudProperties {:description "The cloud properties defined by the solution model.", :items #:reference{:definitions "Capability"}, :type "array"}, :initialValues {:description "The initial values defined by the solution model.", :items #:reference{:definitions "InitialValue"}, :type "array"}, :overrides {:description "The overrides defined by the solution model.", :items #:reference{:definitions "Override"}, :type "array"}}}], :type "object"}, :ContinuousDataExport {:properties {:displayName {:description "Display name of the continuous data export.", :type "string"}, :enabled {:description "Boolean indicating whether the continuous data export should be running or not.", :type "boolean"}, :endpoint #:reference{:definitions "Endpoint"}, :etag {:description "ETag used to prevent conflict in continuous data export updates.", :type "string"}, :id {:description "Unique ID of the continuous data export.", :readOnly true, :type "string"}, :sources {:description "Data sources to export to the endpoint.", :items {:enum ["devices" "deviceTemplates" "telemetry"], :type "string"}, :minItems 1, :type "array"}, :status {:description "Indicates whether the continuous data export is starting, running, etc.", :readOnly true, :type "string"}}, :required ["endpoint" "enabled" "sources"], :type "object"}, :ApiTokenCollection {:properties {:value {:description "The collection of api tokens.", :items #:reference{:definitions "ApiToken"}, :type "array"}}, :required ["value"], :type "object"}, :CapabilityReference {:allOf [#:reference{:definitions "Entity"} {:properties {:component {:description "The name of the component being referenced.", :type "string"}, :reference {:description "The name of the capability being referenced.", :type "string"}}}], :type "object"}, :Component {:allOf [#:reference{:definitions "NamedEntity"} {:properties {:schema #:reference{:definitions "Interface"}}}], :type "object"}, :DeviceCloudProperties {:additionalProperties true, :description "Cloud property values associated with the device.", :type "object"}, :DeviceProperties {:additionalProperties true, :description "Property values associated with the device.", :type "object"}, :ValueDetail {:additionalProperties true, :allOf [#:reference{:definitions "Entity"}], :description "Visualization details for the referenced capability.", :type "object"}, :StorageEndpoint {:allOf [#:reference{:definitions "Endpoint"}]}, :Capability {:additionalProperties true, :allOf [#:reference{:definitions "NamedEntity"} {:properties {:name {:description "The programmatic name of the named entity.", :type "string"}}}], :type "object"}, :DeviceCredentials {:properties {:scopeId {:description "Scope id for connecting to device provisioning service.", :type "string"}, :symmetricKey #:reference{:definitions "SymmetricKey"}}, :required ["scopeId" "symmetricKey"], :type "object"}, :SymmetricKey {:properties {:primaryKey {:description "The primary key for the credential.", :type "string"}, :secondaryKey {:description "The secondary key for the credential.", :type "string"}}, :required ["primaryKey" "secondaryKey"], :type "object"}, :DeviceCommand {:properties {:id {:description "The request ID of the device command execution.", :readOnly true, :type "string"}, :request {:description "The payload for the device command."}, :response {:description "The payload of the device command response.", :readOnly true}, :responseCode {:description "The status code of the device command response.", :readOnly true, :type "number"}}, :type "object"}, :DeviceTemplateCollection {:properties {:nextLink {:description "URL to get the next page of device templates.", :type "string"}, :value {:description "The collection of device templates.", :items #:reference{:definitions "DeviceTemplate"}, :type "array"}}, :required ["value"], :type "object"}, :Value {:properties {:value {:description "The value of this API response."}}, :type "object"}, :ServiceBusTopicEndpoint {:allOf [#:reference{:definitions "Endpoint"}]}, :NamedEntity {:allOf [#:reference{:definitions "Entity"} {:properties {:name {:description "The programmatic name of the named entity.", :type "string"}}, :required ["name"]}], :type "object"}, :DeviceCollection {:properties {:nextLink {:description "URL to get the next page of devices.", :type "string"}, :value {:description "The collection of devices.", :items #:reference{:definitions "Device"}, :type "array"}}, :required ["value"], :type "object"}, :Role {:properties {:displayName {:description "Display name of the role.", :type "string"}, :id {:description "Unique ID of the role.", :readOnly true, :type "string"}}, :type "object"}, :RoleCollection {:properties {:value {:description "The collection of roles.", :items #:reference{:definitions "Role"}, :type "array"}}, :required ["value"], :type "object"}, :Device {:properties {:approved {:description "Whether the device has been approved to connect to IoT Central.", :type "boolean"}, :description {:description "Detailed description of the device.", :type "string"}, :displayName {:description "Display name of the device.", :type "string"}, :etag {:description "ETag used to prevent conflict in device updates.", :type "string"}, :id {:description "Unique ID of the device.", :readOnly true, :type "string"}, :instanceOf {:description "The model definition for the device.", :type "string"}, :provisioned {:description "Whether resources have been allocated for the device.", :readOnly true, :type "boolean"}, :simulated {:description "Whether the device is simulated.", :type "boolean"}}, :required ["instanceOf"], :type "object"}, :EventHubsEndpoint {:allOf [#:reference{:definitions "Endpoint"}]}, :DeviceCommandCollection {:properties {:value {:description "The collection of device command executions.", :items #:reference{:definitions "DeviceCommand"}, :type "array"}}, :required ["value"], :type "object"}, :Entity {:properties {"@context" {:description "JSON-LD context for the entity."}, "@id" {:description "Unique ID of the entity.", :type "string"}, "@type" {:description "Type of the entity.", :items {:type "string"}, :minItems 1, :type "array"}, :comment {:description "Developer comment about the entity.", :type "string"}, :description {:description "Detailed description of the entity.", :type "string"}, :displayName {:description "Display name of the entity.", :type "string"}}, :required ["@type"], :type "object"}}}