{:scheme "https", :host "azure.local", :info {:description "Client that can be used to query an Azure Search index and upload, merge, or delete documents.", :title "SearchIndexClient", :version "2017-11-11-Preview"}, :ops {:Documents_Index {:path "/docs/search.index", :description "Sends a batch of document write actions to the Azure Search index.", :parameters [{:description "The batch of index actions.", :in "body", :name "batch", :required true, :schema #:reference{:definitions "IndexBatch"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :post}, :Documents_SuggestPost {:path "/docs/search.post.suggest", :description "Suggests documents in the Azure Search index that match the given partial query text.", :parameters [{:description "The Suggest request.", :in "body", :name "suggestRequest", :required true, :schema #:reference{:definitions "SuggestRequest"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :post}, :Documents_SuggestGet {:path "/docs/search.suggest", :description "Suggests documents in the Azure Search index that match the given partial query text.", :parameters [{:description "The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.", :in "query", :name "search", :required true, :type "string", :x-ms-client-name "SearchText"} {:description "The name of the suggester as specified in the suggesters collection that's part of the index definition.", :in "query", :name "suggesterName", :required true, :type "string"} {:description "An OData expression that filters the documents considered for suggestions.", :in "query", :name "$filter", :type "string", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "A value indicating whether to use fuzzy matching for the suggestions query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestions queries are slower and consume more resources.", :in "query", :name "fuzzy", :type "boolean", :x-ms-client-name "UseFuzzyMatching", :x-ms-parameter-grouping {:name "SuggestParameters"}, :x-nullable false} {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.", :in "query", :name "highlightPostTag", :type "string", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.", :in "query", :name "highlightPreTag", :type "string", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestions query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.", :format "double", :in "query", :name "minimumCoverage", :type "number", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.", :in "query", :items {:type "string"}, :name "$orderby", :type "array", :x-ms-client-name "OrderBy", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "The list of field names to search for the specified search text. Target fields must be included in the specified suggester.", :in "query", :items {:type "string"}, :name "searchFields", :type "array", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "The list of fields to retrieve. If unspecified, only the key field will be included in the results.", :in "query", :items {:type "string"}, :name "$select", :type "array", :x-ms-parameter-grouping {:name "SuggestParameters"}} {:description "The number of suggestions to retrieve. The value must be a number between 1 and 100. The default is 5.", :format "int32", :in "query", :name "$top", :type "integer", :x-ms-parameter-grouping {:name "SuggestParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :get}, :Documents_AutocompleteGet {:path "/docs/search.autocomplete", :description "Autocompletes incomplete query terms based on input text and matching terms in the Azure Search index.", :parameters [#:reference{:parameters "ClientRequestIdParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The incomplete term which should be auto-completed.", :in "query", :name "search", :required true, :type "string", :x-ms-client-name "SearchText"} {:description "The name of the suggester as specified in the suggesters collection that's part of the index definition.", :in "query", :name "suggesterName", :required true, :type "string"} {:description "Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context while producing auto-completed terms.", :enum ["oneTerm" "twoTerms" "oneTermWithContext"], :in "query", :name "autocompleteMode", :type "string", :x-ms-enum {:modelAsString false, :name "AutocompleteMode"}, :x-ms-parameter-grouping {:name "AutocompleteParameters"}, :x-nullable false} {:description "An OData expression that filters the documents used to produce completed terms for the Autocomplete result.", :in "query", :name "$filter", :type "string", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will find terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.", :in "query", :name "fuzzy", :type "boolean", :x-ms-client-name "UseFuzzyMatching", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.", :in "query", :name "highlightPostTag", :type "string", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.", :in "query", :name "highlightPreTag", :type "string", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.", :format "double", :in "query", :name "minimumCoverage", :type "number", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "The list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.", :in "query", :items {:type "string"}, :name "searchFields", :type "array", :x-ms-parameter-grouping {:name "AutocompleteParameters"}} {:description "The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.", :format "int32", :in "query", :name "$top", :type "integer", :x-ms-parameter-grouping {:name "AutocompleteParameters"}}], :verb :get}, :Documents_SearchPost {:path "/docs/search.post.search", :description "Searches for documents in the Azure Search index.", :parameters [{:description "The definition of the Search request.", :in "body", :name "searchRequest", :required true, :schema #:reference{:definitions "SearchRequest"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :post}, :Documents_Get {:path "/docs('{key}')", :description "Retrieves a document from the Azure Search index.", :parameters [{:description "The key of the document to retrieve.", :in "path", :name "key", :required true, :type "string"} {:description "List of field names to retrieve for the document; Any field not retrieved will be missing from the returned document.", :in "query", :items {:type "string"}, :name "$select", :type "array", :x-ms-client-name "SelectedFields"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :get}, :Documents_AutocompletePost {:path "/docs/search.post.autocomplete", :description "Autocompletes incomplete query terms based on input text and matching terms in the Azure Search index.", :parameters [#:reference{:parameters "ClientRequestIdParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The definition of the Autocomplete request.", :in "body", :name "autocompleteRequest", :required true, :schema #:reference{:definitions "AutocompleteRequest"}}], :verb :post}, :Documents_Count {:path "/docs/$count", :description "Queries the number of documents in the Azure Search index.", :parameters [#:reference{:parameters "ClientRequestIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Documents_SearchGet {:path "/docs", :description "Searches for documents in the Azure Search index.", :parameters [{:description "A full-text search query expression; Use \"*\" or omit this parameter to match all documents.", :in "query", :name "search", :type "string", :x-ms-client-name "SearchText"} {:description "A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.", :in "query", :name "$count", :type "boolean", :x-ms-client-name "IncludeTotalResultCount", :x-ms-parameter-grouping {:name "SearchParameters"}, :x-nullable false} {:collectionFormat "multi", :description "The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.", :in "query", :items {:type "string"}, :name "facet", :type "array", :x-ms-client-name "Facets", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The OData $filter expression to apply to the search query.", :in "query", :name "$filter", :type "string", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.", :in "query", :items {:type "string"}, :name "highlight", :type "array", :x-ms-client-name "HighlightFields", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.", :in "query", :name "highlightPostTag", :type "string", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.", :in "query", :name "highlightPreTag", :type "string", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.", :format "double", :in "query", :name "minimumCoverage", :type "number", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, and desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no OrderBy is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.", :in "query", :items {:type "string"}, :name "$orderby", :type "array", :x-ms-client-name "OrderBy", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "A value that specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.", :enum ["simple" "full"], :in "query", :name "queryType", :type "string", :x-ms-enum {:modelAsString false, :name "QueryType"}, :x-ms-parameter-grouping {:name "SearchParameters"}, :x-nullable false} {:collectionFormat "multi", :description "The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes).", :in "query", :items {:type "string"}, :name "scoringParameter", :type "array", :x-ms-client-name "ScoringParameters", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.", :in "query", :name "scoringProfile", :type "string", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The list of field names to include in the full-text search.", :in "query", :items {:type "string"}, :name "searchFields", :type "array", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "A value that specifies whether any or all of the search terms must be matched in order to count the document as a match.", :enum ["any" "all"], :in "query", :name "searchMode", :type "string", :x-ms-enum {:modelAsString false, :name "SearchMode"}, :x-ms-parameter-grouping {:name "SearchParameters"}, :x-nullable false} {:description "The list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.", :in "query", :items {:type "string"}, :name "$select", :type "array", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use $skip due to this limitation, consider using $orderby on a totally-ordered key and $filter with a range query instead.", :format "int32", :in "query", :name "$skip", :type "integer", :x-ms-parameter-grouping {:name "SearchParameters"}} {:description "The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.", :format "int32", :in "query", :name "$top", :type "integer", :x-ms-parameter-grouping {:name "SearchParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "ClientRequestIdParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :ClientRequestIdParameter {:description "The tracking ID sent with the request to help with debugging.", :format "uuid", :name "client-request-id", :type "string", :x-ms-client-request-id true, :x-ms-parameter-location "method", :x-ms-parameter-grouping {:name "search-request-options"}, :required false, :in "header"}, :IndexNameParameter {:description "The name of the Azure Search index.", :in "path", :name "indexName", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding false}, :SearchDnsSuffixParameter {:default "search.windows.net", :description "The DNS suffix of the Azure Search service. The default is search.windows.net.", :in "path", :name "searchDnsSuffix", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}, :SearchServiceNameParameter {:description "The name of the Azure Search service.", :in "path", :name "searchServiceName", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}}, :definitions {:SuggestRequest {:description "Parameters for filtering, sorting, fuzzy matching, and other suggestions query behaviors.", :properties {:top {:description "The number of suggestions to retrieve. This must be a value between 1 and 100. The default is 5.", :format "int32", :type "integer"}, :fuzzy {:description "A value indicating whether to use fuzzy matching for the suggestion query. Default is false. When set to true, the query will find suggestions even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy suggestion searches are slower and consume more resources.", :type "boolean", :x-ms-client-name "UseFuzzyMatching"}, :searchFields {:description "The list of comma-separated field names to search for the specified search text. Target fields must be included in the specified suggester.", :type "string"}, :highlightPreTag {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting of suggestions is disabled.", :type "string"}, :suggesterName {:description "The name of the suggester as specified in the suggesters collection that's part of the index definition.", :type "string"}, :search {:description "The search text to use to suggest documents. Must be at least 1 character, and no more than 100 characters.", :type "string", :x-ms-client-name "SearchText"}, :highlightPostTag {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting of suggestions is disabled.", :type "string"}, :orderby {:description "The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.", :type "string", :x-ms-client-name "OrderBy"}, :minimumCoverage {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by a suggestion query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.", :format "double", :type "number"}, :filter {:description "An OData expression that filters the documents considered for suggestions.", :externalDocs {:url "https://docs.microsoft.com/rest/api/searchservice/OData-Expression-Syntax-for-Azure-Search"}, :type "string"}, :select {:description "The comma-separated list of fields to retrieve. If unspecified, only the key field will be included in the results.", :type "string"}}}, :SearchResult {:additionalProperties true, :description "Contains a document found by a search query, plus associated metadata.", :properties {"@search.highlights" {:additionalProperties {:items {:type "string"}, :type "array"}, :description "Text fragments from the document that indicate the matching search terms, organized by each applicable field; null if hit highlighting was not enabled for the query.", :readOnly true, :type "object", :x-ms-client-name "Highlights"}, "@search.score" {:description "The relevance score of the document compared to other documents returned by the query.", :format "double", :readOnly true, :type "number", :x-ms-client-name "Score", :x-nullable false}}}, :SearchMode {:description "Specifies whether any or all of the search terms must be matched in order to count the document as a match.", :enum ["any" "all"], :type "string", :x-ms-enum {:modelAsString false, :name "SearchMode"}}, :AutocompleteMode {:description "Specifies the mode for Autocomplete. The default is 'oneTerm'. Use 'twoTerms' to get shingles and 'oneTermWithContext' to use the current context in producing autocomplete terms.", :enum ["oneTerm" "twoTerms" "oneTermWithContext"], :type "string", :x-ms-enum {:modelAsString false, :name "AutocompleteMode"}}, :AutocompleteRequest {:description "Parameters for fuzzy matching, and other autocomplete query behaviors.", :properties {:top {:description "The number of auto-completed terms to retrieve. This must be a value between 1 and 100. The default is 5.", :format "int32", :type "integer"}, :fuzzy {:description "A value indicating whether to use fuzzy matching for the autocomplete query. Default is false. When set to true, the query will autocomplete terms even if there's a substituted or missing character in the search text. While this provides a better experience in some scenarios, it comes at a performance cost as fuzzy autocomplete queries are slower and consume more resources.", :type "boolean", :x-ms-client-name "UseFuzzyMatching"}, :searchFields {:description "The comma-separated list of field names to consider when querying for auto-completed terms. Target fields must be included in the specified suggester.", :type "string"}, :highlightPreTag {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. If omitted, hit highlighting is disabled.", :type "string"}, :autocompleteMode #:reference{:definitions "AutocompleteMode"}, :suggesterName {:description "The name of the suggester as specified in the suggesters collection that's part of the index definition.", :type "string"}, :search {:description "The search text on which to base autocomplete results.", :type "string", :x-ms-client-name "SearchText"}, :highlightPostTag {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. If omitted, hit highlighting is disabled.", :type "string"}, :minimumCoverage {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by an autocomplete query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 80.", :format "double", :type "number"}, :filter {:description "An OData expression that filters the documents used to produce completed terms for the Autocomplete result.", :externalDocs {:url "https://docs.microsoft.com/rest/api/searchservice/OData-Expression-Syntax-for-Azure-Search"}, :type "string"}}}, :SearchRequest {:description "Parameters for filtering, sorting, faceting, paging, and other search query behaviors.", :properties {:searchMode #:reference{:definitions "SearchMode"}, :top {:description "The number of search results to retrieve. This can be used in conjunction with $skip to implement client-side paging of search results. If results are truncated due to server-side paging, the response will include a continuation token that can be used to issue another Search request for the next page of results.", :format "int32", :type "integer"}, :highlight {:description "The comma-separated list of field names to use for hit highlights. Only searchable fields can be used for hit highlighting.", :type "string", :x-ms-client-name "HighlightFields"}, :searchFields {:description "The comma-separated list of field names to include in the full-text search.", :type "string"}, :highlightPreTag {:description "A string tag that is prepended to hit highlights. Must be set with highlightPostTag. Default is &lt;em&gt;.", :type "string"}, :queryType #:reference{:definitions "QueryType"}, :search {:description "A full-text search query expression; Use \"*\" or omit this parameter to match all documents.", :type "string", :x-ms-client-name "SearchText"}, :highlightPostTag {:description "A string tag that is appended to hit highlights. Must be set with highlightPreTag. Default is &lt;/em&gt;.", :type "string"}, :orderby {:description "The comma-separated list of OData $orderby expressions by which to sort the results. Each expression can be either a field name or a call to either the geo.distance() or the search.score() functions. Each expression can be followed by asc to indicate ascending, or desc to indicate descending. The default is ascending order. Ties will be broken by the match scores of documents. If no $orderby is specified, the default sort order is descending by document match score. There can be at most 32 $orderby clauses.", :type "string", :x-ms-client-name "OrderBy"}, :minimumCoverage {:description "A number between 0 and 100 indicating the percentage of the index that must be covered by a search query in order for the query to be reported as a success. This parameter can be useful for ensuring search availability even for services with only one replica. The default is 100.", :format "double", :type "number"}, :filter {:description "The OData $filter expression to apply to the search query.", :externalDocs {:url "https://docs.microsoft.com/rest/api/searchservice/OData-Expression-Syntax-for-Azure-Search"}, :type "string"}, :count {:description "A value that specifies whether to fetch the total count of results. Default is false. Setting this value to true may have a performance impact. Note that the count returned is an approximation.", :type "boolean", :x-ms-client-name "IncludeTotalResultCount"}, :scoringProfile {:description "The name of a scoring profile to evaluate match scores for matching documents in order to sort the results.", :type "string"}, :facets {:description "The list of facet expressions to apply to the search query. Each facet expression contains a field name, optionally followed by a comma-separated list of name:value pairs.", :externalDocs {:url "https://docs.microsoft.com/rest/api/searchservice/Search-Documents"}, :items {:type "string"}, :type "array"}, :scoringParameters {:description "The list of parameter values to be used in scoring functions (for example, referencePointParameter) using the format name-values. For example, if the scoring profile defines a function with a parameter called 'mylocation' the parameter string would be \"mylocation--122.2,44.8\" (without the quotes).", :items {:type "string"}, :type "array"}, :select {:description "The comma-separated list of fields to retrieve. If unspecified, all fields marked as retrievable in the schema are included.", :type "string"}, :skip {:description "The number of search results to skip. This value cannot be greater than 100,000. If you need to scan documents in sequence, but cannot use skip due to this limitation, consider using orderby on a totally-ordered key and filter with a range query instead.", :format "int32", :type "integer"}}}, :QueryType {:description "Specifies the syntax of the search query. The default is 'simple'. Use 'full' if your query uses the Lucene query syntax.", :enum ["simple" "full"], :type "string", :x-ms-enum {:modelAsString false, :name "QueryType"}}, :DocumentIndexResult {:description "Response containing the status of operations for all documents in the indexing request.", :properties {:value {:description "The list of status information for each document in the indexing request.", :items #:reference{:definitions "IndexingResult"}, :readOnly true, :type "array", :x-ms-client-name "Results"}}}, :AutocompleteItem {:description "The result of Autocomplete requests.", :properties {:queryPlusText {:description "The query along with the completed term.", :readOnly true, :type "string"}, :text {:description "The completed term.", :readOnly true, :type "string"}}}, :FacetResult {:additionalProperties true, :description "A single bucket of a facet query result. Reports the number of documents with a field value falling within a particular range or having a particular value or interval.", :properties {:count {:description "The approximate count of documents falling within the bucket described by this facet.", :format "int64", :readOnly true, :type "integer"}}}, :IndexAction {:additionalProperties true, :description "Represents an index action that operates on a document.", :properties {"@search.action" {:description "The operation to perform on a document in an indexing batch.", :enum ["upload" "merge" "mergeOrUpload" "delete"], :type "string", :x-ms-client-name "ActionType", :x-ms-enum {:name "IndexActionType"}, :x-nullable false}}}, :AutocompleteResult {:description "The result of Autocomplete query.", :properties {:value {:description "The list of returned Autocompleted items.", :items #:reference{:definitions "AutocompleteItem"}, :readOnly true, :type "array", :x-ms-client-name "Results"}}}, :DocumentSuggestResult {:description "Response containing suggestion query results from an Azure Search index.", :properties {"@search.coverage" {:description "A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not set in the request.", :format "double", :readOnly true, :type "number", :x-ms-client-name "Coverage"}, :value {:description "The sequence of results returned by the query.", :items #:reference{:definitions "SuggestResult"}, :readOnly true, :type "array", :x-ms-client-name "Results"}}}, :SuggestResult {:additionalProperties true, :description "A result containing a document found by a suggestion query, plus associated metadata.", :properties {"@search.text" {:description "The text of the suggestion result.", :readOnly true, :type "string", :x-ms-client-name "Text"}}}, :DocumentSearchResult {:description "Response containing search results from an Azure Search index.", :properties {"@odata.count" {:description "The total count of results found by the search operation, or null if the count was not requested. If present, the count may be greater than the number of results in this response. This can happen if you use the $top or $skip parameters, or if Azure Search can't return all the requested documents in a single Search response.", :format "int64", :readOnly true, :type "integer", :x-ms-client-name "Count"}, "@odata.nextLink" {:description "Continuation URL returned when Azure Search can't return all the requested results in a single Search response. You can use this URL to formulate another GET or POST Search request to get the next part of the search response. Make sure to use the same verb (GET or POST) as the request that produced this response.", :readOnly true, :type "string", :x-ms-client-name "NextLink"}, "@search.coverage" {:description "A value indicating the percentage of the index that was included in the query, or null if minimumCoverage was not specified in the request.", :format "double", :readOnly true, :type "number", :x-ms-client-name "Coverage"}, "@search.facets" {:additionalProperties {:items #:reference{:definitions "FacetResult"}, :type "array"}, :description "The facet query results for the search operation, organized as a collection of buckets for each faceted field; null if the query did not include any facet expressions.", :readOnly true, :type "object", :x-ms-client-name "Facets"}, "@search.nextPageParameters" #:reference{:definitions "SearchRequest"}, :value {:description "The sequence of results returned by the query.", :items #:reference{:definitions "SearchResult"}, :readOnly true, :type "array", :x-ms-client-name "Results"}}}, :IndexingResult {:description "Status of an indexing operation for a single document.", :properties {:errorMessage {:description "The error message explaining why the indexing operation failed for the document identified by the key; null if indexing succeeded.", :readOnly true, :type "string"}, :key {:description "The key of a document that was in the indexing request.", :readOnly true, :type "string"}, :status {:description "A value indicating whether the indexing operation succeeded for the document identified by the key.", :readOnly true, :type "boolean", :x-ms-client-name "Succeeded", :x-nullable false}, :statusCode {:description "The status code of the indexing operation. Possible values include: 200 for a successful update or delete, 201 for successful document creation, 400 for a malformed input document, 404 for document not found, 409 for a version conflict, 422 when the index is temporarily unavailable, or 503 for when the service is too busy.", :format "int32", :readOnly true, :type "integer", :x-nullable false}}}, :IndexBatch {:description "Contains a batch of document write actions to send to the Azure Search index.", :properties {:value {:description "The actions in the batch.", :items #:reference{:definitions "IndexAction"}, :type "array", :x-ms-client-name "Actions"}}, :required ["value"]}}}