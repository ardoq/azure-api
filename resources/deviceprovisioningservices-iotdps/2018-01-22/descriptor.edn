{:scheme "https", :host "management.azure.com", :info {:description "API for using the Azure IoT Hub Device Provisioning Service features.", :title "iotDpsClient", :version "2018-01-22"}, :ops {:IotDpsResource_CheckProvisioningServiceNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability", :description "Check if a provisioning service name is available. This will validate if the name is syntactically valid and if the name is usable", :parameters [#:reference{:parameters "subscriptionId"} {:description "Set the name parameter in the OperationInputs structure to the name of the provisioning service to check.", :in "body", :name "arguments", :required true, :schema #:reference{:definitions "OperationInputs"}} #:reference{:parameters "api-version"}], :verb :post}, :DpsCertificate_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}", :description "Deletes the specified certificate associated with the Provisioning Service", :parameters [#:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "ETag of the certificate", :in "header", :name "If-Match", :required true, :type "string"} {:description "The name of the provisioning service.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "This is a mandatory field, and is the logical name of the certificate that the provisioning service will access by.", :in "path", :name "certificateName", :required true, :type "string"} {:description "This is optional, and it is the Common Name of the certificate.", :in "query", :name "certificate.name", :required false, :type "string"} {:description "Raw data within the certificate.", :format "byte", :in "query", :name "certificate.rawBytes", :required false, :type "string"} {:description "Indicates if certificate has been verified by owner of the private key.", :in "query", :name "certificate.isVerified", :required false, :type "boolean"} {:description "A description that mentions the purpose of the certificate.", :enum ["clientAuthentication" "serverAuthentication"], :in "query", :name "certificate.purpose", :required false, :type "string", :x-ms-enum {:modelAsString true, :name "CertificatePurpose"}} {:description "Time the certificate is created.", :format "date-time", :in "query", :name "certificate.created", :required false, :type "string"} {:description "Time the certificate is last updated.", :format "date-time", :in "query", :name "certificate.lastUpdated", :required false, :type "string"} {:description "Indicates if the certificate contains a private key.", :in "query", :name "certificate.hasPrivateKey", :required false, :type "boolean"} {:description "Random number generated to indicate Proof of Possession.", :in "query", :name "certificate.nonce", :required false, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :DpsCertificate_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}", :description "Get the certificate from the provisioning service.", :parameters [{:description "Name of the certificate to retrieve.", :in "path", :name "certificateName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the provisioning service the certificate is associated with.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "ETag of the certificate.", :in "header", :name "If-Match", :required false, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_ListBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices", :description "List all the provisioning services for a given subscription id.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "api-version"}], :verb :get}, :DpsCertificate_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates", :description "Get all the certificates tied to the provisioning service.", :parameters [#:reference{:parameters "subscriptionId"} {:description "Name of resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of provisioning service to retrieve certificates for.", :in "path", :name "provisioningServiceName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_listValidSkus {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus", :description "Gets the list of valid SKUs and tiers for a provisioning service.", :parameters [{:description "Name of provisioning service.", :in "path", :name "provisioningServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "Name of resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices", :description "Get a list of all provisioning services in the given resource group.", :parameters [#:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys", :description "List the primary and secondary keys for a provisioning service.", :parameters [{:description "The provisioning service name to get the shared access keys for.", :in "path", :name "provisioningServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :DpsCertificate_GenerateVerificationCode {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode", :description "Generate verification code for Proof of Possession.", :parameters [{:description "The mandatory logical name of the certificate, that the provisioning service uses to access.", :in "path", :name "certificateName", :required true, :type "string"} {:description "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "name of resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of provisioning service.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "Common Name for the certificate.", :in "query", :name "certificate.name", :required false, :type "string"} {:description "Raw data of certificate.", :format "byte", :in "query", :name "certificate.rawBytes", :required false, :type "string"} {:description "Indicates if the certificate has been verified by owner of the private key.", :in "query", :name "certificate.isVerified", :required false, :type "boolean"} {:description "Description mentioning the purpose of the certificate.", :enum ["clientAuthentication" "serverAuthentication"], :in "query", :name "certificate.purpose", :required false, :type "string", :x-ms-enum {:modelAsString true, :name "CertificatePurpose"}} {:description "Certificate creation time.", :format "date-time", :in "query", :name "certificate.created", :required false, :type "string"} {:description "Certificate last updated time.", :format "date-time", :in "query", :name "certificate.lastUpdated", :required false, :type "string"} {:description "Indicates if the certificate contains private key.", :in "query", :name "certificate.hasPrivateKey", :required false, :type "boolean"} {:description "Random number generated to indicate Proof of Possession.", :in "query", :name "certificate.nonce", :required false, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :IotDpsResource_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}", :description "Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.", :parameters [#:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of provisioning service to create or update.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "Description of the provisioning service to create or update.", :in "body", :name "iotDpsDescription", :required true, :schema #:reference{:definitions "ProvisioningServiceDescription"}} #:reference{:parameters "api-version"}], :verb :put}, :IotDpsResource_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}", :description "Get the metadata of the provisioning service without SAS keys.", :parameters [{:description "Name of the provisioning service to retrieve.", :in "path", :name "provisioningServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_GetOperationResult {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/operationresults/{operationId}", :description "Gets the status of a long running operation, such as create, update or delete a provisioning service.", :parameters [{:description "Operation id corresponding to long running operation. Use this to poll for the status.", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of provisioning service that the operation is running on.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:default "true", :description "Async header used to poll on the status of the operation, obtained while creating the long running operation.", :in "query", :name "asyncinfo", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_ListKeysForKeyName {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/keys/{keyName}/listkeys", :description "List primary and secondary keys for a specific key name", :parameters [{:description "Name of the provisioning service.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "Logical key name to get key-values for.", :in "path", :name "keyName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "The name of the resource group that contains the provisioning service.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :IotDpsResource_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}", :description "Deletes the Provisioning Service.", :parameters [{:description "Name of provisioning service to delete.", :in "path", :name "provisioningServiceName", :required true, :type "string"} #:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "api-version"}], :verb :delete}, :DpsCertificate_VerifyCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify", :description "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.", :parameters [{:description "The mandatory logical name of the certificate, that the provisioning service uses to access.", :in "path", :name "certificateName", :required true, :type "string"} {:description "ETag of the certificate.", :in "header", :name "If-Match", :required true, :type "string"} {:description "The name of the certificate", :in "body", :name "request", :required true, :schema #:reference{:definitions "VerificationCodeRequest"}} #:reference{:parameters "subscriptionId"} {:description "Resource group name.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Provisioning service name.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "Common Name for the certificate.", :in "query", :name "certificate.name", :required false, :type "string"} {:description "Raw data of certificate.", :format "byte", :in "query", :name "certificate.rawBytes", :required false, :type "string"} {:description "Indicates if the certificate has been verified by owner of the private key.", :in "query", :name "certificate.isVerified", :required false, :type "boolean"} {:description "Describe the purpose of the certificate.", :enum ["clientAuthentication" "serverAuthentication"], :in "query", :name "certificate.purpose", :required false, :type "string", :x-ms-enum {:modelAsString true, :name "CertificatePurpose"}} {:description "Certificate creation time.", :format "date-time", :in "query", :name "certificate.created", :required false, :type "string"} {:description "Certificate last updated time.", :format "date-time", :in "query", :name "certificate.lastUpdated", :required false, :type "string"} {:description "Indicates if the certificate contains private key.", :in "query", :name "certificate.hasPrivateKey", :required false, :type "boolean"} {:description "Random number generated to indicate Proof of Possession.", :in "query", :name "certificate.nonce", :required false, :type "string"} #:reference{:parameters "api-version"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.Devices/operations", :description "Lists all of the available Microsoft.Devices REST API operations.", :parameters [#:reference{:parameters "api-version"}], :verb :get}, :IotDpsResource_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}", :description "Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method", :parameters [#:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of provisioning service to create or update.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "Updated tag information to set into the provisioning service instance.", :in "body", :name "ProvisioningServiceTags", :required true, :schema #:reference{:definitions "TagsResource"}} #:reference{:parameters "api-version"}], :verb :patch}, :DpsCertificate_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}", :description "Add new certificate or update an existing certificate.", :parameters [#:reference{:parameters "api-version"} #:reference{:parameters "subscriptionId"} {:description "Resource group identifier.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the provisioning service.", :in "path", :name "provisioningServiceName", :required true, :type "string"} {:description "The name of the certificate create or update.", :in "path", :maxLength 256, :name "certificateName", :required true, :type "string"} {:description "The certificate body.", :in "body", :name "certificateDescription", :required true, :schema #:reference{:definitions "CertificateBodyDescription"}} {:description "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.", :in "header", :name "If-Match", :required false, :type "string"}], :verb :put}}, :parameters {:api-version {:description "The version of the API.", :in "query", :name "api-version", :required true, :type "string"}, :subscriptionId {:description "The subscription identifier.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:TagsResource {:description "A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance.", :properties {:tags {:additionalProperties {:type "string"}, :description "Resource tags"}}}, :IotDpsSkuInfo {:description "List of possible provisioning service SKUs.", :properties {:capacity {:description "The number of units to provision", :format "int64", :type "integer"}, :name {:description "Sku name.", :enum ["S1"], :type "string", :x-ms-enum {:modelAsString true, :name "IotDpsSku"}}, :tier {:description "Pricing tier name of the provisioning service.", :readOnly true, :type "string"}}, :type "object"}, :NameAvailabilityInfo {:description "Description of name availability.", :properties {:message {:description "message containing a detailed reason name is unavailable", :type "string"}, :nameAvailable {:description "specifies if a name is available or not", :type "boolean"}, :reason {:description "specifies the reason a name is unavailable", :enum ["Invalid" "AlreadyExists"], :type "string", :x-ms-enum {:modelAsString true, :name "NameUnavailabilityReason"}}}, :type "object"}, :OperationListResult {:description "Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of IoT Hub operations supported by the Microsoft.Devices resource provider.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :CertificateBodyDescription {:description "The JSON-serialized X509 Certificate.", :properties {:certificate {:description "Base-64 representation of the X509 leaf certificate .cer file or just .pem file content.", :type "string"}}, :type "object"}, :Operation {:description "IoT Hub REST API operation.", :properties {:display {:description "The object that represents the operation.", :properties {:operation {:description "Name of the operation.", :readOnly true, :type "string"}, :provider {:description "Service provider: Microsoft Devices.", :readOnly true, :type "string"}, :resource {:description "Resource Type: ProvisioningServices.", :readOnly true, :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{read | write | action | delete}", :readOnly true, :type "string"}}, :type "object"}, :IotDpsSkuDefinitionListResult {:description "List of available SKUs.", :properties {:nextLink {:description "The next link.", :readOnly true, :type "string"}, :value {:description "The list of SKUs", :items #:reference{:definitions "IotDpsSkuDefinition"}, :type "array"}}, :type "object"}, :ErrorDetails {:description "Error details.", :properties {:code {:description "The error code.", :readOnly true, :type "string"}, :details {:description "The error details.", :readOnly true, :type "string"}, :httpStatusCode {:description "The HTTP status code.", :readOnly true, :type "string"}, :message {:description "The error message.", :readOnly true, :type "string"}}, :type "object"}, :OperationInputs {:description "Input values for operation results call.", :properties {:name {:description "The name of the Provisioning Service to check.", :type "string"}}, :required ["name"], :type "object"}, :IotDpsPropertiesDescription {:description "the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope", :properties {:allocationPolicy {:description "Allocation policy to be used by this provisioning service.", :enum ["Hashed" "GeoLatency" "Static"], :type "string", :x-ms-enum {:modelAsString true, :name "AllocationPolicy"}}, :authorizationPolicies {:description "List of authorization keys for a provisioning service.", :items #:reference{:definitions "SharedAccessSignatureAuthorizationRule[AccessRightsDescription]"}, :type "array"}, :deviceProvisioningHostName {:description "Device endpoint for this provisioning service.", :readOnly true, :type "string"}, :idScope {:description "Unique identifier of this provisioning service.", :readOnly true, :type "string"}, :iotHubs {:description "List of IoT hubs associated with this provisioning service.", :items #:reference{:definitions "IotHubDefinitionDescription"}, :type "array"}, :provisioningState {:description "The ARM provisioning state of the provisioning service.", :type "string"}, :serviceOperationsHostName {:description "Service endpoint for provisioning service.", :readOnly true, :type "string"}, :state {:description "Current state of the provisioning service.", :enum ["Activating" "Active" "Deleting" "Deleted" "ActivationFailed" "DeletionFailed" "Transitioning" "Suspending" "Suspended" "Resuming" "FailingOver" "FailoverFailed"], :type "string", :x-ms-enum {:modelAsString true, :name "state"}}}, :type "object"}, :CertificateProperties {:description "The description of an X509 CA Certificate.", :properties {:created {:description "The certificate's creation date and time.", :format "date-time-rfc1123", :readOnly true, :type "string"}, :expiry {:description "The certificate's expiration date and time.", :format "date-time-rfc1123", :readOnly true, :type "string"}, :isVerified {:description "Determines whether certificate has been verified.", :readOnly true, :type "boolean"}, :subject {:description "The certificate's subject name.", :readOnly true, :type "string"}, :thumbprint {:description "The certificate's thumbprint.", :readOnly true, :type "string"}, :updated {:description "The certificate's last update date and time.", :format "date-time-rfc1123", :readOnly true, :type "string"}}, :type "object"}, :SharedAccessSignatureAuthorizationRuleListResult {:description "List of shared access keys.", :properties {:nextLink {:description "The next link.", :readOnly true, :type "string"}, :value {:description "The list of shared access policies.", :items #:reference{:definitions "SharedAccessSignatureAuthorizationRule[AccessRightsDescription]"}, :type "array"}}, :type "object"}, :VerificationCodeRequest {:description "The JSON-serialized leaf certificate", :properties {:certificate {:description "base-64 representation of X509 certificate .cer file or just .pem file content.", :type "string"}}, :type "object"}, :AsyncOperationResult {:description "Result of a long running operation.", :properties {:error #:reference{:definitions "ErrorMesssage"}, :status {:description "current status of a long running operation.", :type "string"}}, :type "object"}, :VerificationCodeResponse {:description "Description of the response of the verification code.", :properties {:etag {:description "Request etag.", :readOnly true, :type "string"}, :id {:description "The resource identifier.", :readOnly true, :type "string"}, :name {:description "Name of certificate.", :readOnly true, :type "string"}, :properties {:properties {:created {:description "Certificate created time.", :type "string"}, :expiry {:description "Code expiry.", :type "string"}, :isVerified {:description "Indicate if the certificate is verified by owner of private key.", :type "boolean"}, :subject {:description "Certificate subject.", :type "string"}, :thumbprint {:description "Certificate thumbprint.", :type "string"}, :updated {:description "Certificate updated time.", :type "string"}, :verificationCode {:description "Verification code.", :type "string"}}, :type "object"}, :type {:description "The resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}, :CertificateListDescription {:description "The JSON-serialized array of Certificate objects.", :properties {:value {:description "The array of Certificate objects.", :items #:reference{:definitions "CertificateResponse"}, :type "array"}}, :type "object"}, :Resource {:description "The common properties of an Azure resource.", :properties {:id {:description "The resource identifier.", :readOnly true, :type "string"}, :location {:description "The resource location.", :type "string"}, :name {:description "The resource name.", :pattern "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The resource tags.", :type "object"}, :type {:description "The resource type.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :IotDpsSkuDefinition {:description "Available SKUs of tier and units.", :properties {:name {:description "Sku name.", :enum ["S1"], :type "string", :x-ms-enum {:modelAsString true, :name "IotDpsSku"}}}, :type "object"}, "SharedAccessSignatureAuthorizationRule[AccessRightsDescription]" {:description "Description of the shared access key.", :properties {:keyName {:description "Name of the key.", :type "string"}, :primaryKey {:description "Primary SAS key value.", :type "string"}, :rights {:description "Rights that this key has.", :enum ["ServiceConfig" "EnrollmentRead" "EnrollmentWrite" "DeviceConnect" "RegistrationStatusRead" "RegistrationStatusWrite"], :type "string", :x-ms-enum {:modelAsString true, :name "AccessRightsDescription"}}, :secondaryKey {:description "Secondary SAS key value.", :type "string"}}, :required ["keyName" "rights"], :type "object"}, :IotHubDefinitionDescription {:description "Description of the IoT hub.", :properties {:allocationWeight {:description "weight to apply for a given iot h.", :format "int32", :type "integer"}, :applyAllocationPolicy {:description "flag for applying allocationPolicy or not for a given iot hub.", :type "boolean"}, :connectionString {:description "Connection string og the IoT hub.", :type "string"}, :location {:description "ARM region of the IoT hub.", :type "string"}, :name {:description "Host name of the IoT hub.", :readOnly true, :type "string"}}, :required ["connectionString" "location"], :type "object"}, :ProvisioningServiceDescriptionListResult {:description "List of provisioning service descriptions.", :properties {:nextLink {:description "the next link", :readOnly true, :type "string"}, :value {:description "List of provisioning service descriptions.", :items #:reference{:definitions "ProvisioningServiceDescription"}, :type "array"}}, :type "object"}, :ProvisioningServiceDescription {:allOf [#:reference{:definitions "Resource"}], :description "The description of the provisioning service.", :properties {:etag {:description "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.", :type "string"}, :properties #:reference{:definitions "IotDpsPropertiesDescription"}, :sku #:reference{:definitions "IotDpsSkuInfo"}}, :required ["sku" "properties"], :type "object"}, :ErrorMesssage {:description "Error response containing message and code.", :properties {:code {:description "standard error code", :type "string"}, :details {:description "detailed summary of error", :type "string"}, :message {:description "standard error description", :type "string"}}, :type "object"}, :CertificateResponse {:description "The X509 Certificate.", :properties {:etag {:description "The entity tag.", :readOnly true, :type "string"}, :id {:description "The resource identifier.", :readOnly true, :type "string"}, :name {:description "The name of the certificate.", :readOnly true, :type "string"}, :properties #:reference{:definitions "CertificateProperties"}, :type {:description "The resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}}}