{:scheme "https", :host "management.azure.com", :info {:description "Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.", :title "WebSite Management Client", :version "2015-08-01"}, :ops {:Provider_UpdatePublishingUser {:path "/providers/Microsoft.Web/publishingUsers/web", :description nil, :parameters [{:description "Details of publishing user", :in "body", :name "requestMessage", :required true, :schema #:reference{:definitions "User"}} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Additional web app properties included in the response", :in "query", :name "propertiesToInclude", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteLogsConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Site logs configuration", :in "body", :name "siteLogsConfig", :required true, :schema #:reference{:definitions "SiteLogsConfig"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_UpdateSlotConfigNames {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body containing the names of application settings and connection strings", :in "body", :name "slotConfigNames", :required true, :schema #:reference{:definitions "SlotConfigNamesResource"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_CreateOrUpdateSiteHostNameBinding {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} {:description "Host name binding information", :in "body", :name "hostNameBinding", :required true, :schema #:reference{:definitions "HostNameBinding"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :ManagedHostingEnvironments_CreateOrUpdateManagedHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} {:description "Properties of managed hosting environment", :in "body", :name "ManagedHostingEnvironmentEnvelope", :required true, :schema #:reference{:definitions "HostingEnvironment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_GetWorkerPoolInstanceMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} {:description "Name of instance in the worker pool", :in "path", :name "instance", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_RestartSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app", :in "query", :name "softRestart", :type "boolean"} {:description "If true then the API will block until the app has been restarted", :in "query", :name "synchronous", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteVnetGateway {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GlobalDomainRegistration_ValidateDomainPurchaseInformation {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/validateDomainRegistrationInformation", :description nil, :parameters [{:description "Domain registration information", :in "body", :name "domainRegistrationInput", :required true, :schema #:reference{:definitions "DomainRegistrationInput"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetDeployments {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetMultiRolePoolInstanceMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of instance in the multiRole pool&gt;", :in "path", :name "instance", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSitePremierAddOnSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} {:in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :CertificateOrders_RenewCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/renew", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Renew parameters", :in "body", :name "renewCertificateOrderRequest", :required true, :schema #:reference{:definitions "RenewCertificateOrderRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteVnetGatewaySlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_DeleteServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_ListSiteRelayServiceConnectionsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the slot for the web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteLogsConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Site logs configuration", :in "body", :name "siteLogsConfig", :required true, :schema #:reference{:definitions "SiteLogsConfig"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_UpdateSiteRelayServiceConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The details of the Hybrid Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "RelayServiceConnectionEntity"}} {:description "The name of the slot for the web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :HostingEnvironments_CreateOrUpdateWorkerPool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} {:description "Properties of worker pool", :in "body", :name "workerPoolEnvelope", :required true, :schema #:reference{:definitions "WorkerPool"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteBackupConfigurationSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GenerateNewSitePublishingPasswordSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_GetHostingEnvironmentMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteVNETConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The properties of this Virtual Network Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetInfo"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :HostingEnvironments_GetHostingEnvironmentVips {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentDiagnostics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteVNETConnectionGatewaySlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The properties to update this gateway with.", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetGateway"}} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Global_GetAllServerFarms {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms", :description nil, :parameters [{:description "False to return a subset of App Service Plan properties, true to return all of the properties.\r\n            Retrieval of all properties may increase the API latency.", :in "query", :name "detailed", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_UpdateCsr {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} {:description "Details of certificate signing request if it exists already.", :in "body", :name "csrEnvelope", :required true, :schema #:reference{:definitions "Csr"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :CertificateOrders_DeleteCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "certificateOrderName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_ListSiteMetadata {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ServerFarms_UpdateVnetRoute {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "Name of the virtual network route", :in "path", :name "routeName", :required true, :type "string"} {:description "The route object", :in "body", :name "route", :required true, :schema #:reference{:definitions "VnetRoute"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_CreateOrUpdateSiteConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the configuration setting for the web app", :in "body", :name "siteConfig", :required true, :schema #:reference{:definitions "SiteConfig"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_UpdateSiteMetadataSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Meta data of web app", :in "body", :name "metadata", :required true, :schema #:reference{:definitions "StringDictionary"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :CertificateOrders_CreateOrUpdateCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Distinguished name to be used for purchasing certificate", :in "body", :name "certificateDistinguishedName", :required true, :schema #:reference{:definitions "CertificateOrder"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_StopSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Global_GetAllCertificates {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteVNETConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_StartSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_DeleteHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Delete even if the hostingEnvironment (App Service Environment) contains resources", :in "query", :name "forceDelete", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Global_GetSubscriptionGeoRegions {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions", :description nil, :parameters [{:description "Filter only to regions that support this sku", :in "query", :name "sku", :type "string"} {:description "Filter only to regions that support linux workers", :in "query", :name "linuxWorkersEnabled", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironments {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ApplySlotConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name. Settings from that slot will be applied on the source slot", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} {:description "Name of the source slot. Settings from the target slot will be applied onto this slot", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_SwapSlotWithProduction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSitePublishingProfileXml {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.", :in "body", :name "options", :required true, :schema #:reference{:definitions "CsmPublishingProfileOptions"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Recommendations_GetRecommendationBySubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations", :description nil, :parameters [{:description "If set, this API returns only the most critical recommendation among the others. Otherwise this API returns all recommendations available", :in "query", :name "featured", :type "boolean"} {:description "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channels eq 'Api' or channel eq 'Notification'", :in "query", :name "$filter", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_BackupSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Global_IsHostingEnvironmentNameAvailable {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable", :description nil, :parameters [{:description "Hosting environment name", :in "query", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetVnetFromServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteRelayServiceConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSlotConfigNames {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_CreateOrUpdateVnetRoute {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "Name of the virtual network route", :in "path", :name "routeName", :required true, :type "string"} {:description "The route object", :in "body", :name "route", :required true, :schema #:reference{:definitions "VnetRoute"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Global_UpdateSubscriptionPublishingCredentials {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/publishingCredentials", :description nil, :parameters [{:description "requestMessage with new publishing credentials", :in "body", :name "requestMessage", :required true, :schema #:reference{:definitions "User"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetInstanceDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteAppSettingsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Application settings of web app", :in "body", :name "appSettings", :required true, :schema #:reference{:definitions "StringDictionary"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteSnapshots {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots", :description nil, :parameters [{:description "Webspace", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Website Name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_ListSiteAuthSettingsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_CreateOrUpdateSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "Details of web app if it exists already", :in "body", :name "siteEnvelope", :required true, :schema #:reference{:definitions "Site"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation", :in "query", :name "skipDnsRegistration", :type "string"} {:description "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.", :in "query", :name "skipCustomDomainVerification", :type "string"} {:description "If true, web app hostname is force registered with DNS", :in "query", :name "forceDnsRegistration", :type "string"} {:description "Time to live in seconds for web app's default domain name", :in "query", :name "ttlInSeconds", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :TopLevelDomains_GetGetTopLevelDomains {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteRelayServiceConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The details of the Hybrid Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "RelayServiceConnectionEntity"}} {:description "The name of the slot for the web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_CreateOrUpdateMultiRolePool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Properties of multiRole pool", :in "body", :name "multiRolePoolEnvelope", :required true, :schema #:reference{:definitions "WorkerPool"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_SyncSiteRepository {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_RebootHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ManagedHostingEnvironments_GetManagedHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_UpdateCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} {:description "Details of certificate if it exists already.", :in "body", :name "certificateEnvelope", :required true, :schema #:reference{:definitions "Certificate"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Provider_GetSourceControl {:path "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}", :description nil, :parameters [{:description "Type of source control", :in "path", :name "sourceControlType", :required true, :type "string"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentOperations {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_GetCertificates {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "certificateOrderName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_RestartSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app", :in "query", :name "softRestart", :type "boolean"} {:description "If true then the API will block until the app has been restarted", :in "query", :name "synchronous", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSlotsDifferencesFromProduction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteSnapshotsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots", :description nil, :parameters [{:description "Webspace", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Website Name", :in "path", :name "name", :required true, :type "string"} {:description "Website Slot", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_GetHostingEnvironmentSites {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Comma separated list of site properties to include", :in "query", :name "propertiesToInclude", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteRelayServiceConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The name of the slot for the web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :ServerFarms_GetServerFarms {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetWorkerPoolSkus {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentWebWorkerMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} {:description "Include instance details", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_GetCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteSourceControl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the source control parameters", :in "body", :name "siteSourceControl", :required true, :schema #:reference{:definitions "SiteSourceControl"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Certificates_DeleteCsr {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate signing request.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_UpdateSiteBackupConfiguration {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Additional web app properties included in the response", :in "query", :name "propertiesToInclude", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteInstanceIdentifiers {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteBackupConfigurationSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Usage_GetUsage {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web.Admin/environments/{environmentName}/usage", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Environment name", :in "path", :name "environmentName", :required true, :type "string"} {:description "Last marker that was returned from the batch", :in "query", :name "lastId", :required true, :type "string"} {:description "size of the batch to be returned.", :format "int32", :in "query", :name "batchSize", :required true, :type "integer"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GlobalDomainRegistration_ListDomainRecommendations {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations", :description nil, :parameters [{:description "Domain recommendation search parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DomainRecommendationSearchParameters"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSiteRelayServiceConnections {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_IsSiteCloneableSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CertificateOrders_ResendCertificateEmail {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/resendEmail", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate order name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Provider_GetPublishingUser {:path "/providers/Microsoft.Web/publishingUsers/web", :description nil, :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :Recommendations_GetRecommendedRulesForSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations", :description nil, :parameters [{:description "Resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Site name", :in "path", :name "siteName", :required true, :type "string"} {:description "If set, this API returns only the most critical recommendation among the others. Otherwise this API returns all recommendations available", :in "query", :name "featured", :type "boolean"} {:description "The name of site SKU.", :in "query", :name "siteSku", :type "string"} {:description "The number of site slots associated to the site", :format "int32", :in "query", :name "numSlots", :type "integer"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_StartSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteMetricDefinitionsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :TopLevelDomains_GetTopLevelDomain {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}", :description nil, :parameters [{:description "Name of the top level domain", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ListSiteConnectionStringsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_UpdateSiteConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the configuration setting for the web app", :in "body", :name "siteConfig", :required true, :schema #:reference{:definitions "SiteConfig"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_ApplySlotConfigToProduction {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name. Settings from that slot will be applied on the source slot", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ManagedHostingEnvironments_DeleteManagedHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} {:description "Delete even if the managed hosting environment contains resources", :in "query", :name "forceDelete", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_CreateDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Details of deployment", :in "body", :name "deployment", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_UpdateSiteConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the configuration setting for the web app", :in "body", :name "siteConfig", :required true, :schema #:reference{:definitions "SiteConfig"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_CreateOrUpdateSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "Details of web app if it exists already", :in "body", :name "siteEnvelope", :required true, :schema #:reference{:definitions "Site"}} {:description "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation", :in "query", :name "skipDnsRegistration", :type "string"} {:description "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.", :in "query", :name "skipCustomDomainVerification", :type "string"} {:description "If true, web app hostname is force registered with DNS", :in "query", :name "forceDnsRegistration", :type "string"} {:description "Time to live in seconds for web app's default domain name", :in "query", :name "ttlInSeconds", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteSlots {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "List of app properties to include in the response", :in "query", :name "propertiesToInclude", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_GetCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteBackupStatus {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_IsSiteCloneable {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_GetHostingEnvironmentWebWorkerUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteInstanceIdentifiersSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ManagedHostingEnvironments_GetManagedHostingEnvironmentOperation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/operations/{operationId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} {:description "operation identifier GUID", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_GetCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "certificateOrderName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetServerFarmMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "If true, metrics are broken down per App Service Plan instance", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Domains_UpdateDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}", :description nil, :parameters [{:description "&gt;Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the domain", :in "path", :name "domainName", :required true, :type "string"} {:description "Domain registration information", :in "body", :name "domain", :required true, :schema #:reference{:definitions "Domain"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_CreateOrUpdateSiteVNETConnectionGateway {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The properties to update this gateway with.", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetGateway"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :ServerFarms_GetServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetMultiRolePoolSkus {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the configuration setting for the web app", :in "body", :name "siteConfig", :required true, :schema #:reference{:definitions "SiteConfig"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteBackupStatusSecretsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_GetWorkerPool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteSourceControlSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_ListSitePublishingProfileXmlSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.", :in "body", :name "options", :required true, :schema #:reference{:definitions "CsmPublishingProfileOptions"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSiteAppSettingsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_DiscoverSiteRestore {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on restore request", :in "body", :name "request", :required true, :schema #:reference{:definitions "RestoreRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteHostNameBindingSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} {:description "Host name binding information", :in "body", :name "hostNameBinding", :required true, :schema #:reference{:definitions "HostNameBinding"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :CertificateOrders_RetrieveCertificateActions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveCertificateActions", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate order name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GenerateNewSitePublishingPassword {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_GetHostingEnvironmentMultiRoleMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Beginning time of metrics query", :in "query", :name "startTime", :type "string"} {:description "End time of metrics query", :in "query", :name "endTime", :type "string"} {:description "Time granularity of metrics query", :in "query", :name "timeGrain", :type "string"} {:description "Include instance details", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GlobalResourceGroups_MoveResources {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "body", :name "moveResourceEnvelope", :required true, :schema #:reference{:definitions "CsmMoveResourceEnvelope"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteLogsConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_UpdateServerFarmVnetGateway {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "The name of the virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. Only 'primary' is supported.", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The gateway entity.", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetGateway"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_RestoreSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup to restore", :in "path", :name "backupId", :required true, :type "string"} {:description "Information on restore request", :in "body", :name "request", :required true, :schema #:reference{:definitions "RestoreRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CertificateOrders_DeleteCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetDeploymentsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :TopLevelDomains_ListTopLevelDomainAgreements {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements", :description nil, :parameters [{:description "Name of the top level domain", :in "path", :name "name", :required true, :type "string"} {:description "Domain agreement options", :in "body", :name "agreementOption", :required true, :schema #:reference{:definitions "TopLevelDomainAgreementOption"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Provider_UpdateSourceControl {:path "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}", :description nil, :parameters [{:description "Type of source control", :in "path", :name "sourceControlType", :required true, :type "string"} {:description "Source control token information", :in "body", :name "requestMessage", :required true, :schema #:reference{:definitions "SourceControl"}} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_CreateOrUpdateSiteVNETConnectionGatewaySlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The properties to update this gateway with.", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetGateway"}} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Global_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability", :description nil, :parameters [{:description "Name availability request", :in "body", :name "request", :required true, :schema #:reference{:definitions "ResourceNameAvailabilityRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_UpdateSiteSourceControlSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the source control parameters", :in "body", :name "siteSourceControl", :required true, :schema #:reference{:definitions "SiteSourceControl"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Recommendations_GetRecommendationHistoryForSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory", :description nil, :parameters [{:description "Resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Site name", :in "path", :name "siteName", :required true, :type "string"} {:description "The start time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'", :in "query", :name "startTime", :type "string"} {:description "The end time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'", :in "query", :name "endTime", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_GetSubscriptionPublishingCredentials {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/publishingCredentials", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ClassicMobileServices_GetClassicMobileService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of mobile service", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetRoutesForVnet {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_ListPremierAddOnOffers {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteHostNameBinding {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_ListSiteAppSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Domains_GetDomains {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteNetworkFeaturesSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The type of view. This can either be \"summary\" or \"detailed\".", :in "path", :name "view", :required true, :type "string"} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteSourceControlSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the source control parameters", :in "body", :name "siteSourceControl", :required true, :schema #:reference{:definitions "SiteSourceControl"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_ListSiteAuthSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSiteBackupsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateInstanceDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} {:description "Details of deployment", :in "body", :name "deployment", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteRelayServiceConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The details of the Hybrid Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "RelayServiceConnectionEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Certificates_DeleteCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate to be deleted.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :GlobalDomainRegistration_GetAllDomains {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ManagedHostingEnvironments_GetManagedHostingEnvironmentWebHostingPlans {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/webhostingplans", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteAuthSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Auth settings associated with web app", :in "body", :name "siteAuthSettings", :required true, :schema #:reference{:definitions "SiteAuthSettings"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetInstanceDeploymentsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentDiagnosticsItem {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of the diagnostics", :in "path", :name "diagnosticsName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_RecoverSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.", :in "body", :name "recoveryEntity", :required true, :schema #:reference{:definitions "CsmSiteRecoveryEntity"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ListSitePremierAddOns {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :ClassicMobileServices_GetClassicMobileServices {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentOperation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations/{operationId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "operation identifier GUID", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_UpdateCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "certificateOrderName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Key Vault secret csm Id", :in "body", :name "keyVaultCertificate", :required true, :schema #:reference{:definitions "CertificateOrderCertificate"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_DeleteInstanceDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Domains_CreateOrUpdateDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}", :description nil, :parameters [{:description "&gt;Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the domain", :in "path", :name "domainName", :required true, :type "string"} {:description "Domain registration information", :in "body", :name "domain", :required true, :schema #:reference{:definitions "Domain"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_DeleteSitePremierAddOn {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_ListSiteMetadataSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteNetworkFeatures {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The type of view. This can either be \"summary\" or \"detailed\".", :in "path", :name "view", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteVNETConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The properties of this Virtual Network Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetInfo"}} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_StopSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_AddSitePremierAddOn {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} {:in "body", :name "premierAddOn", :required true, :schema #:reference{:definitions "PremierAddOnRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteBackupStatusSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetServerFarmMetricDefintions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_UpdateCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Distinguished name to be used for purchasing certificate", :in "body", :name "certificateDistinguishedName", :required true, :schema #:reference{:definitions "CertificateOrder"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_UpdateSiteConnectionStrings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Connection strings associated with web app", :in "body", :name "connectionStrings", :required true, :schema #:reference{:definitions "ConnectionStringDictionary"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :CertificateOrders_RetrieveCertificateEmailHistory {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveEmailHistory", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate order name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSitePublishingCredentials {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_UpdateSiteAuthSettingsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Auth settings associated with web app", :in "body", :name "siteAuthSettings", :required true, :schema #:reference{:definitions "SiteAuthSettings"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_DeleteSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "If true, web app metrics are also deleted", :in "query", :name "deleteMetrics", :type "string"} {:description "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted", :in "query", :name "deleteEmptyServerFarm", :type "string"} {:description "If true, DNS registration is skipped", :in "query", :name "skipDnsRegistration", :type "string"} {:description "If true, all slots associated with web app are also deleted", :in "query", :name "deleteAllSlots", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSiteBackupConfiguration {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Recommendations_GetRuleDetailsBySiteName {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}", :description nil, :parameters [{:description "Resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Site name", :in "path", :name "siteName", :required true, :type "string"} {:description "Recommendation rule name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_VerifyDomainOwnership {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/verifyDomainOwnership", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate order name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ManagedHostingEnvironments_GetManagedHostingEnvironmentVips {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/capacities/virtualip", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentMultiRoleMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateInstanceDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} {:description "Details of deployment", :in "body", :name "deployment", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Global_GetAllManagedHostingEnvironments {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/managedHostingEnvironments", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_DeleteVnetRoute {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "Name of the virtual network route", :in "path", :name "routeName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSiteMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "If true, metric details are included in response", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_CreateOrUpdateCsr {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} {:description "Details of certificate signing request if it exists already.", :in "body", :name "csrEnvelope", :required true, :schema #:reference{:definitions "Csr"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_DeleteInstanceDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_UpdateSiteVNETConnectionGateway {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the gateway. The only gateway that exists presently is \"primary\"", :in "path", :name "gatewayName", :required true, :type "string"} {:description "The properties to update this gateway with.", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetGateway"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :patch}, :Sites_GetSiteOperationSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/operationresults/{operationId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of an operation", :in "path", :name "operationId", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DiscoverSiteRestoreSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on restore request", :in "body", :name "request", :required true, :schema #:reference{:definitions "RestoreRequest"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetSiteMetricsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "If true, metric details are included in response", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteSourceControl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSiteHostNameBindingsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Domains_DeleteDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the domain", :in "path", :name "domainName", :required true, :type "string"} {:description "If true then the domain will be deleted immediately instead of after 24 hours", :in "query", :name "forceHardDeleteDomain", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSiteOperation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/operationresults/{operationId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of an operation", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteHostNameBinding {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSites {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Additional web app properties included in the response", :in "query", :name "propertiesToInclude", :type "string"} {:description "Types of apps included in the response", :in "query", :name "includeSiteTypes", :type "string"} {:description "Whether or not to include deployments slots in results", :in "query", :name "includeSlots", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteBackupSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSitePremierAddOn {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_GetAllClassicMobileServices {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/classicMobileServices", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetVnetsForServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetServerFarmOperation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/operationresults/{operationId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of server farm", :in "path", :name "name", :required true, :type "string"} {:description "Id of Server farm operation\"&gt;", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentServerFarms {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteBackupStatusSecrets {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Certificates_CreateOrUpdateCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} {:description "Details of certificate if it exists already.", :in "body", :name "certificateEnvelope", :required true, :schema #:reference{:definitions "Certificate"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Domains_GetDomainOperation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/operationresults/{operationId}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the domain", :in "path", :name "domainName", :required true, :type "string"} {:description "Domain purchase operation Id", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetMultiRolePoolInstanceMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of instance in the multiRole pool", :in "path", :name "instance", :required true, :type "string"} {:description "Include instance details", :in "query", :name "details", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteSourceControl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_SwapSlotsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} {:description "Name of source slot for the swap", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSlotsDifferencesSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the target slot name", :in "body", :name "slotSwapEntity", :required true, :schema #:reference{:definitions "CsmSlotEntity"}} {:description "Name of the source slot", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_ResumeHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_CreateOrUpdateSiteVNETConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The properties of this Virtual Network Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetInfo"}} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_SuspendHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteLogsConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :ServerFarms_RestartSitesForServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/restartSites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Soft restart applies the configuration settings and restarts the apps if necessary. Hard restart always restarts and reprovisions the apps", :in "query", :name "softRestart", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ManagedHostingEnvironments_GetManagedHostingEnvironmentSites {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/sites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} {:description "Comma separated list of site properties to include", :in "query", :name "propertiesToInclude", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_RestoreSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup to restore", :in "path", :name "backupId", :required true, :type "string"} {:description "Information on restore request", :in "body", :name "request", :required true, :schema #:reference{:definitions "RestoreRequest"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteVNETConnections {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteRelayServiceConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The name of the slot for the web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteSourceControl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Request body that contains the source control parameters", :in "body", :name "siteSourceControl", :required true, :schema #:reference{:definitions "SiteSourceControl"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :ManagedHostingEnvironments_GetManagedHostingEnvironments {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetWorkerPools {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ResetSlotConfigSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Domains_GetDomain {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the domain", :in "path", :name "domainName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetMultiRolePool {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ListSitePremierAddOnsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetWorkerPoolInstanceMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} {:description "Name of instance in the worker pool", :in "path", :name "instance", :required true, :type "string"} {:description "Include instance details", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteAppSettings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Application settings of web app", :in "body", :name "appSettings", :required true, :schema #:reference{:definitions "StringDictionary"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_CreateDeploymentSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Details of deployment", :in "body", :name "deployment", :required true, :schema #:reference{:definitions "Deployment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_DeleteBackup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of backup", :in "path", :name "backupId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :ServerFarms_CreateOrUpdateServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Details of App Service Plan", :in "body", :name "serverFarmEnvelope", :required true, :schema #:reference{:definitions "ServerFarmWithRichSku"}} {:description "OBSOLETE: If true, allow pending state for App Service Plan", :in "query", :name "allowPendingState", :type "boolean"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_ListSiteBackups {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteHostNameBindings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_IsHostingEnvironmentWithLegacyNameAvailable {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable/{name}", :description nil, :parameters [{:description "Hosting environment name", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentWebWorkerMetricDefinitions {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker pool", :in "path", :name "workerPoolName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_CreateOrUpdateHostingEnvironment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Properties of hostingEnvironment (App Service Environment)", :in "body", :name "hostingEnvironmentEnvelope", :required true, :schema #:reference{:definitions "HostingEnvironment"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetDeletedSites {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/deletedSites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Additional web app properties included in the response", :in "query", :name "propertiesToInclude", :type "string"} {:description "Types of apps included in the response", :in "query", :name "includeSiteTypes", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_GetCertificateOrders {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetServerFarmSites {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/sites", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Skip to of web apps in a list. If specified, the resulting list will contain web apps starting from (including) the skipToken. Else, the resulting list contains web apps from the start of the list", :in "query", :name "$skipToken", :type "string"} {:description "Supported filter: $filter=state eq running. Returns only web apps that are currently running", :in "query", :name "$filter", :type "string"} {:description "List page size. If specified, results are paged.", :in "query", :name "$top", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_CreateOrUpdateSiteRelayServiceConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} {:description "The details of the Hybrid Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "RelayServiceConnectionEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_GetHostingEnvironmentMultiRoleUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_GetAllHostingEnvironments {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteVNETConnectionsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ResetProductionSlotConfig {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :CertificateOrders_CreateOrUpdateCertificate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "certificateOrderName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Key Vault secret csm Id", :in "body", :name "keyVaultCertificate", :required true, :schema #:reference{:definitions "CertificateOrderCertificate"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_GetInstanceDeployment {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of the deployment", :in "path", :name "id", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetRouteForVnet {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "Name of the virtual network route", :in "path", :name "routeName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ServerFarms_GetServerFarmVnetGateway {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the App Service Plan", :in "path", :name "name", :required true, :type "string"} {:description "Name of the virtual network", :in "path", :name "vnetName", :required true, :type "string"} {:description "Name of the gateway. Only the 'primary' gateway is supported.", :in "path", :name "gatewayName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentUsages {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :CertificateOrders_ReissueCertificateOrder {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/reissue", :description nil, :parameters [{:description "Azure resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Certificate name", :in "path", :name "name", :required true, :type "string"} {:description "Reissue parameters", :in "body", :name "reissueCertificateOrderRequest", :required true, :schema #:reference{:definitions "ReissueCertificateOrderRequest"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ClassicMobileServices_DeleteClassicMobileService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices/{name}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of mobile service", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_CreateOrUpdateSiteVNETConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The properties of this Virtual Network Connection", :in "body", :name "connectionEnvelope", :required true, :schema #:reference{:definitions "VnetInfo"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_BackupSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Information on backup request", :in "body", :name "request", :required true, :schema #:reference{:definitions "BackupRequest"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :HostingEnvironments_GetHostingEnvironmentCapacities {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :GlobalDomainRegistration_GetDomainControlCenterSsoRequest {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Certificates_GetCertificates {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Provider_GetSourceControls {:path "/providers/Microsoft.Web/sourcecontrols", :description nil, :parameters [#:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSitePremierAddOnSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} {:in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteSourceControlSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetInstanceDeployments {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Id of web app instance", :in "path", :name "instanceId", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_GetCsr {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of the certificate.", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetHostingEnvironmentWebHostingPlans {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/webhostingplans", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :HostingEnvironments_GetMultiRolePools {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_DeleteSiteSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "If true, web app metrics are also deleted", :in "query", :name "deleteMetrics", :type "string"} {:description "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted", :in "query", :name "deleteEmptyServerFarm", :type "string"} {:description "If true, DNS registration is skipped", :in "query", :name "skipDnsRegistration", :type "string"} {:description "If true, all slots associated with web app are also deleted", :in "query", :name "deleteAllSlots", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_DeleteSiteVNETConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :GlobalCertificateOrder_ValidateCertificatePurchaseInformation {:path "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/validateCertificateRegistrationInformation", :description nil, :parameters [{:description "Certificate order", :in "body", :name "certificateOrder", :required true, :schema #:reference{:definitions "CertificateOrder"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_DeleteSiteHostNameBindingSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :delete}, :Sites_GetSiteHostNameBindingSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Name of host", :in "path", :name "hostName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_ListSitePublishingCredentialsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_GetSiteRelayServiceConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name by which the Hybrid Connection is identified", :in "path", :name "entityName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Global_GetAllSites {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteMetadata {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Meta data of web app", :in "body", :name "metadata", :required true, :schema #:reference{:definitions "StringDictionary"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_SyncSiteRepositorySlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_ListSiteConnectionStrings {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :ServerFarms_RebootWorkerForServerFarm {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/workers/{workerName}/reboot", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of server farm", :in "path", :name "name", :required true, :type "string"} {:description "Name of worker machine, typically starts with RD", :in "path", :name "workerName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :GlobalDomainRegistration_CheckDomainAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability", :description nil, :parameters [{:description "Name of the domain", :in "body", :name "identifier", :required true, :schema #:reference{:definitions "NameIdentifier"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :Sites_AddSitePremierAddOnSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}", :description nil, :parameters [{:in "path", :name "resourceGroupName", :required true, :type "string"} {:in "path", :name "name", :required true, :type "string"} {:in "path", :name "premierAddOnName", :required true, :type "string"} {:in "body", :name "premierAddOn", :required true, :schema #:reference{:definitions "PremierAddOnRequest"}} {:in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :HostingEnvironments_GetHostingEnvironmentMetrics {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metrics", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of hostingEnvironment (App Service Environment)", :in "path", :name "name", :required true, :type "string"} {:description "Include instance details", :in "query", :name "details", :type "boolean"} {:description "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_UpdateSiteConnectionStringsSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Connection strings associated with web app", :in "body", :name "connectionStrings", :required true, :schema #:reference{:definitions "ConnectionStringDictionary"}} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :put}, :Sites_RecoverSite {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.", :in "body", :name "recoveryEntity", :required true, :schema #:reference{:definitions "CsmSiteRecoveryEntity"}} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :post}, :GlobalCertificateOrder_GetAllCertificateOrders {:path "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders", :description nil, :parameters [#:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteVNETConnectionSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} {:description "The name of the slot for this web app.", :in "path", :name "slot", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteVNETConnection {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}", :description nil, :parameters [{:description "The resource group name", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the web app", :in "path", :name "name", :required true, :type "string"} {:description "The name of the Virtual Network", :in "path", :name "vnetName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Sites_GetSiteUsagesSlot {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of web app", :in "path", :name "name", :required true, :type "string"} {:description "Name of web app slot. If not specified then will default to production slot.", :in "path", :name "slot", :required true, :type "string"} {:description "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.", :in "query", :name "$filter", :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :ManagedHostingEnvironments_GetManagedHostingEnvironmentServerFarms {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/serverfarms", :description nil, :parameters [{:description "Name of resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "Name of managed hosting environment", :in "path", :name "name", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}, :Certificates_GetCsrs {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs", :description nil, :parameters [{:description "Name of the resource group", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "subscriptionIdParameter"} #:reference{:parameters "apiVersionParameter"}], :verb :get}}, :parameters {:apiVersionParameter {:description "API Version", :in "query", :name "api-version", :required true, :type "string"}, :subscriptionIdParameter {:description "Subscription Id", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:AutoHealTriggers {:description "AutoHealTriggers - describes the triggers for auto-heal.", :properties {:privateBytesInKB {:description "PrivateBytesInKB - Defines a rule based on private bytes", :format "int32", :type "integer"}, :requests #:reference{:definitions "RequestsBasedTrigger"}, :slowRequests #:reference{:definitions "SlowRequestsBasedTrigger"}, :statusCodes {:description "StatusCodes - Defines a rule based on status codes", :items #:reference{:definitions "StatusCodesBasedTrigger"}, :type "array"}}, :type "object"}, :MetricDefinition {:allOf [#:reference{:definitions "Resource"}], :description "Class representing metadata for the metrics", :properties {:properties {:properties {:displayName {:description "Friendly name shown in the UI", :type "string"}, :metricAvailabilities {:description "List of time grains supported for the metric together with retention period", :items #:reference{:definitions "MetricAvailabilily"}, :type "array"}, :name {:description "Name of the metric", :type "string"}, :primaryAggregationType {:description "Primary aggregation type", :type "string"}, :unit {:description "Unit of the metric", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :MetricAvailabilily {:description "Class representing metrics availability and retention", :properties {:retention {:description "Retention period for the current {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}", :type "string"}, :timeGrain {:description "Time grain", :type "string"}}, :type "object"}, :Domain {:allOf [#:reference{:definitions "Resource"}], :description "Represents a domain", :properties {:properties {:properties {:contactBilling #:reference{:definitions "Contact"}, :contactAdmin #:reference{:definitions "Contact"}, :managedHostNames {:description "All hostnames derived from the domain and assigned to Azure resources", :items #:reference{:definitions "HostName"}, :type "array"}, :provisioningState {:description "Domain provisioning state", :enum ["Succeeded" "Failed" "Canceled" "InProgress" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}}, :contactRegistrant #:reference{:definitions "Contact"}, :expirationTime {:description "Domain expiration timestamp", :format "date-time", :type "string"}, :lastRenewedTime {:description "Timestamp when the domain was renewed last time", :format "date-time", :type "string"}, :privacy {:description "If true then domain privacy is enabled for this domain", :type "boolean"}, :contactTech #:reference{:definitions "Contact"}, :domainNotRenewableReasons {:description "Reasons why domain is not renewable", :items {:enum ["RegistrationStatusNotSupportedForRenewal" "ExpirationNotInRenewalTimeRange" "SubscriptionNotActive"], :type "string"}, :type "array"}, :consent #:reference{:definitions "DomainPurchaseConsent"}, :readyForDnsRecordManagement {:description "If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to", :type "boolean"}, :createdTime {:description "Domain creation timestamp", :format "date-time", :type "string"}, :registrationStatus {:description "Domain registration status", :enum ["Active" "Awaiting" "Cancelled" "Confiscated" "Disabled" "Excluded" "Expired" "Failed" "Held" "Locked" "Parked" "Pending" "Reserved" "Reverted" "Suspended" "Transferred" "Unknown" "Unlocked" "Unparked" "Updated" "JsonConverterFailed"], :type "string", :x-ms-enum {:modelAsString false, :name "DomainStatus"}}, :nameServers {:description "Name servers", :items {:type "string"}, :type "array"}, :autoRenew {:description "If true then domain will renewed automatically", :type "boolean"}}, :x-ms-client-flatten true}}, :type "object"}, :HandlerMapping {:description "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \r\n            For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.", :properties {:arguments {:description "Command-line arguments to be passed to the script processor.", :type "string"}, :extension {:description "Requests with this extension will be handled using the specified FastCGI application.", :type "string"}, :scriptProcessor {:description "The absolute path to the FastCGI application.", :type "string"}}, :type "object"}, :HostNameSslState {:description "Object that represents a SSL-enabled host name.", :properties {:name {:description "Host name", :type "string"}, :sslState {:description "SSL type", :enum ["Disabled" "SniEnabled" "IpBasedEnabled"], :type "string", :x-ms-enum {:modelAsString false, :name "SslState"}}, :thumbprint {:description "SSL cert thumbprint", :type "string"}, :toUpdate {:description "Set this flag to update existing host name", :type "boolean"}, :virtualIP {:description "Virtual IP address assigned to the host name if IP based SSL is enabled", :type "string"}}, :required ["sslState"], :type "object"}, :NameValuePair {:description "Name value pair", :properties {:name {:description "Pair name", :type "string"}, :value {:description "Pair value", :type "string"}}, :type "object"}, :RecommendationRule {:description "Represents a recommendation rule that the recommendation engine can perform", :properties {:description {:description "Localized detailed description of the rule", :type "string"}, :tags {:description "An array of category tags that the rule contains.", :items {:type "string"}, :type "array"}, :channels {:description "List of available channels that this rule applies.", :enum ["Notification" "Api" "Email" "All"], :type "string", :x-ms-enum {:modelAsString false, :name "Channels"}}, :displayName {:description "UI friendly name of the rule", :type "string"}, :name {:description "Unique name of the rule", :type "string"}, :recommendationId {:description "Recommendation ID of an associated recommendation object tied to the rule, if exists.\r\n            If such an object doesn't exist, it is set to null.", :type "string"}, :level {:description "Level of impact indicating how critical this rule is.", :enum ["Critical" "Warning" "Information" "NonUrgentSuggestion"], :type "string", :x-ms-enum {:modelAsString false, :name "NotificationLevel"}}, :actionName {:description "Name of action that is recommended by this rule in string", :type "string"}, :enabled {:description "On/off flag indicating the rule is currently enabled or disabled.", :format "int32", :type "integer"}, :message {:description "Localized name of the rule (Good for UI)", :type "string"}}, :required ["level" "channels"], :type "object"}, :RestoreResponse {:allOf [#:reference{:definitions "Resource"}], :description "Response for a restore site request", :properties {:properties {:properties {:operationId {:description "When server starts the restore process, it will return an OperationId identifying that particular restore operation", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :CertificateCollection {:description "Collection of certificates", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "Certificate"}, :type "array"}}, :type "object"}, :AzureTableStorageApplicationLogsConfig {:description "Application logs to azure table storage configuration", :properties {:level {:description "Log level", :enum ["Off" "Verbose" "Information" "Warning" "Error"], :type "string", :x-ms-enum {:modelAsString false, :name "LogLevel"}}, :sasUrl {:description "SAS url to an azure table with add/query/delete permissions", :type "string"}}, :type "object"}, :RoutingRule {:description "Routing rules for TiP", :properties {:name {:description "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.", :type "string"}}, :type "object"}, :HostNameBinding {:allOf [#:reference{:definitions "Resource"}], :description "A host name binding object", :properties {:properties {:properties {:azureResourceName {:description "Azure resource name", :type "string"}, :azureResourceType {:description "Azure resource type", :enum ["Website" "TrafficManager"], :type "string", :x-ms-enum {:modelAsString false, :name "AzureResourceType"}}, :customHostNameDnsRecordType {:description "Custom DNS record type", :enum ["CName" "A"], :type "string", :x-ms-enum {:modelAsString false, :name "CustomHostNameDnsRecordType"}}, :domainId {:description "Fully qualified ARM domain resource URI", :type "string"}, :hostNameType {:description "Host name type", :enum ["Verified" "Managed"], :type "string", :x-ms-enum {:modelAsString false, :name "HostNameType"}}, :name {:description "Hostname", :type "string"}, :siteName {:description "Web app name", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :ConnStringInfo {:description "Represents database connection string information", :properties {:connectionString {:description "Connection string value", :type "string"}, :name {:description "Name of connection string", :type "string"}, :type {:description "Type of database", :enum ["MySql" "SQLServer" "SQLAzure" "Custom"], :type "string", :x-ms-enum {:modelAsString false, :name "DatabaseServerType"}}}, :required ["type"], :type "object"}, :RequestsBasedTrigger {:description "RequestsBasedTrigger", :properties {:count {:description "Count", :format "int32", :type "integer"}, :timeInterval {:description "TimeInterval", :type "string"}}, :type "object"}, :StringDictionary {:allOf [#:reference{:definitions "Resource"}], :description "String dictionary resource", :properties {:properties {:additionalProperties {:type "string"}, :description "Settings", :type "object", :x-ms-client-flatten true}}, :type "object"}, :SkuInfoCollection {:description "Collection of SkuInfos", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "SkuInfo"}, :type "array"}}, :type "object"}, :TopLevelDomain {:allOf [#:reference{:definitions "Resource"}], :description "A top level domain object", :properties {:properties {:properties {:name {:description "Name of the top level domain", :type "string"}, :privacy {:description "If true then the top level domain supports domain privacy", :type "boolean"}}, :x-ms-client-flatten true}}, :type "object"}, :BackupRequest {:allOf [#:reference{:definitions "Resource"}], :description "Description of a backup which will be performed", :properties {:properties {:properties {:backupSchedule #:reference{:definitions "BackupSchedule"}, :databases {:description "Databases included in the backup", :items #:reference{:definitions "DatabaseBackupSetting"}, :type "array"}, :enabled {:description "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled", :type "boolean"}, :name {:description "Name of the backup", :type "string"}, :storageAccountUrl {:description "SAS URL to the container", :type "string"}, :type {:description "Type of the backup", :enum ["Default" "Clone" "Relocation"], :type "string", :x-ms-enum {:modelAsString false, :name "BackupRestoreOperationType"}}}, :required ["type"], :x-ms-client-flatten true}}, :type "object"}, :ResourceMetricName {:description "Name of a metric for any resource", :properties {:localizedValue {:description "Localized metric name value", :type "string"}, :value {:description "metric name value", :type "string"}}, :type "object"}, :Recommendation {:description "Represents a recommendation result generated by the recommendation engine", :properties {:creationTime {:description "Timestamp when this instance was created.", :format "date-time", :type "string"}, :tags {:description "The list of category tags that this recommendation belongs to.", :items {:type "string"}, :type "array"}, :channels {:description "List of channels that this recommendation can apply.", :enum ["Notification" "Api" "Email" "All"], :type "string", :x-ms-enum {:modelAsString false, :name "Channels"}}, :startTime {:description "The beginning time of a range that the recommendation refers to.", :format "date-time", :type "string"}, :displayName {:description "UI friendly name of the rule (may not be unique)", :type "string"}, :recommendationId {:description "A GUID value that each recommendation object is associated with.", :type "string"}, :notifiedTime {:description "Last timestamp this instance was actually notified. Null means that this recommendation hasn't been notified yet.", :format "date-time", :type "string"}, :endTime {:description "The end time of a range that the recommendation refers to.", :format "date-time", :type "string"}, :ruleName {:description "Unique name of the rule", :type "string"}, :resourceScope {:description "Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.", :type "string"}, :resourceId {:description "Full ARM resource ID string that this recommendation object is associated with.", :type "string"}, :level {:description "Level indicating how critical this recommendation can impact.", :enum ["Critical" "Warning" "Information" "NonUrgentSuggestion"], :type "string", :x-ms-enum {:modelAsString false, :name "NotificationLevel"}}, :score {:description "A metric value measured by the rule.", :format "double", :type "number"}, :notificationExpirationTime {:description "Date and time when this notification expires.", :format "date-time", :type "string"}, :actionName {:description "Name of action recommended by this object.", :type "string"}, :enabled {:description "On/off flag indicating the rule is currently enabled or disabled.", :format "int32", :type "integer"}, :message {:description "Localized text of recommendation, good for UI.", :type "string"}, :nextNotificationTime {:description "When to notify this recommendation next. Null means that this will never be notified anymore.", :format "date-time", :type "string"}}, :required ["level" "channels"], :type "object"}, :SlotConfigNamesResource {:allOf [#:reference{:definitions "Resource"}], :description "Slot Config names azure resource", :properties {:properties {:properties {:appSettingNames {:description "List of application settings names", :items {:type "string"}, :type "array"}, :connectionStringNames {:description "List of connection string names", :items {:type "string"}, :type "array"}}, :x-ms-client-flatten true}}, :type "object"}, :EnabledConfig {:description "Enabled configuration", :properties {:enabled {:description "Enabled", :type "boolean"}}, :type "object"}, :DeletedSiteCollection {:description "Collection of deleted sites", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "DeletedSite"}, :type "array"}}, :type "object"}, :VnetRoute {:allOf [#:reference{:definitions "Resource"}], :description "VnetRoute contract used to pass routing information for a vnet.", :properties {:properties {:properties {:endAddress {:description "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.", :type "string"}, :name {:description "The name of this route. This is only returned by the server and does not need to be set by the client.", :type "string"}, :routeType {:description "The type of route this is:\r\n            DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918\r\n            INHERITED - Routes inherited from the real Virtual Network routes\r\n            STATIC - Static route set on the web app only\r\n            \r\n            These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them\r\n            with new INHERITED routes.", :type "string"}, :startAddress {:description "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :AutoHealActions {:description "AutoHealActions - Describes the actions which can be\r\n            taken by the auto-heal module when a rule is triggered.", :properties {:actionType {:description "ActionType - predefined action to be taken", :enum ["Recycle" "LogEvent" "CustomAction"], :type "string", :x-ms-enum {:modelAsString false, :name "AutoHealActionType"}}, :customAction #:reference{:definitions "AutoHealCustomAction"}, :minProcessExecutionTime {:description "MinProcessExecutionTime - minimum time the process must execute\r\n            before taking the action", :type "string"}}, :required ["actionType"], :type "object"}, :SkuCapacity {:description "Description of the App Service Plan scale options", :properties {:default {:description "Default number of Workers for this App Service Plan SKU", :format "int32", :type "integer"}, :maximum {:description "Maximum number of Workers for this App Service Plan SKU", :format "int32", :type "integer"}, :minimum {:description "Minimum number of Workers for this App Service Plan SKU", :format "int32", :type "integer"}, :scaleType {:description "Available scale configurations for an App Service Plan", :type "string"}}, :type "object"}, :SiteCloneability {:description "Represents whether or not a web app is cloneable", :properties {:blockingCharacteristics {:description "List of blocking application characteristics", :items #:reference{:definitions "SiteCloneabilityCriterion"}, :type "array"}, :blockingFeatures {:description "List of features enabled on web app that prevent cloning", :items #:reference{:definitions "SiteCloneabilityCriterion"}, :type "array"}, :result {:description "Name of web app", :enum ["Cloneable" "PartiallyCloneable" "NotCloneable"], :type "string", :x-ms-enum {:modelAsString false, :name "CloneAbilityResult"}}, :unsupportedFeatures {:description "List of features enabled on web app that are non-blocking but cannot be cloned. The web app can still be cloned\r\n            but the features in this list will not be set up on cloned web app.", :items #:reference{:definitions "SiteCloneabilityCriterion"}, :type "array"}}, :required ["result"], :type "object"}, :DomainControlCenterSsoRequest {:description "Single sign on request information for domain management", :properties {:postParameterKey {:description "Post parameter key", :type "string"}, :postParameterValue {:description "Post parameter value. Client should use 'application/x-www-form-urlencoded' encoding for this value.", :type "string"}, :url {:description "Url where the single sign on request is to be made", :type "string"}}, :type "object"}, :RenewCertificateOrderRequest {:allOf [#:reference{:definitions "Resource"}], :description "Class representing certificate renew request", :properties {:properties {:properties {:keySize {:description "Certificate Key Size", :format "int32", :type "integer"}}, :x-ms-client-flatten true}}, :type "object"}, :SlotDifference {:allOf [#:reference{:definitions "Resource"}], :description "An object describing the difference in setting values between two web app slots", :properties {:properties {:properties {:description {:description "Description of the difference", :type "string"}, :diffRule {:description "Rule that describes how to process the difference in settings during web app slot swap.", :type "string"}, :settingName {:description "Name of the setting", :type "string"}, :settingType {:description "The type of the settings: General, AppSetting or ConnectionString", :type "string"}, :type {:description "Indicates the type of the difference: Information, Warning or Error.", :type "string"}, :valueInCurrentSlot {:description "Value of the setting in the current web app slot", :type "string"}, :valueInTargetSlot {:description "Value of the setting in the target web app slot", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :FileSystemHttpLogsConfig {:description "Http logs to file system configuration", :properties {:enabled {:description "Enabled", :type "boolean"}, :retentionInDays {:description "Retention in days.\r\n            Remove files older than X days.\r\n            0 or lower means no retention.", :format "int32", :type "integer"}, :retentionInMb {:description "Maximum size in megabytes that http log files can use.\r\n            When reached old log files will be removed to make space for new ones.\r\n            Value can range between 25 and 100.", :format "int32", :type "integer"}}, :type "object"}, :CorsSettings {:description "Cross-Origin Resource Sharing (CORS) settings for the web app.", :properties {:allowedOrigins {:description "Gets or sets the list of origins that should be allowed to make cross-origin\r\n            calls (for example: http://example.com:12345). Use \"*\" to allow all.", :items {:type "string"}, :type "array"}}, :type "object"}, :CertificateOrderAction {:allOf [#:reference{:definitions "Resource"}], :description "Represents a certificate action", :properties {:properties {:properties {:createdAt {:description "Time at which the certificate action was performed", :format "date-time", :type "string"}, :type {:description "Type", :enum ["CertificateIssued" "CertificateOrderCanceled" "CertificateOrderCreated" "CertificateRevoked" "DomainValidationComplete" "FraudDetected" "OrgNameChange" "OrgValidationComplete" "SanDrop"], :type "string", :x-ms-enum {:modelAsString false, :name "CertificateOrderActionType"}}}, :required ["type"], :x-ms-client-flatten true}}, :type "object"}, :TopLevelDomainCollection {:description "Collection of Top Level Domains", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "TopLevelDomain"}, :type "array"}}, :type "object"}, :SkuDescription {:description "Describes a sku for a scalable resource", :properties {:capacity {:description "Current number of instances assigned to the resource", :format "int32", :type "integer"}, :family {:description "Family code of the resource sku", :type "string"}, :name {:description "Name of the resource sku", :type "string"}, :size {:description "Size specifier of the resource sku", :type "string"}, :tier {:description "Service Tier of the resource sku", :type "string"}}, :type "object"}, :StampCapacity {:description "Class containing stamp capacity information", :properties {:unit {:description "Name of the unit", :type "string"}, :name {:description "Name of the stamp", :type "string"}, :excludeFromCapacityAllocation {:description "If true it includes basic sites\r\n            Basic sites are not used for capacity allocation.", :type "boolean"}, :siteMode {:description "Shared or Dedicated", :type "string"}, :computeMode {:description "Shared/Dedicated workers", :enum ["Shared" "Dedicated" "Dynamic"], :type "string", :x-ms-enum {:modelAsString false, :name "ComputeModeOptions"}}, :totalCapacity {:description "Total capacity (# of machines, bytes of storage etc...)", :format "int64", :type "integer"}, :isApplicableForAllComputeModes {:description "Is capacity applicable for all sites?", :type "boolean"}, :availableCapacity {:description "Available capacity (# of machines, bytes of storage etc...)", :format "int64", :type "integer"}, :workerSize {:description "Size of the machines", :enum ["Default" "Small" "Medium" "Large"], :type "string", :x-ms-enum {:modelAsString false, :name "WorkerSizeOptions"}}, :workerSizeId {:description "Size Id of machines: \r\n            0 - Small\r\n            1 - Medium\r\n            2 - Large", :format "int32", :type "integer"}}, :type "object"}, :DatabaseBackupSetting {:description "Note: properties are serialized in JSON format and stored in DB. \r\n            if new properties are added they might not be in the previous data rows \r\n            so please handle nulls", :properties {:connectionString {:description "Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.", :type "string"}, :connectionStringName {:description "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\r\n            This is used during restore with overwrite connection strings options.", :type "string"}, :databaseType {:description "SqlAzure / MySql", :type "string"}, :name {:type "string"}}, :type "object"}, :CertificateOrder {:allOf [#:reference{:definitions "Resource"}], :description "Certificate purchase order", :properties {:properties {:properties {:validityInYears {:description "Duration in years (must be between 1 and 3)", :format "int32", :type "integer"}, :serialNumber {:description "Current serial number of the certificate", :type "string"}, :intermediate #:reference{:definitions "CertificateDetails"}, :provisioningState {:description "Status of certificate order", :enum ["Succeeded" "Failed" "Canceled" "InProgress" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}}, :lastCertificateIssuanceTime {:description "Certificate last issuance time", :format "date-time", :type "string"}, :expirationTime {:description "Certificate expiration time", :format "date-time", :type "string"}, :signedCertificate #:reference{:definitions "CertificateDetails"}, :certificates {:additionalProperties #:reference{:definitions "CertificateOrderCertificate"}, :description "State of the Key Vault secret", :type "object"}, :csr {:description "Last CSR that was created for this order", :type "string"}, :root #:reference{:definitions "CertificateDetails"}, :status {:description "Current order status", :enum ["Pendingissuance" "Issued" "Revoked" "Canceled" "Denied" "Pendingrevocation" "PendingRekey" "Unused" "Expired" "NotSubmitted"], :type "string", :x-ms-enum {:modelAsString false, :name "CertificateOrderStatus"}}, :productType {:description "Certificate product type", :enum ["StandardDomainValidatedSsl" "StandardDomainValidatedWildCardSsl"], :type "string", :x-ms-enum {:modelAsString false, :name "CertificateProductType"}}, :distinguishedName {:description "Certificate distinguished name", :type "string"}, :domainVerificationToken {:description "Domain Verification Token", :type "string"}, :keySize {:description "Certificate Key Size", :format "int32", :type "integer"}, :autoRenew {:description "Auto renew", :type "boolean"}}, :x-ms-client-flatten true}}, :type "object"}, :TopLevelDomainAgreementOption {:description "Options for retrieving the list of top level domain legal agreements", :properties {:includePrivacy {:description "If true then the list of agreements will include agreements for domain privacy as well.", :type "boolean"}}, :type "object"}, :VnetGateway {:allOf [#:reference{:definitions "Resource"}], :description "The VnetGateway contract. This is used to give the vnet gateway access to the VPN package.", :properties {:properties {:properties {:vnetName {:description "The VNET name.", :type "string"}, :vpnPackageUri {:description "The URI where the Vpn package can be downloaded", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :Csr {:allOf [#:reference{:definitions "Resource"}], :description "Certificate signing request object", :properties {:properties {:properties {:csrString {:description "Actual CSR string created", :type "string"}, :distinguishedName {:description "Distinguished name of certificate to be created", :type "string"}, :hostingEnvironment {:description "Hosting environment", :type "string"}, :name {:description "Name used to locate CSR object", :type "string"}, :password {:description "PFX password", :type "string"}, :pfxBlob {:description "PFX certificate of created certificate", :type "string"}, :publicKeyHash {:description "Hash of the certificates public key", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :CloningInfo {:description "Represents information needed for cloning operation", :properties {:configureLoadBalancing {:description "If specified configure load balancing for source and clone site", :type "boolean"}, :correlationId {:description "Correlation Id of cloning operation. This id ties multiple cloning operations\r\n            together to use the same snapshot", :type "string"}, :sourceWebAppId {:description "ARM resource id of the source web app. Web app resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots", :type "string"}, :trafficManagerProfileId {:description "ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}", :type "string"}, :overwrite {:description "Overwrite destination web app", :type "boolean"}, :hostingEnvironment {:description "Hosting environment", :type "string"}, :cloneCustomHostNames {:description "If true, clone custom hostnames from source web app", :type "boolean"}, :appSettingsOverrides {:additionalProperties {:type "string"}, :description "Application settings overrides for cloned web app. If specified these settings will override the settings cloned \r\n            from source web app. If not specified, application settings from source web app are retained.", :type "object"}, :trafficManagerProfileName {:description "Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist", :type "string"}, :cloneSourceControl {:description "Clone source control from source web app", :type "boolean"}}, :type "object"}, :DomainRegistrationInput {:allOf [#:reference{:definitions "Resource"}], :description "Domain registration input for validation Api", :properties {:properties {:properties {:contactBilling #:reference{:definitions "Contact"}, :contactAdmin #:reference{:definitions "Contact"}, :managedHostNames {:description "All hostnames derived from the domain and assigned to Azure resources", :items #:reference{:definitions "HostName"}, :type "array"}, :provisioningState {:description "Domain provisioning state", :enum ["Succeeded" "Failed" "Canceled" "InProgress" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}}, :contactRegistrant #:reference{:definitions "Contact"}, :expirationTime {:description "Domain expiration timestamp", :format "date-time", :type "string"}, :lastRenewedTime {:description "Timestamp when the domain was renewed last time", :format "date-time", :type "string"}, :name {:description "Name of the domain", :type "string"}, :privacy {:description "If true then domain privacy is enabled for this domain", :type "boolean"}, :contactTech #:reference{:definitions "Contact"}, :domainNotRenewableReasons {:description "Reasons why domain is not renewable", :items {:enum ["RegistrationStatusNotSupportedForRenewal" "ExpirationNotInRenewalTimeRange" "SubscriptionNotActive"], :type "string"}, :type "array"}, :consent #:reference{:definitions "DomainPurchaseConsent"}, :readyForDnsRecordManagement {:description "If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to", :type "boolean"}, :createdTime {:description "Domain creation timestamp", :format "date-time", :type "string"}, :registrationStatus {:description "Domain registration status", :enum ["Active" "Awaiting" "Cancelled" "Confiscated" "Disabled" "Excluded" "Expired" "Failed" "Held" "Locked" "Parked" "Pending" "Reserved" "Reverted" "Suspended" "Transferred" "Unknown" "Unlocked" "Unparked" "Updated" "JsonConverterFailed"], :type "string", :x-ms-enum {:modelAsString false, :name "DomainStatus"}}, :nameServers {:description "Name servers", :items {:type "string"}, :type "array"}, :autoRenew {:description "If true then domain will renewed automatically", :type "boolean"}}, :x-ms-client-flatten true}}, :type "object"}, :Experiments {:description "Class containing Routing in production experiments", :properties {:rampUpRules {:description "List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.", :items #:reference{:definitions "RampUpRule"}, :type "array"}}, :type "object"}, :CsmSlotEntity {:description "Class containing deployment slot parameters", :properties {:preserveVnet {:description "Get or set the flag indicating it should preserve VNet to the slot during swap", :type "boolean"}, :targetSlot {:description "Set the destination deployment slot during swap operation", :type "string"}}, :type "object"}, :SiteConfig {:allOf [#:reference{:definitions "Resource"}], :description "Configuration of Azure web site", :properties {:properties {:properties {:detailedErrorLoggingEnabled {:description "Detailed error logging enabled", :type "boolean"}, :httpLoggingEnabled {:description "HTTP logging Enabled", :type "boolean"}, :cors #:reference{:definitions "CorsSettings"}, :webSocketsEnabled {:description "Web socket enabled.", :type "boolean"}, :handlerMappings {:description "Handler mappings", :items #:reference{:definitions "HandlerMapping"}, :type "array"}, :remoteDebuggingEnabled {:description "Remote Debugging Enabled", :type "boolean"}, :ipSecurityRestrictions {:description "Ip Security restrictions", :items #:reference{:definitions "IpSecurityRestriction"}, :type "array"}, :javaContainerVersion {:description "Java container version", :type "string"}, :experiments #:reference{:definitions "Experiments"}, :logsDirectorySizeLimit {:description "HTTP Logs Directory size limit", :format "int32", :type "integer"}, :requestTracingEnabled {:description "Enable request tracing", :type "boolean"}, :javaVersion {:description "Java version", :type "string"}, :managedPipelineMode {:description "Managed pipeline mode", :enum ["Integrated" "Classic"], :type "string", :x-ms-enum {:modelAsString false, :name "ManagedPipelineMode"}}, :numberOfWorkers {:description "Number of workers", :format "int32", :type "integer"}, :tracingOptions {:description "Tracing options", :type "string"}, :use32BitWorkerProcess {:description "Use 32 bit worker process", :type "boolean"}, :loadBalancing {:description "Site load balancing", :enum ["WeightedRoundRobin" "LeastRequests" "LeastResponseTime" "WeightedTotalTraffic" "RequestHash"], :type "string", :x-ms-enum {:modelAsString false, :name "SiteLoadBalancing"}}, :vnetName {:description "Vnet name", :type "string"}, :defaultDocuments {:description "Default documents", :items {:type "string"}, :type "array"}, :pythonVersion {:description "Version of Python", :type "string"}, :autoHealRules #:reference{:definitions "AutoHealRules"}, :connectionStrings {:description "Connection strings", :items #:reference{:definitions "ConnStringInfo"}, :type "array"}, :publishingUsername {:description "Publishing user name", :type "string"}, :appCommandLine {:description "App Command Line to launch", :type "string"}, :autoHealEnabled {:description "Auto heal enabled", :type "boolean"}, :phpVersion {:description "Version of PHP", :type "string"}, :autoSwapSlotName {:description "Auto swap slot name", :type "string"}, :javaContainer {:description "Java container", :type "string"}, :alwaysOn {:description "Always On", :type "boolean"}, :publishingPassword {:description "Publishing password", :type "string"}, :virtualApplications {:description "Virtual applications", :items #:reference{:definitions "VirtualApplication"}, :type "array"}, :remoteDebuggingVersion {:description "Remote Debugging Version", :type "string"}, :limits #:reference{:definitions "SiteLimits"}, :apiDefinition #:reference{:definitions "ApiDefinitionInfo"}, :netFrameworkVersion {:description "Net Framework Version", :type "string"}, :scmType {:description "SCM type", :type "string"}, :appSettings {:description "Application Settings", :items #:reference{:definitions "NameValuePair"}, :type "array"}, :documentRoot {:description "Document root", :type "string"}, :metadata {:description "Site Metadata", :items #:reference{:definitions "NameValuePair"}, :type "array"}, :requestTracingExpirationTime {:description "Request tracing expiration time", :format "date-time", :type "string"}, :localMySqlEnabled {:description "Local mysql enabled", :type "boolean"}, :nodeVersion {:description "Version of Node", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :HostingEnvironmentCollection {:description "Collection of hosting environments (App Service Environments)", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "HostingEnvironment"}, :type "array"}}, :type "object"}, :FileSystemApplicationLogsConfig {:description "Application logs to file system configuration", :properties {:level {:description "Log level", :enum ["Off" "Verbose" "Information" "Warning" "Error"], :type "string", :x-ms-enum {:modelAsString false, :name "LogLevel"}}}, :type "object"}, :SkuInfo {:description "Sku discovery information", :properties {:capacity #:reference{:definitions "SkuCapacity"}, :resourceType {:description "Resource type that this sku applies to", :type "string"}, :sku #:reference{:definitions "SkuDescription"}}, :type "object"}, :VnetInfo {:allOf [#:reference{:definitions "Resource"}], :description "VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal", :properties {:properties {:properties {:certBlob {:description "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \r\n            Point-To-Site VPN connection.", :type "string"}, :certThumbprint {:description "The client certificate thumbprint", :type "string"}, :dnsServers {:description "Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.", :type "string"}, :resyncRequired {:description "Flag to determine if a resync is required", :type "boolean"}, :routes {:description "The routes that this virtual network connection uses.", :items #:reference{:definitions "VnetRoute"}, :type "array"}, :vnetResourceId {:description "The vnet resource id", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :NameIdentifier {:description "Identifies an object", :properties {:name {:description "Name of the object", :type "string"}}, :type "object"}, :WorkerPoolCollection {:description "Collection of worker pools", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "WorkerPool"}, :type "array"}}, :type "object"}, :AutoHealRules {:description "AutoHealRules - describes the rules which can be defined for auto-heal", :properties {:actions #:reference{:definitions "AutoHealActions"}, :triggers #:reference{:definitions "AutoHealTriggers"}}, :type "object"}, :UsageCollection {:description "Collection of usages", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "Usage"}, :type "array"}}, :type "object"}, :SiteProperties {:properties {:appSettings {:items #:reference{:definitions "NameValuePair"}, :type "array"}, :metadata {:items #:reference{:definitions "NameValuePair"}, :type "array"}, :properties {:items #:reference{:definitions "NameValuePair"}, :type "array"}}, :type "object"}, :SourceControlCollection {:description "Collection of source controls", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "SourceControl"}, :type "array"}}, :type "object"}, :MetricDefinitionCollection {:description "Collection of metric definitions", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "MetricDefinition"}, :type "array"}}, :type "object"}, :GeoRegion {:allOf [#:reference{:definitions "Resource"}], :description "Geographical region", :properties {:properties {:properties {:description {:description "Region description", :type "string"}, :displayName {:description "Display name for region", :type "string"}, :name {:description "Region name", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :VirtualDirectory {:properties {:physicalPath {:type "string"}, :virtualPath {:type "string"}}, :type "object"}, :ClassicMobileService {:allOf [#:reference{:definitions "Resource"}], :description "A mobile service", :properties {:properties {:properties {:name {:description "Name of the mobile service", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :DomainAvailablilityCheckResult {:description "Domain availablility check result", :properties {:available {:description "If true then domain can be purchased using CreateDomain Api", :type "boolean"}, :domainType {:description "Domain type", :enum ["Regular" "SoftDeleted"], :type "string", :x-ms-enum {:modelAsString false, :name "DomainType"}}, :name {:description "Name of the domain", :type "string"}}, :type "object"}, :VirtualApplication {:properties {:physicalPath {:type "string"}, :preloadEnabled {:type "boolean"}, :virtualDirectories {:items #:reference{:definitions "VirtualDirectory"}, :type "array"}, :virtualPath {:type "string"}}, :type "object"}, :Address {:description "Address information for domain registration", :properties {:address1 {:description "Address 1", :type "string"}, :address2 {:description "Address 2", :type "string"}, :city {:description "City", :type "string"}, :country {:description "Country", :type "string"}, :postalCode {:description "Postal code", :type "string"}, :state {:description "State", :type "string"}}, :type "object"}, :BackupSchedule {:description "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.", :properties {:frequencyInterval {:description "How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)", :format "int32", :type "integer"}, :frequencyUnit {:description "How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)", :enum ["Day" "Hour"], :type "string", :x-ms-enum {:modelAsString false, :name "FrequencyUnit"}}, :keepAtLeastOneBackup {:description "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.", :type "boolean"}, :lastExecutionTime {:description "The last time when this schedule was triggered", :format "date-time", :type "string"}, :retentionPeriodInDays {:description "After how many days backups should be deleted", :format "int32", :type "integer"}, :startTime {:description "When the schedule should start working", :format "date-time", :type "string"}}, :required ["frequencyUnit"], :type "object"}, :ConnStringValueTypePair {:description "Database connection string value to type pair", :properties {:type {:description "Type of database", :enum ["MySql" "SQLServer" "SQLAzure" "Custom"], :type "string", :x-ms-enum {:modelAsString false, :name "DatabaseServerType"}}, :value {:description "Value of pair", :type "string"}}, :required ["type"], :type "object"}, :CertificateDetails {:allOf [#:reference{:definitions "Resource"}], :description "Certificate Details", :properties {:properties {:properties {:serialNumber {:description "Serial Number", :type "string"}, :thumbprint {:description "Thumbprint", :type "string"}, :notAfter {:description "Valid to", :format "date-time", :type "string"}, :rawData {:description "Raw certificate data", :type "string"}, :notBefore {:description "Valid from", :format "date-time", :type "string"}, :issuer {:description "Issuer", :type "string"}, :signatureAlgorithm {:description "Signature Algorithm", :type "string"}, :version {:description "Version", :format "int32", :type "integer"}, :subject {:description "Subject", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :ResourceMetric {:description "Object representing a metric for any resource", :properties {:endTime {:description "Metric end time", :format "date-time", :type "string"}, :metricValues {:description "Metric values", :items #:reference{:definitions "ResourceMetricValue"}, :type "array"}, :name #:reference{:definitions "ResourceMetricName"}, :properties {:description "Properties", :items #:reference{:definitions "KeyValuePair[String,String]"}, :type "array"}, :resourceId {:description "Metric resource Id", :type "string"}, :startTime {:description "Metric start time", :format "date-time", :type "string"}, :timeGrain {:description "Metric granularity. E.g PT1H, PT5M, P1D", :type "string"}, :unit {:description "Metric unit", :type "string"}}, :type "object"}, :SiteSourceControl {:allOf [#:reference{:definitions "Resource"}], :description "Describes the source control configuration for web app", :properties {:properties {:properties {:branch {:description "Name of branch to use for deployment", :type "string"}, :deploymentRollbackEnabled {:description "Whether to manual or continuous integration", :type "boolean"}, :isManualIntegration {:description "Whether to manual or continuous integration", :type "boolean"}, :isMercurial {:description "Mercurial or Git repository type", :type "boolean"}, :repoUrl {:description "Repository or source control url", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :NetworkAccessControlEntry {:properties {:action {:enum ["Permit" "Deny"], :type "string", :x-ms-enum {:modelAsString false, :name "AccessControlEntryAction"}}, :description {:type "string"}, :order {:format "int32", :type "integer"}, :remoteSubnet {:type "string"}}, :type "object"}, :SlotConfigNames {:description "Class containing names for connection strings and application settings to be marked as sticky to the slot \r\n            and not moved during swap operation\r\n            This is valid for all deployment slots under the site", :properties {:appSettingNames {:description "List of application settings names", :items {:type "string"}, :type "array"}, :connectionStringNames {:description "List of connection string names", :items {:type "string"}, :type "array"}}, :type "object"}, :Usage {:allOf [#:reference{:definitions "Resource"}], :description "Class that represents usage of the quota resource.", :properties {:properties {:properties {:limit {:description "The resource limit", :format "int64", :type "integer"}, :unit {:description "Units of measurement for the quota resource", :type "string"}, :displayName {:description "Friendly name shown in the UI", :type "string"}, :currentValue {:description "The current value of the resource counter", :format "int64", :type "integer"}, :name {:description "Name of the quota", :type "string"}, :siteMode {:description "SiteMode used for this usage", :type "string"}, :computeMode {:description "ComputeMode used for this usage", :enum ["Shared" "Dedicated" "Dynamic"], :type "string", :x-ms-enum {:modelAsString false, :name "ComputeModeOptions"}}, :resourceName {:description "Name of the quota resource", :type "string"}, :nextResetTime {:description "Next reset time for the resource counter", :format "date-time", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :SiteCloneabilityCriterion {:description "Represents a site cloneability criterion", :properties {:description {:description "Description of criterion", :type "string"}, :name {:description "Name of criterion", :type "string"}}, :type "object"}, :ServerFarmCollection {:description "Collection of serverfarms", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "ServerFarmWithRichSku"}, :type "array"}}, :type "object"}, :TldLegalAgreementCollection {:description "Collection of Tld Legal Agreements", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "TldLegalAgreement"}, :type "array"}}, :type "object"}, :AzureBlobStorageApplicationLogsConfig {:description "Application logs azure blob storage configuration", :properties {:level {:description "Log level", :enum ["Off" "Verbose" "Information" "Warning" "Error"], :type "string", :x-ms-enum {:modelAsString false, :name "LogLevel"}}, :retentionInDays {:description "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.", :format "int32", :type "integer"}, :sasUrl {:description "SAS url to a azure blob container with read/write/list/delete permissions", :type "string"}}, :type "object"}, :ResourceMetricValue {:description "Value of resource metric", :properties {:average {:description "Value average", :format "float", :type "number"}, :count {:description "Value count", :format "float", :type "number"}, :maximum {:description "Value maximum", :format "float", :type "number"}, :minimum {:description "Value minimum", :format "float", :type "number"}, :timeStamp {:description "Value timestamp", :type "string"}, :total {:description "Value total", :format "float", :type "number"}}, :type "object"}, :DeploymentCollection {:description "Collection of app deployments", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "Deployment"}, :type "array"}}, :type "object"}, :User {:allOf [#:reference{:definitions "Resource"}], :description "Represents user credentials used for publishing activity", :properties {:properties {:properties {:name {:description "Username (internal)", :type "string"}, :publishingPassword {:description "Password used for publishing", :type "string"}, :publishingUserName {:description "Username used for publishing", :type "string"}, :scmUri {:description "Service Control Manager URI, including username and password", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :CsmUsageQuota {:description "Usage of the quota resource", :properties {:currentValue {:description "The current value of the resource counter", :format "int64", :type "integer"}, :limit {:description "The resource limit", :format "int64", :type "integer"}, :name #:reference{:definitions "LocalizableString"}, :nextResetTime {:description "Next reset time for the resource counter", :format "date-time", :type "string"}, :unit {:description "Units of measurement for the quota resource", :type "string"}}, :type "object"}, :ResourceNameAvailabilityRequest {:description "Resource name availability request content", :properties {:isFqdn {:description "Is fully qualified domain name", :type "boolean"}, :name {:description "Resource name to verify", :type "string"}, :type {:description "Resource type used for verification", :type "string"}}, :type "object"}, :SiteLimits {:description "Represents metric limits set on a web app.", :properties {:maxDiskSizeInMb {:description "Maximum allowed disk size usage in MB", :format "int64", :type "integer"}, :maxMemoryInMb {:description "Maximum allowed memory usage in MB", :format "int64", :type "integer"}, :maxPercentageCpu {:description "Maximum allowed CPU usage percentage", :format "double", :type "number"}}, :type "object"}, :Certificate {:allOf [#:reference{:definitions "Resource"}], :description "App certificate", :properties {:properties {:properties {:valid {:description "Is the certificate valid?", :type "boolean"}, :thumbprint {:description "Certificate thumbprint", :type "string"}, :password {:description "Certificate password", :type "string"}, :selfLink {:description "Self link", :type "string"}, :publicKeyHash {:description "Public key hash", :type "string"}, :subjectName {:description "Subject name of the certificate", :type "string"}, :friendlyName {:description "Friendly name of the certificate", :type "string"}, :pfxBlob {:description "Pfx blob", :type "string"}, :siteName {:description "App name", :type "string"}, :issuer {:description "Certificate issuer", :type "string"}, :hostingEnvironmentProfile #:reference{:definitions "HostingEnvironmentProfile"}, :cerBlob {:description "Raw bytes of .cer file", :type "string"}, :issueDate {:description "Certificate issue Date", :format "date-time", :type "string"}, :expirationDate {:description "Certificate expiration date", :format "date-time", :type "string"}, :hostNames {:description "Host names the certificate applies to", :items {:type "string"}, :type "array"}}, :x-ms-client-flatten true}}, :type "object"}, :SiteInstance {:allOf [#:reference{:definitions "Resource"}], :description "Instance of a web app", :properties {:properties {:properties {:name {:description "Name of instance", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :ArmPlan {:description "The plan object in an ARM, represents a marketplace plan", :properties {:name {:description "The name", :type "string"}, :product {:description "The product", :type "string"}, :promotionCode {:description "The promotion code", :type "string"}, :publisher {:description "The publisher", :type "string"}, :version {:description "Version of product", :type "string"}}, :type "object"}, :HostingEnvironmentProfile {:description "Specification for a hostingEnvironment (App Service Environment) to use for this resource", :properties {:id {:description "Resource id of the hostingEnvironment (App Service Environment)", :type "string"}, :name {:description "Name of the hostingEnvironment (App Service Environment) (read only)", :type "string"}, :type {:description "Resource type of the hostingEnvironment (App Service Environment) (read only)", :type "string"}}, :type "object"}, :ReissueCertificateOrderRequest {:allOf [#:reference{:definitions "Resource"}], :description "Class representing certificate reissue request", :properties {:properties {:properties {:delayExistingRevokeInHours {:description "Delay in hours to revoke existing certificate after the new certificate is issued", :format "int32", :type "integer"}, :keySize {:description "Certificate Key Size", :format "int32", :type "integer"}}, :x-ms-client-flatten true}}, :type "object"}, :ResourceNameAvailability {:description "Describes if a resource name is available", :properties {:message {:type "string"}, :nameAvailable {:description "True indicates name is valid and available.  False indicates the name is invalid, unavailable, or both.", :type "boolean"}, :reason {:description "Required if nameAvailable is false. 'Invalid' indicates the name provided does not match Azure WebApp service’s naming requirements. 'AlreadyExists' indicates that the name is already in use and is therefore unavailable.", :type "string"}}, :type "object"}, :ClassicMobileServiceCollection {:description "Collection of Classic Mobile Services", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "ClassicMobileService"}, :type "array"}}, :type "object"}, :AddressResponse {:description "Describes main public ip address and any extra vips", :properties {:internalIpAddress {:description "VNET internal ip address of the hostingEnvironment (App Service Environment) if it is in internal load-balancing mode", :type "string"}, :outboundIpAddresses {:description "IP addresses appearing on outbound connections", :items {:type "string"}, :type "array"}, :serviceIpAddress {:description "Main public vip", :type "string"}, :vipMappings {:description "Additional vips", :items #:reference{:definitions "VirtualIPMapping"}, :type "array"}}, :type "object"}, :BackupItem {:allOf [#:reference{:definitions "Resource"}], :description "Backup description", :properties {:properties {:properties {:lastRestoreTimeStamp {:description "Timestamp of a last restore operation which used this backup.", :format "date-time", :type "string"}, :correlationId {:description "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.", :type "string"}, :websiteSizeInBytes {:description "Size of the original web app which has been backed up", :format "int64", :type "integer"}, :name {:description "Name of this backup", :type "string"}, :storageAccountUrl {:description "SAS URL for the storage account container which contains this backup", :type "string"}, :sizeInBytes {:description "Size of the backup in bytes", :format "int64", :type "integer"}, :created {:description "Timestamp of the backup creation", :format "date-time", :type "string"}, :databases {:description "List of databases included in the backup", :items #:reference{:definitions "DatabaseBackupSetting"}, :type "array"}, :status {:description "Backup status", :enum ["InProgress" "Failed" "Succeeded" "TimedOut" "Created" "Skipped" "PartiallySucceeded" "DeleteInProgress" "DeleteFailed" "Deleted"], :type "string", :x-ms-enum {:modelAsString false, :name "BackupItemStatus"}}, :id {:description "Id of the backup.", :format "int32", :type "integer"}, :scheduled {:description "True if this backup has been created due to a schedule being triggered.", :type "boolean"}, :log {:description "Details regarding this backup. Might contain an error message.", :type "string"}, :finishedTimeStamp {:description "Timestamp when this backup finished.", :format "date-time", :type "string"}, :blobName {:description "Name of the blob which contains data for this backup", :type "string"}}, :required ["status"], :x-ms-client-flatten true}}, :type "object"}, :ConnectionStringDictionary {:allOf [#:reference{:definitions "Resource"}], :description "String dictionary resource", :properties {:properties {:additionalProperties #:reference{:definitions "ConnStringValueTypePair"}, :description "Connection strings", :type "object", :x-ms-client-flatten true}}, :type "object"}, :DomainCollection {:description "Collection of domains", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "Domain"}, :type "array"}}, :type "object"}, "KeyValuePair[String,String]" {:properties {:key {:readOnly true, :type "string"}, :value {:readOnly true, :type "string"}}, :type "object"}, :NameIdentifierCollection {:description "Collection of domain name identifiers", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "NameIdentifier"}, :type "array"}}, :type "object"}, :ResourceMetricCollection {:description "Collection of metric responses", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "ResourceMetric"}, :type "array"}}, :type "object"}, :NetworkFeatures {:allOf [#:reference{:definitions "Resource"}], :description "This is an object used to store a full view of network features (presently VNET integration and Hybrid Connections)\r\n            for a web app.", :properties {:properties {:properties {:hybridConnections {:description "The Hybrid Connections Summary view", :items #:reference{:definitions "RelayServiceConnectionEntity"}, :type "array"}, :virtualNetworkConnection #:reference{:definitions "VnetInfo"}, :virtualNetworkName {:description "The Vnet Name", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :PremierAddOnRequest {:properties {:location {:description "Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia", :type "string"}, :plan #:reference{:definitions "ArmPlan"}, :properties #:reference{:definitions "Object"}, :sku #:reference{:definitions "SkuDescription"}, :tags {:additionalProperties {:type "string"}, :description "Tags associated with resource", :type "object"}}, :type "object"}, :ManagedHostingEnvironment {:allOf [#:reference{:definitions "Resource"}], :description "Description of a managed hosting environment", :properties {:properties {:properties {:virtualNetwork #:reference{:definitions "VirtualNetworkProfile"}, :ipsslAddressCount {:description "Number of ip ssl addresses reserved for the managed hosting environment", :format "int32", :type "integer"}, :dnsSuffix {:description "DNS suffix of the managed hosting environment", :type "string"}, :name {:description "Name of the managed hosting environment", :type "string"}, :environmentStatus {:description "Detailed message about with results of the last check of the managed hosting environment", :type "string"}, :suspended {:description "True/false indicating whether the managed hosting environment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)", :type "boolean"}, :apiManagementAccount {:description "Resource id of the api management account associated with this managed hosting environment (read only)", :type "string"}, :status {:description "Current status of the managed hosting environment", :enum ["Preparing" "Ready" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "ManagedHostingEnvironmentStatus"}}, :resourceGroup {:description "Resource group of the managed hosting environment (read only)", :type "string"}, :location {:description "Location of the managed hosting environment e.g. \"West US\"", :type "string"}, :environmentIsHealthy {:description "True/false indicating whether the managed hosting environment is healthy", :type "boolean"}, :subscriptionId {:description "Subscription of the managed hosting environment (read only)", :type "string"}}, :required ["status"], :x-ms-client-flatten true}}, :type "object"}, :DomainRecommendationSearchParameters {:description "Domain recommendation search parameters", :properties {:keywords {:description "Keywords to be used for generating domain recommendations", :type "string"}, :maxDomainRecommendations {:description "Maximum number of recommendations", :format "int32", :type "integer"}}, :type "object"}, :BackupItemCollection {:description "Collection of Backup Items", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "BackupItem"}, :type "array"}}, :type "object"}, :TldLegalAgreement {:description "Represents a legal agreement for top level domain", :properties {:agreementKey {:description "Unique identifier for the agreement", :type "string"}, :content {:description "Agreement details", :type "string"}, :title {:description "Agreement title", :type "string"}, :url {:description "Url where a copy of the agreement details is hosted", :type "string"}}, :type "object"}, :ServerFarmWithRichSku {:allOf [#:reference{:definitions "Resource"}], :description "App Service Plan Model", :properties {:properties {:properties {:workerTierName {:description "Target worker tier assigned to the App Service Plan", :type "string"}, :maximumNumberOfWorkers {:description "Maximum number of instances that can be assigned to this App Service Plan", :format "int32", :type "integer"}, :name {:description "Name for the App Service Plan", :type "string"}, :numberOfSites {:description "Number of web apps assigned to this App Service Plan", :format "int32", :readOnly true, :type "integer"}, :status {:description "App Service Plan Status", :enum ["Ready" "Pending"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "StatusOptions"}}, :resourceGroup {:description "Resource group of the server farm", :readOnly true, :type "string"}, :geoRegion {:description "Geographical location for the App Service Plan", :readOnly true, :type "string"}, :adminSiteName {:description "App Service Plan administration site", :type "string"}, :reserved {:description "Enables creation of a Linux App Service Plan", :type "boolean"}, :hostingEnvironmentProfile #:reference{:definitions "HostingEnvironmentProfile"}, :perSiteScaling {:description "If True apps assigned to this App Service Plan can be scaled independently\r\n            If False apps assigned to this App Service Plan will scale to all instances of the plan", :type "boolean"}, :subscription {:description "App Service Plan Subscription", :readOnly true, :type "string"}}, :required ["status"], :x-ms-client-flatten true}, :sku #:reference{:definitions "SkuDescription"}}, :type "object"}, :CsmMoveResourceEnvelope {:description "Class containing a list of the resources that need to be moved and the resource group they should be moved to", :properties {:resources {:items {:type "string"}, :type "array"}, :targetResourceGroup {:type "string"}}, :type "object"}, :CsmPublishingProfileOptions {:description "Publishing options for requested profile", :properties {:format {:description "Name of the format. Valid values are: \r\n            FileZilla3\r\n            WebDeploy -- default\r\n            Ftp", :type "string"}}, :type "object"}, :HostNameBindingCollection {:description "Collection of host name bindings", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "HostNameBinding"}, :type "array"}}, :type "object"}, :WorkerPool {:allOf [#:reference{:definitions "Resource"}], :description "Worker pool of a hostingEnvironment (App Service Environment)", :properties {:properties {:properties {:computeMode {:description "Shared or dedicated web app hosting", :enum ["Shared" "Dedicated" "Dynamic"], :type "string", :x-ms-enum {:modelAsString false, :name "ComputeModeOptions"}}, :instanceNames {:description "Names of all instances in the worker pool (read only)", :items {:type "string"}, :type "array"}, :workerCount {:description "Number of instances in the worker pool", :format "int32", :type "integer"}, :workerSize {:description "VM size of the worker pool instances", :type "string"}, :workerSizeId {:description "Worker size id for referencing this worker pool", :format "int32", :type "integer"}}, :x-ms-client-flatten true}, :sku #:reference{:definitions "SkuDescription"}}, :type "object"}, :SourceControl {:allOf [#:reference{:definitions "Resource"}], :description "Describes the Source Control OAuth Token", :properties {:properties {:properties {:expirationTime {:description "OAuth Token Expiration", :format "date-time", :type "string"}, :name {:description "Name or Source Control Type", :type "string"}, :refreshToken {:description "OAuth Refresh Token", :type "string"}, :token {:description "OAuth Access Token", :type "string"}, :tokenSecret {:description "OAuth Access Token Secret", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :StatusCodesBasedTrigger {:description "StatusCodeBasedTrigger", :properties {:count {:description "Count", :format "int32", :type "integer"}, :status {:description "HTTP status code", :format "int32", :type "integer"}, :subStatus {:description "SubStatus", :format "int32", :type "integer"}, :timeInterval {:description "TimeInterval", :type "string"}, :win32Status {:description "Win32 error code", :format "int32", :type "integer"}}, :type "object"}, :Resource {:properties {:id {:description "Resource Id", :type "string"}, :kind {:description "Kind of resource", :type "string"}, :location {:description "Resource Location", :type "string"}, :name {:description "Resource Name", :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object"}, :type {:description "Resource type", :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :CertificateEmail {:allOf [#:reference{:definitions "Resource"}], :description "Certificate Email", :properties {:properties {:properties {:emailId {:description "Email id", :type "string"}, :timeStamp {:description "Time stamp", :format "date-time", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :VirtualNetworkProfile {:description "Specification for using a virtual network", :properties {:id {:description "Resource id of the virtual network", :type "string"}, :name {:description "Name of the virtual network (read-only)", :type "string"}, :subnet {:description "Subnet within the virtual network", :type "string"}, :type {:description "Resource type of the virtual network (read-only)", :type "string"}}, :type "object"}, :DomainPurchaseConsent {:description "Domain purchase consent object representing acceptance of applicable legal agreements", :properties {:agreedAt {:description "Timestamp when the agreements were accepted", :format "date-time", :type "string"}, :agreedBy {:description "Client IP address", :type "string"}, :agreementKeys {:description "List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource", :items {:type "string"}, :type "array"}}, :type "object"}, :CsmSiteRecoveryEntity {:description "Class containing details about site recovery operation.", :properties {:recoverConfig {:description "If true, then the website's configuration will be reverted to its state at SnapshotTime", :type "boolean"}, :siteName {:description "[Optional] Destination web app name into which web app should be recovered. This is case when new web app should be created instead.", :type "string"}, :slotName {:description "[Optional] Destination web app slot name into which web app should be recovered", :type "string"}, :snapshotTime {:description "Point in time in which the site recover should be attempted.", :format "date-time", :type "string"}}, :type "object"}, :Deployment {:allOf [#:reference{:definitions "Resource"}], :description "Represents user credentials used for publishing activity", :properties {:properties {:properties {:deployer {:description "Deployer", :type "string"}, :start_time {:description "StartTime", :format "date-time", :type "string"}, :author {:description "Author", :type "string"}, :end_time {:description "EndTime", :format "date-time", :type "string"}, :details {:description "Detail", :type "string"}, :status {:description "Status", :format "int32", :type "integer"}, :active {:description "Active", :type "boolean"}, :id {:description "Id", :type "string"}, :author_email {:description "AuthorEmail", :type "string"}, :message {:description "Message", :type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :CertificateOrderCollection {:description "Collection of certificate orders", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "CertificateOrder"}, :type "array"}}, :type "object"}, :SiteCollection {:description "Collection of sites", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "Site"}, :type "array"}}, :type "object"}, :GeoRegionCollection {:description "Collection of geo regions", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "GeoRegion"}, :type "array"}}, :type "object"}, :AzureBlobStorageHttpLogsConfig {:description "Http logs to azure blob storage configuration", :properties {:enabled {:description "Enabled", :type "boolean"}, :retentionInDays {:description "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.", :format "int32", :type "integer"}, :sasUrl {:description "SAS url to a azure blob container with read/write/list/delete permissions", :type "string"}}, :type "object"}, :SlotDifferenceCollection {:description "Collection of Slot Differences", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "SlotDifference"}, :type "array"}}, :type "object"}, :HostingEnvironment {:allOf [#:reference{:definitions "Resource"}], :description "Description of an hostingEnvironment (App Service Environment)", :properties {:properties {:properties {:databaseEdition {:description "Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"Standard\"", :type "string"}, :virtualNetwork #:reference{:definitions "VirtualNetworkProfile"}, :allowedWorkerSizes {:description "List of comma separated strings describing which VM sizes are allowed for workers", :type "string"}, :ipsslAddressCount {:description "Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)", :format "int32", :type "integer"}, :provisioningState {:description "Provisioning state of the hostingEnvironment (App Service Environment)", :enum ["Succeeded" "Failed" "Canceled" "InProgress" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningState"}}, :multiSize {:description "Front-end VM size, e.g. \"Medium\", \"Large\"", :type "string"}, :dnsSuffix {:description "DNS suffix of the hostingEnvironment (App Service Environment)", :type "string"}, :name {:description "Name of the hostingEnvironment (App Service Environment)", :type "string"}, :internalLoadBalancingMode {:description "Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET", :enum ["None" "Web" "Publishing"], :type "string", :x-ms-enum {:modelAsString false, :name "InternalLoadBalancingMode"}}, :environmentCapacities {:description "Current total, used, and available worker capacities", :items #:reference{:definitions "StampCapacity"}, :type "array"}, :lastActionResult {:description "Result of the last deployment action on this hostingEnvironment (App Service Environment)", :type "string"}, :maximumNumberOfMachines {:description "Maximum number of VMs in this hostingEnvironment (App Service Environment)", :format "int32", :type "integer"}, :vnetName {:description "Name of the hostingEnvironment's (App Service Environment) virtual network", :type "string"}, :allowedMultiSizes {:description "List of comma separated strings describing which VM sizes are allowed for front-ends", :type "string"}, :environmentStatus {:description "Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)", :type "string"}, :suspended {:description "True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)", :type "boolean"}, :vnetResourceGroupName {:description "Resource group of the hostingEnvironment's (App Service Environment) virtual network", :type "string"}, :networkAccessControlList {:description "Access control list for controlling traffic to the hostingEnvironment (App Service Environment)", :items #:reference{:definitions "NetworkAccessControlEntry"}, :type "array"}, :status {:description "Current status of the hostingEnvironment (App Service Environment)", :enum ["Preparing" "Ready" "Scaling" "Deleting"], :type "string", :x-ms-enum {:modelAsString false, :name "HostingEnvironmentStatus"}}, :resourceGroup {:description "Resource group of the hostingEnvironment (App Service Environment)", :type "string"}, :apiManagementAccountId {:description "Api Management Account associated with this Hosting Environment", :type "string"}, :vnetSubnetName {:description "Subnet of the hostingEnvironment's (App Service Environment) virtual network", :type "string"}, :multiRoleCount {:description "Number of front-end instances", :format "int32", :type "integer"}, :databaseServiceObjective {:description "Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"S0\"", :type "string"}, :clusterSettings {:description "Custom settings for changing the behavior of the hosting environment", :items #:reference{:definitions "NameValuePair"}, :type "array"}, :workerPools {:description "Description of worker pools with worker size ids, VM sizes, and number of workers in each pool", :items #:reference{:definitions "WorkerPool"}, :type "array"}, :location {:description "Location of the hostingEnvironment (App Service Environment), e.g. \"West US\"", :type "string"}, :environmentIsHealthy {:description "True/false indicating whether the hostingEnvironment (App Service Environment) is healthy", :type "boolean"}, :upgradeDomains {:description "Number of upgrade domains of this hostingEnvironment (App Service Environment)", :format "int32", :type "integer"}, :vipMappings {:description "Description of IP SSL mapping for this hostingEnvironment (App Service Environment)", :items #:reference{:definitions "VirtualIPMapping"}, :type "array"}, :lastAction {:description "Last deployment action on this hostingEnvironment (App Service Environment)", :type "string"}, :subscriptionId {:description "Subscription of the hostingEnvironment (App Service Environment)", :type "string"}}, :required ["status"], :x-ms-client-flatten true}}, :type "object"}, :CertificateOrderCertificate {:allOf [#:reference{:definitions "Resource"}], :description "Class representing the Key Vault container for certificate purchased through Azure", :properties {:properties {:properties {:keyVaultId {:description "Key Vault Csm resource Id", :type "string"}, :keyVaultSecretName {:description "Key Vault secret name", :type "string"}, :provisioningState {:description "Status of the Key Vault secret", :enum ["Initialized" "WaitingOnCertificateOrder" "Succeeded" "CertificateOrderFailed" "OperationNotPermittedOnKeyVault" "AzureServiceUnauthorizedToAccessKeyVault" "KeyVaultDoesNotExist" "KeyVaultSecretDoesNotExist" "UnknownError" "Unknown"], :type "string", :x-ms-enum {:modelAsString false, :name "KeyVaultSecretStatus"}}}, :x-ms-client-flatten true}}, :type "object"}, :HostName {:description "Details of a hostname derived from a domain", :properties {:azureResourceName {:description "Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager then it will be the traffic manager name otherwise it will be the website name", :type "string"}, :azureResourceType {:description "Type of the Azure resource the hostname is assigned to", :enum ["Website" "TrafficManager"], :type "string", :x-ms-enum {:modelAsString false, :name "AzureResourceType"}}, :customHostNameDnsRecordType {:description "Type of the Dns record", :enum ["CName" "A"], :type "string", :x-ms-enum {:modelAsString false, :name "CustomHostNameDnsRecordType"}}, :hostNameType {:description "Type of the hostname", :enum ["Verified" "Managed"], :type "string", :x-ms-enum {:modelAsString false, :name "HostNameType"}}, :name {:description "Name of the hostname", :type "string"}, :siteNames {:description "List of sites the hostname is assigned to. This list will have more than one site only if the hostname is pointing to a Traffic Manager", :items {:type "string"}, :type "array"}}, :type "object"}, :RelayServiceConnectionEntity {:allOf [#:reference{:definitions "Resource"}], :description "Class that represents a BizTalk Hybrid Connection", :properties {:properties {:properties {:biztalkUri {:type "string"}, :entityConnectionString {:type "string"}, :entityName {:type "string"}, :hostname {:type "string"}, :port {:format "int32", :type "integer"}, :resourceConnectionString {:type "string"}, :resourceType {:type "string"}}, :x-ms-client-flatten true}}, :type "object"}, :Object {:properties {}, :type "object"}, :ApiDefinitionInfo {:description "Information about the formal API definition for the web app.", :properties {:url {:description "The URL of the API definition.", :type "string"}}, :type "object"}, :ApplicationLogsConfig {:description "Application logs configuration", :properties {:azureBlobStorage #:reference{:definitions "AzureBlobStorageApplicationLogsConfig"}, :azureTableStorage #:reference{:definitions "AzureTableStorageApplicationLogsConfig"}, :fileSystem #:reference{:definitions "FileSystemApplicationLogsConfig"}}, :type "object"}, :RestoreRequest {:allOf [#:reference{:definitions "Resource"}], :description "Description of a restore request", :properties {:properties {:properties {:storageAccountUrl {:description "SAS URL to the container", :type "string"}, :databases {:description "Collection of databases which should be restored. This list has to match the list of databases included in the backup.", :items #:reference{:definitions "DatabaseBackupSetting"}, :type "array"}, :adjustConnectionStrings {:description "Gets or sets a flag showing if SiteConfig.ConnectionStrings should be set in new site", :type "boolean"}, :overwrite {:description "True if the restore operation can overwrite target site. \"True\" needed if trying to restore over an existing site.", :type "boolean"}, :hostingEnvironment {:description "App Service Environment name, if needed (only when restoring a site to an App Service Environment)", :type "string"}, :siteName {:description "Name of a site (Web App)", :type "string"}, :ignoreConflictingHostNames {:description "Changes a logic when restoring a site with custom domains. If \"true\", custom domains are removed automatically. If \"false\", custom domains are added to \r\n            the site object when it is being restored, but that might fail due to conflicts during the operation.", :type "boolean"}, :blobName {:description "Name of a blob which contains the backup", :type "string"}, :operationType {:description "Operation type", :enum ["Default" "Clone" "Relocation"], :type "string", :x-ms-enum {:modelAsString false, :name "BackupRestoreOperationType"}}}, :required ["operationType"], :x-ms-client-flatten true}}, :type "object"}, :DeletedSite {:allOf [#:reference{:definitions "Resource"}], :description "Reports deleted site including the timestamp of operation", :properties {:properties {:properties {:maxNumberOfWorkers {:description "Maximum number of workers\r\n            This only applies to function container", :format "int32", :type "integer"}, :defaultHostName {:description "Default hostname of the web app", :readOnly true, :type "string"}, :serverFarmId {:type "string"}, :targetSwapSlot {:description "Read-only property that specifies which slot this app will swap into", :readOnly true, :type "string"}, :scmSiteAlsoStopped {:description "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.", :type "boolean"}, :clientCertEnabled {:description "Specifies if the client certificate is enabled for the web app", :type "boolean"}, :outboundIpAddresses {:description "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.", :readOnly true, :type "string"}, :gatewaySiteName {:description "Name of gateway app associated with web app", :type "string"}, :cloningInfo #:reference{:definitions "CloningInfo"}, :name {:description "Name of web app", :type "string"}, :isDefaultContainer {:description "Site is a default container", :readOnly true, :type "boolean"}, :deletedTimestamp {:description "Time when the site was deleted", :format "date-time", :type "string"}, :availabilityState {:description "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.", :enum ["Normal" "Limited" "DisasterRecoveryMode"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "SiteAvailabilityState"}}, :premiumAppDeployed {:description "If set indicates whether web app is deployed as a premium app", :readOnly true, :type "boolean"}, :usageState {:description "State indicating whether web app has exceeded its quota usage", :enum ["Normal" "Exceeded"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "UsageState"}}, :state {:description "State of the web app", :readOnly true, :type "string"}, :lastModifiedTimeUtc {:description "Last time web app was modified in UTC", :format "date-time", :readOnly true, :type "string"}, :resourceGroup {:description "Resource group web app belongs to", :readOnly true, :type "string"}, :trafficManagerHostNames {:description "Read-only list of Azure Traffic manager hostnames associated with web app", :items {:type "string"}, :readOnly true, :type "array"}, :clientAffinityEnabled {:description "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app", :type "boolean"}, :enabledHostNames {:description "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames", :items {:type "string"}, :readOnly true, :type "array"}, :repositorySiteName {:description "Name of repository site", :readOnly true, :type "string"}, :hostingEnvironmentProfile #:reference{:definitions "HostingEnvironmentProfile"}, :microService {:description "", :type "string"}, :siteConfig #:reference{:definitions "SiteConfig"}, :containerSize {:description "Size of a function container", :format "int32", :type "integer"}, :enabled {:description "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).", :type "boolean"}, :hostNameSslStates {:description "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.", :items #:reference{:definitions "HostNameSslState"}, :type "array"}, :hostNamesDisabled {:description "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process", :type "boolean"}, :hostNames {:description "Hostnames associated with web app", :items {:type "string"}, :readOnly true, :type "array"}}, :required ["usageState" "availabilityState"], :x-ms-client-flatten true}}, :type "object"}, :SiteLogsConfig {:allOf [#:reference{:definitions "Resource"}], :description "Configuration of Azure web site", :properties {:properties {:properties {:applicationLogs #:reference{:definitions "ApplicationLogsConfig"}, :detailedErrorMessages #:reference{:definitions "EnabledConfig"}, :failedRequestsTracing #:reference{:definitions "EnabledConfig"}, :httpLogs #:reference{:definitions "HttpLogsConfig"}}, :x-ms-client-flatten true}}, :type "object"}, :ManagedHostingEnvironmentCollection {:description "Collection of managed hosting environments", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "ManagedHostingEnvironment"}, :type "array"}}, :type "object"}, :CsmUsageQuotaCollection {:description "Collection of csm usage quotas", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "CsmUsageQuota"}, :type "array"}}, :type "object"}, :SlowRequestsBasedTrigger {:description "SlowRequestsBasedTrigger", :properties {:count {:description "Count", :format "int32", :type "integer"}, :timeInterval {:description "TimeInterval", :type "string"}, :timeTaken {:description "TimeTaken", :type "string"}}, :type "object"}, :SiteInstanceCollection {:description "Collection of site instances", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "SiteInstance"}, :type "array"}}, :type "object"}, :LocalizableString {:description "LocalizableString object containing the name and a localized value.", :properties {:localizedValue {:description "Localized name", :type "string"}, :value {:description "Non localized name", :type "string"}}, :type "object"}, :Site {:allOf [#:reference{:definitions "Resource"}], :description "Represents a web app", :properties {:properties {:properties {:maxNumberOfWorkers {:description "Maximum number of workers\r\n            This only applies to function container", :format "int32", :type "integer"}, :defaultHostName {:description "Default hostname of the web app", :readOnly true, :type "string"}, :serverFarmId {:type "string"}, :targetSwapSlot {:description "Read-only property that specifies which slot this app will swap into", :readOnly true, :type "string"}, :scmSiteAlsoStopped {:description "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.", :type "boolean"}, :clientCertEnabled {:description "Specifies if the client certificate is enabled for the web app", :type "boolean"}, :outboundIpAddresses {:description "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.", :readOnly true, :type "string"}, :gatewaySiteName {:description "Name of gateway app associated with web app", :type "string"}, :cloningInfo #:reference{:definitions "CloningInfo"}, :name {:description "Name of web app", :type "string"}, :isDefaultContainer {:description "Site is a default container", :readOnly true, :type "boolean"}, :availabilityState {:description "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.", :enum ["Normal" "Limited" "DisasterRecoveryMode"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "SiteAvailabilityState"}}, :premiumAppDeployed {:description "If set indicates whether web app is deployed as a premium app", :readOnly true, :type "boolean"}, :usageState {:description "State indicating whether web app has exceeded its quota usage", :enum ["Normal" "Exceeded"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "UsageState"}}, :state {:description "State of the web app", :readOnly true, :type "string"}, :lastModifiedTimeUtc {:description "Last time web app was modified in UTC", :format "date-time", :readOnly true, :type "string"}, :resourceGroup {:description "Resource group web app belongs to", :readOnly true, :type "string"}, :trafficManagerHostNames {:description "Read-only list of Azure Traffic manager hostnames associated with web app", :items {:type "string"}, :readOnly true, :type "array"}, :clientAffinityEnabled {:description "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app", :type "boolean"}, :enabledHostNames {:description "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames", :items {:type "string"}, :readOnly true, :type "array"}, :repositorySiteName {:description "Name of repository site", :readOnly true, :type "string"}, :hostingEnvironmentProfile #:reference{:definitions "HostingEnvironmentProfile"}, :microService {:description "", :type "string"}, :siteConfig #:reference{:definitions "SiteConfig"}, :containerSize {:description "Size of a function container", :format "int32", :type "integer"}, :enabled {:description "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).", :type "boolean"}, :hostNameSslStates {:description "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.", :items #:reference{:definitions "HostNameSslState"}, :type "array"}, :hostNamesDisabled {:description "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process", :type "boolean"}, :hostNames {:description "Hostnames associated with web app", :items {:type "string"}, :readOnly true, :type "array"}}, :required ["usageState" "availabilityState"], :x-ms-client-flatten true}}, :type "object"}, :AutoHealCustomAction {:description "AutoHealCustomAction - Describes the custom action to be executed\r\n            when an auto heal rule is triggered.", :properties {:exe {:description "Executable to be run", :type "string"}, :parameters {:description "Parameters for the executable", :type "string"}}, :type "object"}, :RampUpRule {:description "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance", :properties {:actionHostName {:description "Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net", :type "string"}, :changeDecisionCallbackUrl {:description "Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.\r\n            https://www.siteextensions.net/packages/TiPCallback/", :type "string"}, :changeIntervalInMinutes {:description "[Optional] Specifies interval in minutes to reevaluate ReroutePercentage", :format "int32", :type "integer"}, :changeStep {:description "[Optional] In auto ramp up scenario this is the step to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches \r\n            {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.\r\n            Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}", :format "double", :type "number"}, :maxReroutePercentage {:description "[Optional] Specifies upper boundary below which ReroutePercentage will stay.", :format "double", :type "number"}, :minReroutePercentage {:description "[Optional] Specifies lower boundary above which ReroutePercentage will stay.", :format "double", :type "number"}, :name {:description "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.", :type "string"}, :reroutePercentage {:description "Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}", :format "double", :type "number"}}, :type "object"}, :IpSecurityRestriction {:description "Represents an ip security restriction on a web app.", :properties {:ipAddress {:description "IP address the security restriction is valid for", :type "string"}, :subnetMask {:description "Subnet mask for the range of IP addresses the restriction is valid for", :type "string"}}, :type "object"}, :HostingEnvironmentDiagnostics {:description "Diagnostics for a hosting environment (App Service Environment)", :properties {:diagnosicsOutput {:description "Diagnostics output", :type "string"}, :name {:description "Name/identifier of the diagnostics", :type "string"}}, :type "object"}, :Contact {:description "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information will be made publicly available through the Whois directories as per ICANN requirements.", :properties {:fax {:description "Fax number", :type "string"}, :email {:description "Email address", :type "string"}, :addressMailing #:reference{:definitions "Address"}, :nameFirst {:description "First name", :type "string"}, :phone {:description "Phone number", :type "string"}, :nameMiddle {:description "Middle name", :type "string"}, :nameLast {:description "Last name", :type "string"}, :organization {:description "Organization", :type "string"}, :jobTitle {:description "Job title", :type "string"}}, :type "object"}, :HttpLogsConfig {:description "Http logs configuration", :properties {:azureBlobStorage #:reference{:definitions "AzureBlobStorageHttpLogsConfig"}, :fileSystem #:reference{:definitions "FileSystemHttpLogsConfig"}}, :type "object"}, :CertificateOrderCertificateCollection {:description "Collection of certificate order certificates", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "CertificateOrderCertificate"}, :type "array"}}, :type "object"}, :StampCapacityCollection {:description "Collection of stamp capacities", :properties {:nextLink {:description "Link to next page of resources", :type "string"}, :value {:description "Collection of resources", :items #:reference{:definitions "StampCapacity"}, :type "array"}}, :type "object"}, :VirtualIPMapping {:description "Class that represents a VIP mapping", :properties {:inUse {:description "Is VIP mapping in use", :type "boolean"}, :internalHttpPort {:description "Internal HTTP port", :format "int32", :type "integer"}, :internalHttpsPort {:description "Internal HTTPS port", :format "int32", :type "integer"}, :virtualIP {:description "Virtual IP address", :type "string"}}, :type "object"}, :SiteAuthSettings {:description "Configuration settings for the Azure App Service Authentication / Authorization feature.", :properties {:tokenRefreshExtensionHours {:description "Gets or sets the number of hours after session token expiration that a session token can be used to\r\n            call the token refresh API. The default is 72 hours.", :format "double", :type "number"}, :clientId {:description "Gets or sets the Client ID of this relying party application, known as the client_id.\r\n            This setting is required for enabling OpenID Connection authentication with Azure Active Directory or \r\n            other 3rd party OpenID Connect providers.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html", :type "string"}, :allowedAudiences {:description "Gets or sets a list of allowed audience values to consider when validating JWTs issued by \r\n            Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an\r\n            allowed audience, regardless of this setting.", :items {:type "string"}, :type "array"}, :googleOAuthScopes {:description "Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\r\n            This setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/", :items {:type "string"}, :type "array"}, :twitterConsumerKey {:description "Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in", :type "string"}, :aadClientId {:type "string"}, :unauthenticatedClientAction {:description "Gets or sets the action to take when an unauthenticated client attempts to access the app.", :enum ["RedirectToLoginPage" "AllowAnonymous"], :type "string", :x-ms-enum {:modelAsString false, :name "UnauthenticatedClientAction"}}, :microsoftAccountClientSecret {:description "Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm", :type "string"}, :additionalLoginParams {:description "Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when\r\n            a user logs in. Each parameter must be in the form \"key=value\".", :items {:type "string"}, :type "array"}, :facebookAppSecret {:description "Gets or sets the App Secret of the Facebook app used for Facebook Login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login", :type "string"}, :microsoftAccountClientId {:description "Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm", :type "string"}, :httpApiPrefixPath {:description "Gets or sets the relative path prefix used by platform HTTP APIs.\r\n            Changing this value is not recommended except for compatibility reasons.", :type "string"}, :microsoftAccountOAuthScopes {:description "Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\r\n            This setting is optional. If not specified, \"wl.basic\" is used as the default scope.\r\n            Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx", :items {:type "string"}, :type "array"}, :facebookOAuthScopes {:description "Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\r\n            This setting is optional.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login", :items {:type "string"}, :type "array"}, :facebookAppId {:description "Gets or sets the App ID of the Facebook app used for login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login", :type "string"}, :tokenStoreEnabled {:description "Gets or sets a value indicating whether to durably store platform-specific security tokens\r\n            obtained during login flows. This capability is disabled by default.", :type "boolean"}, :issuer {:description "Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\r\n            When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\r\n            This URI is a case-sensitive identifier for the token issuer.\r\n            More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html", :type "string"}, :twitterConsumerSecret {:description "Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in", :type "string"}, :defaultProvider {:description "Gets or sets the default authentication provider to use when multiple providers are configured.\r\n            This setting is only needed if multiple providers are configured and the unauthenticated client\r\n            action is set to \"RedirectToLoginPage\".", :enum ["AzureActiveDirectory" "Facebook" "Google" "MicrosoftAccount" "Twitter"], :type "string", :x-ms-enum {:modelAsString false, :name "BuiltInAuthenticationProvider"}}, :googleClientId {:description "Gets or sets the OpenID Connect Client ID for the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/", :type "string"}, :googleClientSecret {:description "Gets or sets the client secret associated with the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/", :type "string"}, :openIdIssuer {:type "string"}, :enabled {:description "Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app.", :type "boolean"}, :clientSecret {:description "Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\r\n            This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\r\n            Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html", :type "string"}, :allowedExternalRedirectUrls {:description "Gets or sets a collection of external URLs that can be redirected to as part of logging in\r\n            or logging out of the web app. Note that the query string part of the URL is ignored.\r\n            This is an advanced setting typically only needed by Windows Store application backends.\r\n            Note that URLs within the current domain are always implicitly allowed.", :items {:type "string"}, :type "array"}}, :type "object"}}}