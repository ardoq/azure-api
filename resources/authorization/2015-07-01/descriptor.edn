{:scheme "https", :host "management.azure.com", :info {:description "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.", :title "AuthorizationManagementClient", :version "2015-07-01"}, :ops {:ProviderOperationsMetadata_List {:path "/providers/Microsoft.Authorization/providerOperations", :description "Gets provider operations metadata for all resource providers.", :parameters [{:description "The API version to use for this operation.", :in "query", :name "api-version", :required true, :type "string"} {:default "resourceTypes", :description "Specifies whether to expand the values.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :ElevateAccess_Post {:path "/providers/Microsoft.Authorization/elevateAccess", :description "Elevates access for a Global Administrator.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :post}, :RoleAssignments_GetById {:path "/{roleAssignmentId}", :description "Gets a role assignment by ID.", :parameters [{:description "The fully qualified ID of the role assignment, including the scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.", :in "path", :name "roleAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleAssignments_ListForScope {:path "/{scope}/providers/Microsoft.Authorization/roleAssignments", :description "Gets role assignments for a scope.", :parameters [{:description "The scope of the role assignments.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ProviderOperationsMetadata_Get {:path "/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}", :description "Gets provider operations metadata for the specified resource provider.", :parameters [{:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"} {:default "resourceTypes", :description "Specifies whether to expand the values.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :RoleAssignments_Get {:path "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}", :description "Get the specified role assignment.", :parameters [{:description "The scope of the role assignment.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the role assignment to get.", :in "path", :name "roleAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleAssignments_Create {:path "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}", :description "Creates a role assignment.", :parameters [{:description "The scope of the role assignment to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the role assignment to create. It can be any valid GUID.", :in "path", :name "roleAssignmentName", :required true, :type "string"} {:description "Parameters for the role assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RoleAssignmentCreateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :RoleDefinitions_Get {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Get role definition by name (GUID).", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition.", :in "path", :name "roleDefinitionId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleAssignments_DeleteById {:path "/{roleAssignmentId}", :description "Deletes a role assignment.", :parameters [{:description "The fully qualified ID of the role assignment, including the scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.", :in "path", :name "roleAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :RoleAssignments_ListForResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments", :description "Gets role assignments for a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RoleAssignments_ListForResource {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments", :description "Gets role assignments for a resource.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to get role assignments for.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RoleDefinitions_CreateOrUpdate {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Creates or updates a role definition.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition.", :in "path", :name "roleDefinitionId", :required true, :type "string"} {:description "The values for the role definition.", :in "body", :name "roleDefinition", :required true, :schema #:reference{:definitions "RoleDefinition"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :RoleDefinitions_List {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions", :description "Get all role definitions that are applicable at scope and above.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :RoleDefinitions_Delete {:path "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}", :description "Deletes a role definition.", :parameters [{:description "The scope of the role definition.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The ID of the role definition to delete.", :in "path", :name "roleDefinitionId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Permissions_ListForResourceGroup {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions", :description "Gets all permissions the caller has for a resource group.", :parameters [{:description "The name of the resource group to get the permissions for. The name is case insensitive.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RoleAssignments_Delete {:path "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}", :description "Deletes a role assignment.", :parameters [{:description "The scope of the role assignment to delete.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the role assignment to delete.", :in "path", :name "roleAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :RoleAssignments_CreateById {:path "/{roleAssignmentId}", :description "Creates a role assignment by ID.", :parameters [{:description "The fully qualified ID of the role assignment, including the scope, resource name and resource type. Use the format, /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.", :in "path", :name "roleAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Parameters for the role assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RoleAssignmentCreateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Permissions_ListForResource {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions", :description "Gets all permissions the caller has for a resource.", :parameters [{:description "The name of the resource group containing the resource. The name is case insensitive.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource identity.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type of the resource.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource to get the permissions for.", :in "path", :name "resourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RoleAssignments_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments", :description "Gets all role assignments for the subscription.", :parameters [{:description "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The API version to use for this operation.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "The ID of the target subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ResourceType {:description "Resource Type", :properties {:displayName {:description "The resource type display name.", :type "string"}, :name {:description "The resource type name.", :type "string"}, :operations {:description "The resource type operations.", :items #:reference{:definitions "ProviderOperation"}, :type "array"}}}, :ProviderOperationsMetadataListResult {:description "Provider operations metadata list", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "The list of providers.", :items #:reference{:definitions "ProviderOperationsMetadata"}, :type "array"}}}, :Permission {:description "Role definition permissions.", :properties {:actions {:description "Allowed actions.", :items {:type "string"}, :type "array"}, :notActions {:description "Denied actions.", :items {:type "string"}, :type "array"}}}, :ProviderOperationsMetadata {:description "Provider Operations metadata", :properties {:displayName {:description "The provider display name.", :type "string"}, :id {:description "The provider id.", :type "string"}, :name {:description "The provider name.", :type "string"}, :operations {:description "The provider operations.", :items #:reference{:definitions "ProviderOperation"}, :type "array"}, :resourceTypes {:description "The provider resource types", :items #:reference{:definitions "ResourceType"}, :type "array"}, :type {:description "The provider type.", :type "string"}}}, :RoleAssignmentPropertiesWithScope {:description "Role assignment properties with scope.", :properties {:principalId {:description "The principal ID.", :type "string"}, :roleDefinitionId {:description "The role definition ID.", :type "string"}, :scope {:description "The role assignment scope.", :type "string"}}}, :RoleAssignmentCreateParameters {:description "Role assignment create parameters.", :properties {:properties #:reference{:definitions "RoleAssignmentProperties"}}, :required ["properties"]}, :RoleDefinition {:description "Role definition.", :properties {:id {:description "The role definition ID.", :readOnly true, :type "string"}, :name {:description "The role definition name.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RoleDefinitionProperties"}, :type {:description "The role definition type.", :readOnly true, :type "string"}}}, :PermissionGetResult {:description "Permissions information.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "An array of permissions.", :items #:reference{:definitions "Permission"}, :type "array"}}}, :ProviderOperation {:description "Operation", :properties {:description {:description "The operation description.", :type "string"}, :displayName {:description "The operation display name.", :type "string"}, :name {:description "The operation name.", :type "string"}, :origin {:description "The operation origin.", :type "string"}, :properties {:description "The operation properties.", :type "object"}}}, :RoleAssignmentListResult {:description "Role assignment list operation result.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "Role assignment list.", :items #:reference{:definitions "RoleAssignment"}, :type "array"}}}, :RoleDefinitionFilter {:description "Role Definitions filter", :properties {:roleName {:description "Returns role definition with the specific name.", :type "string"}}}, :RoleDefinitionProperties {:description "Role definition properties.", :properties {:assignableScopes {:description "Role definition assignable scopes.", :items {:type "string"}, :type "array"}, :description {:description "The role definition description.", :type "string"}, :permissions {:description "Role definition permissions.", :items #:reference{:definitions "Permission"}, :type "array"}, :roleName {:description "The role name.", :type "string"}, :type {:description "The role type.", :type "string"}}}, :RoleAssignmentFilter {:description "Role Assignments filter", :properties {:principalId {:description "Returns role assignment of the specific principal.", :type "string"}}}, :RoleDefinitionListResult {:description "Role definition list operation result.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "Role definition list.", :items #:reference{:definitions "RoleDefinition"}, :type "array"}}}, :RoleAssignment {:description "Role Assignments", :properties {:id {:description "The role assignment ID.", :readOnly true, :type "string"}, :name {:description "The role assignment name.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RoleAssignmentPropertiesWithScope"}, :type {:description "The role assignment type.", :readOnly true, :type "string"}}}, :RoleAssignmentProperties {:description "Role assignment properties.", :properties {:principalId {:description "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.", :type "string"}, :roleDefinitionId {:description "The role definition ID used in the role assignment.", :type "string"}}, :required ["roleDefinitionId" "principalId"]}}}