{:scheme "https", :host "management.azure.com", :info {:description "Client for managing DNS zones and record.", :title "DnsManagementClient", :version "2015-05-04-preview"}, :ops {:RecordSets_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}", :description "Creates a RecordSet within a DNS zone.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The type of DNS record.", :enum ["A" "AAAA" "CNAME" "MX" "NS" "PTR" "SOA" "SRV" "TXT"], :in "path", :name "recordType", :required true, :type "string", :x-ms-enum {:name "RecordType"}} {:description "The name of the RecordSet, relative to the name of the zone.", :in "path", :name "relativeRecordSetName", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The etag of RecordSet.", :in "header", :name "If-Match", :type "string"} {:description "Defines the If-None-Match condition. Set to '*' to force Create-If-Not-Exist. Other values will be ignored.", :in "header", :name "If-None-Match", :type "string"} {:description "Parameters supplied to the CreateOrUpdate operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RecordSet"}} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :put}, :RecordSets_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}", :description "Removes a RecordSet from a DNS zone.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The type of DNS record.", :enum ["A" "AAAA" "CNAME" "MX" "NS" "PTR" "SOA" "SRV" "TXT"], :in "path", :name "recordType", :required true, :type "string", :x-ms-enum {:name "RecordType"}} {:description "The name of the RecordSet, relative to the name of the zone.", :in "path", :name "relativeRecordSetName", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Defines the If-Match condition. The delete operation will be performed only if the ETag of the zone on the server matches this value.", :in "header", :name "If-Match", :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :delete}, :RecordSets_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}", :description "Lists the RecordSets of a specified type in a DNS zone.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone from which to enumerate RecordsSets.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The type of record sets to enumerate.", :enum ["A" "AAAA" "CNAME" "MX" "NS" "PTR" "SOA" "SRV" "TXT"], :in "path", :name "recordType", :required true, :type "string", :x-ms-enum {:name "RecordType"}} {:description "Query parameters. If null is passed returns the default number of zones.", :in "query", :name "$top", :required false, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Zones_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}", :description "Gets a DNS zone.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Zones_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}", :description "Creates a DNS zone within a resource group.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The etag of Zone.", :in "header", :name "If-Match", :type "string"} {:description "Defines the If-None-Match condition. Set to '*' to force Create-If-Not-Exist. Other values will be ignored.", :in "header", :name "If-None-Match", :type "string"} {:description "Parameters supplied to the CreateOrUpdate operation.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Zone"}} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :put}, :Zones_ListZonesInResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones", :description "Lists the DNS zones within a resource group.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "Query parameters. If null is passed returns the default number of zones.", :in "query", :name "$top", :required false, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Zones_ListZonesInSubscription {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnszones", :description "Lists the DNS zones within a resource group.", :parameters [{:description "Query parameters. If null is passed returns the default number of zones.", :in "query", :name "$top", :required false, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RecordSets_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}", :description "Gets a RecordSet.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "The type of DNS record.", :enum ["A" "AAAA" "CNAME" "MX" "NS" "PTR" "SOA" "SRV" "TXT"], :in "path", :name "recordType", :required true, :type "string", :x-ms-enum {:name "RecordType"}} {:description "The name of the RecordSet, relative to the name of the zone.", :in "path", :name "relativeRecordSetName", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :RecordSets_ListAll {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/recordsets", :description "Lists all RecordSets in a DNS zone.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone from which to enumerate RecordSets.", :in "path", :name "zoneName", :required true, :type "string"} {:description "Query parameters. If null is passed returns the default number of zones.", :in "query", :name "$top", :required false, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :get}, :Zones_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}", :description "Removes a DNS zone from a resource group.", :parameters [{:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"} {:description "The name of the zone without a terminating dot.", :in "path", :name "zoneName", :required true, :type "string"} {:description "Defines the If-Match condition. The delete operation will be performed only if the ETag of the zone on the server matches this value.", :in "header", :name "If-Match", :type "string"} {:description "The API version to use for this operation.", :in "query", :minLength 1, :name "api-version", :required true, :type "string"} {:description "The ID of the target subscription.", :in "path", :minLength 1, :name "subscriptionId", :required true, :type "string"}], :verb :delete}}, :parameters {}, :definitions {:RecordSetListResult {:description "The response to a RecordSet List operation.", :properties {:nextLink {:description "Gets or sets the continuation token for the next page.", :type "string"}, :value {:description "Gets or sets information about the RecordSets in the response.", :items #:reference{:definitions "RecordSet"}, :type "array"}}}, :SrvRecord {:description "An SRV record.", :properties {:port {:description "Gets or sets the port of the service for this record.", :format "int32", :type "integer"}, :priority {:description "Gets or sets the priority metric for this record.", :format "int32", :type "integer"}, :target {:description "Gets or sets the domain name of the target for this record, without a terminating dot.", :type "string"}, :weight {:description "Gets or sets the weight metric for this record.", :format "int32", :type "integer"}}}, :NsRecord {:description "An NS record.", :properties {:nsdname {:description "Gets or sets the name server name for this record, without a terminating dot.", :type "string"}}}, :TxtRecord {:description "A TXT record.", :properties {:value {:description "Gets or sets the text value of this record.", :items {:type "string"}, :type "array"}}}, :CnameRecord {:description "A CNAME record.", :properties {:cname {:description "Gets or sets the canonical name for this record without a terminating dot.", :type "string"}}}, :SubResource {:properties {:id {:description "Resource Id", :type "string"}}, :x-ms-external true}, :SoaRecord {:description "An SOA record.", :properties {:email {:description "Gets or sets the email for this record.", :type "string"}, :expireTime {:description "Gets or sets the expire time for this record.", :format "int64", :type "integer"}, :host {:description "Gets or sets the domain name of the authoritative name server, without a terminating dot.", :type "string"}, :minimumTTL {:description "Gets or sets the minimum TTL value for this record.", :format "int64", :type "integer"}, :refreshTime {:description "Gets or sets the refresh value for this record.", :format "int64", :type "integer"}, :retryTime {:description "Gets or sets the retry time for this record.", :format "int64", :type "integer"}, :serialNumber {:description "Gets or sets the serial number for this record.", :format "int64", :type "integer"}}}, :RecordSet {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "Describes a DNS RecordSet (a set of DNS records with the same name and type).", :properties {:etag {:description "Gets or sets the ETag of the RecordSet.", :type "string"}, :properties #:reference{:definitions "RecordSetProperties"}}}, :ZoneProperties {:description "Represents the properties of the zone.", :properties {:maxNumberOfRecordSets {:description "Gets or sets the maximum number of record sets that can be created in this zone.", :format "int64", :type "integer"}, :numberOfRecordSets {:description "Gets or sets the current number of record sets in this zone.", :format "int64", :type "integer"}}}, :PtrRecord {:description "A PTR record.", :properties {:ptrdname {:description "Gets or sets the PTR target domain name for this record without a terminating dot.", :type "string"}}}, :Zone {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "Describes a DNS zone.", :properties {:etag {:description "Gets or sets the ETag of the zone that is being updated, as received from a Get operation.", :type "string"}, :properties #:reference{:definitions "ZoneProperties"}}}, :MxRecord {:description "An MX record.", :properties {:exchange {:description "Gets or sets the domain name of the mail host, without a terminating dot.", :type "string"}, :preference {:description "Gets or sets the preference metric for this record.", :format "int32", :type "integer"}}}, :ZoneListResult {:description "The response to a Zone List or ListAll operation.", :properties {:nextLink {:description "Gets or sets the continuation token for the next page.", :type "string"}, :value {:description "Gets or sets information about the zones in the response.", :items #:reference{:definitions "Zone"}, :type "array"}}}, :RecordSetProperties {:description "Represents the properties of the records in the RecordSet.", :properties {:NSRecords {:description "Gets or sets the list of NS records in the RecordSet.", :items #:reference{:definitions "NsRecord"}, :type "array"}, :SRVRecords {:description "Gets or sets the list of SRV records in the RecordSet.", :items #:reference{:definitions "SrvRecord"}, :type "array"}, :CNAMERecord #:reference{:definitions "CnameRecord"}, :AAAARecords {:description "Gets or sets the list of AAAA records in the RecordSet.", :items #:reference{:definitions "AaaaRecord"}, :type "array"}, :PTRRecords {:description "Gets or sets the list of PTR records in the RecordSet.", :items #:reference{:definitions "PtrRecord"}, :type "array"}, :ARecords {:description "Gets or sets the list of A records in the RecordSet.", :items #:reference{:definitions "ARecord"}, :type "array"}, :SOARecord #:reference{:definitions "SoaRecord"}, :TXTRecords {:description "Gets or sets the list of TXT records in the RecordSet.", :items #:reference{:definitions "TxtRecord"}, :type "array"}, :TTL {:description "Gets or sets the TTL of the records in the RecordSet.", :format "int64", :type "integer"}, :MXRecords {:description "Gets or sets the list of MX records in the RecordSet.", :items #:reference{:definitions "MxRecord"}, :type "array"}}}, :AaaaRecord {:description "An AAAA record.", :properties {:ipv6Address {:description "Gets or sets the IPv6 address of this AAAA record in string notation.", :type "string"}}}, :ARecord {:description "An A record.", :properties {:ipv4Address {:description "Gets or sets the IPv4 address of this A record in string notation.", :type "string"}}}}}