{:scheme "https", :host "management.azure.com", :info {:description "This Swagger was generated by the API Framework.", :title "Azure Media Services", :version "2019-09-01-preview"}, :ops {:MediaGraphs_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs", :description "Lists Media Graphs in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} #:reference{:parameters "ApiVersion"} {:description "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.", :in "query", :name "$top", :required false, :type "integer"}], :verb :get}, :MediaGraphs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}", :description "Deletes a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :MediaGraphs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}", :description "Get the details of a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :MediaGraphs_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}", :description "Create or update a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "MediaGraph"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :OperationResults_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}/operationResults/{operationId}", :description "Get the operation result of a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} {:description "The operation ID", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :OperationsStatus_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}/operationsStatus/{operationId}", :description "Get the operation status of a Media Graph in the media services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} {:description "The operation ID", :in "path", :name "operationId", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :MediaGraphs_Start {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}/start", :description "Start a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}, :MediaGraphs_Stop {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/mediaGraphs/{mediaGraphName}/stop", :description "Stop a Media Graph in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Media Graph name.", :in "path", :name "mediaGraphName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}}, :parameters {:ApiVersion {:description "The Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :MediaServicesAccountName {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupName {:description "The name of the resource group within the Azure subscription.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionId {:description "The unique identifier for a Microsoft Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ApiError {:description "The API error.", :properties {:error #:reference{:definitions "ODataError"}}, :type "object"}, :MediaGraphUserCredentials {:description "Credentials to authenticate to Media Graph sources", :properties {:password {:description "Password credential", :type "string"}, :username {:description "User name", :type "string"}}, :required ["username" "password"], :type "object"}, :MediaGraphSink {:description "Media Sink", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}, :inputs {:description "Sink inputs", :items {:type "string"}, :type "array"}, :name {:description "Sink name", :type "string"}}, :required ["@odata.type" "name" "inputs"], :type "object"}, :MediaGraphRtspSource {:allOf [#:reference{:definitions "MediaGraphSource"}], :description "RTSP source", :properties {:credentials #:reference{:definitions "MediaGraphUserCredentials"}, :rtspUrl {:description "RTSP URL", :type "string"}}, :required ["rtspUrl"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.MediaGraphRtspSource"}, :MediaGraphCollection {:description "A collection of MediaGraph items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of MediaGraph items.", :items #:reference{:definitions "MediaGraph"}, :type "array"}}, :type "object"}, :MediaGraphSource {:description "Media source", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}, :name {:description "Source name", :type "string"}}, :required ["@odata.type" "name"], :type "object"}, :MediaGraphOperationStatus {:description "The status of the Media Graph operation", :properties {:error #:reference{:definitions "MediaGraphOperationError"}, :name {:description "The name of the Media Graph operation", :type "string"}, :status {:description "The status of the Media Graph operation", :type "string"}}, :required ["name"], :type "object"}, :ODataError {:description "Information about an error.", :properties {:code {:description "A language-independent error name.", :type "string"}, :details {:description "The error details.", :items #:reference{:definitions "ODataError"}, :type "array"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the error (for example, the name of the property in error).", :type "string"}}, :type "object"}, :MediaGraphOperationResult {:description "The result of the Media Graph operation", :properties {}, :type "object"}, :MediaGraphAssetSink {:allOf [#:reference{:definitions "MediaGraphSink"}], :description "Asset sink", :properties {:assetName {:description "Asset name", :type "string"}}, :required ["assetName"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.MediaGraphAssetSink"}, :MediaGraph {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "The Media Graph.", :properties {:properties #:reference{:definitions "MediaGraphProperties"}}, :type "object"}, :MediaGraphProperties {:description "Class for Media Graph properties", :properties {:created {:description "Date the Media Graph was created", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :description {:description "Media Graph  description", :type "string"}, :lastModified {:description "Date the Media Graph was last modified", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :sinks {:description "Media Graph sinks", :items #:reference{:definitions "MediaGraphSink"}, :type "array"}, :sources {:description "Media Graph sources", :items #:reference{:definitions "MediaGraphSource"}, :type "array"}, :state {:description "Media Graph state", :enum ["Running" "Starting" "Stopped" "Stopping"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "MediaGraphState", :values [{:description "Media Graph is Running", :value "Running"} {:description "Media Graph is Starting", :value "Starting"} {:description "Media Graph has Stopped", :value "Stopped"} {:description "Media Graph is Stopping", :value "Stopping"}]}, :x-nullable false}}, :required ["sources" "sinks"], :type "object"}, :MediaGraphOperationError {:description "The operation error", :properties {:code {:description "The operation error code", :type "string"}, :message {:description "The operation error message", :type "string"}}, :type "object"}}}