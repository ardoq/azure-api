{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on the ApiVersionSet entity associated with your Azure API Management deployment. Using this entity you create and manage API Version Sets that are used to group APIs for consistent versioning.", :title "ApiManagementClient", :version "2017-03-01"}, :ops {:ApiVersionSet_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets", :description "Lists a collection of API Version Sets in the specified service instance.", :parameters [{:description "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"}], :verb :get}, nil {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description nil, :parameters nil, :verb :parameters}, :ApiVersionSet_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description "Deletes specific Api Version Set.", :parameters [{:description "The entity state (Etag) version of the Api Version Set to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"}], :verb :delete}, :ApiVersionSet_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description "Gets the details of the Api Version Set specified by its identifier.", :parameters nil, :verb :get}, :ApiVersionSet_GetEntityTag {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.", :parameters nil, :verb :head}, :ApiVersionSet_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description "Updates the details of the Api VersionSet specified by its identifier.", :parameters [{:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ApiVersionSetUpdateParameters"}} {:description "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"}], :verb :patch}, :ApiVersionSet_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/api-version-sets/{versionSetId}", :description "Creates or Updates a Api Version Set.", :parameters [{:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ApiVersionSetContract"}} {:description "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required false, :type "string"}], :verb :put}}, :parameters {:ApiVersionSetIdParameter {:description "Api Version Set identifier. Must be unique in the current API Management service instance.", :name "versionSetId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}}, :definitions {:ApiVersionSetCollection {:description "Paged Api Version Set list representation.", :properties {:nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "ApiVersionSetContract"}, :type "array"}}}, :ApiVersionSetContract {:allOf [{:description "The Resource definition.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type for API Management resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Api Version Set Contract details.", :properties {:properties #:reference{:definitions "ApiVersionSetContractProperties"}}}, :ApiVersionSetContractProperties {:allOf [#:reference{:definitions "ApiVersionSetEntityBase"}], :description "Properties of an API Version Set.", :properties {:displayName {:description "Name of API Version Set", :maxLength 100, :minLength 1, :type "string"}, :versioningScheme {:description "An value that determines where the API Version identifer will be located in a HTTP request.", :enum ["Segment" "Query" "Header"], :type "string", :x-ms-enum {:modelAsString true, :name "versioningScheme", :values [{:description "The API Version is passed in a path segment.", :value "Segment"} {:description "The API Version is passed in a query parameter.", :value "Query"} {:description "The API Version is passed in a HTTP header.", :value "Header"}]}}}, :required ["displayName" "versioningScheme"]}, :ApiVersionSetEntityBase {:properties {:description {:description "Description of API Version Set.", :type "string"}, :versionHeaderName {:description "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.", :maxLength 100, :minLength 1, :type "string"}, :versionQueryName {:description "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.", :maxLength 100, :minLength 1, :type "string"}}}, :ApiVersionSetUpdateParameters {:description "Parameters to update or create an Api Version Set Contract.", :properties {:properties #:reference{:definitions "ApiVersionSetUpdateParametersProperties"}}}, :ApiVersionSetUpdateParametersProperties {:allOf [#:reference{:definitions "ApiVersionSetEntityBase"}], :description "Properties used to create or update an API Version Set.", :properties {:displayName {:description "Name of API Version Set", :maxLength 100, :minLength 1, :type "string"}, :versioningScheme {:description "An value that determines where the API Version identifer will be located in a HTTP request.", :enum ["Segment" "Query" "Header"], :type "string", :x-ms-enum {:modelAsString true, :name "versioningScheme", :values [{:description "The API Version is passed in a path segment.", :value "Segment"} {:description "The API Version is passed in a query parameter.", :value "Query"} {:description "The API Version is passed in a HTTP header.", :value "Header"}]}}}}}}