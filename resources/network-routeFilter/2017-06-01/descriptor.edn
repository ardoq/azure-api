{:scheme "https", :host "management.azure.com", :info {:description "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.", :title "NetworkManagementClient", :version "2017-06-01"}, :ops {:RouteFilterRules_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Creates or updates a route in the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the route filter rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Parameters supplied to the create or update route filter rule operation.", :in "body", :name "routeFilterRuleParameters", :required true, :schema #:reference{:definitions "RouteFilterRule"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :RouteFilterRules_ListByRouteFilter {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules", :description "Gets all RouteFilterRules in a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RouteFilters_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Gets the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Expands referenced express route bgp peering resources.", :in "query", :name "$expand", :required false, :type "string"}], :verb :get}, :RouteFilters_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Creates or updates a route filter in a specified resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Parameters supplied to the create or update route filter operation.", :in "body", :name "routeFilterParameters", :required true, :schema #:reference{:definitions "RouteFilter"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :RouteFilters_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters", :description "Gets all route filters in a subscription.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RouteFilterRules_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Gets the specified rule from a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the rule.", :in "path", :name "ruleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RouteFilters_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Deletes the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :RouteFilterRules_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Updates a route in the specified route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the route filter rule.", :in "path", :name "ruleName", :required true, :type "string"} {:description "Parameters supplied to the update route filter rule operation.", :in "body", :name "routeFilterRuleParameters", :required true, :schema #:reference{:definitions "PatchRouteFilterRule"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :RouteFilters_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}", :description "Updates a route filter in a specified resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "Parameters supplied to the update route filter operation.", :in "body", :name "routeFilterParameters", :required true, :schema #:reference{:definitions "PatchRouteFilter"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :RouteFilters_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters", :description "Gets all route filters in a resource group.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :RouteFilterRules_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", :description "Deletes the specified rule from a route filter.", :parameters [{:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string"} {:description "The name of the route filter.", :in "path", :name "routeFilterName", :required true, :type "string"} {:description "The name of the rule.", :in "path", :name "ruleName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}}, :parameters {:ApiVersionParameter {:description "Client API version.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:PatchRouteFilter {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Resource.", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterPropertiesFormat"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}}, :PatchRouteFilterRule {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Rule Resource", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterRulePropertiesFormat"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}}, :RouteFilter {:allOf [{:description "Common resource representation.", :properties {:id {:description "Resource ID.", :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Resource.", :properties {:etag {:description "Gets a unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :properties #:reference{:definitions "RouteFilterPropertiesFormat"}}, :required ["location"]}, :RouteFilterListResult {:description "Response for the ListRouteFilters API service call.", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "Gets a list of route filters in a resource group.", :items #:reference{:definitions "RouteFilter"}, :type "array"}}}, :RouteFilterPropertiesFormat {:description "Route Filter Resource", :properties {:peerings {:description "A collection of references to express route circuit peerings.", :items nil, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :rules {:description "Collection of RouteFilterRules contained within a route filter.", :items {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Rule Resource", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Route Filter Rule Resource", :properties {:access {:description "The access type of the rule. Valid values are: 'Allow', 'Deny'", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "Access"}}, :communities {:description "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']", :items {:type "string"}, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :routeFilterRuleType {:description "The rule type of the rule. Valid value is: 'Community'", :enum ["Community"], :type "string", :x-ms-enum {:modelAsString true, :name "RouteFilterRuleType"}}}, :required ["access" "routeFilterRuleType" "communities"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}}, :type "array"}}}, :RouteFilterRule {:allOf [{:description "Reference to another subresource.", :properties {:id {:description "Resource ID.", :type "string"}}, :x-ms-azure-resource true}], :description "Route Filter Rule Resource", :properties {:etag {:description "A unique read-only string that changes whenever the resource is updated.", :readOnly true, :type "string"}, :location {:description "Resource location.", :type "string"}, :name {:description "The name of the resource that is unique within a resource group. This name can be used to access the resource.", :type "string"}, :properties {:description "Route Filter Rule Resource", :properties {:access {:description "The access type of the rule. Valid values are: 'Allow', 'Deny'", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "Access"}}, :communities {:description "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']", :items {:type "string"}, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :routeFilterRuleType {:description "The rule type of the rule. Valid value is: 'Community'", :enum ["Community"], :type "string", :x-ms-enum {:modelAsString true, :name "RouteFilterRuleType"}}}, :required ["access" "routeFilterRuleType" "communities"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object"}}}, :RouteFilterRuleListResult {:description "Response for the ListRouteFilterRules API service call", :properties {:nextLink {:description "The URL to get the next set of results.", :type "string"}, :value {:description "Gets a list of RouteFilterRules in a resource group.", :items #:reference{:definitions "RouteFilterRule"}, :type "array"}}}, :RouteFilterRulePropertiesFormat {:description "Route Filter Rule Resource", :properties {:access {:description "The access type of the rule. Valid values are: 'Allow', 'Deny'", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "Access"}}, :communities {:description "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']", :items {:type "string"}, :type "array"}, :provisioningState {:description "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.", :readOnly true, :type "string"}, :routeFilterRuleType {:description "The rule type of the rule. Valid value is: 'Community'", :enum ["Community"], :type "string", :x-ms-enum {:modelAsString true, :name "RouteFilterRuleType"}}}, :required ["access" "routeFilterRuleType" "communities"]}}}