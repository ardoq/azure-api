{:scheme "https", :host "management.azure.com", :info {:description "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.", :title "SqlManagementClient", :version "2017-03-01-preview"}, :ops {:BackupLongTermRetentionPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}", :description "Gets a database's long term retention policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The policy name. Should always be Default.", :enum ["default"], :in "path", :name "policyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "LongTermRetentionPolicyName"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_ListByResourceGroupDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups", :description "Lists all long term retention backups for a database.", :parameters [#:reference{:parameters "ResourceGroupParameter"} {:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_GetByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}", :description "Gets a long term retention backup.", :parameters [#:reference{:parameters "ResourceGroupParameter"} {:description "The location of the database.", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_Delete {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}", :description "Deletes a long term retention backup.", :parameters [{:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :LongTermRetentionBackups_ListByDatabase {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups", :description "Lists all long term retention backups for a database.", :parameters [{:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_ListByResourceGroupServer {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups", :description "Lists the long term retention backups for a given server.", :parameters [#:reference{:parameters "ResourceGroupParameter"} {:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_DeleteByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}", :description "Deletes a long term retention backup.", :parameters [#:reference{:parameters "ResourceGroupParameter"} {:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :BackupLongTermRetentionPolicies_ListByDatabase {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies", :description "Gets a database's long term retention policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_ListByResourceGroupLocation {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups", :description "Lists the long term retention backups for a given location.", :parameters [#:reference{:parameters "ResourceGroupParameter"} {:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_Get {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}", :description "Gets a long term retention backup.", :parameters [{:description "The location of the database.", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "The name of the database", :in "path", :name "longTermRetentionDatabaseName", :required true, :type "string"} {:description "The backup name.", :in "path", :name "backupName", :required true, :type "string"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_ListByServer {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups", :description "Lists the long term retention backups for a given server.", :parameters [{:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "The name of the server", :in "path", :name "longTermRetentionServerName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :LongTermRetentionBackups_ListByLocation {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups", :description "Lists the long term retention backups for a given location.", :parameters [{:description "The location of the database", :in "path", :name "locationName", :required true, :type "string"} {:description "Whether or not to only get the latest backup for each database.", :in "query", :name "onlyLatestPerDatabase", :required false, :type "boolean"} #:reference{:parameters "LongTermRetentionDatabaseStateParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :BackupLongTermRetentionPolicies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}", :description "Sets a database's long term retention policy.", :parameters [#:reference{:parameters "ResourceGroupParameter"} #:reference{:parameters "ServerNameParameter"} #:reference{:parameters "DatabaseNameParameter"} {:description "The policy name. Should always be Default.", :enum ["default"], :in "path", :name "policyName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "LongTermRetentionPolicyName"}} {:description "The long term retention policy info.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BackupLongTermRetentionPolicy"}} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :put}}, :parameters {:DatabaseNameParameter {:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The subscription ID that identifies an Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}, :ApiVersionParameter {:description "The API version to use for the request.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :ResourceGroupParameter {:description "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineInstanceNameParameter {:description "The name of the SqlVirtualMachineInstance.", :in "path", :name "sqlVirtualMachineInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :SqlVirtualMachineContainerNameParameter {:description "The name of the SqlVirtualMachineContainer.", :in "path", :name "sqlVirtualMachineContainerName", :required true, :type "string", :x-ms-parameter-location "method"}, :ManagedInstanceNameParameter {:description "The name of the managed instance.", :in "path", :name "managedInstanceName", :required true, :type "string", :x-ms-parameter-location "method"}, :LongTermRetentionDatabaseStateParameter {:description "Whether to query against just live databases, just deleted databases, or all databases.", :enum ["All" "Live" "Deleted"], :in "query", :name "databaseState", :required false, :type "string", :x-ms-enum {:modelAsString true, :name "longTermRetentionDatabaseState"}, :x-ms-parameter-location "method"}, :ServerNameParameter {:description "The name of the server.", :in "path", :name "serverName", :required true, :type "string", :x-ms-parameter-location "method"}, :VirtualClusterNameParameter {:description "The name of the virtual cluster.", :in "path", :name "virtualClusterName", :required true, :type "string", :x-ms-parameter-location "method"}, :BlobAuditingPolicyNameParameter {:description "The name of the blob auditing policy.", :enum ["default"], :in "path", :name "blobAuditingPolicyName", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:BackupLongTermRetentionPolicy {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "A long term retention policy.", :properties {:properties #:reference{:definitions "LongTermRetentionPolicyProperties"}}, :type "object"}, :LongTermRetentionBackup {:allOf [{:allOf [{:description "ARM resource.", :properties {:id {:description "Resource ID.", :readOnly true, :type "string"}, :name {:description "Resource name.", :readOnly true, :type "string"}, :type {:description "Resource type.", :readOnly true, :type "string"}}, :type "object", :x-ms-azure-resource true}], :description "ARM proxy resource.", :properties {}, :type "object"}], :description "A long term retention backup.", :properties {:properties #:reference{:definitions "LongTermRetentionBackupProperties"}}, :type "object"}, :LongTermRetentionBackupListResult {:description "A list of long term retention backups.", :properties {:nextLink {:description "Link to retrieve next page of results.", :readOnly true, :type "string"}, :value {:description "Array of results.", :items #:reference{:definitions "LongTermRetentionBackup"}, :readOnly true, :type "array"}}, :type "object"}, :LongTermRetentionBackupProperties {:description "Properties of a long term retention backup", :properties {:backupExpirationTime {:description "The time the long term retention backup will expire.", :format "date-time", :readOnly true, :type "string"}, :backupTime {:description "The time the backup was taken", :format "date-time", :readOnly true, :type "string"}, :databaseDeletionTime {:description "The delete time of the database", :format "date-time", :readOnly true, :type "string"}, :databaseName {:description "The name of the database the backup belong to", :readOnly true, :type "string"}, :serverCreateTime {:description "The create time of the server.", :format "date-time", :readOnly true, :type "string"}, :serverName {:description "The server name that the backup database belong to.", :readOnly true, :type "string"}}, :type "object"}, :LongTermRetentionPolicyProperties {:description "Properties of a long term retention policy", :properties {:monthlyRetention {:description "The monthly retention policy for an LTR backup in an ISO 8601 format.", :type "string"}, :weekOfYear {:description "The week of year to take the yearly backup in an ISO 8601 format.", :format "int32", :type "integer"}, :weeklyRetention {:description "The weekly retention policy for an LTR backup in an ISO 8601 format.", :type "string"}, :yearlyRetention {:description "The yearly retention policy for an LTR backup in an ISO 8601 format.", :type "string"}}, :type "object"}}}