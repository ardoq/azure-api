{:scheme "https", :host "management.azure.com", :info {:description "REST APIs for orchestrating deployments using the Azure Deployment Manager (ADM). See https://docs.microsoft.com/en-us/azure/azure-resource-manager/deployment-manager-overview for more information.", :title "AzureDeploymentManager", :version "2019-11-01-preview"}, :ops {nil {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services", :description nil, :parameters nil, :verb :parameters}, :ServiceUnits_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "serviceUnitName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Rollouts_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}", :description "This is an asynchronous operation and can be polled to completion using the location header returned by this operation.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "rolloutName"} #:reference{:parameters "ApiVersionParameter"} {:description "Source rollout request object that defines the rollout.", :in "body", :name "rolloutRequest", :schema #:reference{:definitions "RolloutRequest"}}], :verb :put}, :ServiceTopologies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ServiceTopologies_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ServiceTopologies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}", :description "Synchronously creates a new service topology or updates an existing service topology.", :parameters [{:description "Source topology object defines the resource.", :in "body", :name "serviceTopologyInfo", :required true, :schema #:reference{:definitions "ServiceTopologyResource"}}], :verb :put}, :ServiceUnits_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "serviceUnitName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Rollouts_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "rolloutName"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "retryAttempt"}], :verb :get}, :Steps_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Services_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ArtifactSources_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/{artifactSourceName}", :description "Synchronously creates a new artifact source or updates an existing artifact source.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "artifactSourceName"} #:reference{:parameters "ApiVersionParameter"} {:description "Source object that defines the resource.", :in "body", :name "artifactSourceInfo", :schema #:reference{:definitions "ArtifactSource"}}], :verb :put}, :ArtifactSources_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/{artifactSourceName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "artifactSourceName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ArtifactSources_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Services_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :ServiceUnits_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName}", :description "This is an asynchronous operation and can be polled to completion using the operation resource returned by this operation.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "serviceUnitName"} #:reference{:parameters "ApiVersionParameter"} {:description "The service unit resource object.", :in "body", :name "serviceUnitInfo", :required true, :schema #:reference{:definitions "ServiceUnitResource"}}], :verb :put}, :Services_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}", :description "Synchronously creates a new service or updates an existing service.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "ApiVersionParameter"} {:description "The service object", :in "body", :name "serviceInfo", :required true, :schema #:reference{:definitions "ServiceResource"}}], :verb :put}, :Steps_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "stepName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Rollouts_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}", :description "Only rollouts in terminal state can be deleted.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "rolloutName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :ArtifactSources_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/{artifactSourceName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "artifactSourceName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Steps_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}", :description "Synchronously creates a new step or updates an existing step.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "stepName"} #:reference{:parameters "ApiVersionParameter"} {:description "The step object.", :in "body", :name "stepInfo", :schema #:reference{:definitions "StepResource"}}], :verb :put}, :ServiceTopologies_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Rollouts_Restart {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/restart", :description "Only failed rollouts can be restarted.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "rolloutName"} {:description "If true, will skip all succeeded steps so far in the rollout. If false, will execute the entire rollout again regardless of the current state of individual resources. Defaults to false if not specified.", :in "query", :name "skipSucceeded", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Steps_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "stepName"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Rollouts_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Rollouts_Cancel {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/cancel", :description "Only running rollouts can be canceled.", :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "rolloutName"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.DeploymentManager/operations", :description nil, :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Services_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ServiceUnits_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits", :description nil, :parameters [#:reference{:parameters "subscriptionId"} #:reference{:parameters "resourceGroupName"} #:reference{:parameters "serviceTopologyName"} #:reference{:parameters "serviceName"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:resourceGroupName {:description "The name of the resource group. The name is case insensitive.", :name "resourceGroupName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 90, :required true, :in "path", :pattern "^[-\\w\\._\\(\\)]+$"}, :ApiVersionParameter {:description "The API version to use for this operation.", :in "query", :name "api-version", :required true, :type "string", :x-ms-parameter-location "client"}, :retryAttempt {:description "Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.", :in "query", :name "retryAttempt", :required false, :type "integer", :x-ms-parameter-location "method"}, :serviceTopologyName {:description "The name of the service topology .", :in "path", :name "serviceTopologyName", :required true, :type "string", :x-ms-parameter-location "method"}, :artifactSourceName {:description "The name of the artifact source.", :in "path", :name "artifactSourceName", :required true, :type "string", :x-ms-parameter-location "method"}, :stepName {:description "The name of the deployment step.", :in "path", :name "stepName", :required true, :type "string", :x-ms-parameter-location "method"}, :serviceName {:description "The name of the service resource.", :in "path", :name "serviceName", :required true, :type "string", :x-ms-parameter-location "method"}, :rolloutName {:description "The rollout name.", :in "path", :name "rolloutName", :required true, :type "string", :x-ms-parameter-location "method"}, :serviceUnitName {:description "The name of the service unit resource.", :in "path", :name "serviceUnitName", :required true, :type "string", :x-ms-parameter-location "method"}, :subscriptionId {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string", :x-ms-parameter-location "client"}}, :definitions {:ServiceTopologyProperties {:description "The properties of a service topology.", :properties {:artifactSourceId {:description "The resource Id of the artifact source that contains the artifacts that can be referenced in the service units.", :type "string"}}}, :Service {:allOf [#:reference{:definitions "ServiceProperties"}], :description "Defines a service.", :properties {:name {:description "Name of the service.", :type "string"}, :serviceUnits {:description "The detailed information about the units that make up the service.", :items #:reference{:definitions "ServiceUnit"}, :type "array"}}}, :RestParameters {:description "The parameters for the REST health check.", :properties {:healthChecks {:description "The list of checks that form the health check step.", :items #:reference{:definitions "RestHealthCheck"}, :type "array"}}, :required ["healthChecks"], :type "object"}, :ServiceUnitProperties {:description "Defines the properties of a service unit.", :properties {:artifacts #:reference{:definitions "ServiceUnitArtifacts"}, :deploymentMode {:description "Describes the type of ARM deployment to be performed on the resource.", :enum ["Incremental" "Complete"], :type "string", :x-ms-enum {:modelAsString false, :name "DeploymentMode"}}, :targetResourceGroup {:description "The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.", :type "string"}}, :required ["targetResourceGroup" "deploymentMode"]}, :RolloutListResult {:description "The list of rollouts.", :items #:reference{:definitions "Rollout"}, :type "array"}, :OperationDetail {:description "The detail about an operation.", :properties {:description {:description "The description of the operation.", :type "string"}, :operation {:description "The name of the operation.", :type "string"}, :provider {:description "The name of the provider that supports the operation.", :type "string"}, :resource {:description "The resource type on which this operation can be performed.", :type "string"}}}, :StepResourceListResult {:description "The list of steps.", :items #:reference{:definitions "StepResource"}, :type "array"}, :SasProperties {:description "The properties that define SAS authentication.", :properties {:sasUri {:description "The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.", :type "string"}}, :required ["sasUri"]}, :Identity {:description "Identity for the resource.", :properties {:identityIds {:description "The list of identities.", :items {:example "/subscriptions/mySubId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userassignedidentities/myIdentity", :type "string"}, :type "array"}, :type {:description "The identity type.", :example "userAssigned", :type "string"}}, :required ["type" "identityIds"], :type "object"}, :ArtifactSource {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "The resource that defines the source location where the artifacts are located.", :properties {:properties {:allOf [#:reference{:definitions "ArtifactSourceProperties"}], :description "The properties that define the artifact source.", :x-ms-client-flatten true}}}, :Message {:description "Supplementary contextual messages during a rollout.", :properties {:message {:description "The actual message text.", :readOnly true, :type "string"}, :timeStamp {:description "Time in UTC this message was provided.", :format "date-time", :readOnly true, :type "string"}}}, :Operation {:description "Represents an operation that can be performed on the service.", :properties {:display #:reference{:definitions "OperationDetail"}, :name {:description "The name of the operation.", :type "string"}, :origin {:description "The origin of the operation.", :type "string"}, :properties {:description "The properties of the operation.", :type "object", :x-ms-client-flatten true}}}, :ResourceOperation {:description "Individual resource operation information.", :properties {:operationId {:description "Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.", :readOnly true, :type "string"}, :provisioningState {:description "State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.", :readOnly true, :type "string"}, :resourceName {:description "Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.", :type "string"}, :resourceType {:description "Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.", :type "string"}, :statusCode {:description "Http status code of the operation.", :readOnly true, :type "string"}, :statusMessage {:description "Descriptive information of the resource operation.", :readOnly true, :type "string"}}}, :HealthCheckStepProperties {:allOf [#:reference{:definitions "StepProperties"}], :description "Defines the properties of a health check step.", :properties {:attributes #:reference{:definitions "HealthCheckStepAttributes"}}, :required ["attributes"], :type "object", :x-ms-discriminator-value "HealthCheck"}, :RolloutProperties {:description "Defines the properties of a rollout.", :properties {:operationInfo #:reference{:definitions "RolloutOperationInfo"}, :services {:description "The detailed information on the services being deployed.", :items #:reference{:definitions "Service"}, :readOnly true, :type "array"}, :status {:description "The current status of the rollout.", :readOnly true, :type "string"}, :totalRetryAttempts {:description "The cardinal count of total number of retries performed on the rollout at a given time.", :format "int32", :readOnly true, :type "integer"}}}, :ServiceUnitArtifacts {:description "Defines the artifacts of a service unit.", :properties {:parametersArtifactSourceRelativePath {:description "The path to the ARM parameters file relative to the artifact source.", :example "/parameters/resource1.parameters.json", :type "string"}, :parametersUri {:description "The full URI of the ARM parameters file with the SAS token.", :example "https://teststore.blob.core.windows.net/payloadcontainer/parameters.json?sasUri", :type "string"}, :templateArtifactSourceRelativePath {:description "The path to the ARM template file relative to the artifact source.", :example "/templates/resource1.template.json", :type "string"}, :templateUri {:description "The full URI of the ARM template file with the SAS token.", :example "https://teststore.blob.core.windows.net/payloadcontainer/template.json?sasUri", :type "string"}}}, :ServiceResource {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "The resource representation of a service in a service topology.", :properties {:properties {:allOf [#:reference{:definitions "ServiceProperties"}], :description "The properties that define a service in a service topology.", :x-ms-client-flatten true}}, :required ["properties"]}, :HealthCheckStepAttributes {:description "The attributes for the health check step.", :discriminator "type", :properties {:healthyStateDuration {:description "The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.", :example "PT60M", :type "string"}, :maxElasticDuration {:description "The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.", :example "PT30M", :type "string"}, :type {:description "The type of health check.", :example "REST", :type "string"}, :waitDuration {:description "The duration in ISO 8601 format for which health check waits idly without any checks.", :example "PT15M", :type "string"}}, :required ["type" "healthyStateDuration"], :type "object"}, :ApiKeyAuthentication {:allOf [#:reference{:definitions "RestRequestAuthentication"}], :description "ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.", :properties {:in {:description "The location of the authentication key/value pair in the request.", :enum ["Query" "Header"], :type "string", :x-ms-enum {:modelAsString false, :name "RestAuthLocation"}}, :name {:description "The key name of the authentication key/value pair.", :type "string"}, :value {:description "The value of the authentication key/value pair.", :type "string"}}, :required ["name" "in" "value"], :type "object", :x-ms-discriminator-value "ApiKey"}, :RestRequest {:description "The properties that make up a REST request", :properties {:authentication #:reference{:definitions "RestRequestAuthentication"}, :method {:description "The HTTP method to use for the request.", :enum ["GET" "POST"], :type "string", :x-ms-enum {:modelAsString false, :name "RestRequestMethod"}}, :uri {:description "The HTTP URI to use for the request.", :type "string"}}, :required ["method" "uri" "authentication"], :type "object"}, :RestHealthCheck {:description "A REST based health check", :properties {:name {:description "A unique name for this check.", :type "string"}, :request #:reference{:definitions "RestRequest"}, :response #:reference{:definitions "RestResponse"}}, :required ["name" "request"], :type "object"}, :RolloutRequestProperties {:description "The properties for defining a rollout.", :properties {:artifactSourceId {:description "The reference to the artifact source resource Id where the payload is located.", :example "Microsoft.DeploymentManager/artifactSources/payloadStore1", :type "string"}, :buildVersion {:description "The version of the build being deployed.", :example "1.0.0.1", :type "string"}, :stepGroups {:description "The list of step groups that define the orchestration.", :items #:reference{:definitions "StepGroup"}, :type "array"}, :targetServiceTopologyId {:description "The resource Id of the service topology from which service units are being referenced in step groups to be deployed.", :example "Microsoft.DeploymentManager/serviceTopologies/myServiceTopology", :type "string"}}, :required ["stepGroups" "targetServiceTopologyId" "buildVersion"]}, :StepOperationInfo {:description "Detailed information of a specific step run.", :properties {:correlationId {:description "Unique identifier to track the request for ARM-based resources.", :readOnly true, :type "string"}, :deploymentName {:description "The name of the ARM deployment initiated as part of the step.", :readOnly true, :type "string"}, :endTime {:description "End time of the action in UTC.", :format "date-time", :readOnly true, :type "string"}, :error #:reference{:definitions "CloudErrorBody"}, :lastUpdatedTime {:description "Last time in UTC this operation was updated.", :format "date-time", :readOnly true, :type "string"}, :startTime {:description "Start time of the action in UTC.", :format "date-time", :readOnly true, :type "string"}}}, :RolloutStep {:description "Defines a specific step on a target service unit.", :properties {:messages {:description "Supplementary informative messages during rollout.", :items #:reference{:definitions "Message"}, :readOnly true, :type "array"}, :name {:description "Name of the step.", :type "string"}, :operationInfo #:reference{:definitions "StepOperationInfo"}, :resourceOperations {:description "Set of resource operations that were performed, if any, on an Azure resource.", :items #:reference{:definitions "ResourceOperation"}, :readOnly true, :type "array"}, :status {:description "Current state of the step.", :readOnly true, :type "string"}, :stepGroup {:description "The step group the current step is part of.", :type "string"}}, :required ["name"]}, :ServiceListResult {:description "The list of services.", :items #:reference{:definitions "ServiceResource"}, :type "array"}, :Rollout {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "Defines the rollout.", :properties {:identity #:reference{:definitions "Identity"}, :properties {:allOf [#:reference{:definitions "RolloutRequestProperties"} #:reference{:definitions "RolloutProperties"}], :description "The properties that define a rollout.", :x-ms-client-flatten true}}}, :ArtifactSourceListResult {:description "The list of artifact sources.", :items #:reference{:definitions "ArtifactSource"}, :type "array"}, :ServiceProperties {:description "The properties of a service.", :properties {:targetLocation {:description "The Azure location to which the resources in the service belong to or should be deployed to.", :type "string"}, :targetSubscriptionId {:description "The subscription to which the resources in the service belong to or should be deployed to.", :type "string"}}, :required ["targetLocation" "targetSubscriptionId"]}, :CloudError {:description "The error information object.", :properties {:error #:reference{:definitions "CloudErrorBody"}}, :x-ms-external true}, :StepProperties {:description "The properties of a step resource.", :discriminator "stepType", :properties {:stepType {:description "The type of step.", :enum ["Wait" "HealthCheck"], :type "string", :x-ms-enum {:modelAsString false, :name "StepType"}}}, :required ["stepType"], :type "object"}, :RolloutIdentityAuthentication {:allOf [#:reference{:definitions "RestRequestAuthentication"}], :description "RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.", :type "object", :x-ms-discriminator-value "RolloutIdentity"}, :StepResource {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "The resource representation of a rollout step.", :properties {:properties #:reference{:definitions "StepProperties"}}, :required ["properties"]}, :ServiceUnitResource {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "Represents the response of a service unit resource.", :properties {:properties {:allOf [#:reference{:definitions "ServiceUnitProperties"}], :description "The properties that define the service unit.", :x-ms-client-flatten true}}, :required ["properties"]}, :RestHealthCheckStepAttributes {:allOf [#:reference{:definitions "HealthCheckStepAttributes"}], :description "Defines the REST health check step properties.", :properties {:properties #:reference{:definitions "RestParameters"}}, :type "object", :x-ms-discriminator-value "REST"}, :ServiceUnitListResult {:description "The list of service units.", :items #:reference{:definitions "ServiceUnitResource"}, :type "array"}, :RestResponse {:description "The properties that make up the expected REST response", :properties {:regex {:description "The regular expressions to match the response content with.", :properties {:matchQuantifier {:description "Indicates whether any or all of the expressions should match with the response content.", :enum ["All" "Any"], :type "string", :x-ms-enum {:modelAsString false, :name "RestMatchQuantifier"}}, :matches {:description "The list of regular expressions.", :example ["Contoso-Service-EndToEnd" "(?i)\"health_status\":((.|\n)*)\"(green|yellow)\"" "(?mi)^(\"application_host\": 94781052)$"], :items {:type "string"}, :type "array"}}, :type "object"}, :successStatusCodes {:description "The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.", :example ["Ok" "No Content"], :items {:type "string"}, :type "array"}}, :type "object"}, :PrePostStep {:description "The properties that define a step.", :properties {:stepId {:description "The resource Id of the step to be run.", :example "Microsoft.DeploymentManager/steps/healthCheckStep1", :type "string"}}, :required ["stepId"]}, :RestRequestAuthentication {:description "The authentication information required in the REST health check request to the health provider.", :discriminator "type", :properties {:type {:description "The authentication type.", :enum ["ApiKey" "RolloutIdentity"], :example "ApiKey", :type "string", :x-ms-enum {:modelAsString false, :name "RestAuthType"}}}, :required ["type"], :type "object"}, :RolloutRequest {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "Defines the PUT rollout request body.", :properties {:identity #:reference{:definitions "Identity"}, :properties #:reference{:definitions "RolloutRequestProperties"}}, :required ["identity" "properties"]}, :SasAuthentication {:allOf [#:reference{:definitions "Authentication"}], :description "Defines the properties to access the artifacts using an Azure Storage SAS URI.", :properties {:properties #:reference{:definitions "SasProperties"}}, :type "object", :x-ms-discriminator-value "Sas"}, :WaitStepAttributes {:description "The parameters for the wait step.", :properties {:duration {:description "The duration in ISO 8601 format of how long the wait should be.", :example "PT30M", :type "string"}}, :required ["duration"], :type "object"}, :StepGroup {:description "The properties that define a Step group in a rollout.", :properties {:dependsOnStepGroups {:description "The list of step group names on which this step group depends on.", :example ["stepGroup1" "stepGroup2"], :items {:type "string"}, :type "array"}, :deploymentTargetId {:description "The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId", :example "Microsoft.DeploymentManager/serviceTopologies/myServiceTopology/services/myService/serviceUnits/database", :type "string"}, :name {:description "The name of the step group.", :type "string"}, :postDeploymentSteps {:description "The list of steps to be run after deploying the target.", :items #:reference{:definitions "PrePostStep"}, :type "array"}, :preDeploymentSteps {:description "The list of steps to be run before deploying the target.", :items #:reference{:definitions "PrePostStep"}, :type "array"}}, :required ["deploymentTargetId" "name"]}, :WaitStepProperties {:allOf [#:reference{:definitions "StepProperties"}], :description "Defines the properties of a Wait step.", :properties {:attributes #:reference{:definitions "WaitStepAttributes"}}, :required ["attributes"], :type "object", :x-ms-discriminator-value "Wait"}, :ServiceTopologiesListResult {:description "The list of service topologies.", :items #:reference{:definitions "ServiceTopologyResource"}, :type "array"}, :ArtifactSourceProperties {:description "The properties that define the source location where the artifacts are located.", :properties {:artifactRoot {:description "The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.", :example "binaries/2018.09.24", :type "string"}, :authentication #:reference{:definitions "Authentication"}, :sourceType {:description "The type of artifact source used.", :example "AzureStorage", :type "string"}}, :required ["sourceType" "authentication"]}, :ServiceTopologyResource {:allOf [{:allOf [{:properties {:id {:description "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}", :readOnly true, :type "string"}, :name {:description "The name of the resource", :readOnly true, :type "string"}, :type {:description "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM tracked top level resource", :properties {:location {:description "The geo-location where the resource lives", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags.", :type "object", :x-ms-mutability ["read" "create" "update"]}}, :required ["location"]}], :description "The resource representation of a service topology.", :properties {:properties {:allOf [#:reference{:definitions "ServiceTopologyProperties"}], :description "The properties that define the service topology.", :x-ms-client-flatten true}}, :required ["properties"]}, :CloudErrorBody {:description "Detailed error information of any failure.", :properties {:code {:description "Error code string.", :readOnly true, :type "string"}, :details {:description "More detailed error information.", :items #:reference{:definitions "CloudErrorBody"}, :type "array"}, :message {:description "Descriptive error information.", :readOnly true, :type "string"}, :target {:description "Error target", :type "string"}}}, :RolloutOperationInfo {:description "Detailed runtime information of the rollout.", :properties {:endTime {:description "The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.", :format "date-time", :readOnly true, :type "string"}, :error #:reference{:definitions "CloudErrorBody"}, :retryAttempt {:description "The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.", :format "int32", :readOnly true, :type "integer"}, :skipSucceededOnRetry {:description "True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.", :readOnly true, :type "boolean"}, :startTime {:description "The start time of the rollout in UTC.", :format "date-time", :readOnly true, :type "string"}}}, :OperationsList {:description "The operations response.", :properties {:value #:reference{:definitions "Operation"}}, :type "object"}, :Authentication {:description "Defines the authentication method and properties to access the artifacts.", :discriminator "type", :properties {:type {:description "The authentication type", :type "string"}}, :required ["type"], :type "object"}, :ServiceUnit {:allOf [#:reference{:definitions "ServiceUnitProperties"}], :description "Defines a service unit.", :properties {:name {:description "Name of the service unit.", :type "string"}, :steps {:description "Detailed step information, if present.", :items #:reference{:definitions "RolloutStep"}, :type "array"}}}}}