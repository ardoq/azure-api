{:scheme "https", :host "azure.local", :info {:description "Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.", :title "ApiManagementClient", :version "2017-03-01"}, :ops {:ProductApi_ListByProduct {:path "/products/{productId}/apis", :description "Lists a collection of the APIs associated with a product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :ProductApi_Delete {:path "/products/{productId}/apis/{apiId}", :description "Deletes the specified API from the specified product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "API identifier. Must be unique in the current API Management service instance.", :name "apiId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :ProductGroup_CreateOrUpdate {:path "/products/{productId}/groups/{groupId}", :description "Adds the association between the specified developer group with the specified product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Group identifier. Must be unique in the current API Management service instance.", :name "groupId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :put}, :ProductApi_CreateOrUpdate {:path "/products/{productId}/apis/{apiId}", :description "Adds an API to the specified product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "API identifier. Must be unique in the current API Management service instance.", :name "apiId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :put}, :ProductSubscriptions_List {:path "/products/{productId}/subscriptions", :description "Lists the collection of subscriptions to the specified product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :ProductPolicy_ListByProduct {:path "/products/{productId}/policies", :description "Get the policy configuration at the Product level.", :parameters [{:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "ProductIdParameter"}], :verb :get}, :ProductGroup_ListByProduct {:path "/products/{productId}/groups", :description "Lists the collection of developer groups associated with the specified product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :ProductPolicy_Delete {:path "/products/{productId}/policies/{policyId}", :description "Deletes the policy configuration at the Product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "The identifier of the Policy.", :enum ["policy"], :in "path", :name "policyId", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "PolicyIdName"}, :x-ms-parameter-location "method"} {:description "The entity state (Etag) version of the product policy to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :ProductPolicy_CreateOrUpdate {:path "/products/{productId}/policies/{policyId}", :description "Creates or updates policy configuration for the Product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "The identifier of the Policy.", :enum ["policy"], :in "path", :name "policyId", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "PolicyIdName"}, :x-ms-parameter-location "method"} {:description "The policy contents to apply.", :in "body", :name "parameters", :required true, :schema {:description "Policy contract Properties.", :properties {:id {:description "Policy identifier.", :type "string"}, :policyContent {:description "Json escaped Xml Encoded contents of the Policy.", :type "string"}}, :required ["policyContent"]}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :put}, :Product_List {:path "/products", :description "Lists a collection of products in the specified service instance.", :parameters [{:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| terms       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state       | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"} {:description "When set to true, the response contains an array of groups that have visibility to the product. The default is false.", :in "query", :name "expandGroups", :required false, :type "boolean"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :Product_CreateOrUpdate {:path "/products/{productId}", :description "Creates or Updates a product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ProductContract"}} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :put}, :ProductGroup_Delete {:path "/products/{productId}/groups/{groupId}", :description "Deletes the association between the specified group and product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Group identifier. Must be unique in the current API Management service instance.", :name "groupId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}, :ProductPolicy_Get {:path "/products/{productId}/policies/{policyId}", :description "Get the policy configuration at the Product level.", :parameters [{:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"} #:reference{:parameters "ProductIdParameter"} {:description "The identifier of the Policy.", :enum ["policy"], :in "path", :name "policyId", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "PolicyIdName"}, :x-ms-parameter-location "method"}], :verb :get}, :Product_Get {:path "/products/{productId}", :description "Gets the details of the product specified by its identifier.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :get}, :Product_Update {:path "/products/{productId}", :description "Update product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ProductUpdateParameters"}} {:description "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :patch}, :Product_Delete {:path "/products/{productId}", :description "Delete product.", :parameters [#:reference{:parameters "ProductIdParameter"} {:description "Delete existing subscriptions to the product or not.", :in "query", :name "deleteSubscriptions", :required false, :type "boolean"} {:description "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}], :verb :delete}}, :parameters {:ProductIdParameter {:description "Product identifier. Must be unique in the current API Management service instance.", :name "productId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}}, :definitions {:ProductCollection {:description "Paged Products list representation.", :properties {:count {:description "Total number of entities", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "ProductContract"}, :type "array"}}}, :ProductContract {:allOf [#:reference{:definitions "ProductContractProperties"}], :description "Product details.", :properties {:id {:description "Identifier of the Product entity.", :type "string"}}}, :ProductContractProperties {:allOf [#:reference{:definitions "ProductEntityBaseParameters"}], :description "Product profile.", :properties {:name {:description "Product name.", :maxLength 300, :minLength 1, :type "string"}}, :required ["name"]}, :ProductEntityBaseParameters {:description "Product Entity Base Parameters", :properties {:approvalRequired {:description "whether subscription approval is required. IfÂ false, new subscriptions will be approved automatically enabling developers to call the productâ€™s APIs immediately after subscribing. IfÂ true, administrators must manually approve the subscription before the developer can any of the productâ€™s APIs. Can be present only if subscriptionRequired property is present and has a value of false.", :type "boolean"}, :description {:description "Product description. May include HTML formatting tags.", :maxLength 1000, :minLength 1, :type "string"}, :state {:description "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.", :enum ["notPublished" "published"], :type "string", :x-ms-enum {:modelAsString false, :name "ProductState"}}, :subscriptionRequired {:description "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.", :type "boolean"}, :subscriptionsLimit {:description "Whether the number of subscriptions a user can have to this product at the same time. Set toÂ nullÂ or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.", :format "int32", :type "integer"}, :terms {:description "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.", :type "string"}}}, :ProductUpdateParameters {:allOf [#:reference{:definitions "ProductEntityBaseParameters"}], :description "Parameters supplied to the Update Product operation.", :properties {:name {:description "Product name.", :maxLength 300, :minLength 1, :type "string"}}}}}