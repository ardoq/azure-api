{:scheme "https", :host "azure.local", :info {:description "Metadata API definition for the Azure Container Registry runtime", :title "Azure Container Registry", :version "2019-08-15-preview"}, :ops {:Repository_UpdateAttributes {:path "/acr/v1/{name}", :description "Update the attribute identified by `name` where `reference` is the name of the repository.", :parameters [#:reference{:parameters "ImageName"} {:description "Repository attribute value", :in "body", :name "value", :required false, :schema #:reference{:definitions "ChangeableAttributes"}}], :verb :patch}, :Tag_Delete {:path "/acr/v1/{name}/_tags/{reference}", :description "Delete tag", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "TagReference"}], :verb :delete}, :Tag_GetList {:path "/acr/v1/{name}/_tags", :description "List tags of a repository", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "QueryLast"} #:reference{:parameters "QueryNum"} #:reference{:parameters "QueryOrderBy"} #:reference{:parameters "QueryDigest"}], :verb :get}, :Blob_GetStatus {:path "/{nextBlobUuidLink}", :description "Retrieve status of upload identified by uuid. The primary purpose of this endpoint is to resolve the current status of a resumable upload.", :parameters [#:reference{:parameters "NextLink"}], :verb :get}, :Blob_Upload {:path "/{nextBlobUuidLink}", :description "Upload a stream of data without completing the upload.", :parameters [#:reference{:parameters "RawData"} #:reference{:parameters "NextLink"}], :verb :patch}, :AccessTokens_GetFromLogin {:path "/oauth2/token", :description "Exchange Username, Password and Scope an ACR Access Token", :parameters [{:description "Indicates the name of your Azure container registry.", :in "query", :name "service", :required true, :type "string"} {:description "Expected to be a valid scope, and can be specified more than once for multiple scope requests. You can obtain this from the Www-Authenticate response header from the challenge.", :in "query", :name "scope", :required true, :type "string"}], :verb :get}, :Tag_GetAttributes {:path "/acr/v1/{name}/_tags/{reference}", :description "Get tag attributes by tag", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "TagReference"}], :verb :get}, :Blob_CancelUpload {:path "/{nextBlobUuidLink}", :description "Cancel outstanding upload processes, releasing associated resources. If this is not called, the unfinished uploads will eventually timeout.", :parameters [#:reference{:parameters "NextLink"}], :verb :delete}, :Blob_Check {:path "/v2/{name}/blobs/{digest}", :description "Same as GET, except only the headers are returned.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "Digest"}], :verb :head}, :Repository_GetAttributes {:path "/acr/v1/{name}", :description "Get repository attributes", :parameters [#:reference{:parameters "ImageName"}], :verb :get}, :Blob_Delete {:path "/v2/{name}/blobs/{digest}", :description "Removes an already uploaded blob.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "Digest"}], :verb :delete}, :Manifests_Delete {:path "/v2/{name}/manifests/{reference}", :description "Delete the manifest identified by `name` and `reference`. Note that a manifest can _only_ be deleted by `digest`.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "ImageReference"}], :verb :delete}, :Manifests_GetList {:path "/acr/v1/{name}/_manifests", :description "List manifests of a repository", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "QueryLast"} #:reference{:parameters "QueryNum"} #:reference{:parameters "QueryOrderBy"}], :verb :get}, :Repository_GetList {:path "/acr/v1/_catalog", :description "List repositories", :parameters [#:reference{:parameters "QueryLast"} #:reference{:parameters "QueryNum"}], :verb :get}, :Blob_EndUpload {:path "/{nextBlobUuidLink}", :description "Complete the upload, providing all the data in the body, if necessary. A request without a body will just complete the upload with previously uploaded content.", :parameters [#:reference{:parameters "BlobQueryDigest"} #:reference{:parameters "RawDataOptional"} #:reference{:parameters "NextLink"}], :verb :put}, :Tag_UpdateAttributes {:path "/acr/v1/{name}/_tags/{reference}", :description "Update tag attributes", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "TagReference"} #:reference{:parameters "RepoValue"}], :verb :patch}, :Manifests_Create {:path "/v2/{name}/manifests/{reference}", :description "Put the manifest identified by `name` and `reference` where `reference` can be a tag or digest.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "ImageReference"} #:reference{:parameters "ManifestBody"}], :verb :put}, :AccessTokens_Get {:path "/oauth2/token", :description "Exchange ACR Refresh token for an ACR Access Token", :parameters [{:description "Grant type is expected to be refresh_token", :enum ["refresh_token"], :in "formData", :name "grant_type", :required true, :type "string"} #:reference{:parameters "Service"} {:description "Which is expected to be a valid scope, and can be specified more than once for multiple scope requests. You obtained this from the Www-Authenticate response header from the challenge.", :in "formData", :name "scope", :required true, :type "string"} {:description "Must be a valid ACR refresh token", :in "formData", :name "refresh_token", :required true, :type "string"}], :verb :post}, :Blob_Get {:path "/v2/{name}/blobs/{digest}", :description "Retrieve the blob from the registry identified by digest.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "Digest"}], :verb :get}, :Blob_Mount {:path "/v2/{name}/blobs/uploads/", :description "Mount a blob identified by the `mount` parameter from another repository.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "From"} #:reference{:parameters "Mount"}], :verb :post}, :RefreshTokens_GetFromExchange {:path "/oauth2/exchange", :description "Exchange AAD tokens for an ACR refresh Token", :parameters [#:reference{:parameters "Grant_type"} #:reference{:parameters "Service"} #:reference{:parameters "Tenant"} #:reference{:parameters "RefreshToken"} #:reference{:parameters "AccessToken"}], :verb :post}, :Manifests_GetAttributes {:path "/acr/v1/{name}/_manifests/{reference}", :description "Get manifest attributes", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "ImageReference"}], :verb :get}, :Manifests_UpdateAttributes {:path "/acr/v1/{name}/_manifests/{reference}", :description "Update attributes of a manifest", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "ImageReference"} #:reference{:parameters "RepoValue"}], :verb :patch}, :Repository_Delete {:path "/acr/v1/{name}", :description "Delete the repository identified by `name`", :parameters [#:reference{:parameters "ImageName"}], :verb :delete}, :V2Support_Check {:path "/v2/", :description "Tells whether this Docker Registry instance supports Docker Registry HTTP API v2", :parameters nil, :verb :get}, :Manifests_Get {:path "/v2/{name}/manifests/{reference}", :description "Get the manifest identified by `name` and `reference` where `reference` can be a tag or digest.", :parameters [#:reference{:parameters "ImageName"} #:reference{:parameters "ImageReference"} {:description "Accept header string delimited by comma. For example, application/vnd.docker.distribution.manifest.v2+json", :in "header", :name "accept", :required false, :type "string"}], :verb :get}}, :parameters {:ImageReference {:description "A tag or a digest, pointing to a specific image", :in "path", :name "reference", :required true, :type "string", :x-ms-parameter-location "method"}, :QueryLast {:description "Query parameter for the last item in previous query. Result set will include values lexically after last.", :in "query", :name "last", :required false, :type "string", :x-ms-parameter-location "method"}, :Url {:description "Registry login URL", :in "path", :name "url", :required true, :type "string", :x-ms-client-name "loginUri", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}, :Service {:description "Indicates the name of your Azure container registry.", :in "formData", :name "service", :required true, :type "string", :x-ms-parameter-location "method"}, :From {:description "Name of the source repository.", :in "query", :name "from", :required true, :type "string", :x-ms-parameter-location "method"}, :Content-Range {:description "Range of bytes identifying the desired block of content represented by the body. Start must the end offset retrieved via status check plus one. Note that this is a non-standard use of the `Content-Range` header.", :in "header", :name "Content-Range", :required true, :type "string", :x-ms-parameter-location "method"}, :ManifestReference {:description "Tag or digest of the target manifest", :in "path", :name "reference", :required true, :type "string", :x-ms-parameter-location "method"}, :ManifestBody {:description "Manifest body, can take v1 or v2 values depending on accept header", :in "body", :name "payload", :required true, :schema #:reference{:definitions "Manifest"}, :x-ms-parameter-location "method"}, :QueryNum {:description "query parameter for max number of items", :in "query", :name "n", :required false, :type "integer", :x-ms-parameter-location "method"}, :Tenant {:description "AAD tenant associated to the AAD credentials.", :in "formData", :name "tenant", :required false, :type "string", :x-ms-parameter-location "method"}, :RefreshToken {:description "AAD refresh token, mandatory when grant_type is access_token_refresh_token or refresh_token", :in "formData", :name "refresh_token", :required false, :type "string", :x-ms-parameter-location "method"}, :RawDataOptional {:description "Optional raw data of blob", :in "body", :name "value", :required false, :schema {:format "file", :type "object"}, :x-ms-parameter-location "method"}, :Mount {:description "Digest of blob to mount from the source repository.", :in "query", :name "mount", :required true, :type "string", :x-ms-parameter-location "method"}, :QueryOrderBy {:description "orderby query parameter", :in "query", :name "orderby", :required false, :type "string", :x-ms-parameter-location "method"}, :QueryDigest {:description "filter by digest", :in "query", :name "digest", :required false, :type "string", :x-ms-parameter-location "method"}, :NextLink {:description "Link acquired from upload start or previous chunk. Note, do not include initial / (must do substring(1) )", :in "path", :name "nextBlobUuidLink", :required true, :type "string", :x-ms-client-name "location", :x-ms-parameter-location "method", :x-ms-skip-url-encoding true}, :Uuid {:description "A uuid identifying the upload.", :in "path", :name "uuid", :required true, :type "string", :x-ms-parameter-location "method"}, :Scope {:description "Which is expected to be a valid scope, and can be specified more than once for multiple scope requests. You can obtain this from the Www-Authenticate response header from the challenge.", :in "formData", :name "scope", :required true, :type "string", :x-ms-parameter-location "method"}, :RawData {:description "Raw data of blob", :in "body", :name "value", :required true, :schema {:format "file", :type "object"}, :x-ms-parameter-location "method"}, :AccessToken {:description "AAD access token, mandatory when grant_type is access_token_refresh_token or access_token.", :in "formData", :name "access_token", :required false, :type "string", :x-ms-parameter-location "method"}, :Digest {:description "Digest of a BLOB", :in "path", :name "digest", :required true, :type "string", :x-ms-parameter-location "method"}, :RepoValue {:description "Repository attribute value", :in "body", :name "value", :required false, :schema #:reference{:definitions "ChangeableAttributes"}, :x-ms-parameter-location "method"}, :BlobQueryDigest {:description "Digest of a BLOB", :in "query", :name "digest", :required true, :type "string", :x-ms-parameter-location "method"}, :Range {:description "Format : bytes=<start>-<end>,  HTTP Range header specifying blob chunk.", :in "header", :name "Range", :required true, :type "string", :x-ms-parameter-location "method"}, :ImageName {:description "Name of the image (including the namespace)", :in "path", :name "name", :required true, :type "string", :x-ms-parameter-location "method"}, :State {:description "Acquired from NextLink", :in "query", :name "_state", :required false, :type "string", :x-ms-parameter-location "method"}, :Grant_type {:description "Can take a value of access_token_refresh_token, or access_token, or refresh_token", :enum ["access_token_refresh_token" "access_token" "refresh_token"], :in "formData", :name "grant_type", :required true, :type "string", :x-ms-parameter-location "method"}, :NoUploadCache {:description "Acquired from NextLink", :in "query", :name "_nouploadcache", :required false, :type "boolean", :x-ms-parameter-location "method"}, :TagReference {:description "Tag name", :in "path", :name "reference", :required true, :type "string", :x-ms-parameter-location "method"}}, :definitions {:AcrErrors {:description "Acr error response describing why the operation failed", :properties {:errors {:description "Array of detailed error", :items #:reference{:definitions "AcrErrorInfo"}, :type "array"}}}, :ManifestAttributes {:description "Manifest attributes details", :example {:imageName "nanoserver", :manifest {:tags ["4.7.2-20180905-nanoserver-1803"], :configMediaType "application/vnd.docker.container.image.v1+json", :architecture "amd64", :digest "sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086", :mediaType "application/vnd.docker.distribution.manifest.v2+json", :changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "2018-09-06T06:17:20.9983915Z", :lastUpdateTime "2018-09-06T06:17:20.9983915Z", :os "windows", :imageSize 2401606}, :registry "acrapi.azurecr-test.io"}, :properties {:imageName {:description "Image name", :type "string"}, :manifest #:reference{:definitions "ManifestAttributesBase"}, :registry {:description "Registry name", :type "string"}}}, :ManifestAttributes_manifest {:description "List of manifest attributes", :example {:quarantineTag "quarantineTag", :references [{:architecture "architecture", :digest "digest", :os "os"} {:architecture "architecture", :digest "digest", :os "os"}]}, :properties {:quarantineTag {:description "Quarantine tag name", :type "string"}, :references {:description "List of manifest attributes details", :items #:reference{:definitions "ManifestAttributes_manifest_references"}, :type "array"}}}, :RefreshToken {:properties {:refresh_token {:description "The refresh token to be used for generating access tokens", :type "string"}}, :type "object"}, :TagList {:description "List of tag details", :example {:imageName "imageName", :registry "registry", :tags [{:changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :digest "digest", :lastUpdateTime "lastUpdateTime", :name "name", :signed true} {:changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :digest "digest", :lastUpdateTime "lastUpdateTime", :name "name", :signed true}]}, :properties {:imageName {:description "Image name", :type "string"}, :registry {:description "Registry name", :type "string"}, :tags {:description "List of tag attribute details", :items #:reference{:definitions "TagAttributesBase"}, :type "array"}}}, :OCIIndex {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested OCI index file", :properties {:annotations #:reference{:definitions "Annotations"}, :manifests {:description "List of OCI image layer information", :items #:reference{:definitions "ManifestListAttributes"}, :type "array"}}, :x-ms-discriminator-value "application/vnd.oci.image.index.v1+json"}, :ManifestAttributes_manifest_references {:description "Manifest attributes details", :example {:architecture "architecture", :digest "digest", :os "os"}, :properties {:architecture {:description "CPU architecture", :type "string"}, :digest {:description "Manifest digest", :type "string"}, :os {:description "Operating system", :type "string"}}}, :RepositoryTags {:description "Result of the request to list tags of the image", :example {:name "name", :tags ["tags" "tags"]}, :properties {:name {:description "Name of the image", :type "string"}, :tags {:description "List of tags", :items {:description "Tag name", :type "string"}, :type "array"}}}, :History {:description "A list of unstructured historical data for v1 compatibility", :example {:v1Compatibility "v1 compatibility info"}, :properties {:v1Compatibility {:description "The raw v1 compatibility information", :type "string"}}}, :RepositoryAttributes {:description "Repository attributes", :example {:changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "2018-09-07T16:30:46.6583219Z", :imageName "imageName", :lastUpdateTime "2018-09-07T16:30:46.6583219Z", :manifestCount 2, :registry "registryname.azurecr.io", :tagCount 6}, :properties {:changeableAttributes #:reference{:definitions "ChangeableAttributes"}, :createdTime {:description "Image created time", :type "string"}, :imageName {:description "Image name", :type "string"}, :lastUpdateTime {:description "Image last update time", :type "string"}, :manifestCount {:description "Number of the manifests", :type "integer"}, :registry {:description "Registry name", :type "string"}, :tagCount {:description "Number of the tags", :type "integer"}}, :type "object"}, :Manifest {:description "Returns the requested manifest file", :properties {:schemaVersion {:description "Schema version", :type "integer"}}}, :AcrManifests {:description "Manifest attributes", :example {:imageName "imageName", :manifests [{:tags ["tags" "tags"], :configMediaType "configMediaType", :architecture "architecture", :digest "digest", :mediaType "mediaType", :changeableAttributes {:deleteEnabled true, :listEnabled true, :quarantineDetails "quarantineDetails", :quarantineState "quarantineState", :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :lastUpdateTime "lastUpdateTime", :os "os", :imageSize 2401606} {:tags ["tags" "tags"], :configMediaType "configMediaType", :architecture "architecture", :digest "digest", :mediaType "mediaType", :changeableAttributes {:deleteEnabled true, :listEnabled true, :quarantineDetails "quarantineDetails", :quarantineState "quarantineState", :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :lastUpdateTime "lastUpdateTime", :os "os", :imageSize 2401606}], :registry "registry"}, :properties {:imageName {:description "Image name", :type "string"}, :manifests {:description "List of manifests", :items #:reference{:definitions "ManifestAttributesBase"}, :type "array", :x-ms-client-name "ManifestsAttributes"}, :registry {:description "Registry name", :type "string"}}}, :ManifestChangeableAttributes {:description "Changeable attributes", :example {:deleteEnabled true, :listEnabled true, :quarantineDetails "quarantineDetails", :quarantineState "quarantineState", :readEnabled true, :writeEnabled true}, :properties {:deleteEnabled {:description "Delete enabled", :type "boolean"}, :listEnabled {:description "List enabled", :type "boolean"}, :quarantineDetails {:description "Quarantine details", :type "string"}, :quarantineState {:description "Quarantine state", :type "string"}, :readEnabled {:description "Read enabled", :type "boolean"}, :writeEnabled {:description "Write enabled", :type "boolean"}}}, :AccessToken {:properties {:access_token {:description "The access token for performing authenticated requests", :type "string"}}, :type "object"}, :Repositories {:description "List of repositories", :example {:repositories ["production/alpine" "testing/alpine"]}, :properties {:repositories {:description "Repository names", :items {:type "string"}, :type "array", :x-ms-client-name "Names"}}}, :Descriptor {:description "Docker V2 image layer descriptor including config and layers", :example {:digest "sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6", :mediaType "application/vnd.docker.image.rootfs.diff.tar.gzip", :size 2107098}, :properties {:annotations #:reference{:definitions "Annotations"}, :digest {:description "Layer digest", :type "string"}, :mediaType {:description "Layer media type", :type "string"}, :size {:description "Layer size", :format "int64", :type "integer"}, :urls {:description "Specifies a list of URIs from which this object may be downloaded.", :items {:description "Must conform to RFC 3986. Entries should use the http and https schemes, as defined in RFC 7230.", :type "string"}, :type "array"}}}, :TagAttributes {:description "Tag attributes", :example {:imageName "imageName", :registry "registry", :tag {:changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :digest "digest", :lastUpdateTime "lastUpdateTime", :name "name", :signed true}}, :properties {:imageName {:description "Image name", :type "string"}, :registry {:description "Registry name", :type "string"}, :tag #:reference{:definitions "TagAttributesBase"}}}, :ManifestListAttributes {:properties {:digest {:description "The digest of the content, as defined by the Registry V2 HTTP API Specification", :type "string"}, :mediaType {:description "The MIME type of the referenced object. This will generally be application/vnd.docker.image.manifest.v2+json, but it could also be application/vnd.docker.image.manifest.v1+json", :type "string"}, :platform #:reference{:definitions "Platform"}, :size {:description "The size in bytes of the object", :format "int64", :type "integer"}}}, :TagAttributes_tag {:description "Tag", :example {:signatureRecord "signatureRecord"}, :properties {:signatureRecord {:description "SignatureRecord value", :type "string"}}}, :FsLayer {:description "Image layer information", :example {:blobSum "sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30"}, :properties {:blobSum {:description "SHA of an image layer", :type "string"}}}, :Platform {:description "The platform object describes the platform which the image in the manifest runs on. A full list of valid operating system and architecture values are listed in the Go language documentation for $GOOS and $GOARCH", :properties {:architecture {:description "Specifies the CPU architecture, for example amd64 or ppc64le.", :type "string"}, :features {:description "The optional features field specifies an array of strings, each listing a required CPU feature (for example sse4 or aes", :items {:type "string"}, :type "array"}, :os {:description "The os field specifies the operating system, for example linux or windows.", :type "string"}, "os.features" {:description "The optional os.features field specifies an array of strings, each listing a required OS feature (for example on Windows win32k", :items {:type "string"}, :type "array"}, "os.version" {:description "The optional os.version field specifies the operating system version, for example 10.0.10586.", :type "string"}, :variant {:description "The optional variant field specifies a variant of the CPU, for example armv6l to specify a particular CPU variant of the ARM CPU.", :type "string"}}}, :OCIManifest {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested OCI Manifest file", :properties {:annotations #:reference{:definitions "Annotations"}, :config #:reference{:definitions "Descriptor"}, :layers {:description "List of V2 image layer information", :items #:reference{:definitions "Descriptor"}, :type "array"}}, :x-ms-discriminator-value "application/vnd.oci.image.manifest.v1+json"}, :ManifestWrapper {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested manifest file", :properties {:architecture {:description "(V1) CPU architecture", :type "string"}, :config #:reference{:definitions "Descriptor"}, :name {:description "(V1) Image name", :type "string"}, :history {:description "(V1) Image history", :items #:reference{:definitions "History"}, :type "array"}, :manifests {:description "(ManifestList, OCIIndex) List of V2 image layer information", :items #:reference{:definitions "ManifestListAttributes"}, :type "array"}, :mediaType {:description "Media type for this Manifest", :type "string"}, :signatures {:description "(V1) Image signature", :items #:reference{:definitions "ImageSignature"}, :type "array"}, :layers {:description "(V2, OCI) List of V2 image layer information", :items #:reference{:definitions "Descriptor"}, :type "array"}, :annotations #:reference{:definitions "Annotations"}, :tag {:description "(V1) Image tag", :type "string"}, :fsLayers {:description "(V1) List of layer information", :items #:reference{:definitions "FsLayer"}, :type "array"}}}, :ImageSignature {:description "Signature of a signed manifest", :example {:header {:alg "ES256", :jwk {:crv "P-256", :kid "WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q", :kty "EC", :x "OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY", :y "EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc"}}, :protected "eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ", :signature "p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg"}, :properties {:header #:reference{:definitions "JWK"}, :protected {:description "The signed protected header", :type "string"}, :signature {:description "A signature for the image manifest, signed by a libtrust private key", :type "string"}}}, :JWKHeader {:description "JSON web key parameter", :properties {:crv {:description "crv value", :type "string"}, :kid {:description "kid value", :type "string"}, :kty {:description "kty value", :type "string"}, :x {:description "x value", :type "string"}, :y {:description "y value", :type "string"}}}, :ManifestList {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested Docker multi-arch-manifest file", :properties {:manifests {:description "List of V2 image layer information", :items #:reference{:definitions "ManifestListAttributes"}, :type "array"}, :mediaType {:description "Media type for this Manifest", :type "string"}}, :x-ms-discriminator-value "application/vnd.docker.distribution.manifest.list.v2+json"}, :DeletedRepository {:description "Deleted repository", :properties {:manifestsDeleted {:description "SHA of the deleted image", :items {:type "string"}, :type "array"}, :tagsDeleted {:description "Tag of the deleted image", :items {:type "string"}, :type "array"}}}, :TagAttributesBase {:description "Tag attribute details", :example {:changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "2018-08-10T17:28:44.1082945Z", :digest "sha256:0873c923e00e0fd2ba78041bfb64a105e1ecb7678916d1f7776311e45bf5634b", :lastUpdateTime "2018-08-10T17:28:44.1082945Z", :name "tagname", :signed true}, :properties {:changeableAttributes #:reference{:definitions "ChangeableAttributes"}, :createdTime {:description "Tag created time", :type "string"}, :digest {:description "Tag digest", :type "string"}, :lastUpdateTime {:description "Tag last update time", :type "string"}, :name {:description "Tag name", :type "string"}, :signed {:description "Is signed", :type "boolean"}}}, :AcrErrorInfo {:description "Error information", :properties {:code {:description "Error code", :type "string"}, :detail {:description "Error details", :type "object"}, :message {:description "Error message", :type "string"}}}, :JWK {:description "A JSON web signature", :properties {:alg {:description "The algorithm used to sign or encrypt the JWT", :type "string"}, :jwk #:reference{:definitions "JWKHeader"}}}, :ChangeableAttributes {:example {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :properties {:deleteEnabled {:description "Delete enabled", :type "boolean"}, :listEnabled {:description "List enabled", :type "boolean"}, :readEnabled {:description "Read enabled", :type "boolean"}, :writeEnabled {:description "Write enabled", :type "boolean"}}}, :ManifestAttributesBase {:description "Manifest details", :example {:tags ["tags" "tags"], :configMediaType "configMediaType", :architecture "architecture", :digest "digest", :mediaType "mediaType", :changeableAttributes {:deleteEnabled true, :listEnabled true, :readEnabled true, :writeEnabled true}, :createdTime "createdTime", :lastUpdateTime "lastUpdateTime", :os "os", :imageSize 2401606}, :properties {:tags {:description "List of tags", :items {:description "Tag name", :type "string"}, :type "array"}, :configMediaType {:description "Config blob media type", :type "string"}, :architecture {:description "CPU architecture", :type "string"}, :digest {:description "Manifest", :type "string"}, :mediaType {:description "Media type", :type "string"}, :changeableAttributes #:reference{:definitions "ChangeableAttributes"}, :createdTime {:description "Created time", :type "string"}, :lastUpdateTime {:description "Last update time", :type "string"}, :os {:description "Operating system", :type "string"}, :imageSize {:description "Image size", :format "int64", :type "integer"}}, :type "object"}, :V1Manifest {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested V1 manifest file", :properties {:architecture {:description "CPU architecture", :type "string"}, :fsLayers {:description "List of layer information", :items #:reference{:definitions "FsLayer"}, :type "array"}, :history {:description "Image history", :items #:reference{:definitions "History"}, :type "array"}, :name {:description "Image name", :type "string"}, :signatures {:description "Image signature", :items #:reference{:definitions "ImageSignature"}, :type "array"}, :tag {:description "Image tag", :type "string"}}, :x-ms-discriminator-value "application/vnd.oci.image.manifest.v1+json"}, :Annotations {:additionalProperties {:type "object"}, :description "Additional information provided through arbitrary metadata.", :properties {"org.opencontainers.image.version" {:description "Version of the packaged software. The version MAY match a label or tag in the source code repository, may also be Semantic versioning-compatible", :type "string", :x-ms-client-name "Version"}, "org.opencontainers.image.vendor" {:description "Name of the distributing entity, organization or individual.", :type "string", :x-ms-client-name "Vendor"}, "org.opencontainers.image.ref.name" {:description "Name of the reference for a target.", :type "string", :x-ms-client-name "Name"}, "org.opencontainers.image.url" {:description "URL to find more information on the image.", :type "string", :x-ms-client-name "Url"}, "org.opencontainers.image.revision" {:description "Source control revision identifier for the packaged software.", :type "string", :x-ms-client-name "Revision"}, "org.opencontainers.image.documentation" {:description "URL to get documentation on the image.", :type "string", :x-ms-client-name "Documentation"}, "org.opencontainers.image.description" {:description "Human-readable description of the software packaged in the image", :type "string", :x-ms-client-name "Description"}, "org.opencontainers.image.authors" {:description "Contact details of the people or organization responsible for the image.", :type "string", :x-ms-client-name "Authors"}, "org.opencontainers.image.source" {:description "URL to get source code for building the image.", :type "string", :x-ms-client-name "Source"}, "org.opencontainers.image.licenses" {:description "License(s) under which contained software is distributed as an SPDX License Expression.", :type "string", :x-ms-client-name "Licenses"}, "org.opencontainers.image.title" {:description "Human-readable title of the image", :type "string", :x-ms-client-name "Title"}, "org.opencontainers.image.created" {:description "Date and time on which the image was built (string, date-time as defined by https://tools.ietf.org/html/rfc3339#section-5.6)", :format "date-time", :type "string", :x-ms-client-name "Created"}}, :type "object", :x-nullable true}, :V2Manifest {:allOf [#:reference{:definitions "Manifest"}], :description "Returns the requested Docker V2 Manifest file", :example {:config {:digest "sha256:6d1ef012b5674ad8a127ecfa9b5e6f5178d171b90ee462846974177fd9bdd39f", :mediaType "application/vnd.docker.container.image.v1+json", :size 1512}, :layers [{:digest "sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6", :mediaType "application/vnd.docker.image.rootfs.diff.tar.gzip", :size 2107098}], :mediaType "application/vnd.docker.distribution.manifest.v2+json", :schemaVersion 2}, :properties {:config #:reference{:definitions "Descriptor"}, :layers {:description "List of V2 image layer information", :items #:reference{:definitions "Descriptor"}, :type "array"}, :mediaType {:description "Media type for this Manifest", :type "string"}}, :x-ms-discriminator-value "application/vnd.docker.distribution.manifest.v2+json"}}}