{:scheme "https", :host "management.azure.com", :info {:title "ContainerRegistryManagementClient", :version "2019-06-01-preview"}, :ops {:TaskRuns_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}", :description "Gets the detailed information for a given task run.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The run request name.", :in "path", :name "taskRunName", :required true, :type "string"}], :verb :get}, :Runs_Cancel {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/cancel", :description "Cancel an existing run.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The run ID.", :in "path", :name "runId", :required true, :type "string"}], :verb :post}, :Runs_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}", :description "Patch the run properties.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The run ID.", :in "path", :name "runId", :required true, :type "string"} {:description "The run update properties.", :in "body", :name "runUpdateParameters", :required true, :schema #:reference{:definitions "RunUpdateParameters"}}], :verb :patch}, :TaskRuns_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}", :description "Deletes a specified task run resource.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The task run name.", :in "path", :name "taskRunName", :required true, :type "string"}], :verb :delete}, :Registries_ScheduleRun {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scheduleRun", :description "Schedules a new run based on the request parameters and add it to the run queue.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The parameters of a run that needs to scheduled.", :in "body", :name "runRequest", :required true, :schema #:reference{:definitions "RunRequest"}}], :verb :post}, :Tasks_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}", :description "Get the properties of a specified task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "TaskNameParameter"}], :verb :get}, :Runs_GetLogSasUrl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/listLogSasUrl", :description "Gets a link to download the run logs.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The run ID.", :in "path", :name "runId", :required true, :type "string"}], :verb :post}, :Runs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}", :description "Gets the detailed information for a given run.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The run ID.", :in "path", :name "runId", :required true, :type "string"}], :verb :get}, :Tasks_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}", :description "Updates a task with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "TaskNameParameter"} {:description "The parameters for updating a task.", :in "body", :name "taskUpdateParameters", :required true, :schema #:reference{:definitions "TaskUpdateParameters"}}], :verb :patch}, :Tasks_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks", :description "Lists all the tasks for a specified container registry.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Registries_GetBuildSourceUploadUrl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listBuildSourceUploadUrl", :description "Get the upload location for the user to be able to upload the source.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :post}, :TaskRuns_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}", :description "Creates a task run for a container registry with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The name of task run.", :in "path", :name "taskRunName", :required true, :type "string"} {:description "The parameters of a run that needs to scheduled.", :in "body", :name "taskRun", :required true, :schema #:reference{:definitions "TaskRun"}}], :verb :put}, :Tasks_Create {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}", :description "Creates a task for a container registry with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "TaskNameParameter"} {:description "The parameters for creating a task.", :in "body", :name "taskCreateParameters", :required true, :schema #:reference{:definitions "Task"}}], :verb :put}, :Tasks_GetDetails {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/listDetails", :description "Returns a task with extended information that includes all secrets.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "TaskNameParameter"}], :verb :post}, :Runs_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs", :description "Gets all the runs for a registry.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The runs filter to apply on the operation. Arithmetic operators are not supported. The allowed string function is 'contains'. All logical operators except 'Not', 'Has', 'All' are allowed.", :in "query", :name "$filter", :required false, :type "string"} {:description "$top is supported for get list of runs, which limits the maximum number of runs to return.", :format "int32", :in "query", :name "$top", :required false, :type "integer"}], :verb :get}, :TaskRuns_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns", :description "Lists all the task runs for a specified container registry.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TaskRuns_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}", :description "Updates a task run with the specified parameters.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} {:description "The task run name.", :in "path", :name "taskRunName", :required true, :type "string"} {:description "The parameters for updating a task run.", :in "body", :name "updateParameters", :required true, :schema #:reference{:definitions "TaskRunUpdateParameters"}}], :verb :patch}, :Tasks_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}", :description "Deletes a specified task.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "RegistryNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "TaskNameParameter"}], :verb :delete}}, :parameters {:ApiVersionParameter {:description "The client API version.", :in "query", :name "api-version", :required true, :type "string"}, :RegistryNameParameter {:description "The name of the container registry.", :name "registryName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9]*$"}, :ResourceGroupNameParameter {:description "The name of the resource group to which the container registry belongs.", :in "path", :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "The Microsoft Azure subscription ID.", :in "path", :name "subscriptionId", :required true, :type "string"}, :TaskNameParameter {:description "The name of the container registry task.", :name "taskName", :type "string", :minLength 5, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z0-9-_]*$"}}, :definitions {:RunUpdateParameters {:description "The set of run properties that can be updated.", :properties {:isArchiveEnabled {:description "The value that indicates whether archiving is enabled or not.", :type "boolean"}}, :type "object"}, :TaskRunListResult {:description "The collection of task runs.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "TaskRun"}, :type "array"}}, :type "object"}, :TaskUpdateParameters {:description "The parameters for updating a task.", :properties {:identity #:reference{:definitions "IdentityProperties"}, :properties #:reference{:definitions "TaskPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The ARM resource tags.", :type "object"}}, :type "object"}, :SourceProperties {:description "The properties of the source code repository.", :properties {:branch {:description "The branch name of the source code.", :type "string"}, :repositoryUrl {:description "The full URL to the source code repository", :type "string"}, :sourceControlAuthProperties #:reference{:definitions "AuthInfo"}, :sourceControlType {:description "The type of source control service.", :enum ["Github" "VisualStudioTeamService"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceControlType"}}}, :required ["sourceControlType" "repositoryUrl"], :type "object"}, :AgentProperties {:description "The properties that determine the run agent configuration.", :properties {:cpu {:description "The CPU configuration in terms of number of cores required for the run.", :format "int32", :type "integer"}}, :type "object"}, :ImageDescriptor {:description "Properties for a registry image.", :properties {:digest {:description "The sha256-based digest of the image manifest.", :type "string"}, :registry {:description "The registry login server.", :type "string"}, :repository {:description "The repository name.", :type "string"}, :tag {:description "The tag name.", :type "string"}}, :type "object"}, :TriggerProperties {:description "The properties of a trigger.", :properties {:baseImageTrigger #:reference{:definitions "BaseImageTrigger"}, :sourceTriggers {:description "The collection of triggers based on source code repository.", :items #:reference{:definitions "SourceTrigger"}, :type "array"}, :timerTriggers {:description "The collection of timer triggers.", :items #:reference{:definitions "TimerTrigger"}, :type "array"}}, :type "object"}, :UserIdentityProperties {:properties {:clientId {:description "The client id of user assigned identity.", :type "string"}, :principalId {:description "The principal id of user assigned identity.", :type "string"}}, :type "object"}, :Run {:allOf [#:reference{:definitions "ProxyResource"}], :description "Run resource properties", :properties {:properties #:reference{:definitions "RunProperties"}}, :type "object"}, :SourceTrigger {:description "The properties of a source based trigger.", :properties {:name {:description "The name of the trigger.", :type "string"}, :sourceRepository #:reference{:definitions "SourceProperties"}, :sourceTriggerEvents {:description "The source event corresponding to the trigger.", :items {:enum ["commit" "pullrequest"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceTriggerEvent"}}, :type "array"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}}, :required ["sourceRepository" "sourceTriggerEvents" "name"], :type "object"}, :TaskRun {:allOf [#:reference{:definitions "Resource"}], :description "The task run that has the ARM resource and properties. \r\nThe task run will have the information of request and result of a run.", :properties {:identity #:reference{:definitions "IdentityProperties"}, :properties #:reference{:definitions "TaskRunProperties"}}, :type "object"}, :FileTaskStep {:allOf [#:reference{:definitions "TaskStepProperties"}], :description "The properties of a task step.", :properties {:taskFilePath {:description "The task template/definition file path relative to the source context.", :type "string"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}, :valuesFilePath {:description "The task values/parameters file path relative to the source context.", :type "string"}}, :required ["taskFilePath" "type"], :type "object", :x-ms-discriminator-value "FileTask"}, :EncodedTaskStepUpdateParameters {:allOf [#:reference{:definitions "TaskStepUpdateParameters"}], :description "The properties for updating encoded task step.", :properties {:encodedTaskContent {:description "Base64 encoded value of the template/definition file content.", :type "string"}, :encodedValuesContent {:description "Base64 encoded value of the parameters/values file content.", :type "string"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}}, :required ["type"], :type "object", :x-ms-discriminator-value "EncodedTask"}, :TaskStepUpdateParameters {:description "Base properties for updating any task step.", :discriminator "type", :properties {:contextAccessToken {:description "The token (git PAT or SAS token of storage account blob) associated with the context for a step.", :type "string"}, :contextPath {:description "The URL(absolute or relative) of the source context for the task step.", :type "string"}, :type {:description "The type of the step.", :enum ["Docker" "FileTask" "EncodedTask"], :type "string", :x-ms-enum {:modelAsString true, :name "StepType"}}}, :required ["type"], :type "object"}, :SourceTriggerUpdateParameters {:description "The properties for updating a source based trigger.", :properties {:name {:description "The name of the trigger.", :type "string"}, :sourceRepository #:reference{:definitions "SourceUpdateParameters"}, :sourceTriggerEvents {:description "The source event corresponding to the trigger.", :items {:enum ["commit" "pullrequest"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceTriggerEvent"}}, :type "array"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}}, :required ["name"], :type "object"}, :TimerTriggerUpdateParameters {:description "The properties for updating a timer trigger.", :properties {:name {:description "The name of the trigger.", :type "string"}, :schedule {:description "The CRON expression for the task schedule", :type "string"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}}, :required ["name"], :type "object"}, :TriggerUpdateParameters {:description "The properties for updating triggers.", :properties {:baseImageTrigger #:reference{:definitions "BaseImageTriggerUpdateParameters"}, :sourceTriggers {:description "The collection of triggers based on source code repository.", :items #:reference{:definitions "SourceTriggerUpdateParameters"}, :type "array"}, :timerTriggers {:description "The collection of timer triggers.", :items #:reference{:definitions "TimerTriggerUpdateParameters"}, :type "array"}}, :type "object"}, :DockerBuildStep {:allOf [#:reference{:definitions "TaskStepProperties"}], :description "The Docker build step.", :properties {:arguments {:description "The collection of override arguments to be used when executing this build step.", :items #:reference{:definitions "Argument"}, :type "array"}, :dockerFilePath {:description "The Docker file path relative to the source context.", :type "string"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :isPushEnabled {:default true, :description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :noCache {:default false, :description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}, :target {:description "The name of the target build stage for the docker build.", :type "string"}}, :required ["dockerFilePath" "type"], :type "object", :x-ms-discriminator-value "Docker"}, :PlatformUpdateParameters {:description "The properties for updating the platform configuration.", :properties {:architecture {:description "The OS architecture.", :enum ["amd64" "x86" "386" "arm" "arm64"], :type "string", :x-ms-enum {:modelAsString true, :name "Architecture"}}, :os {:description "The operating system type required for the run.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString true, :name "OS"}}, :variant {:description "Variant of the CPU.", :enum ["v6" "v7" "v8"], :type "string", :x-ms-enum {:modelAsString true, :name "Variant"}}}, :type "object"}, :IdentityProperties {:description "Managed identity for the resource.", :properties {:principalId {:description "The principal ID of resource identity.", :type "string"}, :tenantId {:description "The tenant ID of resource.", :type "string"}, :type {:description "The identity type.", :enum ["SystemAssigned" "UserAssigned" "SystemAssigned, UserAssigned" "None"], :type "string", :x-ms-enum {:modelAsString false, :name "ResourceIdentityType"}}, :userAssignedIdentities {:additionalProperties #:reference{:definitions "UserIdentityProperties"}, :description "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.", :type "object"}}, :type "object"}, :EncodedTaskRunRequest {:allOf [#:reference{:definitions "RunRequest"}], :description "The parameters for a quick task run request.", :properties {:agentConfiguration #:reference{:definitions "AgentProperties"}, :credentials #:reference{:definitions "Credentials"}, :encodedTaskContent {:description "Base64 encoded value of the template/definition file content.", :type "string"}, :encodedValuesContent {:description "Base64 encoded value of the parameters/values file content.", :type "string"}, :platform #:reference{:definitions "PlatformProperties"}, :sourceLocation {:description "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.", :type "string"}, :timeout {:default 3600, :description "Run timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}}, :required ["type" "encodedTaskContent" "platform"], :type "object", :x-ms-discriminator-value "EncodedTaskRunRequest"}, :AuthInfoUpdateParameters {:description "The authorization properties for accessing the source code repository.", :properties {:expiresIn {:description "Time in seconds that the token remains valid", :format "int32", :type "integer"}, :refreshToken {:description "The refresh token used to refresh the access token.", :type "string"}, :scope {:description "The scope of the access token.", :type "string"}, :token {:description "The access token used to access the source control provider.", :type "string"}, :tokenType {:description "The type of Auth token.", :enum ["PAT" "OAuth"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenType"}}}, :type "object"}, :RunRequest {:description "The request parameters for scheduling a run.", :discriminator "type", :properties {:isArchiveEnabled {:default false, :description "The value that indicates whether archiving is enabled for the run or not.", :type "boolean"}, :type {:description "The type of the run request.", :type "string"}}, :required ["type"], :type "object"}, :TaskListResult {:description "The collection of tasks.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "Task"}, :type "array"}}, :type "object"}, :TaskRunRequest {:allOf [#:reference{:definitions "RunRequest"}], :description "The parameters for a task run request.", :properties {:overrideTaskStepProperties #:reference{:definitions "OverrideTaskStepProperties"}, :taskId {:description "The resource ID of task against which run has to be queued.", :type "string"}}, :required ["type" "taskId"], :type "object", :x-ms-discriminator-value "TaskRunRequest"}, :DockerBuildRequest {:allOf [#:reference{:definitions "RunRequest"}], :description "The parameters for a docker quick build.", :properties {:noCache {:default false, :description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}, :dockerFilePath {:description "The Docker file path relative to the source location.", :type "string"}, :credentials #:reference{:definitions "Credentials"}, :arguments {:description "The collection of override arguments to be used when executing the run.", :items #:reference{:definitions "Argument"}, :type "array"}, :sourceLocation {:description "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.", :type "string"}, :isPushEnabled {:default true, :description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :agentConfiguration #:reference{:definitions "AgentProperties"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :target {:description "The name of the target build stage for the docker build.", :type "string"}, :timeout {:default 3600, :description "Run timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}, :platform #:reference{:definitions "PlatformProperties"}}, :required ["type" "dockerFilePath" "platform"], :type "object", :x-ms-discriminator-value "DockerBuildRequest"}, :SetValue {:description "The properties of a overridable value that can be passed to a task template.", :properties {:isSecret {:default false, :description "Flag to indicate whether the value represents a secret or not.", :type "boolean"}, :name {:description "The name of the overridable value.", :type "string"}, :value {:description "The overridable value.", :type "string"}}, :required ["name" "value"], :type "object"}, :RunListResult {:description "Collection of runs.", :properties {:nextLink {:description "The URI that can be used to request the next set of paged results.", :type "string"}, :value {:description "The collection value.", :items #:reference{:definitions "Run"}, :type "array"}}, :type "object"}, :RunGetLogResult {:description "The result of get log link operation.", :properties {:logLink {:description "The link to logs for a run on a azure container registry.", :type "string"}}, :type "object"}, :TimerTrigger {:description "The properties of a timer trigger.", :properties {:name {:description "The name of the trigger.", :type "string"}, :schedule {:description "The CRON expression for the task schedule", :type "string"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}}, :required ["schedule" "name"], :type "object"}, :ErrorSchema {:description "An error response from the Azure Container Registry service.", :properties {:error #:reference{:definitions "Error"}}}, :BaseImageDependency {:description "Properties that describe a base image dependency.", :properties {:digest {:description "The sha256-based digest of the image manifest.", :type "string"}, :registry {:description "The registry login server.", :type "string"}, :repository {:description "The repository name.", :type "string"}, :tag {:description "The tag name.", :type "string"}, :type {:description "The type of the base image dependency.", :enum ["BuildTime" "RunTime"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageDependencyType"}}}, :type "object"}, :PlatformProperties {:description "The platform properties against which the run has to happen.", :properties {:architecture {:description "The OS architecture.", :enum ["amd64" "x86" "386" "arm" "arm64"], :type "string", :x-ms-enum {:modelAsString true, :name "Architecture"}}, :os {:description "The operating system type required for the run.", :enum ["Windows" "Linux"], :type "string", :x-ms-enum {:modelAsString true, :name "OS"}}, :variant {:description "Variant of the CPU.", :enum ["v6" "v7" "v8"], :type "string", :x-ms-enum {:modelAsString true, :name "Variant"}}}, :required ["os"], :type "object"}, :SourceUpdateParameters {:description "The properties for updating the source code repository.", :properties {:branch {:description "The branch name of the source code.", :type "string"}, :repositoryUrl {:description "The full URL to the source code repository", :type "string"}, :sourceControlAuthProperties #:reference{:definitions "AuthInfoUpdateParameters"}, :sourceControlType {:description "The type of source control service.", :enum ["Github" "VisualStudioTeamService"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceControlType"}}}, :type "object"}, :TaskProperties {:description "The properties of a task.", :properties {:provisioningState {:description "The provisioning state of the task.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :credentials #:reference{:definitions "Credentials"}, :status {:description "The current status of task.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TaskStatus"}}, :agentConfiguration #:reference{:definitions "AgentProperties"}, :timeout {:default 3600, :description "Run timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}, :trigger #:reference{:definitions "TriggerProperties"}, :creationDate {:description "The creation date of task.", :format "date-time", :readOnly true, :type "string"}, :step #:reference{:definitions "TaskStepProperties"}, :platform #:reference{:definitions "PlatformProperties"}}, :required ["platform" "step"], :type "object"}, :DockerBuildStepUpdateParameters {:allOf [#:reference{:definitions "TaskStepUpdateParameters"}], :description "The properties for updating a docker build step.", :properties {:arguments {:description "The collection of override arguments to be used when executing this build step.", :items #:reference{:definitions "Argument"}, :type "array"}, :dockerFilePath {:description "The Docker file path relative to the source context.", :type "string"}, :imageNames {:description "The fully qualified image names including the repository and tag.", :items {:type "string"}, :type "array"}, :isPushEnabled {:description "The value of this property indicates whether the image built should be pushed to the registry or not.", :type "boolean"}, :noCache {:description "The value of this property indicates whether the image cache is enabled or not.", :type "boolean"}, :target {:description "The name of the target build stage for the docker build.", :type "string"}}, :required ["type"], :type "object", :x-ms-discriminator-value "Docker"}, :RunProperties {:description "The properties for a run.", :properties {:customRegistries {:description "The list of custom registries that were logged in during this run.", :items {:type "string"}, :type "array"}, :updateTriggerToken {:description "The update trigger token passed for the Run.", :type "string"}, :sourceTrigger #:reference{:definitions "SourceTriggerDescriptor"}, :provisioningState {:description "The provisioning state of a run.", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :startTime {:description "The time the run started.", :format "date-time", :type "string"}, :task {:description "The task against which run was scheduled.", :type "string"}, :lastUpdatedTime {:description "The last updated time for the run.", :format "date-time", :type "string"}, :sourceRegistryAuth {:description "The scope of the credentials that were used to login to the source registry during this run.", :type "string"}, :createTime {:description "The time the run was scheduled.", :format "date-time", :type "string"}, :imageUpdateTrigger #:reference{:definitions "ImageUpdateTrigger"}, :finishTime {:description "The time the run finished.", :format "date-time", :type "string"}, :runId {:description "The unique identifier for the run.", :type "string"}, :outputImages {:description "The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.", :items #:reference{:definitions "ImageDescriptor"}, :type "array"}, :status {:description "The current status of the run.", :enum ["Queued" "Started" "Running" "Succeeded" "Failed" "Canceled" "Error" "Timeout"], :type "string", :x-ms-enum {:modelAsString true, :name "RunStatus"}}, :runErrorMessage {:description "The error message received from backend systems after the run is scheduled.", :readOnly true, :type "string"}, :timerTrigger #:reference{:definitions "TimerTriggerDescriptor"}, :agentConfiguration #:reference{:definitions "AgentProperties"}, :runType {:description "The type of run.", :enum ["QuickBuild" "QuickRun" "AutoBuild" "AutoRun"], :type "string", :x-ms-enum {:modelAsString true, :name "RunType"}}, :platform #:reference{:definitions "PlatformProperties"}, :isArchiveEnabled {:default false, :description "The value that indicates whether archiving is enabled or not.", :type "boolean"}}, :type "object"}, :TaskRunProperties {:description "The properties of task run.", :properties {:forceUpdateTag {:description "How the run should be forced to rerun even if the run request configuration has not changed", :type "string"}, :provisioningState {:description "The provisioning state of this task run", :enum ["Creating" "Updating" "Deleting" "Succeeded" "Failed" "Canceled"], :readOnly true, :type "string", :x-ms-enum {:modelAsString true, :name "ProvisioningState"}}, :runRequest #:reference{:definitions "RunRequest"}, :runResult #:reference{:definitions "Run"}}, :type "object"}, :TaskRunPropertiesUpdateParameters {:description "The properties of a task run update parameters.", :properties {:forceUpdateTag {:description "How the run should be forced to rerun even if the run request configuration has not changed", :type "string"}, :runRequest #:reference{:definitions "RunRequest"}}, :type "object"}, :Credentials {:description "The parameters that describes a set of credentials that will be used when a run is invoked.", :properties {:customRegistries {:additionalProperties #:reference{:definitions "CustomRegistryCredentials"}, :description "Describes the credential parameters for accessing other custom registries. The key\r\nfor the dictionary item will be the registry login server (myregistry.azurecr.io) and\r\nthe value of the item will be the registry credentials for accessing the registry.", :type "object"}, :sourceRegistry #:reference{:definitions "SourceRegistryCredentials"}}, :type "object"}, :SourceRegistryCredentials {:description "Describes the credential parameters for accessing the source registry.", :properties {:loginMode {:description "The authentication mode which determines the source registry login scope. The credentials for the source registry\r\nwill be generated using the given scope. These credentials will be used to login to\r\nthe source registry during the run.", :enum ["None" "Default"], :type "string", :x-ms-enum {:modelAsString true, :name "SourceRegistryLoginMode"}}}, :type "object"}, :RunFilter {:description "Properties that are enabled for Odata querying on runs.", :properties {:createTime {:description "The create time for a run.", :format "date-time", :type "string"}, :finishTime {:description "The time the run finished.", :format "date-time", :type "string"}, :isArchiveEnabled {:description "The value that indicates whether archiving is enabled or not.", :type "boolean"}, :outputImageManifests {:description "The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of\r\nbuild type.", :type "string"}, :runId {:description "The unique identifier for the run.", :type "string"}, :runType {:description "The type of run.", :enum ["QuickBuild" "QuickRun" "AutoBuild" "AutoRun"], :type "string", :x-ms-enum {:modelAsString true, :name "RunType"}}, :status {:description "The current status of the run.", :enum ["Queued" "Started" "Running" "Succeeded" "Failed" "Canceled" "Error" "Timeout"], :type "string", :x-ms-enum {:modelAsString true, :name "RunStatus"}}, :taskName {:description "The name of the task that the run corresponds to.", :type "string"}}, :type "object"}, :SourceUploadDefinition {:description "The properties of a response to source upload request.", :properties {:relativePath {:description "The relative path to the source. This is used to submit the subsequent queue build request.", :type "string"}, :uploadUrl {:description "The URL where the client can upload the source.", :type "string"}}, :type "object"}, :Task {:allOf [#:reference{:definitions "Resource"}], :description "The task that has the ARM resource and task properties. \r\nThe task will have all information to schedule a run against it.", :properties {:identity #:reference{:definitions "IdentityProperties"}, :properties #:reference{:definitions "TaskProperties"}}, :type "object"}, :Resource {:description "An Azure resource.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :location {:description "The location of the resource. This cannot be changed after the resource is created.", :type "string", :x-ms-mutability ["read" "create"]}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :tags {:additionalProperties {:type "string"}, :description "The tags of the resource.", :type "object"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :required ["location"], :x-ms-azure-resource true}, :BaseImageTriggerUpdateParameters {:description "The properties for updating base image dependency trigger.", :properties {:baseImageTriggerType {:description "The type of the auto trigger for base image dependency updates.", :enum ["All" "Runtime"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageTriggerType"}}, :name {:description "The name of the trigger.", :type "string"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}, :updateTriggerEndpoint {:description "The endpoint URL for receiving update triggers.", :type "string"}, :updateTriggerPayloadType {:description "Type of Payload body for Base image update triggers.", :enum ["Default" "Token"], :type "string", :x-ms-enum {:modelAsString true, :name "UpdateTriggerPayloadType"}}}, :required ["name"], :type "object"}, :ImageUpdateTrigger {:description "The image update trigger that caused a build.", :properties {:id {:description "The unique ID of the trigger.", :type "string"}, :images {:description "The list of image updates that caused the build.", :items #:reference{:definitions "ImageDescriptor"}, :type "array"}, :timestamp {:description "The timestamp when the image update happened.", :format "date-time", :type "string"}}, :type "object"}, :Error {:description "An error response from the Azure Container Registry service.", :properties {:code {:description "error code.", :type "string"}, :message {:description "error message.", :type "string"}}, :required ["code" "message"]}, :TaskStepProperties {:description "Base properties for any task step.", :discriminator "type", :properties {:baseImageDependencies {:description "List of base image dependencies for a step.", :items #:reference{:definitions "BaseImageDependency"}, :readOnly true, :type "array"}, :contextAccessToken {:description "The token (git PAT or SAS token of storage account blob) associated with the context for a step.", :type "string"}, :contextPath {:description "The URL(absolute or relative) of the source context for the task step.", :type "string"}, :type {:description "The type of the step.", :enum ["Docker" "FileTask" "EncodedTask"], :type "string", :x-ms-enum {:modelAsString true, :name "StepType"}}}, :required ["type"], :type "object"}, :TaskPropertiesUpdateParameters {:description "The properties for updating a task.", :properties {:agentConfiguration #:reference{:definitions "AgentProperties"}, :credentials #:reference{:definitions "Credentials"}, :platform #:reference{:definitions "PlatformUpdateParameters"}, :status {:description "The current status of task.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TaskStatus"}}, :step #:reference{:definitions "TaskStepUpdateParameters"}, :timeout {:description "Run timeout in seconds.", :format "int32", :type "integer"}, :trigger #:reference{:definitions "TriggerUpdateParameters"}}, :type "object"}, :Argument {:description "The properties of a run argument.", :properties {:isSecret {:default false, :description "Flag to indicate whether the argument represents a secret and want to be removed from build logs.", :type "boolean"}, :name {:description "The name of the argument.", :type "string"}, :value {:description "The value of the argument.", :type "string"}}, :required ["name" "value"], :type "object"}, :EncodedTaskStep {:allOf [#:reference{:definitions "TaskStepProperties"}], :description "The properties of a encoded task step.", :properties {:encodedTaskContent {:description "Base64 encoded value of the template/definition file content.", :type "string"}, :encodedValuesContent {:description "Base64 encoded value of the parameters/values file content.", :type "string"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}}, :required ["encodedTaskContent" "type"], :type "object", :x-ms-discriminator-value "EncodedTask"}, :BaseImageTrigger {:description "The trigger based on base image dependency.", :properties {:baseImageTriggerType {:description "The type of the auto trigger for base image dependency updates.", :enum ["All" "Runtime"], :type "string", :x-ms-enum {:modelAsString true, :name "BaseImageTriggerType"}}, :name {:description "The name of the trigger.", :type "string"}, :status {:default "Enabled", :description "The current status of trigger.", :enum ["Disabled" "Enabled"], :type "string", :x-ms-enum {:modelAsString true, :name "TriggerStatus"}}, :updateTriggerEndpoint {:description "The endpoint URL for receiving update triggers.", :type "string"}, :updateTriggerPayloadType {:description "Type of Payload body for Base image update triggers.", :enum ["Default" "Token"], :type "string", :x-ms-enum {:modelAsString true, :name "UpdateTriggerPayloadType"}}}, :required ["baseImageTriggerType" "name"], :type "object"}, :AuthInfo {:description "The authorization properties for accessing the source code repository.", :properties {:expiresIn {:description "Time in seconds that the token remains valid", :format "int32", :type "integer"}, :refreshToken {:description "The refresh token used to refresh the access token.", :type "string"}, :scope {:description "The scope of the access token.", :type "string"}, :token {:description "The access token used to access the source control provider.", :type "string"}, :tokenType {:description "The type of Auth token.", :enum ["PAT" "OAuth"], :type "string", :x-ms-enum {:modelAsString true, :name "TokenType"}}}, :required ["tokenType" "token"], :type "object"}, :SourceTriggerDescriptor {:description "The source trigger that caused a run.", :properties {:branchName {:description "The branch name in the repository.", :type "string"}, :commitId {:description "The unique ID that identifies a commit.", :type "string"}, :eventType {:description "The event type of the trigger.", :type "string"}, :id {:description "The unique ID of the trigger.", :type "string"}, :providerType {:description "The source control provider type.", :type "string"}, :pullRequestId {:description "The unique ID that identifies pull request.", :type "string"}, :repositoryUrl {:description "The repository URL.", :type "string"}}, :type "object"}, :TaskRunUpdateParameters {:description "The parameters for updating a task run.", :properties {:identity #:reference{:definitions "IdentityProperties"}, :properties #:reference{:definitions "TaskRunPropertiesUpdateParameters"}, :tags {:additionalProperties {:type "string"}, :description "The ARM resource tags.", :type "object"}}, :type "object"}, :FileTaskRunRequest {:allOf [#:reference{:definitions "RunRequest"}], :description "The request parameters for a scheduling run against a task file.", :properties {:agentConfiguration #:reference{:definitions "AgentProperties"}, :credentials #:reference{:definitions "Credentials"}, :platform #:reference{:definitions "PlatformProperties"}, :sourceLocation {:description "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.", :type "string"}, :taskFilePath {:description "The template/definition file path relative to the source.", :type "string"}, :timeout {:default 3600, :description "Run timeout in seconds.", :format "int32", :maximum 28800, :minimum 300, :type "integer"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}, :valuesFilePath {:description "The values/parameters file path relative to the source.", :type "string"}}, :required ["type" "taskFilePath" "platform"], :type "object", :x-ms-discriminator-value "FileTaskRunRequest"}, :OverrideTaskStepProperties {:properties {:arguments {:description "Gets or sets the collection of override arguments to be used when\r\nexecuting a build step.", :items #:reference{:definitions "Argument"}, :type "array"}, :contextPath {:description "The source context against which run has to be queued.", :type "string"}, :file {:description "The file against which run has to be queued.", :type "string"}, :target {:description "The name of the target build stage for the docker build.", :type "string"}, :updateTriggerToken {:description "Base64 encoded update trigger token that will be attached with the base image trigger webhook.", :type "string"}, :values {:description "The collection of overridable values that can be passed when running a Task.", :items #:reference{:definitions "SetValue"}, :type "array"}}, :type "object"}, :CustomRegistryCredentials {:description "Describes the credentials that will be used to access a custom registry during a run.", :properties {:identity {:description "Indicates the managed identity assigned to the custom credential. If a user-assigned identity\r\nthis value is the Client ID. If a system-assigned identity, the value will be `system`. In\r\nthe case of a system-assigned identity, the Client ID will be determined by the runner. This\r\nidentity may be used to authenticate to key vault to retrieve credentials or it may be the only \r\nsource of authentication used for accessing the registry.", :type "string"}, :password #:reference{:definitions "SecretObject"}, :userName #:reference{:definitions "SecretObject"}}, :type "object"}, :ProxyResource {:description "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags.", :properties {:id {:description "The resource ID.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :TimerTriggerDescriptor {:properties {:scheduleOccurrence {:description "The occurrence that triggered the run.", :type "string"}, :timerTriggerName {:description "The timer trigger name that caused the run.", :type "string"}}, :type "object"}, :FileTaskStepUpdateParameters {:allOf [#:reference{:definitions "TaskStepUpdateParameters"}], :description "The properties of updating a task step.", :properties {:taskFilePath {:description "The task template/definition file path relative to the source context.", :type "string"}, :values {:description "The collection of overridable values that can be passed when running a task.", :items #:reference{:definitions "SetValue"}, :type "array"}, :valuesFilePath {:description "The values/parameters file path relative to the source context.", :type "string"}}, :required ["type"], :type "object", :x-ms-discriminator-value "FileTask"}, :SecretObject {:description "Describes the properties of a secret object value.", :properties {:type {:description "The type of the secret object which determines how the value of the secret object has to be\r\ninterpreted.", :enum ["Opaque" "Vaultsecret"], :type "string", :x-ms-enum {:modelAsString true, :name "SecretObjectType"}}, :value {:description "The value of the secret. The format of this value will be determined\r\nbased on the type of the secret object. If the type is Opaque, the value will be\r\nused as is without any modification.", :type "string"}}, :type "object"}}}