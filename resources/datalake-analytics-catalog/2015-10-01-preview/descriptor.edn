{:scheme "https", :host "azure.local", :info {:description "Creates an Azure Data Lake Analytics catalog client.", :title "DataLakeAnalyticsCatalogManagementClient", :version "2015-10-01-preview"}, :ops {:Catalog_GetCredential {:path "/catalog/usql/databases/{databaseName}/credentials/{credentialName}", :description "Retrieves the specified credential from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the schema.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the credential.", :in "path", :name "credentialName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListTablePartitions {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions", :description "Retrieves the list of table partitions from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the partitions.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the partitions.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table containing the partitions.", :in "path", :name "tableName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetTableStatistic {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics/{statisticsName}", :description "Retrieves the specified table statistics from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the statistics.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the statistics.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table containing the statistics.", :in "path", :name "tableName", :required true, :type "string"} {:description "The name of the table statistics.", :in "path", :name "statisticsName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListTableTypes {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes", :description "Retrieves the list of table types from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the table types.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the table types.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListCredentials {:path "/catalog/usql/databases/{databaseName}/credentials", :description "Retrieves the list of credentials from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the schema.", :in "path", :name "databaseName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListProcedures {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures", :description "Retrieves the list of procedures from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the procedures.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the procedures.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListTypes {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/types", :description "Retrieves the list of types within the specified database and schema from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the types.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the types.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetTable {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}", :description "Retrieves the specified table from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the table.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the table.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table.", :in "path", :name "tableName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListTableValuedFunctions {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions", :description "Retrieves the list of table valued functions from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the table valued functions.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the table valued functions.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetExternalDataSource {:path "/catalog/usql/databases/{databaseName}/externaldatasources/{externalDataSourceName}", :description "Retrieves the specified external data source from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the external data source.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the external data source.", :in "path", :name "externalDataSourceName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetSchema {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}", :description "Retrieves the specified schema from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the schema.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema.", :in "path", :name "schemaName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListDatabases {:path "/catalog/usql/databases", :description "Retrieves the list of databases from the Data Lake Analytics catalog.", :parameters [{:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListAssemblies {:path "/catalog/usql/databases/{databaseName}/assemblies", :description "Retrieves the list of assemblies from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the assembly.", :in "path", :name "databaseName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetAssembly {:path "/catalog/usql/databases/{databaseName}/assemblies/{assemblyName}", :description "Retrieves the specified assembly from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the assembly.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the assembly.", :in "path", :name "assemblyName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListViews {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/views", :description "Retrieves the list of views from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the views.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the views.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetTableValuedFunction {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions/{tableValuedFunctionName}", :description "Retrieves the specified table valued function from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the table valued function.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the table valued function.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the tableValuedFunction.", :in "path", :name "tableValuedFunctionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_DeleteSecret {:path "/catalog/usql/databases/{databaseName}/secrets/{secretName}", :description "Deletes the specified secret in the specified database", :parameters [{:description "The name of the database containing the secret.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the secret to delete", :in "path", :name "secretName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Catalog_ListTableStatistics {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics", :description "Retrieves the list of table statistics from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the statistics.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the statistics.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table containing the statistics.", :in "path", :name "tableName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_CreateSecret {:path "/catalog/usql/databases/{databaseName}/secrets/{secretName}", :description "Creates the specified secret for use with external data sources in the specified database.", :parameters [{:description "The name of the database in which to create the secret.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the secret.", :in "path", :name "secretName", :required true, :type "string"} {:description "The parameters required to create the secret (name and password)", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :Catalog_GetTableType {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes/{tableTypeName}", :description "Retrieves the specified table type from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the table type.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the table type.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table type to retrieve.", :in "path", :name "tableTypeName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListSchemas {:path "/catalog/usql/databases/{databaseName}/schemas", :description "Retrieves the list of schemas from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the schema.", :in "path", :name "databaseName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListExternalDataSources {:path "/catalog/usql/databases/{databaseName}/externaldatasources", :description "Retrieves the list of external data sources from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the external data sources.", :in "path", :name "databaseName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetTablePartition {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions/{partitionName}", :description "Retrieves the specified table partition from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the partition.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the partition.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the table containing the partition.", :in "path", :name "tableName", :required true, :type "string"} {:description "The name of the table partition.", :in "path", :name "partitionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetDatabase {:path "/catalog/usql/databases/{databaseName}", :description "Retrieves the specified database from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database.", :in "path", :name "databaseName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetSecret {:path "/catalog/usql/databases/{databaseName}/secrets/{secretName}", :description "Gets the specified secret in the specified database", :parameters [{:description "The name of the database containing the secret.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the secret to get", :in "path", :name "secretName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_DeleteAllSecrets {:path "/catalog/usql/databases/{databaseName}/secrets", :description "Deletes all secrets in the specified database", :parameters [{:description "The name of the database containing the secret.", :in "path", :name "databaseName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :Catalog_UpdateSecret {:path "/catalog/usql/databases/{databaseName}/secrets/{secretName}", :description "Modifies the specified secret for use with external data sources in the specified database", :parameters [{:description "The name of the database containing the secret.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the secret.", :in "path", :name "secretName", :required true, :type "string"} {:description "The parameters required to modify the secret (name and password)", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters"}} #:reference{:parameters "ApiVersionParameter"}], :verb :patch}, :Catalog_GetProcedure {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures/{procedureName}", :description "Retrieves the specified procedure from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the procedure.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the procedure.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the procedure.", :in "path", :name "procedureName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_GetView {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/views/{viewName}", :description "Retrieves the specified view from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the view.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the view.", :in "path", :name "schemaName", :required true, :type "string"} {:description "The name of the view.", :in "path", :name "viewName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Catalog_ListTables {:path "/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables", :description "Retrieves the list of tables from the Data Lake Analytics catalog.", :parameters [{:description "The name of the database containing the tables.", :in "path", :name "databaseName", :required true, :type "string"} {:description "The name of the schema containing the tables.", :in "path", :name "schemaName", :required true, :type "string"} {:description "OData filter. Optional.", :in "query", :name "$filter", :required false, :type "string"} {:description "The number of items to return. Optional.", :format "int32", :in "query", :name "$top", :required false, :type "integer"} {:description "The number of items to skip over before returning elements. Optional.", :format "int32", :in "query", :name "$skip", :required false, :type "integer"} {:description "OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories?$expand=Products would expand Product data in line with each Category entry. Optional.", :in "query", :name "$expand", :required false, :type "string"} {:description "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.", :in "query", :name "$select", :required false, :type "string"} {:description "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.", :in "query", :name "$orderby", :required false, :type "string"} {:description "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.", :in "query", :name "$count", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "Client Api Version.", :in "query", :name "api-version", :required true, :type "string"}, :adlaCatalogDnsSuffixInPath {:default "azuredatalakeanalytics.net", :description "Gets the DNS suffix used as the base for all Azure Data Lake Analytics Catalog service requests.", :in "path", :name "adlaCatalogDnsSuffix", :required true, :type "string", :x-ms-parameter-location "client", :x-ms-skip-url-encoding true}}, :definitions {:USqlDistributionInfo {:description "A Data Lake Analytics catalog U-SQL distribution information object.", :properties {:count {:description "the count of indices using this distribution.", :format "int32", :type "integer"}, :dynamicCount {:description "the dynamic count of indices using this distribution.", :format "int32", :type "integer"}, :keys {:description "the list of directed columns in the distribution", :items #:reference{:definitions "USqlDirectedColumn"}, :type "array"}, :type {:description "the type of this distribution.", :format "int32", :type "integer"}}}, :USqlAssemblyDependencyInfo {:description "A Data Lake Analytics catalog U-SQL dependency information item.", :properties {:entityId #:reference{:definitions "EntityId"}}}, :USqlCredential {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL credential item.", :properties {:credentialName {:description "the name of the credential.", :type "string", :x-ms-client-name "name"}, :databaseName {:description "the name of the database the credential is in.", :type "string"}, :identity {:description "the name of the secret associated with the credential.", :type "string"}, :userName {:description "the user name associated with the credential.", :type "string"}}}, :CatalogItem {:description "A Data Lake Analytics catalog item.", :properties {:computeAccountName {:description "the name of the Data Lake Analytics account.", :type "string"}, :version {:description "the version of the catalog item.", :format "uuid", :type "string"}}}, :USqlExternalDataSource {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL external datasource item.", :properties {:databaseName {:description "the name of the database.", :type "string"}, :externalDataSourceName {:description "the name of the external data source.", :type "string", :x-ms-client-name "name"}, :provider {:description "the name of the provider for the external data source.", :type "string"}, :providerString {:description "the name of the provider string for the external data source.", :type "string"}, :pushdownTypes {:description "the list of types to push down from the external data source.", :items {:type "string"}, :type "array"}}}, :USqlAssemblyList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL assembly CLR item list.", :properties {:value {:description "the list of assemblies in the database", :items #:reference{:definitions "USqlAssemblyClr"}, :readOnly true, :type "array"}}}, :CatalogItemList {:description "A Data Lake Analytics catalog item list.", :properties {:count {:description "the count of items in the list.", :format "int32", :type "integer"}, :nextLink {:description "the link to the next page of results.", :type "string"}}}, :USqlDirectedColumn {:description "A Data Lake Analytics catalog U-SQL directed column item.", :properties {:descending {:description "the switch indicating if the index is descending or not.", :type "boolean"}, :name {:description "the name of the index in the table.", :type "string"}}}, :USqlTablePartitionList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL table partition item list.", :properties {:value {:description "the list of table partitions in the database, schema and table combination", :items #:reference{:definitions "USqlTablePartition"}, :readOnly true, :type "array"}}}, :ExternalTable {:description "A Data Lake Analytics catalog external table item.", :properties {:dataSource #:reference{:definitions "EntityId"}, :tableName {:description "the name of the table associated with this database and schema.", :type "string"}}}, :USqlAssemblyClr {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL assembly CLR item.", :properties {:assemblyClrName {:description "the name of the assembly.", :type "string", :x-ms-client-name "name"}, :clrName {:description "the name of the CLR.", :type "string"}, :databaseName {:description "the name of the database.", :type "string"}}}, :USqlTableColumn {:description "A Data Lake Analytics catalog U-SQL table column item.", :properties {:name {:description "the name of the column in the table.", :type "string"}, :type {:description "the object type of the specified column (such as System.String).", :type "string"}}}, :USqlExternalDataSourceList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL external datasource item list.", :properties {:value {:description "the list of external data sources in the database", :items #:reference{:definitions "USqlExternalDataSource"}, :readOnly true, :type "array"}}}, :USqlTable {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL table item.", :properties {:columnList {:description "the list of columns in this table", :items #:reference{:definitions "USqlTableColumn"}, :type "array"}, :databaseName {:description "the name of the database.", :type "string"}, :distributionInfo #:reference{:definitions "USqlDistributionInfo"}, :externalTable #:reference{:definitions "ExternalTable"}, :indexList {:description "the list of indices in this table", :items #:reference{:definitions "USqlIndex"}, :type "array"}, :partitionKeyList {:description "the list of partition keys in the table", :items {:type "string"}, :type "array"}, :schemaName {:description "the name of the schema associated with this table and database.", :type "string"}, :tableName {:description "the name of the table.", :type "string", :x-ms-client-name "name"}}}, :USqlTableValuedFunction {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL table valued function item.", :properties {:databaseName {:description "the name of the database.", :type "string"}, :definition {:description "the definition of the table valued function.", :type "string"}, :schemaName {:description "the name of the schema associated with this database.", :type "string"}, :tvfName {:description "the name of the table valued function.", :type "string", :x-ms-client-name "name"}}}, :USqlTypeList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL type item list.", :properties {:value {:description "the list of types in the database and schema combination", :items #:reference{:definitions "USqlType"}, :readOnly true, :type "array"}}}, :USqlTableStatisticsList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL table statistics item list.", :properties {:value {:description "the list of table statistics in the database, schema and table combination", :items #:reference{:definitions "USqlTableStatistics"}, :readOnly true, :type "array"}}}, :USqlProcedure {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL procedure item.", :properties {:databaseName {:description "the name of the database.", :type "string"}, :definition {:description "the defined query of the procedure.", :type "string"}, :procName {:description "the name of the procedure.", :type "string", :x-ms-client-name "name"}, :schemaName {:description "the name of the schema associated with this procedure and database.", :type "string"}}}, :USqlIndex {:description "A Data Lake Analytics catalog U-SQL table index item.", :properties {:distributionInfo #:reference{:definitions "USqlDistributionInfo"}, :partitionKeyList {:description "the list of partition keys in the index", :items {:type "string"}, :type "array"}, :columns {:description "the list of columns in the index", :items {:type "string"}, :type "array"}, :name {:description "the name of the index in the table.", :type "string"}, :isUnique {:description "the switch indicating if this index is a unique index.", :type "boolean"}, :isColumnstore {:description "the switch indicating if this index is a columnstore index.", :type "boolean"}, :indexKeys {:description "the list of directed columns in the index", :items #:reference{:definitions "USqlDirectedColumn"}, :type "array"}, :streamNames {:description "the list of full paths to the streams that contain this index in the DataLake account.", :items {:type "string"}, :type "array"}, :indexId {:description "the ID of this index within the table.", :format "int32", :type "integer"}, :partitionFunction {:description "partition function ID for the index.", :format "uuid", :type "string"}}}, :USqlViewList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL view item list.", :properties {:value {:description "the list of view in the database and schema combination", :items #:reference{:definitions "USqlView"}, :readOnly true, :type "array"}}}, :USqlAssemblyFileInfo {:description "A Data Lake Analytics catalog U-SQL assembly file information item.", :properties {:contentPath {:description "The content path to the assembly file.", :type "string"}, :originalPath {:description "The original path to the assembly file.", :type "string"}, :type {:description "the assembly file type.", :enum ["Assembly" "Resource"], :type "string", :x-ms-enum {:modelAsString false, :name "FileType"}}}}, :USqlTableValuedFunctionList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL table valued function item list.", :properties {:value {:description "the list of table valued functions in the database and schema combination", :items #:reference{:definitions "USqlTableValuedFunction"}, :readOnly true, :type "array"}}}, :USqlDatabaseList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL database item list.", :properties {:value {:description "the list of databases", :items #:reference{:definitions "USqlDatabase"}, :readOnly true, :type "array"}}}, :USqlSecret {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL secret item.", :properties {:creationTime {:description "the creation time of the credential object. This is the only information returned about a secret from a GET.", :format "date-time", :type "string"}, :databaseName {:description "the name of the database.", :type "string"}, :password {:description "the password for the secret to pass in", :type "string"}, :secretName {:description "the name of the secret.", :type "string", :x-ms-client-name "name"}, :uri {:description "the URI identifier for the secret in the format <hostname>:<port>", :type "string"}}}, :USqlTableTypeList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL table type item list.", :properties {:value {:description "the list of table types in the database and schema combination", :items #:reference{:definitions "USqlTableType"}, :readOnly true, :type "array"}}}, :DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters {:description "DataLakeAnalytics DataLakeAnalyticsAccount information.", :properties {:password {:description "the password for the secret to pass in", :type "string"}, :uri {:description "the URI identifier for the secret in the format <hostname>:<port>", :type "string"}}, :required ["password"]}, :USqlCredentialList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL credential item list.", :properties {:value {:description "the list of credentials in the database", :items #:reference{:definitions "USqlCredential"}, :readOnly true, :type "array"}}}, :USqlDatabase {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL database item.", :properties {:databaseName {:description "the name of the database.", :type "string", :x-ms-client-name "name"}}}, :USqlTableType {:allOf [#:reference{:definitions "USqlType"}], :description "A Data Lake Analytics catalog U-SQL table type item.", :properties {:columns {:description "the type field information associated with this table type.", :items #:reference{:definitions "TypeFieldInfo"}, :readOnly true, :type "array"}}}, :USqlType {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL type item.", :properties {:isUserDefined {:description "The switch indicating if this type is user defined.", :type "boolean"}, :principalId {:description "the principal ID for this type.", :format "int32", :type "integer"}, :typeName {:description "the name of type for this type.", :type "string", :x-ms-client-name "name"}, :isAssemblyType {:description "The switch indicating if this type is an assembly type.", :type "boolean"}, :isNullable {:description "The switch indicating if this type is nullable.", :type "boolean"}, :isTableType {:description "The switch indicating if this type is a table type.", :type "boolean"}, :schemaId {:description "the schema ID for this type.", :format "int32", :type "integer"}, :schemaName {:description "the name of the schema associated with this table and database.", :type "string"}, :isComplexType {:description "The switch indicating if this type is a complex type.", :type "boolean"}, :typeFamily {:description "the type family for this type.", :type "string"}, :cSharpName {:description "the C# name for this type.", :type "string"}, :userTypeId {:description "the user type ID for this type.", :format "int32", :type "integer"}, :systemTypeId {:description "the system type ID for this type.", :format "int32", :type "integer"}, :databaseName {:description "the name of the database.", :type "string"}, :fullCSharpName {:description "the fully qualified C# name for this type.", :type "string"}}}, :DdlName {:description "A Data Lake Analytics DDL name item.", :properties {:firstPart {:description "the name of the table associated with this database and schema.", :type "string"}, :secondPart {:description "the name of the table associated with this database and schema.", :type "string"}, :server {:description "the name of the table associated with this database and schema.", :type "string"}, :thirdPart {:description "the name of the table associated with this database and schema.", :type "string"}}}, :EntityId {:description "A Data Lake Analytics catalog entity identifier object.", :properties {:name #:reference{:definitions "DdlName"}, :version {:description "the version of the external data source.", :format "uuid", :type "string"}}}, :TypeFieldInfo {:description "A Data Lake Analytics catalog type field information item.", :properties {:name {:description "the name of the field associated with this type.", :type "string"}, :type {:description "the type of the field.", :type "string"}}}, :USqlView {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL view item.", :properties {:databaseName {:description "the name of the database.", :type "string"}, :definition {:description "the defined query of the view.", :type "string"}, :schemaName {:description "the name of the schema associated with this view and database.", :type "string"}, :viewName {:description "the name of the view.", :type "string", :x-ms-client-name "name"}}}, :USqlSchemaList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL schema item list.", :properties {:value {:description "the list of schemas in the database", :items #:reference{:definitions "USqlSchema"}, :readOnly true, :type "array"}}}, :USqlTablePartition {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL table partition item.", :properties {:createDate {:description "the creation time of the partition", :format "date-time", :type "string"}, :databaseName {:description "the name of the database.", :type "string"}, :indexId {:description "the index ID for this partition.", :format "int32", :type "integer"}, :label {:description "the list of labels associated with this partition.", :items {:type "string"}, :type "array"}, :parentName #:reference{:definitions "DdlName"}, :partitionName {:description "the name of the table partition.", :type "string", :x-ms-client-name "name"}, :schemaName {:description "the name of the schema associated with this table partition and database.", :type "string"}}}, :USqlSchema {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL schema item.", :properties {:databaseName {:description "the name of the database.", :type "string"}, :schemaName {:description "the name of the schema.", :type "string", :x-ms-client-name "name"}}}, :USqlProcedureList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL procedure item list.", :properties {:value {:description "the list of procedure in the database and schema combination", :items #:reference{:definitions "USqlProcedure"}, :readOnly true, :type "array"}}}, :USqlAssembly {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL Assembly.", :properties {:assemblyName {:description "the name of the assembly.", :type "string", :x-ms-client-name "name"}, :clrName {:description "the name of the CLR.", :type "string"}, :databaseName {:description "the name of the database.", :type "string"}, :dependencies {:description "the list of dependencies associated with the assembly", :items #:reference{:definitions "USqlAssemblyDependencyInfo"}, :type "array"}, :files {:description "the list of files associated with the assembly", :items #:reference{:definitions "USqlAssemblyFileInfo"}, :type "array"}, :isUserDefined {:description "the switch indicating if this assembly is user defined or not.", :type "boolean"}, :isVisible {:description "the switch indicating if this assembly is visible or not.", :type "boolean"}}}, :USqlTableStatistics {:allOf [#:reference{:definitions "CatalogItem"}], :description "A Data Lake Analytics catalog U-SQL table statistics item.", :properties {:isUserCreated {:description "the switch indicating if these statistics are user created.", :type "boolean"}, :isAutoCreated {:description "the switch indicating if these statistics are automatically created.", :type "boolean"}, :statDataPath {:description "the path to the statistics data.", :type "string"}, :filterDefinition {:description "the filter definition for the statistics.", :type "string"}, :tableName {:description "the name of the table.", :type "string"}, :createTime {:description "the creation time of the statistics.", :format "date-time", :type "string"}, :schemaName {:description "the name of the schema associated with this table and database.", :type "string"}, :updateTime {:description "the last time the statistics were updated.", :format "date-time", :type "string"}, :colNames {:description "the list of column names associated with these statistics.", :items {:type "string"}, :type "array"}, :hasFilter {:description "the switch indicating if these statistics have a filter.", :type "boolean"}, :databaseName {:description "the name of the database.", :type "string"}, :statisticsName {:description "the name of the table statistics.", :type "string", :x-ms-client-name "name"}, :userStatName {:description "the name of the user statistics.", :type "string"}}}, :USqlTableList {:allOf [#:reference{:definitions "CatalogItemList"}], :description "A Data Lake Analytics catalog U-SQL table item list.", :properties {:value {:description "the list of tables in the database and schema combination", :items #:reference{:definitions "USqlTable"}, :readOnly true, :type "array"}}}}}