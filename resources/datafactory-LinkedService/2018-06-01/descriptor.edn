{:scheme "https", :host "azure.local", :info {:title "DataFactoryManagementClient", :version "2018-06-01"}, :ops {}, :parameters nil, :definitions {:AzureSqlMILinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure SQL Managed Instance linked service.", :properties {:typeProperties #:reference{:definitions "AzureSqlMILinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureSqlMI"}, :HdfsLinkedServiceTypeProperties {:description "HDFS linked service properties.", :properties {:authenticationType {:description "Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :url {:description "The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "User name for Windows authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :AzureBatchLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Batch linked service.", :properties {:typeProperties #:reference{:definitions "AzureBatchLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureBatch"}, :SapOpenHubLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "SAP Business Warehouse Open Hub Destination Linked Service.", :properties {:typeProperties #:reference{:definitions "SapOpenHubLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapOpenHub"}, :MongoDbV2LinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for MongoDB data source.", :properties {:typeProperties #:reference{:definitions "MongoDbV2LinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "MongoDbV2"}, :SapBWLinkedServiceTypeProperties {:description "Properties specific to this linked service type.", :properties {:clientId {:description "Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "Host name of the SAP BW instance. Type: string (or Expression with resultType string).", :type "object"}, :systemNumber {:description "System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "Username to access the SAP BW server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server" "systemNumber" "clientId"]}, :HDInsightOnDemandLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "HDInsight ondemand linked service.", :properties {:typeProperties #:reference{:definitions "HDInsightOnDemandLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "HDInsightOnDemand"}, :CosmosDbMongoDbApiLinkedServiceTypeProperties {:description "CosmosDB (MongoDB API) linked service properties.", :properties {:connectionString {:description "The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :database {:description "The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString" "database"]}, :SquareLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Square Service linked service.", :properties {:typeProperties #:reference{:definitions "SquareLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Square"}, :AzureBatchLinkedServiceTypeProperties {:description "Azure Batch linked service properties.", :properties {:accessKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :accountName {:description "The Azure Batch account name. Type: string (or Expression with resultType string).", :type "object"}, :batchUri {:description "The Azure Batch URI. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :linkedServiceName {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :poolName {:description "The Azure Batch pool name. Type: string (or Expression with resultType string).", :type "object"}}, :required ["accountName" "batchUri" "poolName" "linkedServiceName"]}, :VerticaLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Vertica linked service.", :properties {:typeProperties #:reference{:definitions "VerticaLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Vertica"}, :ShopifyLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Shopify Service linked service.", :properties {:typeProperties #:reference{:definitions "ShopifyLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Shopify"}, :WebLinkedServiceTypeProperties {:description "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.", :discriminator "authenticationType", :properties {:authenticationType {:description "Type of authentication used to connect to the web table source.", :enum ["Basic" "Anonymous" "ClientCertificate"], :type "string", :x-ms-enum {:modelAsString true, :name "WebAuthenticationType"}}, :url {:description "The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string).", :type "object"}}, :required ["authenticationType" "url"], :type "object"}, :GoogleBigQueryLinkedServiceTypeProperties {:description "Google BigQuery service linked service properties.", :properties {:clientId {:description "The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :email {:description "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.", :type "object"}, :requestGoogleDriveScope {:description "Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.", :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :project {:description "The default BigQuery project to query against.", :type "object"}, :authenticationType {:description "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.", :enum ["ServiceAuthentication" "UserAuthentication"], :type "string", :x-ms-enum {:modelAsString true, :name "GoogleBigQueryAuthenticationType"}}, :keyFilePath {:description "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.", :type "object"}, :refreshToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :additionalProjects {:description "A comma-separated list of public BigQuery projects to access.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}}, :required ["project" "authenticationType"]}, :ResponsysLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Responsys linked service.", :properties {:typeProperties #:reference{:definitions "ResponsysLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Responsys"}, :DrillLinkedServiceTypeProperties {:description "Drill server linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :AzureBlobFSLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Data Lake Storage Gen2 linked service.", :properties {:typeProperties #:reference{:definitions "AzureBlobFSLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureBlobFS"}, :AmazonMWSLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Amazon Marketplace Web Service linked service.", :properties {:typeProperties #:reference{:definitions "AmazonMWSLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AmazonMWS"}, :AzureFunctionLinkedServiceTypeProperties {:description "Azure Function linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :functionAppUrl {:description "The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net.", :type "object"}, :functionKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}}, :required ["functionAppUrl"]}, :DynamicsAXLinkedServiceTypeProperties {:description "Dynamics AX linked service properties.", :properties {:aadResourceId {:description "Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "Specify the application's client ID. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).", :type "object"}, :url {:description "The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.", :type "object"}}, :required ["url" "servicePrincipalId" "servicePrincipalKey" "tenant" "aadResourceId"]}, :ConcurLinkedServiceTypeProperties {:description "Concur Service linked service properties.", :properties {:clientId {:description "Application client_id supplied by Concur App Management.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}, :username {:description "The user name that you use to access Concur Service.", :type "object"}}, :required ["clientId" "username"]}, :CosmosDbLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Microsoft Azure Cosmos Database (CosmosDB) linked service.", :properties {:typeProperties #:reference{:definitions "CosmosDbLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "CosmosDb"}, :AzureDataLakeStoreLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Data Lake Store linked service.", :properties {:typeProperties #:reference{:definitions "AzureDataLakeStoreLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureDataLakeStore"}, :SapCloudForCustomerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for SAP Cloud for Customer.", :properties {:typeProperties #:reference{:definitions "SapCloudForCustomerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapCloudForCustomer"}, :XeroLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Xero Service linked service.", :properties {:typeProperties #:reference{:definitions "XeroLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Xero"}, :AzureDataExplorerLinkedServiceTypeProperties {:description "Azure Data Explorer (Kusto) linked service properties.", :properties {:database {:description "Database name for connection. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of Azure Data Explorer (the engine's endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)", :type "object"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["endpoint" "servicePrincipalId" "servicePrincipalKey" "database" "tenant"]}, :CassandraLinkedServiceTypeProperties {:description "Cassandra linked service properties.", :properties {:authenticationType {:description "AuthenticationType to be used for connection. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "Host name for connection. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :port {:description "The port for the connection. Type: integer (or Expression with resultType integer).", :type "object"}, :username {:description "Username for authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["host"]}, :HttpLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for an HTTP source.", :properties {:typeProperties #:reference{:definitions "HttpLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "HttpServer"}, :AzureSqlDWLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure SQL Data Warehouse linked service.", :properties {:typeProperties #:reference{:definitions "AzureSqlDWLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureSqlDW"}, :AzureStorageLinkedServiceTypeProperties {:description "Azure Storage linked service properties.", :properties {:accountKey {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :connectionString {:description "The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "string"}, :sasToken {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :sasUri {:description "SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}}}, :ResponsysLinkedServiceTypeProperties {:description "Responsys linked service properties.", :properties {:clientId {:description "The client ID associated with the Responsys application. Type: string (or Expression with resultType string).", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of the Responsys server.", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}}, :required ["endpoint" "clientId"]}, :OdbcLinkedServiceTypeProperties {:description "ODBC linked service properties.", :properties {:authenticationType {:description "Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).", :type "object"}, :connectionString {:description "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :credential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "User name for Basic authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :HubspotLinkedServiceTypeProperties {:description "Hubspot Service linked service properties.", :properties {:accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :clientId {:description "The client ID associated with your Hubspot application.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :refreshToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["clientId"]}, :PaypalLinkedServiceTypeProperties {:description "Paypal Service linked service properties.", :properties {:clientId {:description "The client ID associated with your PayPal application.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["host" "clientId"]}, :AzureDatabricksLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Databricks linked service.", :properties {:typeProperties #:reference{:definitions "AzureDatabricksLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureDatabricks"}, :CommonDataServiceForAppsLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Common Data Service for Apps linked service.", :properties {:typeProperties #:reference{:definitions "CommonDataServiceForAppsLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "CommonDataServiceForApps"}, :PostgreSqlLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for PostgreSQL data source.", :properties {:typeProperties #:reference{:definitions "PostgreSqlLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "PostgreSql"}, :NetezzaLinkedServiceTypeProperties {:description "Netezza linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :VerticaLinkedServiceTypeProperties {:description "Vertica linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :AmazonS3LinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Amazon S3.", :properties {:typeProperties #:reference{:definitions "AmazonS3LinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AmazonS3"}, :SapEccLinkedServiceTypeProperties {:description "SAP ECC linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).", :type "string"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :url {:description "The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).", :type "string"}, :username {:description "The username for Basic authentication. Type: string (or Expression with resultType string).", :type "string"}}, :required ["url"]}, :DrillLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Drill server linked service.", :properties {:typeProperties #:reference{:definitions "DrillLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Drill"}, :AzureMySqlLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure MySQL database linked service.", :properties {:typeProperties #:reference{:definitions "AzureMySqlLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureMySql"}, :MarketoLinkedServiceTypeProperties {:description "Marketo server linked service properties.", :properties {:clientId {:description "The client Id of your Marketo service.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["endpoint" "clientId"]}, :AzureMLLinkedServiceTypeProperties {:description "Azure ML Studio Web Service linked service properties.", :properties {:apiKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :mlEndpoint {:description "The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}, :updateResourceEndpoint {:description "The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).", :type "object"}}, :required ["mlEndpoint" "apiKey"]}, :WebLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Web linked service.", :properties {:typeProperties #:reference{:definitions "WebLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Web"}, :AzureMySqlLinkedServiceTypeProperties {:description "Azure MySQL database linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}, :required ["connectionString"]}, :SybaseLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Sybase data source.", :properties {:typeProperties #:reference{:definitions "SybaseLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Sybase"}, :AzureFileStorageLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure File Storage linked service.", :properties {:typeProperties #:reference{:definitions "AzureFileStorageLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureFileStorage"}, :EloquaLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Eloqua server linked service.", :properties {:typeProperties #:reference{:definitions "EloquaLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Eloqua"}, :ScriptAction {:description "Custom script action to run on HDI ondemand cluster once it's up.", :properties {:name {:description "The user provided name of the script action.", :type "string"}, :parameters {:description "The parameters for the script action.", :type "string"}, :roles {:description "The node types on which the script action should be executed.", :enum ["Headnode" "Workernode" "Zookeeper"], :type "object", :x-ms-enum {:modelAsString true, :name "HdiNodeTypes"}}, :uri {:description "The URI for the script action.", :type "string"}}, :required ["name" "uri" "roles"], :type "object"}, :MongoDbV2LinkedServiceTypeProperties {:description "MongoDB linked service properties.", :properties {:connectionString {:description "The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :database {:description "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString" "database"]}, :SparkLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Spark Server linked service.", :properties {:typeProperties #:reference{:definitions "SparkLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Spark"}, :ImpalaLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Impala server linked service.", :properties {:typeProperties #:reference{:definitions "ImpalaLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Impala"}, :PhoenixLinkedServiceTypeProperties {:description "Phoenix server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name used to connect to the Phoenix server.", :type "object"}, :port {:description "The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.", :type "object"}, :host {:description "The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :httpPath {:description "The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.", :type "object"}, :authenticationType {:description "The authentication mechanism used to connect to the Phoenix server.", :enum ["Anonymous" "UsernameAndPassword" "WindowsAzureHDInsightService"], :type "string", :x-ms-enum {:modelAsString true, :name "PhoenixAuthenticationType"}}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}}, :required ["host" "authenticationType"]}, :JiraLinkedServiceTypeProperties {:description "Jira Service linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The IP address or host name of the Jira service. (e.g. jira.example.com)", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :port {:description "The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}, :username {:description "The user name that you use to access Jira Service.", :type "object"}}, :required ["host" "username"]}, :PrestoLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Presto server linked service.", :properties {:typeProperties #:reference{:definitions "PrestoLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Presto"}, :AmazonRedshiftLinkedServiceTypeProperties {:description "Amazon Redshift linked service properties.", :properties {:database {:description "The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :port {:description "The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).", :type "object"}, :server {:description "The name of the Amazon Redshift server. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "The username of the Amazon Redshift source. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server" "database"]}, :RestServiceLinkedServiceTypeProperties {:description "Rest Service linked service properties.", :properties {:tenant {:description "The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :aadResourceId {:description "The resource you are requesting authorization to use.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalId {:description "The application's client ID used in AadServicePrincipal authentication type.", :type "object"}, :enableServerCertificateValidation {:description "Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :authenticationType {:description "Type of authentication used to connect to the REST service.", :enum ["Anonymous" "Basic" "AadServicePrincipal" "ManagedServiceIdentity"], :type "string", :x-ms-enum {:modelAsString true, :name "RestServiceAuthenticationType"}}, :url {:description "The base URL of the REST service.", :type "object"}, :userName {:description "The user name used in Basic authentication type.", :type "object"}}, :required ["url" "authenticationType"]}, :MarketoLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Marketo server linked service.", :properties {:typeProperties #:reference{:definitions "MarketoLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Marketo"}, :HDInsightOnDemandLinkedServiceTypeProperties {:description "HDInsight ondemand linked service properties.", :properties {:hBaseConfiguration {:description "Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.", :type "object"}, :tenant {:description "The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}, :coreConfiguration {:description "Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :hdfsConfiguration {:description "Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.", :type "object"}, :yarnConfiguration {:description "Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.", :type "object"}, :sparkVersion {:description "The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).", :type "object"}, :virtualNetworkId {:description "The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).", :type "object"}, :hcatalogLinkedServiceName {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :timeToLive {:description "The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).", :type "object"}, :clusterSshUserName {:description "The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalId {:description "The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).", :type "object"}, :headNodeSize {:description "Specifies the size of the head node for the HDInsight cluster.", :type "object"}, :additionalLinkedServiceNames {:description "Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.", :items {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :type "array"}, :clusterResourceGroup {:description "The resource group where the cluster belongs. Type: string (or Expression with resultType string).", :type "object"}, :clusterPassword {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :clusterSshPassword {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :clusterNamePrefix {:description "The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).", :type "object"}, :scriptActions {:description "Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.", :items #:reference{:definitions "ScriptAction"}, :type "array"}, :dataNodeSize {:description "Specifies the size of the data node for the HDInsight cluster.", :type "object"}, :stormConfiguration {:description "Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.", :type "object"}, :oozieConfiguration {:description "Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.", :type "object"}, :clusterUserName {:description "The username to access the cluster. Type: string (or Expression with resultType string).", :type "object"}, :subnetName {:description "The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).", :type "object"}, :clusterSize {:description "Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).", :type "object"}, :version {:description "Version of the HDInsight cluster.  Type: string (or Expression with resultType string).", :type "object"}, :linkedServiceName {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :hostSubscriptionId {:description "The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).", :type "object"}, :mapReduceConfiguration {:description "Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.", :type "object"}, :clusterType {:description "The cluster type. Type: string (or Expression with resultType string).", :type "object"}, :hiveConfiguration {:description "Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.", :type "object"}, :zookeeperNodeSize {:description "Specifies the size of the Zoo Keeper node for the HDInsight cluster.", :type "object"}}, :required ["clusterSize" "timeToLive" "version" "linkedServiceName" "hostSubscriptionId" "tenant" "clusterResourceGroup"]}, :AzureSearchLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Windows Azure Search Service.", :properties {:typeProperties #:reference{:definitions "AzureSearchLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureSearch"}, :CosmosDbMongoDbApiLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for CosmosDB (MongoDB API) data source.", :properties {:typeProperties #:reference{:definitions "CosmosDbMongoDbApiLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "CosmosDbMongoDbApi"}, :OracleServiceCloudLinkedServiceTypeProperties {:description "Oracle Service Cloud linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The URL of the Oracle Service Cloud instance.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :username {:description "The user name that you use to access Oracle Service Cloud server.", :type "object"}}, :required ["host" "username" "password"]}, :AzureBlobStorageLinkedServiceTypeProperties {:description "Azure Blob Storage linked service properties.", :properties {:tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "string"}, :accountKey {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :sasUri {:description "SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :serviceEndpoint {:description "Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.", :type "string"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).", :type "object"}, :sasToken {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :connectionString {:description "The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}}}, :AzureDataLakeStoreLinkedServiceTypeProperties {:description "Azure Data Lake Store linked service properties.", :properties {:accountName {:description "Data Lake Store account name. Type: string (or Expression with resultType string).", :type "object"}, :dataLakeStoreUri {:description "Data Lake Store service URI. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :resourceGroupName {:description "Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :subscriptionId {:description "Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).", :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["dataLakeStoreUri"]}, :TeradataLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Teradata data source.", :properties {:typeProperties #:reference{:definitions "TeradataLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Teradata"}, :InformixLinkedServiceTypeProperties {:description "Informix linked service properties.", :properties {:authenticationType {:description "Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).", :type "object"}, :connectionString {:description "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :credential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "User name for Basic authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :SapCloudForCustomerLinkedServiceTypeProperties {:description "SAP Cloud for Customer linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :url {:description "The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "The username for Basic authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :FileServerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "File system linked service.", :properties {:typeProperties #:reference{:definitions "FileServerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "FileServer"}, :AzureSqlDWLinkedServiceTypeProperties {:description "Azure SQL Data Warehouse linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :AzureBlobFSLinkedServiceTypeProperties {:description "Azure Data Lake Storage Gen2 linked service properties.", :properties {:accountKey {:description "Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}, :url {:description "Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :AzureMariaDBLinkedServiceTypeProperties {:description "Azure Database for MariaDB linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :GoogleCloudStorageLinkedServiceTypeProperties {:description "Google Cloud Storage linked service properties.", :properties {:accessKeyId {:description "The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :secretAccessKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :serviceUrl {:description "This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).", :type "object"}}}, :XeroLinkedServiceTypeProperties {:description "Xero Service linked service properties.", :properties {:consumerKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The endpoint of the Xero server. (i.e. api.xero.com)", :type "object"}, :privateKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["host"]}, :CosmosDbLinkedServiceTypeProperties {:description "CosmosDB linked service properties.", :properties {:accountEndpoint {:description "The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)", :type "object"}, :accountKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :database {:description "The name of the database. Type: string (or Expression with resultType string)", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}}}, :GoogleCloudStorageLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Google Cloud Storage.", :properties {:typeProperties #:reference{:definitions "GoogleCloudStorageLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "GoogleCloudStorage"}, :QuickBooksLinkedServiceTypeProperties {:description "QuickBooks server linked service properties.", :properties {:accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :accessTokenSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :companyId {:description "The company ID of the QuickBooks company to authorize.", :type "object"}, :consumerKey {:description "The consumer key for OAuth 1.0 authentication.", :type "object"}, :consumerSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}}, :required ["endpoint" "companyId" "consumerKey" "consumerSecret" "accessToken" "accessTokenSecret"]}, :MongoDbLinkedServiceTypeProperties {:description "MongoDB linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "Username for authentication. Type: string (or Expression with resultType string).", :type "object"}, :port {:description "The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :authSource {:description "Database to verify the username and password. Type: string (or Expression with resultType string).", :type "object"}, :authenticationType {:description "The authentication type to be used to connect to the MongoDB database.", :enum ["Basic" "Anonymous"], :type "string", :x-ms-enum {:modelAsString true, :name "MongoDbAuthenticationType"}}, :databaseName {:description "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).", :type "object"}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).", :type "object"}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).", :type "object"}}, :required ["server" "databaseName"]}, :SqlServerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "SQL Server linked service.", :properties {:typeProperties #:reference{:definitions "SqlServerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SqlServer"}, :FileServerLinkedServiceTypeProperties {:description "File system linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "Host name of the server. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userId {:description "User ID to logon the server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["host"]}, :AmazonRedshiftLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Amazon Redshift.", :properties {:typeProperties #:reference{:definitions "AmazonRedshiftLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AmazonRedshift"}, :MicrosoftAccessLinkedServiceTypeProperties {:description "Microsoft Access linked service properties.", :properties {:authenticationType {:description "Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).", :type "object"}, :connectionString {:description "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :credential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "User name for Basic authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :OracleLinkedServiceTypeProperties {:description "Oracle database linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}, :required ["connectionString"]}, :SalesforceServiceCloudLinkedServiceTypeProperties {:description "Salesforce Service Cloud linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :environmentUrl {:description "The URL of Salesforce Service Cloud instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).", :type "object"}, :extendedProperties {:description "Extended properties appended to the connection string. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :securityToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).", :type "object"}}}, :HdfsLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Hadoop Distributed File System (HDFS) linked service.", :properties {:typeProperties #:reference{:definitions "HdfsLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Hdfs"}, :SapTableLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "SAP Table Linked Service.", :properties {:typeProperties #:reference{:definitions "SapTableLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapTable"}, :GoogleAdWordsLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Google AdWords service linked service.", :properties {:typeProperties #:reference{:definitions "GoogleAdWordsLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "GoogleAdWords"}, :GoogleAdWordsLinkedServiceTypeProperties {:description "Google AdWords service linked service properties.", :properties {:clientId {:description "The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :email {:description "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.", :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :developerToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :authenticationType {:description "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.", :enum ["ServiceAuthentication" "UserAuthentication"], :type "string", :x-ms-enum {:modelAsString true, :name "GoogleAdWordsAuthenticationType"}}, :keyFilePath {:description "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.", :type "object"}, :clientCustomerID {:description "The Client customer ID of the AdWords account that you want to fetch report data for.", :type "object"}, :refreshToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}}, :required ["clientCustomerID" "developerToken" "authenticationType"]}, :TeradataLinkedServiceTypeProperties {:description "Teradata linked service properties.", :properties {:authenticationType {:description "AuthenticationType to be used for connection.", :enum ["Basic" "Windows"], :type "string", :x-ms-enum {:modelAsString true, :name "TeradataAuthenticationType"}}, :connectionString {:description "Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "Server name for connection. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "Username for authentication. Type: string (or Expression with resultType string).", :type "object"}}}, :AzureBlobStorageLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "The azure blob storage linked service.", :properties {:typeProperties #:reference{:definitions "AzureBlobStorageLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureBlobStorage"}, :AzureStorageLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "The storage account linked service.", :properties {:typeProperties #:reference{:definitions "AzureStorageLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureStorage"}, :AzureMLServiceLinkedServiceTypeProperties {:description "Azure ML Service linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :mlWorkspaceName {:description "Azure ML Service workspace name. Type: string (or Expression with resultType string).", :type "object"}, :resourceGroupName {:description "Azure ML Service workspace resource group name. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :subscriptionId {:description "Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string).", :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["subscriptionId" "resourceGroupName" "mlWorkspaceName"]}, :MicrosoftAccessLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Microsoft Access linked service.", :properties {:typeProperties #:reference{:definitions "MicrosoftAccessLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "MicrosoftAccess"}, :AzureDataLakeAnalyticsLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Data Lake Analytics linked service.", :properties {:typeProperties #:reference{:definitions "AzureDataLakeAnalyticsLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureDataLakeAnalytics"}, :AzureSearchLinkedServiceTypeProperties {:description "Windows Azure Search Service linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :key {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :url {:description "URL for Azure Search service. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :AzureMLServiceLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure ML Service linked service.", :properties {:typeProperties #:reference{:definitions "AzureMLServiceLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureMLService"}, :AzureSqlMILinkedServiceTypeProperties {:description "Azure SQL Managed Instance linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :DynamicsCrmLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Dynamics CRM linked service.", :properties {:typeProperties #:reference{:definitions "DynamicsCrmLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "DynamicsCrm"}, :SapTableLinkedServiceTypeProperties {:description "Properties specific to this linked service type.", :properties {:clientId {:description "Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :messageServer {:description "The hostname of the SAP Message Server. Type: string (or Expression with resultType string).", :type "object"}, :systemNumber {:description "System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).", :type "object"}, :server {:description "Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :messageServerService {:description "The service name or port number of the Message Server. Type: string (or Expression with resultType string).", :type "object"}, :sncPartnerName {:description "Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :sncMode {:description "SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).", :type "object"}, :sncLibraryPath {:description "External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :language {:description "Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).", :type "object"}, :sncQop {:description "SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).", :type "object"}, :systemId {:description "SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :sncMyName {:description "Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).", :type "object"}, :logonGroup {:description "The Logon Group for the SAP System. Type: string (or Expression with resultType string).", :type "object"}}}, :ODataLinkedServiceTypeProperties {:description "OData linked service properties.", :properties {:servicePrincipalEmbeddedCertPassword {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :aadResourceId {:description "Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).", :type "object"}, :aadServicePrincipalCredentialType {:description "Specify the credential type (key or cert) is used for service principal.", :enum ["ServicePrincipalKey" "ServicePrincipalCert"], :type "string", :x-ms-enum {:modelAsString true, :name "ODataAadServicePrincipalCredentialType"}}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalId {:description "Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).", :type "object"}, :authenticationType {:description "Type of authentication used to connect to the OData service.", :enum ["Basic" "Anonymous" "Windows" "AadServicePrincipal" "ManagedServiceIdentity"], :type "string", :x-ms-enum {:modelAsString true, :name "ODataAuthenticationType"}}, :url {:description "The URL of the OData service endpoint. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalEmbeddedCert {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "User name of the OData service. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :AzureMariaDBLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Database for MariaDB linked service.", :properties {:typeProperties #:reference{:definitions "AzureMariaDBLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureMariaDB"}, :HiveLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Hive Server linked service.", :properties {:typeProperties #:reference{:definitions "HiveLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Hive"}, :AzureKeyVaultLinkedServiceTypeProperties {:description "Azure Key Vault linked service properties.", :properties {:baseUrl {:description "The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).", :type "object"}}, :required ["baseUrl"]}, :WebBasicAuthentication {:allOf [#:reference{:definitions "WebLinkedServiceTypeProperties"}], :description "A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.", :properties {:password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "User name for Basic authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["username" "password"], :x-ms-discriminator-value "Basic"}, :HDInsightLinkedServiceTypeProperties {:description "HDInsight linked service properties.", :properties {:clusterUri {:description "HDInsight cluster URI. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :fileSystem {:description "Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).", :type "object"}, :hcatalogLinkedServiceName {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :isEspEnabled {:description "Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.", :type "object"}, :linkedServiceName {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "HDInsight cluster user name. Type: string (or Expression with resultType string).", :type "object"}}, :required ["clusterUri"]}, :SapEccLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for SAP ERP Central Component(SAP ECC).", :properties {:typeProperties #:reference{:definitions "SapEccLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapEcc"}, :CouchbaseLinkedServiceTypeProperties {:description "Couchbase server linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :credString {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}}}, :SybaseLinkedServiceTypeProperties {:description "Sybase linked service properties.", :properties {:authenticationType {:description "AuthenticationType to be used for connection.", :enum ["Basic" "Windows"], :type "string", :x-ms-enum {:modelAsString true, :name "SybaseAuthenticationType"}}, :database {:description "Database name for connection. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :schema {:description "Schema name for connection. Type: string (or Expression with resultType string).", :type "object"}, :server {:description "Server name for connection. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "Username for authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server" "database"]}, :HttpLinkedServiceTypeProperties {:description "Properties specific to this linked service type.", :properties {:authenticationType {:description "The authentication type to be used to connect to the HTTP server.", :enum ["Basic" "Anonymous" "Digest" "Windows" "ClientCertificate"], :type "string", :x-ms-enum {:modelAsString true, :name "HttpAuthenticationType"}}, :certThumbprint {:description "Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).", :type "object"}, :embeddedCertData {:description "Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).", :type "object"}, :enableServerCertificateValidation {:description "If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :url {:description "The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["url"]}, :GoogleBigQueryLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Google BigQuery service linked service.", :properties {:typeProperties #:reference{:definitions "GoogleBigQueryLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "GoogleBigQuery"}, :CustomDataSourceLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Custom linked service.", :properties {:typeProperties {:description "Custom linked service properties.", :type "object", :x-ms-client-flatten true}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "CustomDataSource"}, :ServiceNowLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "ServiceNow server linked service.", :properties {:typeProperties #:reference{:definitions "ServiceNowLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "ServiceNow"}, :FtpServerLinkedServiceTypeProperties {:description "Properties specific to this linked service type.", :properties {:authenticationType {:description "The authentication type to be used to connect to the FTP server.", :enum ["Basic" "Anonymous"], :type "string", :x-ms-enum {:modelAsString true, :name "FtpAuthenticationType"}}, :enableServerCertificateValidation {:description "If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :enableSsl {:description "If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "Host name of the FTP server. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :port {:description "The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :userName {:description "Username to logon the FTP server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["host"]}, :GreenplumLinkedServiceTypeProperties {:description "Greenplum Database linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :AmazonS3LinkedServiceTypeProperties {:description "Amazon S3 linked service properties.", :properties {:accessKeyId {:description "The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :secretAccessKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :serviceUrl {:description "This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).", :type "object"}}}, :MySqlLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for MySQL data source.", :properties {:typeProperties #:reference{:definitions "MySqlLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "MySql"}, :MySqlLinkedServiceTypeProperties {:description "MySQL linked service properties.", :properties {:connectionString {:description "The connection string.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}, :required ["connectionString"]}, :PhoenixLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Phoenix server linked service.", :properties {:typeProperties #:reference{:definitions "PhoenixLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Phoenix"}, :SapOpenHubLinkedServiceTypeProperties {:description "Properties specific to SAP Business Warehouse Open Hub Destination linked service type.", :properties {:clientId {:description "Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :language {:description "Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).", :type "object"}, :systemNumber {:description "System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server" "systemNumber" "clientId"]}, :MongoDbLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for MongoDb data source.", :properties {:typeProperties #:reference{:definitions "MongoDbLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "MongoDb"}, :Db2LinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for DB2 data source.", :properties {:typeProperties #:reference{:definitions "Db2LinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Db2"}, :Office365LinkedServiceTypeProperties {:description "Office365 linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :office365TenantId {:description "Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "Specify the application's client ID. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :servicePrincipalTenantId {:description "Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).", :type "object"}}, :required ["office365TenantId" "servicePrincipalTenantId" "servicePrincipalId" "servicePrincipalKey"]}, :NetezzaLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Netezza linked service.", :properties {:typeProperties #:reference{:definitions "NetezzaLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Netezza"}, :PaypalLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Paypal Service linked service.", :properties {:typeProperties #:reference{:definitions "PaypalLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Paypal"}, :HBaseLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "HBase server linked service.", :properties {:typeProperties #:reference{:definitions "HBaseLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "HBase"}, :AzureDataExplorerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Data Explorer (Kusto) linked service.", :properties {:typeProperties #:reference{:definitions "AzureDataExplorerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureDataExplorer"}, :JiraLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Jira Service linked service.", :properties {:typeProperties #:reference{:definitions "JiraLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Jira"}, :ODataLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Open Data Protocol (OData) linked service.", :properties {:typeProperties #:reference{:definitions "ODataLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "OData"}, :HDInsightLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "HDInsight linked service.", :properties {:typeProperties #:reference{:definitions "HDInsightLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "HDInsight"}, :AzureTableStorageLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "The azure table storage linked service.", :properties {:typeProperties #:reference{:definitions "AzureStorageLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureTableStorage"}, :SparkLinkedServiceTypeProperties {:description "Spark Server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name that you use to access Spark Server.", :type "object"}, :port {:description "The TCP port that the Spark server uses to listen for client connections.", :type "object"}, :host {:description "IP address or host name of the Spark server", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :serverType {:description "The type of Spark server.", :enum ["SharkServer" "SharkServer2" "SparkThriftServer"], :type "string", :x-ms-enum {:modelAsString true, :name "SparkServerType"}}, :httpPath {:description "The partial URL corresponding to the Spark server.", :type "object"}, :authenticationType {:description "The authentication method used to access the Spark server.", :enum ["Anonymous" "Username" "UsernameAndPassword" "WindowsAzureHDInsightService"], :type "string", :x-ms-enum {:modelAsString true, :name "SparkAuthenticationType"}}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :thriftTransportProtocol {:description "The transport protocol to use in the Thrift layer.", :enum ["Binary" "SASL" "HTTP "], :type "string", :x-ms-enum {:modelAsString true, :name "SparkThriftTransportProtocol"}}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}}, :required ["host" "port" "authenticationType"]}, :ConcurLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Concur Service linked service.", :properties {:typeProperties #:reference{:definitions "ConcurLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Concur"}, :CassandraLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Cassandra data source.", :properties {:typeProperties #:reference{:definitions "CassandraLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Cassandra"}, :CouchbaseLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Couchbase server linked service.", :properties {:typeProperties #:reference{:definitions "CouchbaseLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Couchbase"}, :CommonDataServiceForAppsLinkedServiceTypeProperties {:description "Common Data Service for Apps linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredentialType {:description "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).", :enum ["ServicePrincipalKey" "ServicePrincipalCert"], :type "object", :x-ms-enum {:modelAsString true, :name "DynamicsServicePrincipalCredentialType"}}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string).", :type "object"}, :hostName {:description "The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).", :type "object"}, :serviceUri {:description "The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).", :type "object"}, :organizationName {:description "The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :deploymentType {:description "The deployment type of the Common Data Service for Apps instance. 'Online' for Common Data Service for Apps Online and 'OnPremisesWithIfd' for Common Data Service for Apps on-premises with Ifd. Type: string (or Expression with resultType string).", :enum ["Online" "OnPremisesWithIfd"], :type "string", :x-ms-enum {:modelAsString true, :name "DynamicsDeploymentType"}}, :servicePrincipalId {:description "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).", :type "object"}, :port {:description "The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :authenticationType {:description "The authentication type to connect to Common Data Service for Apps server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).", :enum ["Office365" "Ifd" "AADServicePrincipal"], :type "string", :x-ms-enum {:modelAsString true, :name "DynamicsAuthenticationType"}}}, :required ["deploymentType" "authenticationType"]}, :PrestoLinkedServiceTypeProperties {:description "Presto server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name used to connect to the Presto server.", :type "object"}, :serverVersion {:description "The version of the Presto server. (i.e. 0.148-t)", :type "object"}, :port {:description "The TCP port that the Presto server uses to listen for client connections. The default value is 8080.", :type "object"}, :host {:description "The IP address or host name of the Presto server. (i.e. 192.168.222.160)", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :authenticationType {:description "The authentication mechanism used to connect to the Presto server.", :enum ["Anonymous" "LDAP"], :type "string", :x-ms-enum {:modelAsString true, :name "PrestoAuthenticationType"}}, :timeZoneID {:description "The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.", :type "object"}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}, :catalog {:description "The catalog context for all request against the server.", :type "object"}}, :required ["host" "serverVersion" "catalog" "authenticationType"]}, :HubspotLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Hubspot Service linked service.", :properties {:typeProperties #:reference{:definitions "HubspotLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Hubspot"}, :MariaDBLinkedServiceTypeProperties {:description "MariaDB server linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :pwd {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :AzureSqlDatabaseLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Microsoft Azure SQL Database linked service.", :properties {:typeProperties #:reference{:definitions "AzureSqlDatabaseLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureSqlDatabase"}, :ImpalaLinkedServiceTypeProperties {:description "Impala server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name used to access the Impala server. The default value is anonymous when using SASLUsername.", :type "object"}, :port {:description "The TCP port that the Impala server uses to listen for client connections. The default value is 21050.", :type "object"}, :host {:description "The IP address or host name of the Impala server. (i.e. 192.168.222.160)", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :authenticationType {:description "The authentication type to use.", :enum ["Anonymous" "SASLUsername" "UsernameAndPassword"], :type "string", :x-ms-enum {:modelAsString true, :name "ImpalaAuthenticationType"}}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}}, :required ["host" "authenticationType"]}, :AzureMLLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure ML Studio Web Service linked service.", :properties {:typeProperties #:reference{:definitions "AzureMLLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureML"}, :SqlServerLinkedServiceTypeProperties {:description "SQL Server linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userName {:description "The on-premises Windows authentication user name. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :DynamicsLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Dynamics linked service.", :properties {:typeProperties #:reference{:definitions "DynamicsLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Dynamics"}, :AzureFunctionLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Function linked service.", :properties {:typeProperties #:reference{:definitions "AzureFunctionLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureFunction"}, :GreenplumLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Greenplum Database linked service.", :properties {:typeProperties #:reference{:definitions "GreenplumLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Greenplum"}, :AzureFileStorageLinkedServiceTypeProperties {:description "Azure File Storage linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "Host name of the server. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :userId {:description "User ID to logon the server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["host"]}, :SalesforceServiceCloudLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Salesforce Service Cloud.", :properties {:typeProperties #:reference{:definitions "SalesforceServiceCloudLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SalesforceServiceCloud"}, :OdbcLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Open Database Connectivity (ODBC) linked service.", :properties {:typeProperties #:reference{:definitions "OdbcLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Odbc"}, :LinkedService {:additionalProperties {:type "object"}, :description "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.", :discriminator "type", :properties {:annotations {:description "List of tags that can be used for describing the linked service.", :items {:type "object"}, :type "array"}, :connectVia {:description "Integration runtime reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference integration runtime name.", :type "string"}, :type {:description "Type of integration runtime.", :enum ["IntegrationRuntimeReference"], :type "string"}}, :required ["type" "referenceName"]}, :description {:description "Linked service description.", :type "string"}, :parameters {:additionalProperties {:description "Definition of a single parameter for an entity.", :properties {:defaultValue {:description "Default value of parameter.", :type "object"}, :type {:description "Parameter type.", :enum ["Object" "String" "Int" "Float" "Bool" "Array" "SecureString"], :type "string", :x-ms-enum {:modelAsString true, :name "ParameterType"}}}, :required ["type"], :type "object"}, :description "Definition of all parameters for an entity.", :type "object"}, :type {:description "Type of linked service.", :type "string"}}, :required ["type"], :type "object"}, :Db2LinkedServiceTypeProperties {:description "DB2 linked service properties.", :properties {:authenticationType {:description "AuthenticationType to be used for connection.", :enum ["Basic"], :type "string", :x-ms-enum {:modelAsString true, :name "Db2AuthenticationType"}}, :certificateCommonName {:description "Certificate Common Name when TLS is enabled. Type: string (or Expression with resultType string).", :type "object"}, :database {:description "Database name for connection. Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :packageCollection {:description "Under where packages are created when querying database. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "Server name for connection. Type: string (or Expression with resultType string).", :type "object"}, :username {:description "Username for authentication. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server" "database"]}, :SapHanaLinkedServiceProperties {:description "Properties specific to this linked service type.", :properties {:authenticationType {:description "The authentication type to be used to connect to the SAP HANA server.", :enum ["Basic" "Windows"], :type "string", :x-ms-enum {:modelAsString true, :name "SapHanaAuthenticationType"}}, :connectionString {:description "SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :server {:description "Host name of the SAP HANA server. Type: string (or Expression with resultType string).", :type "object"}, :userName {:description "Username to access the SAP HANA server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["server"]}, :AzureSqlDatabaseLinkedServiceTypeProperties {:description "Azure SQL Database linked service properties.", :properties {:connectionString {:description "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}, :servicePrincipalId {:description "The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["connectionString"]}, :WebAnonymousAuthentication {:allOf [#:reference{:definitions "WebLinkedServiceTypeProperties"}], :description "A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.", :x-ms-discriminator-value "Anonymous"}, :InformixLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Informix linked service.", :properties {:typeProperties #:reference{:definitions "InformixLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Informix"}, :FtpServerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "A FTP server Linked Service.", :properties {:typeProperties #:reference{:definitions "FtpServerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "FtpServer"}, :ServiceNowLinkedServiceTypeProperties {:description "ServiceNow server linked service properties.", :properties {:clientId {:description "The client id for OAuth2 authentication.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :authenticationType {:description "The authentication type to use.", :enum ["Basic" "OAuth2"], :type "string", :x-ms-enum {:modelAsString true, :name "ServiceNowAuthenticationType"}}, :endpoint {:description "The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}}, :required ["endpoint" "authenticationType"]}, :PostgreSqlLinkedServiceTypeProperties {:description "PostgreSQL linked service properties.", :properties {:connectionString {:description "The connection string.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}, :required ["connectionString"]}, :AzureDatabricksLinkedServiceTypeProperties {:description "Azure Databricks linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :newClusterDriverNodeType {:description "The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string).", :type "object"}, :newClusterSparkEnvVars {:additionalProperties {:description "Type: string (or Expression with resultType string).", :type "object"}, :description "A set of optional, user-specified Spark environment variables key-value pairs.", :type "object"}, :instancePoolId {:description "The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string).", :type "object"}, :newClusterNodeType {:description "The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string).", :type "object"}, :accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :newClusterEnableElasticDisk {:description "Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean).", :type "object"}, :newClusterCustomTags {:additionalProperties {:description "Type: string (or Expression with resultType string).", :type "object"}, :description "Additional tags for cluster resources. This property is ignored in instance pool configurations.", :type "object"}, :newClusterInitScripts {:description "User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings).", :type "object"}, :domain {:description "<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).", :type "object"}, :newClusterVersion {:description "If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string).", :type "object"}, :newClusterSparkConf {:additionalProperties {:description "Type: string (or Expression with resultType string).", :type "object"}, :description "A set of optional, user-specified Spark configuration key-value pairs.", :type "object"}, :newClusterNumOfWorker {:description "If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).", :type "object"}, :existingClusterId {:description "The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string).", :type "object"}}, :required ["domain" "accessToken"]}, :SalesforceMarketingCloudLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Salesforce Marketing Cloud linked service.", :properties {:typeProperties #:reference{:definitions "SalesforceMarketingCloudLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SalesforceMarketingCloud"}, :DynamicsAXLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Dynamics AX linked service.", :properties {:typeProperties #:reference{:definitions "DynamicsAXLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "DynamicsAX"}, :ZohoLinkedServiceTypeProperties {:description "Zoho server linked service properties.", :properties {:accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["endpoint"]}, :Office365LinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Office365 linked service.", :properties {:typeProperties #:reference{:definitions "Office365LinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Office365"}, :AzurePostgreSqlLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure PostgreSQL linked service.", :properties {:typeProperties #:reference{:definitions "AzurePostgreSqlLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzurePostgreSql"}, :EloquaLinkedServiceTypeProperties {:description "Eloqua server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :endpoint {:description "The endpoint of the Eloqua server. (i.e. eloqua.example.com)", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}, :username {:description "The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)", :type "object"}}, :required ["endpoint" "username"]}, :SapBWLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "SAP Business Warehouse Linked Service.", :properties {:typeProperties #:reference{:definitions "SapBWLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapBW"}, :SapHanaLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "SAP HANA Linked Service.", :properties {:typeProperties #:reference{:definitions "SapHanaLinkedServiceProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "SapHana"}, :SftpServerLinkedServiceTypeProperties {:description "Properties specific to this linked service type.", :properties {:privateKeyContent {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :port {:description "The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :host {:description "The SFTP server host name. Type: string (or Expression with resultType string).", :type "object"}, :hostKeyFingerprint {:description "The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).", :type "object"}, :authenticationType {:description "The authentication type to be used to connect to the FTP server.", :enum ["Basic" "SshPublicKey"], :type "string", :x-ms-enum {:modelAsString true, :name "SftpAuthenticationType"}}, :passPhrase {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :privateKeyPath {:description "The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).", :type "object"}, :skipHostKeyValidation {:description "If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).", :type "object"}, :userName {:description "The username used to log on to the SFTP server. Type: string (or Expression with resultType string).", :type "object"}}, :required ["host"]}, :SftpServerLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "A linked service for an SSH File Transfer Protocol (SFTP) server. ", :properties {:typeProperties #:reference{:definitions "SftpServerLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Sftp"}, :HBaseLinkedServiceTypeProperties {:description "HBase server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name used to connect to the HBase instance.", :type "object"}, :port {:description "The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.", :type "object"}, :host {:description "The IP address or host name of the HBase server. (i.e. 192.168.222.160)", :type "object"}, :httpPath {:description "The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)", :type "object"}, :authenticationType {:description "The authentication mechanism to use to connect to the HBase server.", :enum ["Anonymous" "Basic"], :type "string", :x-ms-enum {:modelAsString true, :name "HBaseAuthenticationType"}}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}}, :required ["host" "authenticationType"]}, :ShopifyLinkedServiceTypeProperties {:description "Shopify Service linked service properties.", :properties {:accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The endpoint of the Shopify server. (i.e. mystore.myshopify.com)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["host"]}, :RestServiceLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Rest Service linked service.", :properties {:typeProperties #:reference{:definitions "RestServiceLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "RestService"}, :AzurePostgreSqlLinkedServiceTypeProperties {:description "Azure PostgreSQL linked service properties.", :properties {:connectionString {:description "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :password {:allOf [{:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}], :description "Azure Key Vault secret reference.", :properties {:secretName {:description "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).", :type "object"}, :secretVersion {:description "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).", :type "object"}, :store {:description "Linked service reference type.", :properties {:parameters {:additionalProperties {:type "object"}, :description "An object mapping parameter names to argument values.", :type "object"}, :referenceName {:description "Reference LinkedService name.", :type "string"}, :type {:description "Linked service reference type.", :enum ["LinkedServiceReference"], :type "string"}}, :required ["type" "referenceName"]}}, :required ["store" "secretName"], :type "object", :x-ms-discriminator-value "AzureKeyVaultSecret"}}}, :AzureDataLakeAnalyticsLinkedServiceTypeProperties {:description "Azure Data Lake Analytics linked service properties.", :properties {:accountName {:description "The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).", :type "object"}, :dataLakeAnalyticsUri {:description "Azure Data Lake Analytics URI Type: string (or Expression with resultType string).", :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :resourceGroupName {:description "Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalId {:description "The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :subscriptionId {:description "Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).", :type "object"}, :tenant {:description "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).", :type "object"}}, :required ["accountName" "tenant"]}, :AzureKeyVaultLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Azure Key Vault linked service.", :properties {:typeProperties #:reference{:definitions "AzureKeyVaultLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "AzureKeyVault"}, :SalesforceLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Linked service for Salesforce.", :properties {:typeProperties #:reference{:definitions "SalesforceLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Salesforce"}, :MariaDBLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "MariaDB server linked service.", :properties {:typeProperties #:reference{:definitions "MariaDBLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "MariaDB"}, :DynamicsLinkedServiceTypeProperties {:description "Dynamics linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredentialType {:description "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).", :enum ["ServicePrincipalKey" "ServicePrincipalCert"], :type "object", :x-ms-enum {:modelAsString true, :name "DynamicsServicePrincipalCredentialType"}}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "User name to access the Dynamics instance. Type: string (or Expression with resultType string).", :type "object"}, :hostName {:description "The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).", :type "object"}, :serviceUri {:description "The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).", :type "object"}, :organizationName {:description "The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :deploymentType {:description "The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).", :enum ["Online" "OnPremisesWithIfd"], :type "object", :x-ms-enum {:modelAsString true, :name "DynamicsDeploymentType"}}, :servicePrincipalId {:description "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).", :type "object"}, :port {:description "The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :authenticationType {:description "The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).", :enum ["Office365" "Ifd" "AADServicePrincipal"], :type "object", :x-ms-enum {:modelAsString true, :name "DynamicsAuthenticationType"}}}, :required ["deploymentType" "authenticationType"]}, :ZohoLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Zoho server linked service.", :properties {:typeProperties #:reference{:definitions "ZohoLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Zoho"}, :SquareLinkedServiceTypeProperties {:description "Square Service linked service properties.", :properties {:clientId {:description "The client ID associated with your Square application.", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The URL of the Square instance. (i.e. mystore.mysquare.com)", :type "object"}, :redirectUri {:description "The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["host" "clientId" "redirectUri"]}, :AmazonMWSLinkedServiceTypeProperties {:description "Amazon Marketplace Web Service linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :sellerID {:description "The Amazon seller ID.", :type "object"}, :accessKeyId {:description "The access key id used to access data.", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :secretKey {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :mwsAuthToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :marketplaceID {:description "The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)", :type "object"}, :endpoint {:description "The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["endpoint" "marketplaceID" "sellerID" "accessKeyId"]}, :SalesforceMarketingCloudLinkedServiceTypeProperties {:description "Salesforce Marketing Cloud linked service properties.", :properties {:clientId {:description "The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).", :type "object"}, :clientSecret {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).", :type "object"}}, :required ["clientId"]}, :MagentoLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Magento server linked service.", :properties {:typeProperties #:reference{:definitions "MagentoLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Magento"}, :HiveLinkedServiceTypeProperties {:description "Hive Server linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :useNativeQuery {:description "Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.", :type "object"}, :allowHostNameCNMismatch {:description "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :serviceDiscoveryMode {:description "true to indicate using the ZooKeeper service, false not.", :type "object"}, :trustedCertPath {:description "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.", :type "object"}, :username {:description "The user name that you use to access Hive Server.", :type "object"}, :zooKeeperNameSpace {:description "The namespace on ZooKeeper under which Hive Server 2 nodes are added.", :type "object"}, :port {:description "The TCP port that the Hive server uses to listen for client connections.", :type "object"}, :host {:description "IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).", :type "object"}, :useSystemTrustStore {:description "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.", :type "object"}, :serverType {:description "The type of Hive server.", :enum ["HiveServer1" "HiveServer2" "HiveThriftServer"], :type "string", :x-ms-enum {:modelAsString true, :name "HiveServerType"}}, :httpPath {:description "The partial URL corresponding to the Hive server.", :type "object"}, :authenticationType {:description "The authentication method used to access the Hive server.", :enum ["Anonymous" "Username" "UsernameAndPassword" "WindowsAzureHDInsightService"], :type "string", :x-ms-enum {:modelAsString true, :name "HiveAuthenticationType"}}, :enableSsl {:description "Specifies whether the connections to the server are encrypted using SSL. The default value is false.", :type "object"}, :thriftTransportProtocol {:description "The transport protocol to use in the Thrift layer.", :enum ["Binary" "SASL" "HTTP "], :type "string", :x-ms-enum {:modelAsString true, :name "HiveThriftTransportProtocol"}}, :allowSelfSignedServerCert {:description "Specifies whether to allow self-signed certificates from the server. The default value is false.", :type "object"}}, :required ["host" "authenticationType"]}, :WebClientCertificateAuthentication {:allOf [#:reference{:definitions "WebLinkedServiceTypeProperties"}], :description "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.", :properties {:password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :pfx {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}}, :required ["pfx" "password"], :x-ms-discriminator-value "ClientCertificate"}, :OracleLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Oracle database.", :properties {:typeProperties #:reference{:definitions "OracleLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "Oracle"}, :OracleServiceCloudLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "Oracle Service Cloud linked service.", :properties {:typeProperties #:reference{:definitions "OracleServiceCloudLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "OracleServiceCloud"}, :DynamicsCrmLinkedServiceTypeProperties {:description "Dynamics CRM linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredentialType {:description "The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).", :enum ["ServicePrincipalKey" "ServicePrincipalCert"], :type "object", :x-ms-enum {:modelAsString true, :name "DynamicsServicePrincipalCredentialType"}}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string).", :type "object"}, :hostName {:description "The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).", :type "object"}, :serviceUri {:description "The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).", :type "object"}, :organizationName {:description "The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string).", :type "object"}, :servicePrincipalCredential {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :deploymentType {:description "The deployment type of the Dynamics CRM instance. 'Online' for Dynamics CRM Online and 'OnPremisesWithIfd' for Dynamics CRM on-premises with Ifd. Type: string (or Expression with resultType string).", :enum ["Online" "OnPremisesWithIfd"], :type "string", :x-ms-enum {:modelAsString true, :name "DynamicsDeploymentType"}}, :servicePrincipalId {:description "The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).", :type "object"}, :port {:description "The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.", :type "object"}, :authenticationType {:description "The authentication type to connect to Dynamics CRM server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).", :enum ["Office365" "Ifd" "AADServicePrincipal"], :type "string", :x-ms-enum {:modelAsString true, :name "DynamicsAuthenticationType"}}}, :required ["deploymentType" "authenticationType"]}, :SalesforceLinkedServiceTypeProperties {:description "Salesforce linked service properties.", :properties {:encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :environmentUrl {:description "The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).", :type "object"}, :password {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :securityToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :username {:description "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).", :type "object"}}}, :QuickBooksLinkedService {:allOf [#:reference{:definitions "LinkedService"}], :description "QuickBooks server linked service.", :properties {:typeProperties #:reference{:definitions "QuickBooksLinkedServiceTypeProperties"}}, :required ["typeProperties"], :type "object", :x-ms-discriminator-value "QuickBooks"}, :MagentoLinkedServiceTypeProperties {:description "Magento server linked service properties.", :properties {:accessToken {:description "The base definition of a secret type.", :discriminator "type", :properties {:type {:description "Type of the secret.", :type "string"}}, :required ["type"], :type "object"}, :encryptedCredential {:description "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", :type "object"}, :host {:description "The URL of the Magento instance. (i.e. 192.168.222.110/magento3)", :type "object"}, :useEncryptedEndpoints {:description "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.", :type "object"}, :useHostVerification {:description "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.", :type "object"}, :usePeerVerification {:description "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.", :type "object"}}, :required ["host"]}}}