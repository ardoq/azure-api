{:scheme "https", :host "management.azure.com", :info {:description "This Swagger was generated by the API Framework.", :title "Azure Media Services", :version "2018-07-01"}, :ops {:ContentKeyPolicies_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies", :description "Lists the Content Key Policies in the account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} #:reference{:parameters "ApiVersion"} {:description "Restricts the set of items returned.", :in "query", :name "$filter", :required false, :type "string"} {:description "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.", :in "query", :name "$top", :required false, :type "integer"} {:description "Specifies the key by which the result collection should be ordered.", :in "query", :name "$orderby", :required false, :type "string"}], :verb :get}, :ContentKeyPolicies_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}", :description "Deletes a Content Key Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Content Key Policy name.", :in "path", :name "contentKeyPolicyName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :delete}, :ContentKeyPolicies_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}", :description "Get the details of a Content Key Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Content Key Policy name.", :in "path", :name "contentKeyPolicyName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :get}, :ContentKeyPolicies_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}", :description "Updates an existing Content Key Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Content Key Policy name.", :in "path", :name "contentKeyPolicyName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ContentKeyPolicy"}} #:reference{:parameters "ApiVersion"}], :verb :patch}, :ContentKeyPolicies_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}", :description "Create or update a Content Key Policy in the Media Services account", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Content Key Policy name.", :in "path", :name "contentKeyPolicyName", :required true, :type "string"} {:description "The request parameters", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ContentKeyPolicy"}} #:reference{:parameters "ApiVersion"}], :verb :put}, :ContentKeyPolicies_GetPolicyPropertiesWithSecrets {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}/getPolicyPropertiesWithSecrets", :description "Get a Content Key Policy including secret values", :parameters [#:reference{:parameters "SubscriptionId"} #:reference{:parameters "ResourceGroupName"} #:reference{:parameters "MediaServicesAccountName"} {:description "The Content Key Policy name.", :in "path", :name "contentKeyPolicyName", :required true, :type "string"} #:reference{:parameters "ApiVersion"}], :verb :post}}, :parameters {:ApiVersion {:description "The Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :MediaServicesAccountName {:description "The Media Services account name.", :in "path", :name "accountName", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupName {:description "The name of the resource group within the Azure subscription.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionId {:description "The unique identifier for a Microsoft Azure subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:ApiError {:description "The API error.", :properties {:error #:reference{:definitions "ODataError"}}, :type "object"}, :ContentKeyPolicyCollection {:description "A collection of ContentKeyPolicy items.", :properties {"@odata.nextLink" {:description "A link to the next page of the collection (when the collection contains too many results to return in one response).", :type "string"}, :value {:description "A collection of ContentKeyPolicy items.", :items #:reference{:definitions "ContentKeyPolicy"}, :type "array"}}, :type "object"}, :ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction {:description "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.", :properties {:bestEffort {:description "Indicates whether this restriction is enforced on a Best Effort basis.", :type "boolean"}, :configurationData {:description "Configures the restriction control bits. Must be between 0 and 3 inclusive.", :format "int32", :type "integer"}}, :required ["bestEffort" "configurationData"], :type "object"}, :ContentKeyPolicyOption {:description "Represents a policy option.", :properties {:configuration #:reference{:definitions "ContentKeyPolicyConfiguration"}, :name {:description "The Policy Option description.", :type "string"}, :policyOptionId {:description "The legacy Policy Option ID.", :format "uuid", :readOnly true, :type "string", :x-nullable false}, :restriction #:reference{:definitions "ContentKeyPolicyRestriction"}}, :required ["configuration" "restriction"], :type "object"}, :ContentKeyPolicyUnknownConfiguration {:allOf [#:reference{:definitions "ContentKeyPolicyConfiguration"}], :description "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.", :properties {}, :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"}, :ContentKeyPolicyPlayReadyPlayRight {:description "Configures the Play Right in the PlayReady license.", :properties {:explicitAnalogTelevisionOutputRestriction #:reference{:definitions "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"}, :imageConstraintForAnalogComponentVideoRestriction {:description "Enables the Image Constraint For Analog Component Video Restriction in the license.", :type "boolean"}, :compressedDigitalVideoOpl {:description "Specifies the output protection level for compressed digital video.", :format "int32", :type "integer"}, :firstPlayExpiration {:description "The amount of time that the license is valid after the license is first used to play content.", :format "duration", :type "string"}, :allowPassingVideoContentToUnknownOutput {:description "Configures Unknown output handling settings of the license.", :enum ["Unknown" "NotAllowed" "Allowed" "AllowedWithVideoConstriction"], :type "string", :x-ms-enum {:modelAsString true, :name "ContentKeyPolicyPlayReadyUnknownOutputPassingOption", :values [{:description "Represents a ContentKeyPolicyPlayReadyUnknownOutputPassingOption that is unavailable in current API version.", :value "Unknown"} {:description "Passing the video portion of protected content to an Unknown Output is not allowed.", :value "NotAllowed"} {:description "Passing the video portion of protected content to an Unknown Output is allowed.", :value "Allowed"} {:description "Passing the video portion of protected content to an Unknown Output is allowed but with constrained resolution.", :value "AllowedWithVideoConstriction"}]}}, :uncompressedDigitalVideoOpl {:description "Specifies the output protection level for uncompressed digital video.", :format "int32", :type "integer"}, :agcAndColorStripeRestriction {:description "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.", :format "int32", :type "integer"}, :scmsRestriction {:description "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.", :format "int32", :type "integer"}, :imageConstraintForAnalogComputerMonitorRestriction {:description "Enables the Image Constraint For Analog Component Video Restriction in the license.", :type "boolean"}, :compressedDigitalAudioOpl {:description "Specifies the output protection level for compressed digital audio.", :format "int32", :type "integer"}, :analogVideoOpl {:description "Specifies the output protection level for compressed digital audio.", :format "int32", :type "integer"}, :uncompressedDigitalAudioOpl {:description "Specifies the output protection level for uncompressed digital audio.", :format "int32", :type "integer"}, :digitalVideoOnlyContentRestriction {:description "Enables the Image Constraint For Analog Component Video Restriction in the license.", :type "boolean"}}, :required ["digitalVideoOnlyContentRestriction" "imageConstraintForAnalogComponentVideoRestriction" "imageConstraintForAnalogComputerMonitorRestriction" "allowPassingVideoContentToUnknownOutput"], :type "object"}, :ContentKeyPolicyTokenRestriction {:allOf [#:reference{:definitions "ContentKeyPolicyRestriction"}], :description "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.", :properties {:alternateVerificationKeys {:description "A list of alternative verification keys.", :items #:reference{:definitions "ContentKeyPolicyRestrictionTokenKey"}, :type "array"}, :audience {:description "The audience for the token.", :type "string"}, :issuer {:description "The token issuer.", :type "string"}, :openIdConnectDiscoveryDocument {:description "The OpenID connect discovery document.", :type "string"}, :primaryVerificationKey #:reference{:definitions "ContentKeyPolicyRestrictionTokenKey"}, :requiredClaims {:description "A list of required token claims.", :items #:reference{:definitions "ContentKeyPolicyTokenClaim"}, :type "array"}, :restrictionTokenType {:description "The type of token.", :enum ["Unknown" "Swt" "Jwt"], :type "string", :x-ms-enum {:modelAsString true, :name "ContentKeyPolicyRestrictionTokenType", :values [{:description "Represents a ContentKeyPolicyRestrictionTokenType that is unavailable in current API version.", :value "Unknown"} {:description "Simple Web Token.", :value "Swt"} {:description "JSON Web Token.", :value "Jwt"}]}}}, :required ["issuer" "audience" "primaryVerificationKey" "restrictionTokenType"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyTokenRestriction"}, :ContentKeyPolicyRestriction {:description "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}}, :required ["@odata.type"], :type "object"}, :ContentKeyPolicyPlayReadyConfiguration {:allOf [#:reference{:definitions "ContentKeyPolicyConfiguration"}], :description "Specifies a configuration for PlayReady licenses.", :properties {:licenses {:description "The PlayReady licenses.", :items #:reference{:definitions "ContentKeyPolicyPlayReadyLicense"}, :type "array"}, :responseCustomData {:description "The custom response data.", :type "string"}}, :required ["licenses"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"}, :ContentKeyPolicyTokenClaim {:description "Represents a token claim.", :properties {:claimType {:description "Token claim type.", :type "string"}, :claimValue {:description "Token claim value.", :type "string"}}, :type "object"}, :ContentKeyPolicyPlayReadyLicense {:description "The PlayReady license", :properties {:licenseType {:description "The license type.", :enum ["Unknown" "NonPersistent" "Persistent"], :type "string", :x-ms-enum {:modelAsString true, :name "ContentKeyPolicyPlayReadyLicenseType", :values [{:description "Represents a ContentKeyPolicyPlayReadyLicenseType that is unavailable in current API version.", :value "Unknown"} {:description "Non persistent license.", :value "NonPersistent"} {:description "Persistent license. Allows offline playback.", :value "Persistent"}]}}, :playRight #:reference{:definitions "ContentKeyPolicyPlayReadyPlayRight"}, :relativeBeginDate {:description "The relative begin date of license.", :format "duration", :type "string"}, :contentKeyLocation #:reference{:definitions "ContentKeyPolicyPlayReadyContentKeyLocation"}, :beginDate {:description "The begin date of license", :format "date-time", :type "string"}, :contentType {:description "The PlayReady content type.", :enum ["Unknown" "Unspecified" "UltraVioletDownload" "UltraVioletStreaming"], :type "string", :x-ms-enum {:modelAsString true, :name "ContentKeyPolicyPlayReadyContentType", :values [{:description "Represents a ContentKeyPolicyPlayReadyContentType that is unavailable in current API version.", :value "Unknown"} {:description "Unspecified content type.", :value "Unspecified"} {:description "Ultraviolet download content type.", :value "UltraVioletDownload"} {:description "Ultraviolet streaming content type.", :value "UltraVioletStreaming"}]}}, :gracePeriod {:description "The grace period of license.", :format "duration", :type "string"}, :relativeExpirationDate {:description "The relative expiration date of license.", :format "duration", :type "string"}, :expirationDate {:description "The expiration date of license.", :format "date-time", :type "string"}, :allowTestDevices {:description "A flag indicating whether test devices can use the license.", :type "boolean"}}, :required ["allowTestDevices" "licenseType" "contentKeyLocation" "contentType"], :type "object"}, :ContentKeyPolicyConfiguration {:description "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}}, :required ["@odata.type"], :type "object"}, :ContentKeyPolicyPlayReadyContentKeyLocation {:description "Base class for content key ID location. A derived class must be used to represent the location.", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}}, :required ["@odata.type"], :type "object"}, :ContentKeyPolicyUnknownRestriction {:allOf [#:reference{:definitions "ContentKeyPolicyRestriction"}], :description "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.", :properties {}, :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"}, :ODataError {:description "Information about an error.", :properties {:code {:description "A language-independent error name.", :type "string"}, :details {:description "The error details.", :items #:reference{:definitions "ODataError"}, :type "array"}, :message {:description "The error message.", :type "string"}, :target {:description "The target of the error (for example, the name of the property in error).", :type "string"}}, :type "object"}, :ContentKeyPolicy {:allOf [{:allOf [{:description "The core properties of ARM resources.", :properties {:id {:description "Fully qualified resource ID for the resource.", :readOnly true, :type "string"}, :name {:description "The name of the resource.", :readOnly true, :type "string"}, :type {:description "The type of the resource.", :readOnly true, :type "string"}}, :x-ms-azure-resource true}], :description "The resource model definition for a ARM proxy resource."}], :description "A Content Key Policy resource.", :properties {:properties #:reference{:definitions "ContentKeyPolicyProperties"}}, :type "object"}, :ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier {:allOf [#:reference{:definitions "ContentKeyPolicyPlayReadyContentKeyLocation"}], :description "Specifies that the content key ID is specified in the PlayReady configuration.", :properties {:keyId {:description "The content key ID.", :format "uuid", :type "string"}}, :required ["keyId"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"}, :ContentKeyPolicyFairPlayConfiguration {:allOf [#:reference{:definitions "ContentKeyPolicyConfiguration"}], :description "Specifies a configuration for FairPlay licenses.", :properties {:ask {:description "The key that must be used as FairPlay Application Secret key.", :format "byte", :type "string"}, :fairPlayPfx {:description "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).", :type "string"}, :fairPlayPfxPassword {:description "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.", :type "string"}, :rentalAndLeaseKeyType {:description "The rental and lease key type.", :enum ["Unknown" "Undefined" "PersistentUnlimited" "PersistentLimited"], :type "string", :x-ms-enum {:modelAsString true, :name "ContentKeyPolicyFairPlayRentalAndLeaseKeyType", :values [{:description "Represents a ContentKeyPolicyFairPlayRentalAndLeaseKeyType that is unavailable in current API version.", :value "Unknown"} {:description "Key duration is not specified.", :value "Undefined"} {:description "Content key can be persisted with an unlimited duration", :value "PersistentUnlimited"} {:description "Content key can be persisted and the valid duration is limited by the Rental Duration value", :value "PersistentLimited"}]}}, :rentalDuration {:description "The rental duration. Must be greater than or equal to 0.", :format "int64", :type "integer"}}, :required ["ask" "fairPlayPfxPassword" "fairPlayPfx" "rentalAndLeaseKeyType" "rentalDuration"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"}, :ContentKeyPolicyX509CertificateTokenKey {:allOf [#:reference{:definitions "ContentKeyPolicyRestrictionTokenKey"}], :description "Specifies a certificate for token validation.", :properties {:rawBody {:description "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)", :format "byte", :type "string"}}, :required ["rawBody"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"}, :ContentKeyPolicyRsaTokenKey {:allOf [#:reference{:definitions "ContentKeyPolicyRestrictionTokenKey"}], :description "Specifies a RSA key for token validation", :properties {:exponent {:description "The RSA Parameter exponent", :format "byte", :type "string"}, :modulus {:description "The RSA Parameter modulus", :format "byte", :type "string"}}, :required ["exponent" "modulus"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"}, :ContentKeyPolicyWidevineConfiguration {:allOf [#:reference{:definitions "ContentKeyPolicyConfiguration"}], :description "Specifies a configuration for Widevine licenses.", :properties {:widevineTemplate {:description "The Widevine template.", :type "string"}}, :required ["widevineTemplate"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"}, :ContentKeyPolicyClearKeyConfiguration {:allOf [#:reference{:definitions "ContentKeyPolicyConfiguration"}], :description "Represents a configuration for non-DRM keys.", :properties {}, :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"}, :ContentKeyPolicySymmetricTokenKey {:allOf [#:reference{:definitions "ContentKeyPolicyRestrictionTokenKey"}], :description "Specifies a symmetric key for token validation.", :properties {:keyValue {:description "The key value of the key", :format "byte", :type "string"}}, :required ["keyValue"], :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"}, :ContentKeyPolicyProperties {:description "The properties of the Content Key Policy.", :properties {:created {:description "The creation date of the Policy", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :description {:description "A description for the Policy.", :type "string"}, :lastModified {:description "The last modified date of the Policy", :format "date-time", :readOnly true, :type "string", :x-nullable false}, :options {:description "The Key Policy options.", :items #:reference{:definitions "ContentKeyPolicyOption"}, :type "array"}, :policyId {:description "The legacy Policy ID.", :format "uuid", :readOnly true, :type "string", :x-nullable false}}, :required ["options"], :type "object"}, :ContentKeyPolicyOpenRestriction {:allOf [#:reference{:definitions "ContentKeyPolicyRestriction"}], :description "Represents an open restriction. License or key will be delivered on every request.", :properties {}, :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyOpenRestriction"}, :ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader {:allOf [#:reference{:definitions "ContentKeyPolicyPlayReadyContentKeyLocation"}], :description "Specifies that the content key ID is in the PlayReady header.", :properties {}, :type "object", :x-ms-discriminator-value "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"}, :ContentKeyPolicyRestrictionTokenKey {:description "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.", :discriminator "@odata.type", :properties {"@odata.type" {:description "The discriminator for derived types.", :type "string"}}, :required ["@odata.type"], :type "object"}}}