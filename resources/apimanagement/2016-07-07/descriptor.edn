{:scheme "https", :host "management.azure.com", :info {:description "Use these REST APIs for performing operations on entities like API, Product, and Subscription associated with your Azure API Management deployment.", :title "ApiManagementClient", :version "2016-07-07"}, :ops {:Backends_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends", :description "Lists a collection of backends in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| host  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Groups_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Gets the details of the group specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Reports_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/{aggregation}", :description "Lists report records.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Report aggregation.", :enum ["byApi" "byGeo" "byOperation" "byProduct" "bySubscription" "byTime" "byUser"], :in "path", :name "aggregation", :required true, :type "string", :x-ms-enum {:modelAsString false, :name "ReportsAggregation"}} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} {:description "By time interval. This value is only applicable to ByTime aggregation. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))", :in "query", :name "interval", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Certificates_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates", :description "Lists a collection of all certificates in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field          | Supported operators    | Supported functions                         |\n|----------------|------------------------|---------------------------------------------|\n| id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| subject        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| expirationDate | ge, le, eq, ne, gt, lt | N/A                                         |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Users_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Gets the details of the user specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :GroupUsers_Remove {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}", :description "Remove existing user from existing group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} #:reference{:parameters "UserIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Certificates_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}", :description "Creates or updates the certificate being used for authentication with the backend.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the certificate entity. Must be unique in the current API Management service instance.", :in "path", :maxLength 256, :minLength 1, :name "certificateId", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CertificateCreateOrUpdateParameters"}} {:description "The entity state (Etag) version of the certificate to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation..", :in "header", :name "If-Match", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Products_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}", :description "Creates or Updates a product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ProductContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Property_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Updates the specific property.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the property.", :in "path", :name "propId", :required true, :type "string"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PropertyUpdateParameters"}} {:description "The entity state (Etag) version of the property to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :TenantAccess_RegeneratePrimaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regeneratePrimaryKey", :description "Regenerate primary access key.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Loggers_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers", :description "Lists a collection of loggers in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type  | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :UserIdentities_ListByUser {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/identities", :description "Lists all user identities.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Backends_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}", :description "Updates an existing backend.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "BackendIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BackendUpdateParameters"}} {:description "The entity state (Etag) version of the backend to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Subscriptions_RegeneratePrimaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey", :description "Regenerates primary key of existing subscription of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :name "sid", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :IdentityProviders_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Gets the configuration details of the identity Provider configured in specified service instance.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "IdentityProviderNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :ProductGroups_Remove {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}", :description "Deletes the association between the specified group and product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} #:reference{:parameters "GroupIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :TenantConfiguration_Save {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/save", :description "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Save Configuration parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SaveConfigurationParameter"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Loggers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Updates an existing logger.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the logger.", :in "path", :name "loggerid", :required true, :type "string"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "LoggerUpdateParameters"}} {:description "The entity state (Etag) version of the logger to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Loggers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Creates or Updates a logger.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the logger.", :in "path", :maxLength 256, :name "loggerid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "LoggerCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :QuotaByCounterKeys_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}", :description "Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "QuotaCounterKeyParameter"} {:description "The value of the quota counter to be applied to all quota counter periods.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "QuotaCounterValueContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Backends_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}", :description "Deletes the specified backend.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "BackendIdParameter"} {:description "The entity state (Etag) version of the backend to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ProductSubscriptions_ListByProduct {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions", :description "Lists the collection of subscriptions to the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Apis_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}", :description "Gets the details of the API specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :AuthorizationServers_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}", :description "Updates the details of the authorization server specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the authorization server.", :in "path", :name "authsid", :required true, :type "string"} {:description "OAuth2 Server settings Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "OAuth2AuthorizationServerUpdateContract"}} {:description "The entity state (Etag) version of the authorization server to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Subscriptions_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions", :description "Lists all subscriptions of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ProductApis_Remove {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}", :description "Deletes the specified API from the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ApiOperations_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}", :description "Deletes the specified operation.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "OperationIdParameter"} {:description "ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :GroupUsers_Add {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{uid}", :description "Adds a user to the specified group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} #:reference{:parameters "UserIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :GroupUsers_ListByGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users", :description "Lists a collection of the members of the group, specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} {:description "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :TenantAccessGit_RegeneratePrimaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regeneratePrimaryKey", :description "Regenerate primary access key for GIT.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Property_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Deletes specific property from the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the property.", :in "path", :name "propId", :required true, :type "string"} {:description "The entity state (Etag) version of the property to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :UserSubscriptions_ListByUser {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/subscriptions", :description "Lists the collection of subscriptions of the specified user.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} {:description "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :TenantAccess_RegenerateSecondaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/regenerateSecondaryKey", :description "Regenerate secondary access key.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :UserGroups_ListByUser {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/groups", :description "Lists all user groups.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :QuotaByCounterKeys_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}", :description "Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "QuotaCounterKeyParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Regions_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions", :description "Lists all azure regions in which the service exists.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Backends_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}", :description "Gets the details of the backend specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "BackendIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Property_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Creates or updates a property.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the property.", :in "path", :maxLength 256, :name "propId", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PropertyCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ApiOperations_ListByApi {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations", :description "Lists a collection of the operations for the specified API.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} {:description "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n| name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| method      | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Subscriptions_RegenerateSecondaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey", :description "Regenerates secondary key of existing subscription of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :name "sid", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Users_GenerateSsoUrl {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}/generateSsoUrl", :description "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Products_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products", :description "Lists a collection of products in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| terms       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state       | eq                     |                                             |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} {:description "When set to true, the response contains an array of groups that have visibility to the product. The default is false.", :in "query", :name "expandGroups", :required false, :type "boolean"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ApiOperations_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}", :description "Updates the details of the operation specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "OperationIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PatchParameters"}} {:description "ETag of the API Operation Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :AuthorizationServers_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}", :description "Creates new authorization server or updates an existing authorization server.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the authorization server.", :in "path", :maxLength 256, :name "authsid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "OAuth2AuthorizationServerContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :OpenIdConnectProviders_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders", :description "Lists all OpenID Connect Providers.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :OpenIdConnectProviders_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}", :description "Gets specific OpenID Connect Provider.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the OpenID Connect Provider.", :in "path", :name "opid", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Groups_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Creates or Updates a group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GroupCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :TenantConfiguration_Deploy {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/deploy", :description "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Deploy Configuration parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DeployConfigurationParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Users_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Deletes specific user.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} {:description "Whether to delete user's subscription or not.", :in "query", :name "deleteSubscriptions", :required false, :type "boolean"} {:description "The entity state (Etag) version of the user to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Subscriptions_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Gets the specified Subscription entity.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :name "sid", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Products_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}", :description "Gets the details of the product specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Apis_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}", :description "Updates the specified API of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} {:description "Patch parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PatchParameters"}} {:description "ETag of the API entity. ETag should match the current entity state in the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :ProductGroups_Add {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}", :description "Adds the association between the specified developer group with the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} #:reference{:parameters "GroupIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ApiProducts_ListByApi {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products", :description "Lists all API associated products.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :TenantAccessGit_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git", :description "Gets the Git access configuration for the tenant.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Loggers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Gets the details of the logger specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the logger.", :in "path", :name "loggerid", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Users_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Creates or Updates a user.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UserCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :AuthorizationServers_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers", :description "Lists a collection of authorization servers defined within a service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Users_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{uid}", :description "Updates the details of the user specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "UserIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "UserUpdateParameters"}} {:description "The entity state (Etag) version of the user to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :OpenIdConnectProviders_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}", :description "Deletes specific OpenID Connect Provider of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the OpenID Connect Provider.", :in "path", :name "opid", :required true, :type "string"} {:description "The entity state (Etag) version of the OpenID Connect Provider to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :OpenIdConnectProviders_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}", :description "Creates or updates the OpenID Connect Provider.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the OpenID Connect Provider.", :in "path", :maxLength 256, :name "opid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "OpenidConnectProviderCreateContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :TenantConfigurationSyncState_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/syncState", :description "Gets the status of the most recent synchronization between the configuration database and the Git repository.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Loggers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}", :description "Deletes the specified logger.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the logger.", :in "path", :name "loggerid", :required true, :type "string"} {:description "The entity state (Etag) version of the logger to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Groups_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Updates the details of the group specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "GroupUpdateParameters"}} {:description "ETag of the Group Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :AuthorizationServers_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}", :description "Deletes specific authorization server instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the authorization server.", :in "path", :name "authsid", :required true, :type "string"} {:description "The entity state (Etag) version of the authentication server to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :TenantAccess_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access", :description "Get tenant access information details.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Property_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties/{propId}", :description "Gets the details of the property specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the property.", :in "path", :name "propId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ApiOperations_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}", :description "Gets the details of the API Operation specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "OperationIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :QuotaByPeriodKeys_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}", :description "Updates an existing quota counter value in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "QuotaCounterKeyParameter"} #:reference{:parameters "QuotaPeriodKeyParameter"} {:description "The value of the Quota counter to be applied on the specified period.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "QuotaCounterValueContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Apis_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}", :description "Deletes the specified API of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} {:description "ETag of the API Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ProductApis_Add {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}", :description "Adds an API to the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :IdentityProviders_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Deletes the specified identity provider configuration.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "The entity state (Etag) version of the backend to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :IdentityProviders_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders", :description "Lists a collection of Identity Provider configured in the specified service instance.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Property_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/properties", :description "Lists a collection of properties defined within a service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field | Supported operators    | Supported functions                                   |\n|-------|------------------------|-------------------------------------------------------|\n| tags  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith           |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :TenantConfiguration_Validate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/configuration/validate", :description "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Validate Configuration parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "DeployConfigurationParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Certificates_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}", :description "Deletes specific certificate.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the certificate.", :in "path", :name "certificateId", :required true, :type "string"} {:description "The entity state (Etag) version of the certificate to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :IdentityProviders_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Updates an existing IdentityProvider configuration.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "IdentityProviderUpdateParameters"}} {:description "The entity state (Etag) version of the identity provider configuration to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Users_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users", :description "Lists a collection of registered users in the specified service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field            | Supported operators    | Supported functions               |\n|------------------|------------------------|-----------------------------------|\n| id               | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| firstName        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| lastName         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| email            | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state            | eq                     | N/A                               |\n| registrationDate | ge, le, eq, ne, gt, lt | N/A                               |\n| note             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Groups_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups", :description "Lists a collection of groups defined within a service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Products_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}", :description "Delete product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "Delete existing subscriptions to the product or not.", :in "query", :name "deleteSubscriptions", :required false, :type "boolean"} {:description "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ApiOperations_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}", :description "Creates a new API operation or updates an existing one.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} #:reference{:parameters "OperationIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "OperationContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Apis_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}", :description "Creates new or updates existing specified API of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiIdParameter"} {:description "Create or update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ApiContract"}} {:description "ETag of the Api Entity. For Create Api Etag should not be specified. For Update Etag should match the existing Entity or it can be * for unconditional update.", :in "header", :name "If-Match", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Groups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}", :description "Deletes specific group of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "GroupIdParameter"} {:description "ETag of the Group Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :ProductApis_ListByProduct {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis", :description "Lists a collection of the APIs associated with a product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Apis_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis", :description "Lists all APIs of the API Management service instance.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, startswith, endswith |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Subscriptions_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Updates the details of a subscription specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :name "sid", :required true, :type "string"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SubscriptionUpdateParameters"}} {:description "ETag of the Subscription Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :OpenIdConnectProviders_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}", :description "Updates the specific OpenID Connect Provider.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the OpenID Connect Provider.", :in "path", :name "opid", :required true, :type "string"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "OpenidConnectProviderUpdateContract"}} {:description "The entity state (Etag) version of the OpenID Connect Provider to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :Subscriptions_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Deletes the specified subscription.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :name "sid", :required true, :type "string"} {:description "ETag of the Subscription Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :PolicySnippets_ListByService {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets", :description "Lists all policy snippets.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Policy scope.", :enum ["Tenant" "Product" "Api" "Operation" "All"], :in "query", :name "scope", :required false, :type "string", :x-ms-enum {:modelAsString false, :name "PolicyScopeContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Products_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}", :description "Update product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "Update parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ProductUpdateParameters"}} {:description "ETag of the Product Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :AuthorizationServers_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}", :description "Gets the details of the authorization server specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the authorization server.", :in "path", :maxLength 256, :name "authsid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Certificates_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}", :description "Gets the details of the certificate specified by its identifier.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the certificate.", :in "path", :name "certificateId", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ProductGroups_ListByProduct {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups", :description "Lists the collection of developer groups associated with the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ProductIdParameter"} {:description "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type        | eq, ne                 | N/A                                         |", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "TopQueryParameter"} #:reference{:parameters "SkipQueryParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :TenantAccessGit_RegenerateSecondaryKey {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access/git/regenerateSecondaryKey", :description "Regenerate secondary access key for GIT.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Backends_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}", :description "Creates or Updates a backend.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "BackendIdParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "BackendContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :QuotaByPeriodKeys_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/{quotaPeriodKey}", :description "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.", :parameters [#:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "QuotaCounterKeyParameter"} #:reference{:parameters "QuotaPeriodKeyParameter"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :TenantAccess_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/access", :description "Update tenant access information details.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AccessInformationUpdateParameters"}} {:description "The entity state (Etag) version of the tenant access settings to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.", :in "header", :name "If-Match", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :IdentityProviders_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}", :description "Creates or Updates the IdentityProvider configuration.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} #:reference{:parameters "IdentityProviderNameParameter"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "IdentityProviderContract"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Subscriptions_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}", :description "Creates or updates the subscription of specified user to the specified product.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ServiceNameParameter"} {:description "Identifier of the subscription.", :in "path", :maxLength 256, :minLength 1, :name "sid", :pattern "^[^*#&+:<>?]+$", :required true, :type "string"} {:description "Create parameters.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "SubscriptionCreateParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}}, :parameters {:QuotaPeriodKeyParameter {:description "Quota period key identifier.", :in "path", :name "quotaPeriodKey", :required true, :type "string", :x-ms-parameter-location "method"}, :SubscriptionIdParameter {:description "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}, :SkipQueryParameter {:description "Number of records to skip.", :format "int32", :in "query", :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"}, :ApiVersionParameter {:description "Version of the API to be used with the client request.", :in "query", :name "api-version", :required true, :type "string"}, :IdentityProviderNameParameter {:description "Identity Provider Type identifier.", :enum ["facebook" "google" "microsoft" "twitter" "aad"], :in "path", :name "identityProviderName", :required true, :type "string", :x-ms-enum {:modelAsString true, :name "IdentityProviderNameType"}, :x-ms-parameter-location "method"}, :BackendIdParameter {:description "User identifier. Must be unique in the current API Management service instance.", :name "backendid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 255, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}, :TopQueryParameter {:description "Number of records to return.", :format "int32", :in "query", :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"}, :GroupIdParameter {:description "Group identifier. Must be unique in the current API Management service instance.", :name "groupId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}, :ResourceGroupNameParameter {:description "The name of the resource group.", :in "path", :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :QuotaCounterKeyParameter {:description "Quota counter key identifier.", :in "path", :name "quotaCounterKey", :required true, :type "string", :x-ms-parameter-location "method"}, :ServiceNameParameter {:description "The name of the API Management service.", :name "serviceName", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 50, :required true, :in "path", :pattern "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"}, :ApiIdParameter {:description "API identifier. Must be unique in the current API Management service instance.", :name "apiId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}, :UserIdParameter {:description "User identifier. Must be unique in the current API Management service instance.", :name "uid", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}, :OperationIdParameter {:description "Operation identifier within an API. Must be unique in the current API Management service instance.", :name "operationId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}, :ProductIdParameter {:description "Product identifier. Must be unique in the current API Management service instance.", :name "productId", :type "string", :minLength 1, :x-ms-parameter-location "method", :maxLength 256, :required true, :in "path", :pattern "^[^*#&+:<>?]+$"}}, :definitions {:DeployConfigurationParameters {:description "Parameters supplied to the Deploy Configuration operation.", :properties {:branch {:description "The name of the Git branch from which the configuration is to be deployed to the configuration database.", :type "string"}, :force {:description "The value enforcing deleting subscriptions to products that are deleted in this update.", :type "boolean"}}, :required ["branch"]}, :ApiCollection {:description "Paged Api list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "ApiContract"}, :type "array"}}}, :TenantConfigurationSyncStateContract {:description "Tenant Configuration Synchronization State.", :properties {:branch {:description "The name of Git branch.", :type "string"}, :commitId {:description "The latest commit Id.", :type "string"}, :configurationChangeDate {:description "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :isExport {:description "value indicating if last sync was save (true) or deploy (false) operation.", :type "boolean"}, :isGitEnabled {:description "value indicating whether Git configuration access is enabled.", :type "boolean"}, :isSynced {:description "value indicating if last synchronization was later than the configuration change.", :type "boolean"}, :syncDate {:description "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}}}, :ApiExportResult {:description "The response model for the export API output operation.", :properties {:content {:description "Response content bytes.", :format "byte", :type "string"}, :requestId {:type "string"}, :statusCode {:enum ["Continue" "OK" "Created" "Accepted" "NotFound" "Conflict"], :type "string", :x-ms-enum {:modelAsString false, :name "HttpStatusCode"}}}}, :ProductUpdateParameters {:description "Parameters supplied to the CreateOrUpdate Product operation.", :properties {:approvalRequired {:description "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.", :type "boolean"}, :description {:description "Product description.", :maxLength 500, :minLength 1, :type "string"}, :name {:description "Product name.", :maxLength 300, :minLength 1, :type "string"}, :state {:description "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators.", :enum ["NotPublished" "Published"], :type "string", :x-ms-enum {:modelAsString false, :name "ProductStateContract"}}, :subscriptionRequired {:description "whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.", :type "boolean"}, :subscriptionsLimit {:description "whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.", :format "int32", :type "integer"}, :terms {:description "Product terms and conditions. Developer will have to accept these terms before he's allowed to call product API.", :type "string"}}}, :CertificateCollection {:description "Paged Certificates list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "CertificateContract"}, :type "array"}}}, :SubscriptionCollection {:description "Paged Subscriptions list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "SubscriptionContract"}, :type "array"}}}, :ErrorFieldContract {:description "Error Field contract.", :properties {:code {:description "Property level error code.", :type "string"}, :message {:description "Human-readable representation of property-level error.", :type "string"}, :target {:description "Property name.", :type "string"}}}, :LoggerUpdateParameters {:description "Parameters supplied to the Update Logger operation.", :properties {:credentials {:additionalProperties {:type "string"}, :description "Logger credentials.", :type "object"}, :description {:description "Logger description.", :type "string"}, :isBuffered {:description "whether records are buffered in the logger before publishing. Default is assumed to be true.", :type "boolean"}, :type {:description "Logger type.", :enum ["AzureEventHub"], :type "string", :x-ms-enum {:modelAsString false, :name "LoggerTypeContract"}}}, :required ["type"]}, :CertificateContract {:description "Certificate details.", :properties {:expirationDate {:description "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :id {:description "Certificate identifier path: /certificates/{certificateId}", :readOnly true, :type "string"}, :subject {:description "Subject attribute of the certificate.", :type "string"}, :thumbprint {:description "Thumbprint of the certificate.", :type "string"}}, :required ["subject" "thumbprint" "expirationDate"]}, :ProductContract {:description "Product profile.", :properties {:approvalRequired {:description "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false.", :type "boolean"}, :description {:description "Product description. May include HTML formatting tags.", :maxLength 1000, :minLength 1, :type "string"}, :id {:description "Uniquely identifies the product within the current API Management service instance. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.", :readOnly true, :type "string"}, :name {:description "Product name.", :maxLength 300, :minLength 1, :type "string"}, :state {:default "NotPublished", :description "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is NotPublished.", :enum ["NotPublished" "Published"], :type "string", :x-ms-enum {:modelAsString false, :name "ProductStateContract"}}, :subscriptionRequired {:default true, :description "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true.", :type "boolean"}, :subscriptionsLimit {:description "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false.", :format "int32", :type "integer"}, :terms {:description "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process.", :type "string"}}, :required ["name"]}, :OpenidConnectProviderUpdateContract {:description "Parameters supplied to the Update OpenID Connect Provider operation.", :properties {:clientId {:description "Client ID of developer console which is the client application.", :type "string"}, :clientSecret {:description "Client Secret of developer console which is the client application.", :type "string"}, :description {:description "User-friendly description of OpenID Connect Provider.", :type "string"}, :metadataEndpoint {:description "Metadata endpoint URI.", :type "string"}, :name {:description "User-friendly OpenID Connect Provider name.", :maxLength 50, :type "string"}}}, :ErrorBodyContract {:description "Error Body contract.", :properties {:code {:description "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.", :type "string"}, :details {:description "The list of invalid fields send in request, in case of validation error.", :items #:reference{:definitions "ErrorFieldContract"}, :type "array"}, :message {:description "Human-readable representation of the error.", :type "string"}}}, :ReportCollection {:description "Paged Report records list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "ReportRecordContract"}, :type "array"}}}, :TokenBodyParameterContract {:description "OAuth acquire token request body parameter (www-url-form-encoded).", :properties {:name {:description "body parameter name.", :type "string"}, :value {:description "body parameter value.", :type "string"}}, :required ["name" "value"]}, :PropertyCollection {:description "Paged Property list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "PropertyContract"}, :type "array"}}}, :AuthorizationServerCollection {:description "Paged OAuth2 Authorization Servers list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "OAuth2AuthorizationServerContract"}, :type "array"}}}, :OpenidConnectProviderContract {:description "OpenID Connect Providers Contract.", :properties {:clientId {:description "Client ID of developer console which is the client application.", :type "string"}, :clientSecret {:description "Client Secret of developer console which is the client application.", :type "string"}, :description {:description "User-friendly description of OpenID Connect Provider.", :type "string"}, :id {:description "OpenID Connect Provider identifier.", :type "string"}, :metadataEndpoint {:description "Metadata endpoint URI.", :type "string"}, :name {:description "User-friendly OpenID Connect Provider name.", :maxLength 50, :type "string"}}, :required ["name" "metadataEndpoint" "clientId"]}, :SubscriptionUpdateParameters {:description "Parameters supplied to the Update subscription operation.", :properties {:expirationDate {:description "New subscription expiration date.", :format "date-time", :type "string"}, :name {:description "Subscription name.", :type "string"}, :primaryKey {:description "Primary subscription key.", :maxLength 256, :minLength 1, :type "string"}, :productId {:description "Product identifier path: /products/{productId}", :type "string"}, :secondaryKey {:description "Secondary subscription key.", :maxLength 256, :minLength 1, :type "string"}, :state {:description "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.", :enum ["Suspended" "Active" "Expired" "Submitted" "Rejected" "Cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionStateContract"}}, :stateComment {:description "Comments describing subscription state change by the administrator.", :type "string"}, :userId {:description "User identifier path: /users/{uid}", :type "string"}}}, :TenantLongRunningOperationResult {:description "A standard service response for long running tenant operations.", :properties {:operationStatusLink {:description "operation status link.", :type "string"}, :requestId {:type "string"}, :retryAfter {:description "The number of minutes to retry the operation after.", :format "int32", :type "integer"}, :status {:description "Current status of the operation.", :enum ["InProgress" "Succeeded" "Failed"], :type "string", :x-ms-enum {:modelAsString false, :name "OperationStatus"}}, :statusCode {:enum ["Continue" "OK" "Created" "Accepted" "NotFound" "Conflict"], :type "string", :x-ms-enum {:modelAsString false, :name "HttpStatusCode"}}}}, :QuotaCounterValueContract {:description "Quota counter value details.", :properties {:callsCount {:description "Number of times Counter was called.", :format "int32", :type "integer"}, :kbTransferred {:description "Data Transferred in KiloBytes.", :format "double", :type "number"}}}, :UserCreateParameters {:description "Parameters supplied to the Create User operation.", :properties {:email {:description "Email address. Must not be empty and must be unique within the service instance.", :maxLength 254, :minLength 1, :type "string"}, :firstName {:description "First name.", :maxLength 100, :minLength 1, :type "string"}, :lastName {:description "Last name.", :maxLength 100, :minLength 1, :type "string"}, :note {:description "Optional note about a user set by the administrator.", :type "string"}, :password {:description "User Password.", :type "string"}, :state {:default "Active", :description "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}, :required ["email" "password" "firstName" "lastName"]}, :OAuth2AuthorizationServerContract {:description "External OAuth authorization server settings.", :example {:description nil, :clientId "demo", :tokenEndpoint "https://login.microsoftonline.com/55abb68a-8ews-4565-8675-927722a8a005/oauth2/token?api-version=1.0", :tokenBodyParameters [], :clientRegistrationEndpoint "https://contoso.com/", :name "AAD OAuth A/S", :resourceOwnerUsername nil, :resourceOwnerPassword nil, :clientAuthenticationMethod ["Body"], :supportState false, :id "/authorizationServers/554be23d0fce600674232c33", :defaultScope nil, :authorizationEndpoint "https://login.microsoftonline.com/55abb68a-8ews-4565-8675-927722a8a005/oauth2/authorize?api-version=1.0", :grantTypes ["authorizationCode"], :authorizationMethods ["GET"], :bearerTokenSendingMethods ["authorizationHeader"], :clientSecret "demo"}, :properties {:description {:description "Description of the authorization server. Can contain HTML formatting tags.", :type "string"}, :clientId {:description "Client or app id registered with this authorization server.", :type "string"}, :tokenEndpoint {:description "OAuth token endpoint. Contains absolute URI to entity being referenced.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.1"}, :type "string"}, :tokenBodyParameters {:description "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.", :items #:reference{:definitions "TokenBodyParameterContract"}, :type "array"}, :clientRegistrationEndpoint {:description "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.", :type "string"}, :name {:description "User-friendly authorization server name.", :maxLength 50, :minLength 1, :type "string"}, :resourceOwnerUsername {:description "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.", :type "string"}, :resourceOwnerPassword {:description "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.", :type "string"}, :clientAuthenticationMethod {:description "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.", :items {:enum ["Basic" "Body"], :type "string", :x-ms-enum {:modelAsString false, :name "ClientAuthenticationMethodContract"}}, :type "array"}, :supportState {:description "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.1"}, :type "boolean"}, :id {:description "Uniquely identifies the authorization server within the current API Management service instance. The value is a valid relative URL in the format of /authorizationServers/{authsid} where {authsid} is an authorization server identifier.", :readOnly true, :type "string"}, :defaultScope {:description "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.3"}, :type "string"}, :authorizationEndpoint {:description "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.", :type "string"}, :grantTypes {:description "Form of an authorization grant, which the client uses to request the access token.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-4"}, :items {:enum ["authorizationCode" "implicit" "resourceOwnerPassword" "clientCredentials"], :type "string", :x-ms-enum {:modelAsString false, :name "GrantTypesContract"}}, :type "array"}, :authorizationMethods {:description "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.", :items {:enum ["HEAD" "OPTIONS" "TRACE" "GET" "POST" "PUT" "PATCH" "DELETE"], :type "string", :x-ms-enum {:modelAsString false, :name "MethodContract"}}, :type "array"}, :bearerTokenSendingMethods {:description "Specifies the mechanism by which access token is passed to the API. ", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-4"}, :items {:enum ["authorizationHeader" "query"], :type "string", :x-ms-enum {:modelAsString false, :name "BearerTokenSendingMethodsContract"}}, :type "array"}, :clientSecret {:description "Client or app secret registered with this authorization server.", :type "string"}}, :required ["name" "clientRegistrationEndpoint" "authorizationEndpoint" "clientId" "grantTypes"]}, :QuotaCounterContract {:allOf [#:reference{:definitions "QuotaCounterValueContract"}], :description "Quota counter details.", :properties {:counterKey {:description "The Key value of the Counter. Must not be empty.", :minLength 1, :type "string"}, :periodEndTime {:description "The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :periodKey {:description "Identifier of the Period for which the counter was collected. Must not be empty.", :minLength 1, :type "string"}, :periodStartTime {:description "The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}}, :required ["counterKey" "periodKey" "periodStartTime" "periodEndTime"]}, :GroupUpdateParameters {:description "Parameters supplied to the Update Group operation.", :properties {:description {:description "Group description.", :type "string"}, :externalId {:description "Identifier for an external group.", :type "string"}, :name {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :type {:description "Group type.", :enum ["Custom" "System" "External"], :type "string", :x-ms-enum {:modelAsString false, :name "GroupTypeContract"}}}}, :ResultContract {:description "Operation response details.", :properties {:description {:description "Operation response description.", :type "string"}, :representations {:description "Collection of operation response representations.", :items #:reference{:definitions "RepresentationContract"}, :type "array"}, :statusCode {:description "Operation response HTTP status code.", :format "int32", :maximum 599, :minimum 100, :type "integer"}}, :required ["statusCode"]}, :IdentityProviderList {:description "List of all the Identity Providers configured on the service instance.", :properties {:value {:description "Identity Provider configuration values.", :items #:reference{:definitions "IdentityProviderContract"}, :type "array"}}}, :GroupCollection {:description "Paged Group list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "GroupContract"}, :type "array"}}}, :IdentityProviderUpdateParameters {:description "Parameters supplied to the Update Identity Provider operation.", :properties {:allowedTenants {:description "List of Allowed Tenants when configuring Azure Active Directory login.", :items {:type "string"}, :maxItems 32, :type "array"}, :clientId {:description "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.", :minLength 1, :type "string"}, :clientSecret {:description "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.", :minLength 1, :type "string"}}}, :LoggerResponse {:description "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.", :properties {:credentials {:additionalProperties {:type "string"}, :description "The name and SendRule connection string of the event hub.", :example {:connectionString "Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...", :name "apim"}, :type "object"}, :description {:description "Logger description.", :maxLength 256, :type "string"}, :id {:description "Uniquely identifies the logger within the current API Management service instance. The value is a valid relative URL in the format of /loggers/{loggerId} where {loggerId} is a logger identifier.", :readOnly true, :type "string"}, :isBuffered {:default true, :description "Whether records are buffered in the logger before publishing. Default is assumed to be true.", :type "boolean"}, :type {:description "Logger type.", :enum ["AzureEventHub"], :type "string", :x-ms-enum {:modelAsString false, :name "LoggerTypeContract"}}}, :required ["type" "credentials"]}, :UserUpdateParameters {:description "Parameters supplied to the Update User operation.", :properties {:email {:description "Email address.", :type "string"}, :firstName {:description "First name.", :maxLength 100, :minLength 1, :type "string"}, :lastName {:description "Last name.", :maxLength 100, :minLength 1, :type "string"}, :note {:description "Note about user.", :type "string"}, :password {:description "Password.", :type "string"}, :state {:description "Account state.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}}, :PropertyUpdateParameters {:description "Parameters supplied to the Update Property operation.", :properties {:name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}}, :OAuth2AuthorizationServerUpdateContract {:description "External OAuth authorization server Update settings contract.", :properties {:description {:description "Description of the authorization server. Can contain HTML formatting tags.", :type "string"}, :clientId {:description "Client or app id registered with this authorization server.", :type "string"}, :tokenEndpoint {:description "OAuth token endpoint. Contains absolute URI to entity being referenced.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.1"}, :type "string"}, :tokenBodyParameters {:description "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.", :items #:reference{:definitions "TokenBodyParameterContract"}, :type "array"}, :clientRegistrationEndpoint {:description "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.", :type "string"}, :name {:description "User-friendly authorization server name.", :maxLength 50, :minLength 1, :type "string"}, :resourceOwnerUsername {:description "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.", :type "string"}, :resourceOwnerPassword {:description "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.", :type "string"}, :clientAuthenticationMethod {:description "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.", :items {:enum ["Basic" "Body"], :type "string", :x-ms-enum {:modelAsString false, :name "ClientAuthenticationMethodContract"}}, :type "array"}, :supportState {:description "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.1"}, :type "boolean"}, :defaultScope {:description "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-3.3"}, :type "string"}, :authorizationEndpoint {:description "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.", :type "string"}, :grantTypes {:description "Form of an authorization grant, which the client uses to request the access token.", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-4"}, :items {:enum ["authorizationCode" "implicit" "resourceOwnerPassword" "clientCredentials"], :type "string", :x-ms-enum {:modelAsString false, :name "GrantTypesContract"}}, :type "array"}, :authorizationMethods {:description "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.", :items {:enum ["HEAD" "OPTIONS" "TRACE" "GET" "POST" "PUT" "PATCH" "DELETE"], :type "string", :x-ms-enum {:modelAsString false, :name "MethodContract"}}, :type "array"}, :bearerTokenSendingMethods {:description "Specifies the mechanism by which access token is passed to the API. ", :externalDocs {:url "http://tools.ietf.org/html/rfc6749#section-4"}, :items {:enum ["authorizationHeader" "query"], :type "string", :x-ms-enum {:modelAsString false, :name "BearerTokenSendingMethodsContract"}}, :type "array"}, :clientSecret {:description "Client or app secret registered with this authorization server.", :type "string"}}}, :AccessInformationUpdateParameters {:description "Tenant access information update parameters of the API Management service.", :properties {:enabled {:description "Tenant access information of the API Management service.", :type "boolean"}}, :required ["enabled"]}, :CertificateCreateOrUpdateParameters {:description "Parameters supplied to the CreateOrUpdate certificate operation.", :properties {:data {:description "Base 64 encoded certificate using the application/x-pkcs12 representation.", :type "string"}, :password {:description "Password for the Certificate", :type "string"}}, :required ["data" "password"]}, :PatchParameters {:description "Parameters supplied to the Patch operations.", :properties {:RawJson {:description "json value.", :type "object"}}, :required ["RawJson"]}, :LoggerCollection {:description "Paged Logger list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Logger values.", :items #:reference{:definitions "LoggerResponse"}, :type "array"}}}, :ParameterContract {:description "Operation parameters details.", :properties {:defaultValue {:description "Default parameter value.", :type "string"}, :description {:description "Parameter description.", :type "string"}, :name {:description "Parameter name.", :type "string"}, :required {:description "whether parameter is required or not.", :type "boolean"}, :type {:description "Parameter type.", :type "string"}, :values {:description "Parameter values.", :items {:type "string"}, :type "array"}}, :required ["name" "type"]}, :QuotaCounterCollection {:description "Paged Quota Counter list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Quota counter values.", :items #:reference{:definitions "QuotaCounterContract"}, :type "array"}}}, :OpenIdConnectProviderCollection {:description "Paged OpenIdProviders list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "OpenidConnectProviderContract"}, :type "array"}}}, :AuthenticationSettingsContract {:description "API Authentication Settings.", :properties {:oAuth2 #:reference{:definitions "OAuth2AuthenticationSettingsContract"}}}, :GenerateSsoUrlResult {:description "Generate SSO Url operations response details.", :properties {:value {:description "Redirect Url containing the SSO URL value.", :type "string"}}}, :SubscriptionCreateParameters {:description "Parameters supplied to the Create subscription operation.", :properties {:name {:description "Subscription name.", :maxLength 100, :minLength 1, :type "string"}, :primaryKey {:description "Primary subscription key. If not specified during request key will be generated automatically.", :maxLength 256, :minLength 1, :type "string"}, :productId {:description "Product (product id path) for which subscription is being created in form /products/{productId}", :type "string"}, :secondaryKey {:description "Secondary subscription key. If not specified during request key will be generated automatically.", :maxLength 256, :minLength 1, :type "string"}, :state {:description "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.", :enum ["Suspended" "Active" "Expired" "Submitted" "Rejected" "Cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionStateContract"}}, :userId {:description "User (user id path) for whom subscription is being created in form /users/{uid}", :type "string"}}, :required ["userId" "productId" "name"]}, :ProductCollection {:description "Paged Products list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "ProductContract"}, :type "array"}}}, :RequestContract {:description "Operation request details.", :properties {:description {:description "Operation request description.", :type "string"}, :headers {:description "Collection of operation request headers.", :items #:reference{:definitions "ParameterContract"}, :type "array"}, :queryParameters {:description "Collection of operation request query parameters.", :items #:reference{:definitions "ParameterContract"}, :type "array"}, :representations {:description "Collection of operation request representations.", :items #:reference{:definitions "RepresentationContract"}, :type "array"}}}, :ApiContract {:description "API details.", :properties {:description {:description "Description of the API. May include HTML formatting tags.", :type "string"}, :path {:description "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.", :maxLength 400, :minLength 0, :type "string"}, :protocols {:description "Describes on which protocols the operations in this API can be invoked.", :items {:enum ["Http" "Https"], :type "string", :x-ms-enum {:modelAsString false, :name "ApiProtocolContract"}}, :type "array"}, :name {:description "API name.", :maxLength 300, :minLength 1, :type "string"}, :type {:description "Type of API.", :enum ["Http" "Soap"], :type "string", :x-ms-enum {:modelAsString false, :name "ApiTypeContract"}}, :id {:description "API identifier path: /apis/{apiId}", :readOnly true, :type "string"}, :subscriptionKeyParameterNames #:reference{:definitions "SubscriptionKeyParameterNamesContract"}, :authenticationSettings #:reference{:definitions "AuthenticationSettingsContract"}, :serviceUrl {:description "Absolute URL of the backend service implementing this API.", :maxLength 2000, :minLength 1, :type "string"}}, :required ["name" "serviceUrl" "path" "protocols"]}, :UserIdentityContract {:description "User identity details.", :properties {:id {:description "Identifier value within provider.", :type "string"}, :provider {:description "Identity provider name.", :type "string"}}}, :RegionListResult {:description "Lists Regions operation response details.", :properties {:value {:description "Lists of Regions.", :items #:reference{:definitions "RegionContract"}, :type "array"}}}, :GroupCreateParameters {:description "Parameters supplied to the Create Group operation.", :properties {:description {:description "Group description.", :type "string"}, :externalId {:description "Identifier for an external group.", :type "string"}, :name {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :type {:description "Group type.", :enum ["Custom" "System" "External"], :type "string", :x-ms-enum {:modelAsString false, :name "GroupTypeContract"}}}, :required ["name"]}, :OperationContract {:description "Api Operation details.", :properties {:description {:description "Description of the operation. May include HTML formatting tags.", :maxLength 1000, :type "string"}, :id {:description "Uniquely identifies the operation within the current API Management service instance. The value is a valid relative URL in the format of /apis/{aid}/operations/{id} where {aid} is an API identifier and {id} is an operation identifier.", :readOnly true, :type "string"}, :method {:description "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.", :externalDocs {:description "As defined by RFC.", :url "http://www.rfc-editor.org/rfc/rfc7230.txt"}, :type "string"}, :name {:description "Operation Name.", :maxLength 300, :minLength 1, :type "string"}, :request #:reference{:definitions "RequestContract"}, :responses {:description "Array of Operation responses.", :items #:reference{:definitions "ResultContract"}, :type "array"}, :templateParameters {:description "Collection of URL template parameters.", :items #:reference{:definitions "ParameterContract"}, :type "array"}, :urlTemplate {:description "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}", :maxLength 1000, :minLength 1, :type "string"}}, :required ["name" "method" "urlTemplate"]}, :SubscriptionContract {:description "Subscription details.", :properties {:secondaryKey {:description "Subscription secondary key.", :maxLength 256, :minLength 1, :type "string"}, :notificationDate {:description "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :name {:description "The name of the subscription, or null if the subscription has no name.", :maxLength 100, :minLength 0, :type "string"}, :primaryKey {:description "Subscription primary key.", :maxLength 256, :minLength 1, :type "string"}, :startDate {:description "Subscription activation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :state {:description "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.", :enum ["Suspended" "Active" "Expired" "Submitted" "Rejected" "Cancelled"], :type "string", :x-ms-enum {:modelAsString false, :name "SubscriptionStateContract"}}, :productId {:description "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.", :type "string"}, :endDate {:description "Date when subscription was cancelled or expired. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :id {:description "Uniquely identifies the subscription within the current API Management service instance. The value is a valid relative URL in the format of /subscriptions/{sid} where {sid} is a subscription identifier.", :readOnly true, :type "string"}, :userId {:description "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier.", :type "string"}, :createdDate {:description "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :readOnly true, :type "string"}, :stateComment {:description "Optional subscription comment added by an administrator.", :type "string"}, :expirationDate {:description "Subscription expiration date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}}}, :RepresentationContract {:description "Operation request/response representation details.", :properties {:contentType {:description "Specifies a registered or custom content type for this representation, e.g. application/xml.", :type "string"}, :sample {:description "An example of the representation.", :type "string"}}, :required ["contentType"]}, :BackendResponse {:allOf [#:reference{:definitions "BackendContract"}], :description "The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication.", :properties {:id {:description "Uniquely identifies the backend within the current API Management service instance. The value is a valid relative URL in the format of /backends/{backendId} where {backendId} is a backend identifier.", :readOnly true, :type "string"}}}, :PropertyContract {:description "Property details.", :properties {:id {:description "Uniquely identifies the property within the current API Management service instance. The value is a valid relative URL in the format of /properties/{propId} where {propId} is a property identifier.", :readOnly true, :type "string"}, :name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}, :required ["name" "value"]}, :OperationResultContract {:description "Operation Result.", :properties {:error #:reference{:definitions "ErrorBodyContract"}, :id {:description "Operation result identifier.", :type "string"}, :resultInfo {:description "Optional result info.", :type "string"}, :started {:description "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :status {:description "Status of an async operation.", :enum ["Started" "InProgress" "Succeeded" "Failed"], :type "string", :x-ms-enum {:modelAsString false, :name "AsyncOperationState"}}, :updated {:description "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}}}, :OperationCollection {:description "Paged Operation list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "OperationContract"}, :type "array"}}}, :AccessInformationContract {:description "Tenant access information contract of the API Management service.", :properties {:enabled {:description "Tenant access information of the API Management service.", :type "boolean"}, :id {:description "Identifier.", :type "string"}, :primaryKey {:description "Primary access key.", :type "string"}, :secondaryKey {:description "Secondary access key.", :type "string"}}}, :SubscriptionKeyParameterNamesContract {:description "Subscription key parameter names details.", :example {:subscriptionKeyParameterNames {:header "customHeaderParameterName", :query "customQueryParameterName"}}, :properties {:header {:description "Subscription key header name.", :type "string"}, :query {:description "Subscription key query string parameter name.", :type "string"}}}, :OAuth2AuthenticationSettingsContract {:description "API OAuth2 Authentication settings details.", :properties {:authorizationServerId {:description "OAuth authorization server identifier.", :type "string"}, :scope {:description "operations scope.", :type "string"}}}, :UserCollection {:description "Paged Users list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Page values.", :items #:reference{:definitions "UserContract"}, :type "array"}}}, :IdentityProviderContract {:description "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.", :externalDocs {:url "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-authorize-developer-accounts-using-azure-active-directory"}, :properties {:allowedTenants {:description "List of Allowed Tenants when configuring Azure Active Directory login.", :items {:type "string"}, :maxItems 32, :type "array"}, :clientId {:description "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.", :minLength 1, :type "string"}, :clientSecret {:description "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.", :minLength 1, :type "string"}, :type {:description "Identity Provider Type identifier.", :enum ["facebook" "google" "microsoft" "twitter" "aad"], :type "string", :x-ms-enum {:modelAsString true, :name "IdentityProviderNameType"}}}, :required ["clientId" "clientSecret"]}, :ReportRecordContract {:description "Report data.", :properties {:callCountBlocked {:description "Number of calls blocked due to invalid credentials.", :format "int32", :type "integer"}, :cacheHitCount {:description "Number of times when content was served from cache policy.", :format "int32", :type "integer"}, :serviceTimeMax {:description "Maximum time it took to process request on backend.", :format "double", :type "number"}, :callCountTotal {:description "Total number of calls.", :format "int32", :type "integer"}, :apiTimeAvg {:description "Average time it took to process request.", :format "double", :type "number"}, :callCountOther {:description "Number of other calls.", :format "int32", :type "integer"}, :callCountSuccess {:description "Number of successful calls.", :format "int32", :type "integer"}, :name {:description "Name depending on report endpoint specifies product, API, operation or developer name.", :type "string"}, :apiRegion {:description "API region identifier.", :type "string"}, :cacheMissCount {:description "Number of times content was fetched from backend.", :format "int32", :type "integer"}, :apiTimeMin {:description "Minimum time it took to process request.", :format "double", :type "number"}, :productId {:description "Product identifier path. /products/{productId}", :readOnly true, :type "string"}, :apiTimeMax {:description "Maximum time it took to process request.", :format "double", :type "number"}, :region {:description "Country region to which this record data is related.", :type "string"}, :serviceTimeAvg {:description "Average time it took to process request on backend.", :format "double", :type "number"}, :bandwidth {:description "Bandwidth consumed.", :format "int64", :type "integer"}, :zip {:description "Zip code to which this record data is related.", :type "string"}, :serviceTimeMin {:description "Minimum time it took to process request on backend.", :format "double", :type "number"}, :userId {:description "User identifier path. /users/{userId}", :readOnly true, :type "string"}, :interval {:description "Length of aggregation period.", :format "int64", :type "integer"}, :callCountFailed {:description "Number of calls failed due to proxy or backend errors.", :format "int32", :type "integer"}, :timestamp {:description "Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :country {:description "Country to which this record data is related.", :type "string"}, :operationId {:description "Operation identifier path. /apis/{apiId}/operations/{operationId}", :type "string"}, :apiId {:description "API identifier path. /apis/{apiId}", :type "string"}, :subscriptionId {:description "Subscription identifier path. /subscriptions/{subscriptionId}", :type "string"}}}, :RegionContract {:description "Region profile.", :properties {:isMasterRegion {:description "whether Region is the master region.", :type "boolean"}, :name {:description "Region name.", :type "string"}}, :required ["name" "isMasterRegion"]}, :OpenidConnectProviderCreateContract {:description "Parameters supplied to the Create OpenID Connect Provider operation.", :properties {:clientId {:description "Client ID of developer console which is the client application.", :type "string"}, :clientSecret {:description "Client Secret of developer console which is the client application.", :type "string"}, :description {:description "User-friendly description of OpenID Connect Provider.", :type "string"}, :metadataEndpoint {:description "Metadata endpoint URI.", :type "string"}, :name {:description "User-friendly OpenID Connect Provider name.", :maxLength 50, :type "string"}}, :required ["name" "metadataEndpoint" "clientId"]}, :SaveConfigurationParameter {:description "Parameters supplied to the Save Tenant Configuration operation.", :properties {:branch {:description "The name of the Git branch in which to commit the current configuration snapshot.", :type "string"}, :force {:description "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten.", :type "boolean"}}, :required ["branch"]}, :PolicySnippetContract {:description "Policy snippet.", :properties {:content {:description "Snippet content.", :readOnly true, :type "string"}, :name {:description "Snippet name.", :readOnly true, :type "string"}, :scope {:description "Snippet scope.", :enum ["Tenant" "Product" "Api" "Operation" "All"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "PolicyScopeContract"}}, :toolTip {:description "Snippet toolTip.", :readOnly true, :type "string"}}}, :BackendContract {:description "Parameters supplied to the Create Backend operation.", :properties {:host {:description "Host attribute of the backend. Host is a pure hostname without a port or suffix, for example backend.contoso.com. Must not be empty.", :maxLength 255, :minLength 1, :type "string"}, :skipCertificateChainValidation {:default false, :description "Flag indicating whether SSL certificate chain validation should be skipped when using self-signed certificates for this backend host.", :type "boolean"}}, :required ["host"]}, :BackendCollection {:description "Paged Backend list representation.", :properties {:count {:description "Total records count number.", :format "int64", :type "integer"}, :nextLink {:description "Next page link if any.", :type "string"}, :value {:description "Backend values.", :items #:reference{:definitions "BackendResponse"}, :type "array"}}}, :LoggerCreateParameters {:description "Parameters supplied to the Create Logger operation.", :properties {:credentials {:additionalProperties {:type "string"}, :description "The name and SendRule connection string of the event hub.", :example {:connectionString "Endpoint=endpoint and key from Azure classic portal. This property in credentials is must.", :name "Event hub name. This is optional."}, :type "object"}, :description {:description "Logger description.", :type "string"}, :isBuffered {:description "Whether records are buffered in the logger before publishing. Default is assumed to be true.", :type "boolean"}, :type {:description "Logger type.", :enum ["AzureEventHub"], :type "string", :x-ms-enum {:modelAsString false, :name "LoggerTypeContract"}}}, :required ["type" "credentials"]}, :UserContract {:description "User profile.", :properties {:email {:description "Email address.", :type "string"}, :firstName {:description "First name.", :type "string"}, :id {:description "User identifier path.", :type "string"}, :identities {:description "Collection of user identities.", :items #:reference{:definitions "UserIdentityContract"}, :readOnly true, :type "array"}, :lastName {:description "Last name.", :type "string"}, :note {:description "Administrator's note about given user.", :type "string"}, :registrationDate {:description "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n", :format "date-time", :type "string"}, :state {:description "User state.", :enum ["Active" "Blocked"], :type "string", :x-ms-enum {:modelAsString false, :name "UserStateContract"}}}}, :PropertyCreateParameters {:description "Parameters supplied to the Create Property operation.", :properties {:name {:description "Unique name of Property. It may contain only letters, digits, period, dash, and underscore characters.", :maxLength 256, :minLength 1, :pattern "^[A-Z0-9-._]+$", :type "string"}, :secret {:description "Determines whether the value is a secret and should be encrypted or not. Default value is false.", :type "boolean"}, :tags {:description "Optional tags that when provided can be used to filter the property list.", :items {:type "string"}, :maxItems 32, :type "array"}, :value {:description "Value of the property. Can contain policy expressions. It may not be empty or consist only of whitespace.", :maxLength 4096, :minLength 1, :type "string"}}, :required ["name" "value"]}, :GroupContract {:description "Developer group.", :properties {:builtIn {:description "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.", :readOnly true, :type "boolean"}, :description {:description "Group description. Can contain HTML formatting tags.", :maxLength 1000, :type "string"}, :externalId {:description "For external groups, this property contains the id of the group from the external identity provider, e.g. Azure Active Directory; otherwise the value is null.", :readOnly true, :type "string"}, :id {:description "Uniquely identifies the group within the current API Management service instance. The value is a valid relative URL in the format of /groups/{groupId} where {groupId} is a group identifier.", :readOnly true, :type "string"}, :name {:description "Group name.", :maxLength 300, :minLength 1, :type "string"}, :type {:description "Group type.", :enum ["Custom" "System" "External"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "GroupTypeContract"}}}, :required ["name"]}, :BackendUpdateParameters {:description "Parameters supplied to the Update Backend operation.", :properties {:host {:description "Host attribute of the backend. Host is a pure hostname without a port or suffix, for example backend.contoso.com. Must not be empty.", :maxLength 255, :minLength 1, :type "string"}, :skipCertificateChainValidation {:default false, :description "Flag indicating whether SSL certificate chain validation should be skipped when using self-signed certificates for this backend host.", :type "boolean"}}}}}