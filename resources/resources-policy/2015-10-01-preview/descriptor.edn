{:scheme "https", :host "management.azure.com", :info {:description "To manage and control access to your resources, you can define customized policies and assign them at a scope.", :title "PolicyClient", :version "2015-10-01-preview"}, :ops {:PolicyAssignments_Create {:path "/{scope}/providers/Microsoft.Authorization/policyassignments/{policyAssignmentName}", :description "Policy assignments are inherited by child resources. For example, when you apply a policy to a resource group that policy is assigned to all resources in the group.", :parameters [{:description "The scope of the policy assignment.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment.", :in "path", :name "policyAssignmentName", :required true, :type "string"} {:description "Parameters for the policy assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PolicyAssignment"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :PolicyAssignments_Get {:path "/{scope}/providers/Microsoft.Authorization/policyassignments/{policyAssignmentName}", :description "Gets a policy assignment.", :parameters [{:description "The scope of the policy assignment.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment to get.", :in "path", :name "policyAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PolicyAssignments_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyassignments", :description "Gets all the policy assignments for a subscription.", :parameters [{:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyDefinitions_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions", :description "Gets all the policy definitions for a subscription.", :parameters [{:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyDefinitions_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}", :description "Creates or updates a policy definition.", :parameters [{:description "The name of the policy definition to create.", :in "path", :name "policyDefinitionName", :required true, :type "string"} {:description "The policy definition properties.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PolicyDefinition"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :PolicyAssignments_GetById {:path "/{policyAssignmentId}", :description "When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.", :parameters [{:description "The ID of the policy assignment to get. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :get}, :PolicyAssignments_ListForResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments", :description "Gets policy assignments for the resource group.", :parameters [{:description "The name of the resource group that contains policy assignments.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyAssignments_CreateById {:path "/{policyAssignmentId}", :description "Policy assignments are inherited by child resources. For example, when you apply a policy to a resource group that policy is assigned to all resources in the group. When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.", :parameters [{:description "The ID of the policy assignment to create. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "Parameters for policy assignment.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "PolicyAssignment"}} #:reference{:parameters "ApiVersionParameter"}], :verb :put}, :PolicyAssignments_Delete {:path "/{scope}/providers/Microsoft.Authorization/policyassignments/{policyAssignmentName}", :description "Deletes a policy assignment.", :parameters [{:description "The scope of the policy assignment.", :in "path", :name "scope", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the policy assignment to delete.", :in "path", :name "policyAssignmentName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :PolicyDefinitions_Delete {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}", :description "Deletes a policy definition.", :parameters [{:description "The name of the policy definition to delete.", :in "path", :name "policyDefinitionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :PolicyDefinitions_Get {:path "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}", :description "Gets the policy definition.", :parameters [{:description "The name of the policy definition to get.", :in "path", :name "policyDefinitionName", :required true, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :PolicyAssignments_DeleteById {:path "/{policyAssignmentId}", :description "When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.", :parameters [{:description "The ID of the policy assignment to delete. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.", :in "path", :name "policyAssignmentId", :required true, :type "string", :x-ms-skip-url-encoding true} #:reference{:parameters "ApiVersionParameter"}], :verb :delete}, :PolicyAssignments_ListForResource {:path "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyassignments", :description "Gets policy assignments for a  resource.", :parameters [{:description "The name of the resource group containing the resource. The name is case insensitive.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :pattern "^[-\\w\\._\\(\\)]+$", :required true, :type "string"} {:description "The namespace of the resource provider.", :in "path", :name "resourceProviderNamespace", :required true, :type "string"} {:description "The parent resource path.", :in "path", :name "parentResourcePath", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The resource type.", :in "path", :name "resourceType", :required true, :type "string", :x-ms-skip-url-encoding true} {:description "The name of the resource with policy assignments.", :in "path", :name "resourceName", :required true, :type "string"} {:description "The filter to apply on the operation.", :in "query", :name "$filter", :required false, :type "string"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}}, :parameters {:ApiVersionParameter {:description "The API version to use for the operation.", :in "query", :name "api-version", :required true, :type "string"}, :SubscriptionIdParameter {:description "The ID of the target subscription.", :in "path", :name "subscriptionId", :required true, :type "string"}}, :definitions {:PolicyAssignment {:description "The policy assignment.", :properties {:id {:description "The ID of the policy assignment.", :type "string"}, :name {:description "The name of the policy assignment.", :type "string"}, :properties #:reference{:definitions "PolicyAssignmentProperties"}, :type {:description "The type of the policy assignment.", :type "string"}}, :x-ms-azure-resource true}, :PolicyAssignmentListResult {:description "List of policy assignments.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "An array of policy assignments.", :items #:reference{:definitions "PolicyAssignment"}, :type "array"}}}, :PolicyAssignmentProperties {:description "The policy assignment properties.", :properties {:displayName {:description "The display name of the policy assignment.", :type "string"}, :policyDefinitionId {:description "The ID of the policy definition.", :type "string"}, :scope {:description "The scope for the policy assignment.", :type "string"}}}, :PolicyDefinition {:description "The policy definition.", :properties {:id {:description "The ID of the policy definition.", :readOnly true, :type "string"}, :name {:description "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI.", :type "string"}, :properties #:reference{:definitions "PolicyDefinitionProperties"}}, :x-ms-azure-resource true}, :PolicyDefinitionListResult {:description "List of policy definitions.", :properties {:nextLink {:description "The URL to use for getting the next set of results.", :type "string"}, :value {:description "An array of policy definitions.", :items #:reference{:definitions "PolicyDefinition"}, :type "array"}}}, :PolicyDefinitionProperties {:description "The policy definition properties.", :properties {:description {:description "The policy definition description.", :type "string"}, :displayName {:description "The display name of the policy definition.", :type "string"}, :policyRule {:description "The policy rule.", :type "object"}, :policyType {:description "The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.", :enum ["NotSpecified" "BuiltIn" "Custom"], :type "string", :x-ms-enum {:modelAsString true, :name "policyType"}}}}}}