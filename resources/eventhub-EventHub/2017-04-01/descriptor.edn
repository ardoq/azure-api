{:scheme "https", :host "management.azure.com", :info {:description "Azure Event Hubs client", :title "EventHubManagementClient", :version "2017-04-01"}, :ops {:EventHubs_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules", :description "Gets the authorization rules for an Event Hub.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Creates or updates a new Event Hub as a nested resource within a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} {:description "Parameters supplied to create an Event Hub resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "Eventhub"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Regions_ListBySku {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/sku/{sku}/regions", :description "Gets the available Regions for a given sku", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "SkuNameParameter"}], :verb :get}, :Namespaces_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} {:description "Parameters for creating a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "EHNamespace"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Deletes an existing namespace. This operation also removes all associated resources under the namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_GetNetworkRuleSet {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default", :description "Gets NetworkRuleSet for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/CheckNameAvailability", :description "Check the give Namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} {:description "Parameters to check availability of the given Alias name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameter"}}], :verb :post}, :EventHubs_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/ListKeys", :description "Gets the ACS and SAS connection strings for the Event Hub.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :EventHubs_RegenerateKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys", :description "Regenerates the ACS and SAS connection strings for the Event Hub.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} {:description "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RegenerateAccessKeyParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :EventHubs_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Creates or updates an AuthorizationRule for the specified Event Hub.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} {:description "The shared access AuthorizationRule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AuthorizationRule"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_CreateOrUpdateAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Creates or updates an AuthorizationRule for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} {:description "The shared access AuthorizationRule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "AuthorizationRule"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ConsumerGroups_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Gets a description for the specified consumer group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ConsumerGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}", :description "Creates or updates a new Alias(Disaster Recovery configuration)", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} {:description "Parameters required to create an Alias(Disaster Recovery configuration)", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ArmDisasterRecovery"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :ConsumerGroups_ListByEventHub {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups", :description "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "SkipParameter"} #:reference{:parameters "TopParameter"}], :verb :get}, :DisasterRecoveryConfigs_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules", :description "Gets a list of authorization rules for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_List {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs", :description "Gets all Alias(Disaster Recovery configurations)", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_FailOver {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover", :description "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :EventHubs_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Deletes an Event Hub AuthorizationRule.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Gets the description of the specified namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_DeleteAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Deletes an AuthorizationRule for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :Namespaces_ListNetworkRuleSets {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets", :description "Gets list of NetworkRuleSet for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys", :description "Gets the primary and secondary connection strings for the Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :ConsumerGroups_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Deletes a consumer group from the specified Event Hub and resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ConsumerGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :DisasterRecoveryConfigs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}", :description "Deletes an Alias(Disaster Recovery configuration)", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHubs_ListByNamespace {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs", :description "Gets all the Event Hubs in a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} #:reference{:parameters "SkipParameter"} #:reference{:parameters "TopParameter"}], :verb :get}, :Namespaces_CheckNameAvailability {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability", :description "Check the give Namespace name availability.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "Parameters to check availability of the given Namespace name", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "CheckNameAvailabilityParameter"}}], :verb :post}, :Namespaces_RegenerateKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys", :description "Regenerates the primary or secondary connection strings for the specified Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} {:description "Parameters required to regenerate the connection string.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "RegenerateAccessKeyParameters"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Namespaces_List {:path "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces", :description "Lists all the available Namespaces within a subscription, irrespective of the resource groups.", :parameters [#:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListByResourceGroup {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces", :description "Lists the available Namespaces within a resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :ConsumerGroups_CreateOrUpdate {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", :description "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ConsumerGroupNameParameter"} {:description "Parameters supplied to create or update a consumer group resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "ConsumerGroup"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :put}, :Namespaces_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for a Namespace by rule name.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :EventHubs_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for an Event Hub by rule name.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_GetMessagingPlan {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/messagingplan", :description "Gets messaging plan for specified namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}", :description "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_Update {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}", :description "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} {:description "Parameters for updating a namespace resource.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "EHNamespace"}} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :patch}, :EventHubs_Delete {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Deletes an Event Hub from the specified Namespace and resource group.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :delete}, :EventHubs_Get {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", :description "Gets an Event Hubs description for the specified Event Hub.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "EventHubNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :Namespaces_ListAuthorizationRules {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules", :description "Gets a list of authorization rules for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}, :DisasterRecoveryConfigs_ListKeys {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules/{authorizationRuleName}/listKeys", :description "Gets the primary and secondary connection strings for the Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :Operations_List {:path "/providers/Microsoft.EventHub/operations", :description "Lists all of the available Event Hub REST API operations.", :parameters [#:reference{:parameters "ApiVersionParameter"}], :verb :get}, :Namespaces_CreateOrUpdateNetworkRuleSet {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default", :description "Create or update NetworkRuleSet for a Namespace.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"} {:description "The Namespace IpFilterRule.", :in "body", :name "parameters", :required true, :schema #:reference{:definitions "NetworkRuleSet"}}], :verb :put}, :DisasterRecoveryConfigs_BreakPairing {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing", :description "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :post}, :DisasterRecoveryConfigs_GetAuthorizationRule {:path "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules/{authorizationRuleName}", :description "Gets an AuthorizationRule for a Namespace by rule name.", :parameters [#:reference{:parameters "ResourceGroupNameParameter"} #:reference{:parameters "NamespaceNameParameter"} #:reference{:parameters "AliasNameParameter"} #:reference{:parameters "AuthorizationRuleNameParameter"} #:reference{:parameters "ApiVersionParameter"} #:reference{:parameters "SubscriptionIdParameter"}], :verb :get}}, :parameters {:SubscriptionIdParameter {:description "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.", :in "path", :name "subscriptionId", :required true, :type "string"}, :SkipParameter {:description "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.", :in "query", :maximum 1000, :minimum 0, :name "$skip", :required false, :type "integer", :x-ms-parameter-location "method"}, :ApiVersionParameter {:description "Client API Version.", :in "query", :name "api-version", :required true, :type "string"}, :NamespaceNameParameter {:description "The Namespace name", :in "path", :maxLength 50, :minLength 6, :name "namespaceName", :required true, :type "string", :x-ms-parameter-location "method"}, :EventHubNameParameter {:description "The Event Hub name", :in "path", :maxLength 50, :minLength 1, :name "eventHubName", :required true, :type "string", :x-ms-parameter-location "method"}, :AliasNameParameter {:description "The Disaster Recovery configuration name", :in "path", :maxLength 50, :minLength 1, :name "alias", :required true, :type "string", :x-ms-parameter-location "method"}, :ResourceGroupNameParameter {:description "Name of the resource group within the azure subscription.", :in "path", :maxLength 90, :minLength 1, :name "resourceGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :ConsumerGroupNameParameter {:description "The consumer group name", :in "path", :maxLength 50, :minLength 1, :name "consumerGroupName", :required true, :type "string", :x-ms-parameter-location "method"}, :SkuNameParameter {:description "The sku type.", :in "path", :maxLength 50, :minLength 1, :name "sku", :required true, :type "string", :x-ms-parameter-location "method"}, :AuthorizationRuleNameParameter {:description "The authorization rule name.", :in "path", :minLength 1, :name "authorizationRuleName", :required true, :type "string", :x-ms-parameter-location "method"}, :TopParameter {:description "May be used to limit the number of results to the most recent N usageDetails.", :in "query", :maximum 1000, :minimum 1, :name "$top", :required false, :type "integer", :x-ms-parameter-location "method"}}, :definitions {:MessagingRegions {:allOf [#:reference{:definitions "TrackedResource"}], :description "Messaging Region", :properties {:properties {:properties {:code {:description "Region code", :readOnly true, :type "string"}, :fullName {:description "Full name of the region", :readOnly true, :type "string"}}}}}, :OperationListResult {:description "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.", :properties {:nextLink {:description "URL to get the next set of operation list results if there are any.", :readOnly true, :type "string"}, :value {:description "List of Event Hub operations supported by the Microsoft.EventHub resource provider.", :items #:reference{:definitions "Operation"}, :readOnly true, :type "array"}}}, :NetworkRuleSetListResult {:description "The response of the List NetworkRuleSet operation", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet.", :type "string"}, :value {:description "Result of the List NetworkRuleSet operation.", :items #:reference{:definitions "NetworkRuleSet"}, :type "array"}}}, :NWRuleSetVirtualNetworkRules {:description "Description of VirtualNetworkRules - NetworkRules resource.", :properties {:ignoreMissingVnetServiceEndpoint {:description "Value that indicates whether to ignore missing VNet Service Endpoint", :type "boolean"}, :subnet #:reference{:definitions "Subnet"}}, :x-ms-client-flatten true}, :Eventhub {:allOf [#:reference{:definitions "Resource"}], :description "Single item in List or Get Event Hub operation", :properties {:properties {:description "Properties supplied to the Create Or Update Event Hub operation.", :properties {:captureDescription #:reference{:definitions "CaptureDescription"}, :createdAt {:description "Exact time the Event Hub was created.", :format "date-time", :readOnly true, :type "string"}, :messageRetentionInDays {:description "Number of days to retain the events for this Event Hub, value should be 1 to 7 days", :format "int64", :minimum 1, :type "integer"}, :partitionCount {:description "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.", :format "int64", :minimum 1, :type "integer"}, :partitionIds {:description "Current number of shards on the Event Hub.", :items {:type "string"}, :readOnly true, :type "array"}, :status {:description "Enumerates the possible values for the status of the Event Hub.", :enum ["Active" "Disabled" "Restoring" "SendDisabled" "ReceiveDisabled" "Creating" "Deleting" "Renaming" "Unknown"], :type "string", :x-ms-enum {:modelAsString false, :name "EntityStatus"}}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}}, :x-ms-client-flatten true}}}, :Operation {:description "A Event Hub REST API operation", :properties {:display {:description "The object that represents the operation.", :properties {:operation {:description "Operation type: Read, write, delete, etc.", :readOnly true, :type "string"}, :provider {:description "Service provider: Microsoft.EventHub", :readOnly true, :type "string"}, :resource {:description "Resource on which the operation is performed: Invoice, etc.", :readOnly true, :type "string"}}}, :name {:description "Operation name: {provider}/{resource}/{operation}", :readOnly true, :type "string"}}, :type "object"}, :EventHubListResult {:description "The result of the List EventHubs operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs.", :type "string"}, :value {:description "Result of the List EventHubs operation.", :items #:reference{:definitions "Eventhub"}, :type "array"}}}, :NWRuleSetIpRules {:description "Description of NetWorkRuleSet - IpRules resource.", :properties {:action {:default "Allow", :description "The IP Filter Action", :enum ["Allow"], :type "string", :x-ms-enum {:modelAsString true, :name "NetworkRuleIPAction"}}, :ipMask {:description "IP Mask", :type "string"}}, :x-ms-client-flatten true}, :Subnet {:description "Properties supplied for Subnet", :properties {:id {:description "Resource ID of Virtual Network Subnet", :type "string"}}, :required ["id"]}, :AccessKeys {:description "Namespace/EventHub Connection String", :properties {:aliasPrimaryConnectionString {:description "Primary connection string of the alias if GEO DR is enabled", :readOnly true, :type "string"}, :aliasSecondaryConnectionString {:description "Secondary  connection string of the alias if GEO DR is enabled", :readOnly true, :type "string"}, :keyName {:description "A string that describes the AuthorizationRule.", :readOnly true, :type "string"}, :primaryConnectionString {:description "Primary connection string of the created namespace AuthorizationRule.", :readOnly true, :type "string"}, :primaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :readOnly true, :type "string"}, :secondaryConnectionString {:description "Secondary connection string of the created namespace AuthorizationRule.", :readOnly true, :type "string"}, :secondaryKey {:description "A base64-encoded 256-bit primary key for signing and validating the SAS token.", :readOnly true, :type "string"}}}, :Destination {:description "Capture storage details for capture description", :properties {:name {:description "Name for capture destination", :type "string"}, :properties {:description "Properties describing the storage account, blob container and archive name format for capture destination", :properties {:archiveNameFormat {:description "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order", :type "string"}, :blobContainer {:description "Blob container Name", :type "string"}, :storageAccountResourceId {:description "Resource id of the storage account to be used to create the blobs", :type "string"}}, :x-ms-client-flatten true}}}, :UnavailableReason {:description "Specifies the reason for the unavailability of the service.", :enum ["None" "InvalidName" "SubscriptionIsDisabled" "NameInUse" "NameInLockdown" "TooManyNamespaceInCurrentSubscription"], :type "string", :x-ms-enum {:modelAsString false, :name "UnavailableReason"}}, :NetworkRuleSet {:allOf [#:reference{:definitions "Resource"}], :description "Description of NetworkRuleSet resource.", :properties {:properties {:description "NetworkRuleSet properties", :properties {:defaultAction {:description "Default Action for Network Rule Set", :enum ["Allow" "Deny"], :type "string", :x-ms-enum {:modelAsString true, :name "DefaultAction"}}, :ipRules {:description "List of IpRules", :items #:reference{:definitions "NWRuleSetIpRules"}, :type "array"}, :virtualNetworkRules {:description "List VirtualNetwork Rules", :items #:reference{:definitions "NWRuleSetVirtualNetworkRules"}, :type "array"}}, :x-ms-client-flatten true}}}, :RegenerateAccessKeyParameters {:description "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.", :properties {:key {:description "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType", :type "string"}, :keyType {:description "The access key to regenerate.", :enum ["PrimaryKey" "SecondaryKey"], :type "string", :x-ms-enum {:modelAsString false, :name "KeyType"}}}, :required ["keyType"]}, :TrackedResource {:allOf [#:reference{:definitions "Resource"}], :description "Definition of Resource", :properties {:location {:description "Resource location", :type "string", :x-ms-mutability ["read" "create"]}, :tags {:additionalProperties {:type "string"}, :description "Resource tags", :type "object", :x-ms-mutability ["read" "create" "update"]}}}, :CheckNameAvailabilityResult {:description "The Result of the CheckNameAvailability operation", :properties {:message {:description "The detailed info regarding the reason associated with the Namespace.", :readOnly true, :type "string"}, :nameAvailable {:description "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false.", :type "boolean"}, :reason #:reference{:definitions "UnavailableReason"}}}, :CaptureDescription {:description "Properties to configure capture description for eventhub", :properties {:destination #:reference{:definitions "Destination"}, :enabled {:description "A value that indicates whether capture description is enabled. ", :type "boolean"}, :encoding {:description "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version", :enum ["Avro" "AvroDeflate"], :type "string", :x-ms-enum {:modelAsString false, :name "EncodingCaptureDescription"}}, :intervalInSeconds {:description "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds", :format "int32", :maximum 900, :minimum 60, :type "integer"}, :sizeLimitInBytes {:description "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes", :format "int32", :maximum 524288000, :minimum 10485760, :type "integer"}, :skipEmptyArchives {:description "A value that indicates whether to Skip Empty Archives", :type "boolean"}}}, :EHNamespace {:allOf [#:reference{:definitions "TrackedResource"}], :description "Single Namespace item in List or Get Operation", :properties {:properties {:description "Namespace properties supplied for create namespace operation.", :properties {:createdAt {:description "The time the Namespace was created.", :format "date-time", :readOnly true, :type "string"}, :isAutoInflateEnabled {:description "Value that indicates whether AutoInflate is enabled for eventhub namespace.", :type "boolean"}, :kafkaEnabled {:description "Value that indicates whether Kafka is enabled for eventhub namespace.", :type "boolean"}, :maximumThroughputUnits {:description "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)", :format "int32", :maximum 20, :minimum 0, :type "integer"}, :metricId {:description "Identifier for Azure Insights metrics.", :readOnly true, :type "string"}, :provisioningState {:description "Provisioning state of the Namespace.", :readOnly true, :type "string"}, :serviceBusEndpoint {:description "Endpoint you can use to perform Service Bus operations.", :readOnly true, :type "string"}, :updatedAt {:description "The time the Namespace was updated.", :format "date-time", :readOnly true, :type "string"}}, :x-ms-client-flatten true}, :sku #:reference{:definitions "Sku"}}}, :CheckNameAvailabilityParameter {:description "Parameter supplied to check Namespace name availability operation ", :properties {:name {:description "Name to check the namespace name availability", :type "string"}}, :required ["name"]}, :ConsumerGroupListResult {:description "The result to the List Consumer Group operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group", :type "string"}, :value {:description "Result of the List Consumer Group operation.", :items #:reference{:definitions "ConsumerGroup"}, :type "array"}}}, :ArmDisasterRecovery {:allOf [#:reference{:definitions "Resource"}], :description "Single item in List or Get Alias(Disaster Recovery configuration) operation", :properties {:properties {:description "Properties required to the Create Or Update Alias(Disaster Recovery configurations)", :properties {:alternateName {:description "Alternate name specified when alias and namespace names are same.", :type "string"}, :partnerNamespace {:description "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing", :type "string"}, :pendingReplicationOperationsCount {:description "Number of entities pending to be replicated.", :format "int64", :readOnly true, :type "integer"}, :provisioningState {:description "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'", :enum ["Accepted" "Succeeded" "Failed"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "ProvisioningStateDR"}}, :role {:description "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'", :enum ["Primary" "PrimaryNotReplicating" "Secondary"], :readOnly true, :type "string", :x-ms-enum {:modelAsString false, :name "RoleDisasterRecovery"}}}, :x-ms-client-flatten true}}}, :MessagingRegionsListResult {:description "The response of the List MessagingRegions operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of MessagingRegions.", :readOnly true, :type "string"}, :value {:description "Result of the List MessagingRegions type.", :items #:reference{:definitions "MessagingRegions"}, :type "array"}}}, :AuthorizationRule {:allOf [#:reference{:definitions "Resource"}], :description "Single item in a List or Get AuthorizationRule operation", :properties {:properties {:description "Properties supplied to create or update AuthorizationRule", :properties {:rights {:description "The rights associated with the rule.", :items {:enum ["Manage" "Send" "Listen"], :type "string", :x-ms-enum {:modelAsString true, :name "AccessRights"}}, :type "array"}}, :required ["rights"], :x-ms-client-flatten true}}}, :MessagingPlan {:allOf [#:reference{:definitions "TrackedResource"}], :description "Messaging Plan for the namespace", :properties {:properties {:properties {:revision {:description "revision number", :format "int64", :readOnly true, :type "integer"}, :selectedEventHubUnit {:description "Selected event hub unit", :format "int32", :readOnly true, :type "integer"}, :sku {:description "Sku type", :format "int32", :readOnly true, :type "integer"}, :updatedAt {:description "The exact time the messaging plan was updated.", :format "date-time", :readOnly true, :type "string"}}, :x-ms-client-flatten true}}}, :Resource {:description "The Resource definition", :properties {:id {:description "Resource Id", :readOnly true, :type "string"}, :name {:description "Resource name", :readOnly true, :type "string"}, :type {:description "Resource type", :readOnly true, :type "string"}}, :x-ms-azure-resource true}, :ErrorResponse {:description "Error response indicates EventHub service is not able to process the incoming request. The reason is provided in the error message.", :properties {:code {:description "Error code.", :type "string"}, :message {:description "Error message indicating why the operation failed.", :type "string"}}, :type "object"}, :Sku {:description "SKU parameters supplied to the create namespace operation", :properties {:capacity {:description "The Event Hubs throughput units, value should be 0 to 20 throughput units.", :format "int32", :maximum 20, :minimum 0, :type "integer"}, :name {:description "Name of this SKU.", :enum ["Basic" "Standard"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuName"}}, :tier {:description "The billing tier of this particular SKU.", :enum ["Basic" "Standard"], :type "string", :x-ms-enum {:modelAsString true, :name "SkuTier"}}}, :required ["name"], :type "object"}, :EHNamespaceListResult {:description "The response of the List Namespace operation", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of namespaces.", :type "string"}, :value {:description "Result of the List Namespace operation", :items #:reference{:definitions "EHNamespace"}, :type "array"}}}, :AuthorizationRuleListResult {:description "The response from the List namespace operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules", :type "string"}, :value {:description "Result of the List Authorization Rules operation.", :items #:reference{:definitions "AuthorizationRule"}, :type "array"}}}, :ArmDisasterRecoveryListResult {:description "The result of the List Alias(Disaster Recovery configuration) operation.", :properties {:nextLink {:description "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)", :readOnly true, :type "string"}, :value {:description "List of Alias(Disaster Recovery configurations)", :items #:reference{:definitions "ArmDisasterRecovery"}, :type "array"}}}, :ConsumerGroup {:allOf [#:reference{:definitions "Resource"}], :description "Single item in List or Get Consumer group operation", :properties {:properties {:description "Single item in List or Get Consumer group operation", :properties {:createdAt {:description "Exact time the message was created.", :format "date-time", :readOnly true, :type "string"}, :updatedAt {:description "The exact time the message was updated.", :format "date-time", :readOnly true, :type "string"}, :userMetadata {:description "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.", :type "string"}}, :x-ms-client-flatten true}}}}}